        -:    0:Source:/usr/include/c++/7/debug/safe_unordered_container.tcc
        -:    0:Graph:/home/workspace/build/lib/CMakeFiles/lib_objs.dir/templatesimplifier.gcno
        -:    0:Data:/home/workspace/build/lib/CMakeFiles/lib_objs.dir/templatesimplifier.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:// Safe container implementation  -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 2011-2017 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file debug/safe_unordered_container.tcc
        -:   26: *  This file is a GNU debug extension to the Standard C++ Library.
        -:   27: */
        -:   28:
        -:   29:#ifndef _GLIBCXX_DEBUG_SAFE_UNORDERED_CONTAINER_TCC
        -:   30:#define _GLIBCXX_DEBUG_SAFE_UNORDERED_CONTAINER_TCC 1
        -:   31:
        -:   32:namespace __gnu_debug
        -:   33:{
        -:   34:  template<typename _Container>
        -:   35:    template<typename _Predicate>
        -:   36:      void
function _ZN11__gnu_debug25_Safe_unordered_containerINSt7__debug13unordered_mapIPK5TokeniSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEEEE16_M_invalidate_ifIZNSF_17_M_invalidate_allEvEUlNSt8__detail20_Node_const_iteratorISC_Lb0ELb0EEEE_EEvT_ called 0 returned 0% blocks executed 0%
function _ZN11__gnu_debug25_Safe_unordered_containerINSt7__debug13unordered_mapIPK5TokeniSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEEEE16_M_invalidate_ifIZNSE_5eraseERSB_EUlNSt8__detail20_Node_const_iteratorISC_Lb0ELb0EEEE_EEvT_ called 0 returned 0% blocks executed 0%
    #####:   37:      _Safe_unordered_container<_Container>::
        -:   38:      _M_invalidate_if(_Predicate __pred)
        -:   39:      {
        -:   40:	typedef typename _Container::iterator iterator;
        -:   41:	typedef typename _Container::const_iterator const_iterator;
        -:   42:
    #####:   43:	__gnu_cxx::__scoped_lock sentry(this->_M_get_mutex());
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
    #####:   44:	for (_Safe_iterator_base* __iter = _M_iterators; __iter;)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   45:	  {
    #####:   46:	    iterator* __victim = static_cast<iterator*>(__iter);
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   47:	    __iter = __iter->_M_next;
    #####:   48:	    if (!__victim->_M_singular() && __pred(__victim->base()))
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
        -:   49:	      {
    #####:   50:		__victim->_M_invalidate();
call    0 never executed
call    1 never executed
        -:   51:	      }
        -:   52:	  }
        -:   53:
    #####:   54:	for (_Safe_iterator_base* __iter2 = _M_const_iterators; __iter2;)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   55:	  {
    #####:   56:	    const_iterator* __victim = static_cast<const_iterator*>(__iter2);
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   57:	    __iter2 = __iter2->_M_next;
    #####:   58:	    if (!__victim->_M_singular() && __pred(__victim->base()))
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
        -:   59:	      {
    #####:   60:		__victim->_M_invalidate();
call    0 never executed
call    1 never executed
        -:   61:	      }
        -:   62:	  }
    #####:   63:      }
        -:   64:
        -:   65:
        -:   66:  template<typename _Container>
        -:   67:    template<typename _Predicate>
        -:   68:      void
function _ZN11__gnu_debug25_Safe_unordered_containerINSt7__debug13unordered_mapIPK5TokeniSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEEEE22_M_invalidate_local_ifIZNSF_20_M_invalidate_localsEvEUlNSt8__detail21_Local_const_iteratorIS5_SC_NSH_10_Select1stES7_NSH_18_Mod_range_hashingENSH_20_Default_ranged_hashELb0ELb0EEEE_EEvT_ called 0 returned 0% blocks executed 0%
function _ZN11__gnu_debug25_Safe_unordered_containerINSt7__debug13unordered_mapIPK5TokeniSt4hashIS5_ESt8equal_toIS5_ESaISt4pairIKS5_iEEEEE22_M_invalidate_local_ifIZNSE_5eraseERSB_EUlNSt8__detail21_Local_const_iteratorIS5_SC_NSI_10_Select1stES7_NSI_18_Mod_range_hashingENSI_20_Default_ranged_hashELb0ELb0EEEE0_EEvT_ called 0 returned 0% blocks executed 0%
    #####:   69:      _Safe_unordered_container<_Container>::
        -:   70:      _M_invalidate_local_if(_Predicate __pred)
        -:   71:      {
        -:   72:	typedef typename _Container::local_iterator local_iterator;
        -:   73:	typedef typename _Container::const_local_iterator const_local_iterator;
        -:   74:
    #####:   75:	__gnu_cxx::__scoped_lock sentry(this->_M_get_mutex());
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
call   11 never executed
    #####:   76:	for (_Safe_iterator_base* __iter = _M_local_iterators; __iter;)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   77:	  {
    #####:   78:	    local_iterator* __victim = static_cast<local_iterator*>(__iter);
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
    #####:   79:	    __iter = __iter->_M_next;
    #####:   80:	    if (!__victim->_M_singular() && __pred(__victim->base()))
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
branch 28 never executed
branch 29 never executed
branch 30 never executed
branch 31 never executed
call   32 never executed
branch 33 never executed
branch 34 never executed
branch 35 never executed
branch 36 never executed
call   37 never executed
        -:   81:	      {
    #####:   82:		__victim->_M_invalidate();
call    0 never executed
call    1 never executed
        -:   83:	      }
        -:   84:	  }
        -:   85:
    #####:   86:	for (_Safe_iterator_base* __iter2 = _M_const_local_iterators; __iter2;)
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   87:	  {
    #####:   88:	    const_local_iterator* __victim =
branch  0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
        -:   89:	      static_cast<const_local_iterator*>(__iter2);
    #####:   90:	    __iter2 = __iter2->_M_next;
    #####:   91:	    if (!__victim->_M_singular() && __pred(__victim->base()))
branch  0 never executed
branch  1 never executed
call    2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
call   22 never executed
branch 23 never executed
branch 24 never executed
call   25 never executed
branch 26 never executed
branch 27 never executed
branch 28 never executed
branch 29 never executed
branch 30 never executed
branch 31 never executed
call   32 never executed
branch 33 never executed
branch 34 never executed
branch 35 never executed
branch 36 never executed
call   37 never executed
        -:   92:	      {
    #####:   93:		__victim->_M_invalidate();
call    0 never executed
call    1 never executed
        -:   94:	      }
        -:   95:	  }
    #####:   96:      }
        -:   97:
        -:   98:} // namespace __gnu_debug
        -:   99:
        -:  100:#endif
