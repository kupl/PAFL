        -:    0:Source:/home/workspace/lib/checkunusedvar.h
        -:    0:Graph:/home/workspace/build/lib/CMakeFiles/lib_objs.dir/checkunusedvar.gcno
        -:    0:Data:/home/workspace/build/lib/CMakeFiles/lib_objs.dir/checkunusedvar.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2: * Cppcheck - A tool for static C/C++ code analysis
        -:    3: * Copyright (C) 2007-2019 Cppcheck team.
        -:    4: *
        -:    5: * This program is free software: you can redistribute it and/or modify
        -:    6: * it under the terms of the GNU General Public License as published by
        -:    7: * the Free Software Foundation, either version 3 of the License, or
        -:    8: * (at your option) any later version.
        -:    9: *
        -:   10: * This program is distributed in the hope that it will be useful,
        -:   11: * but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   12: * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   13: * GNU General Public License for more details.
        -:   14: *
        -:   15: * You should have received a copy of the GNU General Public License
        -:   16: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
        -:   17: */
        -:   18:
        -:   19://---------------------------------------------------------------------------
        -:   20:#ifndef checkunusedvarH
        -:   21:#define checkunusedvarH
        -:   22://---------------------------------------------------------------------------
        -:   23:
        -:   24:#include "check.h"
        -:   25:#include "config.h"
        -:   26:
        -:   27:#include <map>
        -:   28:#include <string>
        -:   29:
        -:   30:class ErrorLogger;
        -:   31:class Scope;
        -:   32:class Settings;
        -:   33:class Token;
        -:   34:class Tokenizer;
        -:   35:class Type;
        -:   36:class Variables;
        -:   37:
        -:   38:/// @addtogroup Checks
        -:   39:/// @{
        -:   40:
        -:   41:
        -:   42:/** @brief Various small checks */
        -:   43:
function _ZN14CheckUnusedVarD0Ev called 0 returned 0% blocks executed 0%
function _ZN14CheckUnusedVarD2Ev called 0 returned 0% blocks executed 0%
    #####:   44:class CPPCHECKLIB CheckUnusedVar : public Check {
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
        -:   45:public:
        -:   46:    /** @brief This constructor is used when registering the CheckClass */
function _ZN14CheckUnusedVarC2Ev called 1 returned 100% blocks executed 78%
        1:   47:    CheckUnusedVar() : Check(myName()) {
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 returned 100%
call    6 returned 100%
call    7 never executed
        1:   48:    }
        -:   49:
        -:   50:    /** @brief This constructor is used when running checks. */
function _ZN14CheckUnusedVarC2EPK9TokenizerPK8SettingsP11ErrorLogger called 0 returned 0% blocks executed 0%
    #####:   51:    CheckUnusedVar(const Tokenizer *tokenizer, const Settings *settings, ErrorLogger *errorLogger)
    #####:   52:        : Check(myName(), tokenizer, settings, errorLogger) {
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
    #####:   53:    }
        -:   54:
        -:   55:    /** @brief Run checks against the normal token list */
function _ZN14CheckUnusedVar9runChecksEPK9TokenizerPK8SettingsP11ErrorLogger called 0 returned 0% blocks executed 0%
    #####:   56:    void runChecks(const Tokenizer *tokenizer, const Settings *settings, ErrorLogger *errorLogger) OVERRIDE {
    #####:   57:        CheckUnusedVar checkUnusedVar(tokenizer, settings, errorLogger);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
        -:   58:
        -:   59:        // Coding style checks
    #####:   60:        checkUnusedVar.checkStructMemberUsage();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   61:        checkUnusedVar.checkFunctionVariableUsage();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   62:    }
        -:   63:
        -:   64:    /** @brief %Check for unused function variables */
        -:   65:    void checkFunctionVariableUsage_iterateScopes(const Scope* const scope, Variables& variables);
        -:   66:    void checkFunctionVariableUsage();
        -:   67:
        -:   68:    /** @brief %Check that all struct members are used */
        -:   69:    void checkStructMemberUsage();
        -:   70:
        -:   71:private:
        -:   72:    bool isRecordTypeWithoutSideEffects(const Type* type);
        -:   73:    bool isEmptyType(const Type* type);
        -:   74:
        -:   75:    // Error messages..
        -:   76:    void unusedStructMemberError(const Token *tok, const std::string &structname, const std::string &varname, bool isUnion = false);
        -:   77:    void unusedVariableError(const Token *tok, const std::string &varname);
        -:   78:    void allocatedButUnusedVariableError(const Token *tok, const std::string &varname);
        -:   79:    void unreadVariableError(const Token *tok, const std::string &varname, bool modified);
        -:   80:    void unassignedVariableError(const Token *tok, const std::string &varname);
        -:   81:
function _ZNK14CheckUnusedVar16getErrorMessagesEP11ErrorLoggerPK8Settings called 0 returned 0% blocks executed 0%
    #####:   82:    void getErrorMessages(ErrorLogger *errorLogger, const Settings *settings) const OVERRIDE {
    #####:   83:        CheckUnusedVar c(nullptr, settings, errorLogger);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
        -:   84:
        -:   85:        // style/warning
    #####:   86:        c.unusedVariableError(nullptr, "varname");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
    #####:   87:        c.allocatedButUnusedVariableError(nullptr, "varname");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
    #####:   88:        c.unreadVariableError(nullptr, "varname", false);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
    #####:   89:        c.unassignedVariableError(nullptr, "varname");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
    #####:   90:        c.unusedStructMemberError(nullptr, "structname", "variable");
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
call   11 never executed
call   12 never executed
call   13 never executed
call   14 never executed
call   15 never executed
call   16 never executed
call   17 never executed
call   18 never executed
    #####:   91:    }
        -:   92:
function _ZN14CheckUnusedVar6myNameB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:   93:    static std::string myName() {
    #####:   94:        return "UnusedVar";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:   95:    }
        -:   96:
function _ZNK14CheckUnusedVar9classInfoB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:   97:    std::string classInfo() const OVERRIDE {
        -:   98:        return "UnusedVar checks\n"
        -:   99:
        -:  100:               // style
        -:  101:               "- unused variable\n"
        -:  102:               "- allocated but unused variable\n"
        -:  103:               "- unred variable\n"
        -:  104:               "- unassigned variable\n"
    #####:  105:               "- unused struct member\n";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:  106:    }
        -:  107:
        -:  108:    std::map<const Type *,bool> mIsRecordTypeWithoutSideEffectsMap;
        -:  109:
        -:  110:    std::map<const Type *,bool> mIsEmptyTypeMap;
        -:  111:
        -:  112:};
        -:  113:/// @}
        -:  114://---------------------------------------------------------------------------
        -:  115:#endif // checkunusedvarH
