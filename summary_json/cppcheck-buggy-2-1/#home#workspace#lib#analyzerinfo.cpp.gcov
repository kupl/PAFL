        -:    0:Source:/home/workspace/lib/analyzerinfo.cpp
        -:    0:Graph:/home/workspace/build/lib/CMakeFiles/lib_objs.dir/analyzerinfo.gcno
        -:    0:Data:/home/workspace/build/lib/CMakeFiles/lib_objs.dir/analyzerinfo.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2:* Cppcheck - A tool for static C/C++ code analysis
        -:    3:* Copyright (C) 2007-2019 Cppcheck team.
        -:    4:*
        -:    5:* This program is free software: you can redistribute it and/or modify
        -:    6:* it under the terms of the GNU General Public License as published by
        -:    7:* the Free Software Foundation, either version 3 of the License, or
        -:    8:* (at your option) any later version.
        -:    9:*
        -:   10:* This program is distributed in the hope that it will be useful,
        -:   11:* but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   12:* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   13:* GNU General Public License for more details.
        -:   14:*
        -:   15:* You should have received a copy of the GNU General Public License
        -:   16:* along with this program.  If not, see <http://www.gnu.org/licenses/>.
        -:   17:*/
        -:   18:
        -:   19:#include "analyzerinfo.h"
        -:   20:
        -:   21:#include "path.h"
        -:   22:#include "utils.h"
        -:   23:
        -:   24:#include <tinyxml2.h>
        -:   25:#include <cstring>
        -:   26:#include <map>
        -:   27:#include <sstream>
        -:   28:
function _ZN19AnalyzerInformationD2Ev called 0 returned 0% blocks executed 0%
    #####:   29:AnalyzerInformation::~AnalyzerInformation()
call    0 never executed
call    1 never executed
        -:   30:{
    #####:   31:    close();
call    0 never executed
    #####:   32:}
        -:   33:
function _ZL11getFilenameRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 0 returned 0% blocks executed 0%
    #####:   34:static std::string getFilename(const std::string &fullpath)
        -:   35:{
    #####:   36:    std::string::size_type pos1 = fullpath.find_last_of("/\\");
call    0 never executed
    #####:   37:    pos1 = (pos1 == std::string::npos) ? 0U : (pos1 + 1U);
branch  0 never executed
branch  1 never executed
    #####:   38:    std::string::size_type pos2 = fullpath.rfind('.');
call    0 never executed
    #####:   39:    if (pos2 < pos1)
branch  0 never executed
branch  1 never executed
    #####:   40:        pos2 = std::string::npos;
    #####:   41:    if (pos2 != std::string::npos)
branch  0 never executed
branch  1 never executed
    #####:   42:        pos2 = pos2 - pos1;
    #####:   43:    return fullpath.substr(pos1,pos2);
call    0 never executed
        -:   44:}
        -:   45:
function _ZN19AnalyzerInformation13writeFilesTxtERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERKNSt7__debug4listIS5_SaIS5_EEERKNS9_IN13ImportProject12FileSettingsESaISF_EEE called 0 returned 0% blocks executed 0%
    #####:   46:void AnalyzerInformation::writeFilesTxt(const std::string &buildDir, const std::list<std::string> &sourcefiles, const std::list<ImportProject::FileSettings> &fileSettings)
        -:   47:{
    #####:   48:    std::map<std::string, unsigned int> fileCount;
call    0 never executed
call    1 never executed
call    2 never executed
        -:   49:
    #####:   50:    const std::string filesTxt(buildDir + "/files.txt");
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   51:    std::ofstream fout(filesTxt);
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
    #####:   52:    for (const std::string &f : sourcefiles) {
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
    #####:   53:        const std::string afile = getFilename(f);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   54:        fout << afile << ".a" << (++fileCount[afile]) << "::" << Path::simplifyPath(Path::fromNativeSeparators(f)) << '\n';
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
call   27 never executed
branch 28 never executed
branch 29 never executed
call   30 never executed
call   31 never executed
call   32 never executed
call   33 never executed
call   34 never executed
call   35 never executed
        -:   55:    }
        -:   56:
    #####:   57:    for (const ImportProject::FileSettings &fs : fileSettings) {
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
call    9 never executed
call   10 never executed
    #####:   58:        const std::string afile = getFilename(fs.filename);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   59:        fout << afile << ".a" << (++fileCount[afile]) << ":" << fs.cfg << ":" << Path::simplifyPath(Path::fromNativeSeparators(fs.filename)) << std::endl;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
call   15 never executed
branch 16 never executed
branch 17 never executed
call   18 never executed
branch 19 never executed
branch 20 never executed
call   21 never executed
branch 22 never executed
branch 23 never executed
call   24 never executed
branch 25 never executed
branch 26 never executed
call   27 never executed
branch 28 never executed
branch 29 never executed
call   30 never executed
branch 31 never executed
branch 32 never executed
call   33 never executed
branch 34 never executed
branch 35 never executed
call   36 never executed
call   37 never executed
call   38 never executed
call   39 never executed
call   40 never executed
call   41 never executed
        -:   60:    }
    #####:   61:}
        -:   62:
function _ZN19AnalyzerInformation5closeEv called 0 returned 0% blocks executed 0%
    #####:   63:void AnalyzerInformation::close()
        -:   64:{
    #####:   65:    mAnalyzerInfoFile.clear();
call    0 never executed
    #####:   66:    if (mOutputStream.is_open()) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   67:        mOutputStream << "</analyzerinfo>\n";
call    0 never executed
    #####:   68:        mOutputStream.close();
call    0 never executed
        -:   69:    }
    #####:   70:}
        -:   71:
function _ZL12skipAnalysisRKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEyPNSt7__debug4listIN11ErrorLogger12ErrorMessageESaISA_EEE called 0 returned 0% blocks executed 0%
    #####:   72:static bool skipAnalysis(const std::string &analyzerInfoFile, unsigned long long checksum, std::list<ErrorLogger::ErrorMessage> *errors)
        -:   73:{
    #####:   74:    tinyxml2::XMLDocument doc;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   75:    const tinyxml2::XMLError error = doc.LoadFile(analyzerInfoFile.c_str());
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:   76:    if (error != tinyxml2::XML_SUCCESS)
branch  0 never executed
branch  1 never executed
    #####:   77:        return false;
        -:   78:
    #####:   79:    const tinyxml2::XMLElement * const rootNode = doc.FirstChildElement();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   80:    if (rootNode == nullptr)
branch  0 never executed
branch  1 never executed
    #####:   81:        return false;
        -:   82:
    #####:   83:    const char *attr = rootNode->Attribute("checksum");
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   84:    if (!attr || attr != std::to_string(checksum))
branch  0 never executed
branch  1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
branch  8 never executed
branch  9 never executed
branch 10 never executed
branch 11 never executed
call   12 never executed
branch 13 never executed
branch 14 never executed
branch 15 never executed
branch 16 never executed
call   17 never executed
    #####:   85:        return false;
        -:   86:
    #####:   87:    for (const tinyxml2::XMLElement *e = rootNode->FirstChildElement(); e; e = e->NextSiblingElement()) {
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
call    5 never executed
branch  6 never executed
branch  7 never executed
    #####:   88:        if (std::strcmp(e->Name(), "error") == 0)
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
    #####:   89:            errors->emplace_back(e);
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:   90:    }
        -:   91:
    #####:   92:    return true;
        -:   93:}
        -:   94:
function _ZN19AnalyzerInformation19getAnalyzerInfoFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_ called 0 returned 0% blocks executed 0%
    #####:   95:std::string AnalyzerInformation::getAnalyzerInfoFile(const std::string &buildDir, const std::string &sourcefile, const std::string &cfg)
        -:   96:{
    #####:   97:    const std::string files(buildDir + "/files.txt");
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
call    5 never executed
    #####:   98:    std::ifstream fin(files);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   99:    if (fin.is_open()) {
call    0 never executed
branch  1 never executed
branch  2 never executed
branch  3 never executed
branch  4 never executed
    #####:  100:        std::string line;
call    0 never executed
call    1 never executed
call    2 never executed
    #####:  101:        const std::string end(':' + cfg + ':' + sourcefile);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
branch  7 never executed
branch  8 never executed
call    9 never executed
call   10 never executed
call   11 never executed
branch 12 never executed
branch 13 never executed
call   14 never executed
call   15 never executed
    #####:  102:        while (std::getline(fin,line)) {
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
call    8 never executed
branch  9 never executed
branch 10 never executed
    #####:  103:            if (line.size() <= end.size() + 2U)
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
    #####:  104:                continue;
    #####:  105:            if (!endsWith(line, end.c_str(), end.size()))
call    0 never executed
call    1 never executed
call    2 never executed
branch  3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
    #####:  106:                continue;
    #####:  107:            std::ostringstream ostr;
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:  108:            ostr << buildDir << '/' << line.substr(0,line.find(':'));
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
call    7 never executed
branch  8 never executed
branch  9 never executed
call   10 never executed
branch 11 never executed
branch 12 never executed
call   13 never executed
call   14 never executed
    #####:  109:            return ostr.str();
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  110:        }
        -:  111:    }
        -:  112:
    #####:  113:    std::string filename = Path::fromNativeSeparators(buildDir);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
call    7 never executed
call    8 never executed
    #####:  114:    if (!endsWith(filename, '/'))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  115:        filename += '/';
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  116:    const std::string::size_type pos = sourcefile.rfind('/');
call    0 never executed
    #####:  117:    if (pos == std::string::npos)
branch  0 never executed
branch  1 never executed
    #####:  118:        filename += sourcefile;
call    0 never executed
branch  1 never executed
branch  2 never executed
        -:  119:    else
    #####:  120:        filename += sourcefile.substr(pos+1);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
call    6 never executed
call    7 never executed
    #####:  121:    filename += ".analyzerinfo";
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  122:    return filename;
call    0 never executed
        -:  123:}
        -:  124:
function _ZN19AnalyzerInformation11analyzeFileERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_S7_yPNSt7__debug4listIN11ErrorLogger12ErrorMessageESaISB_EEE called 0 returned 0% blocks executed 0%
    #####:  125:bool AnalyzerInformation::analyzeFile(const std::string &buildDir, const std::string &sourcefile, const std::string &cfg, unsigned long long checksum, std::list<ErrorLogger::ErrorMessage> *errors)
        -:  126:{
    #####:  127:    if (buildDir.empty() || sourcefile.empty())
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
    #####:  128:        return true;
    #####:  129:    close();
call    0 never executed
        -:  130:
    #####:  131:    mAnalyzerInfoFile = AnalyzerInformation::getAnalyzerInfoFile(buildDir,sourcefile,cfg);
call    0 never executed
call    1 never executed
call    2 never executed
        -:  132:
    #####:  133:    if (skipAnalysis(mAnalyzerInfoFile, checksum, errors))
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  134:        return false;
        -:  135:
    #####:  136:    mOutputStream.open(mAnalyzerInfoFile);
call    0 never executed
call    1 never executed
    #####:  137:    if (mOutputStream.is_open()) {
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  138:        mOutputStream << "<?xml version=\"1.0\"?>\n";
call    0 never executed
    #####:  139:        mOutputStream << "<analyzerinfo checksum=\"" << checksum << "\">\n";
call    0 never executed
call    1 never executed
call    2 never executed
        -:  140:    } else {
    #####:  141:        mAnalyzerInfoFile.clear();
call    0 never executed
        -:  142:    }
        -:  143:
    #####:  144:    return true;
        -:  145:}
        -:  146:
function _ZN19AnalyzerInformation9reportErrERKN11ErrorLogger12ErrorMessageEb called 0 returned 0% blocks executed 0%
    #####:  147:void AnalyzerInformation::reportErr(const ErrorLogger::ErrorMessage &msg, bool /*verbose*/)
        -:  148:{
    #####:  149:    if (mOutputStream.is_open())
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:  150:        mOutputStream << msg.toXML() << '\n';
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
branch  5 never executed
branch  6 never executed
call    7 never executed
call    8 never executed
    #####:  151:}
        -:  152:
function _ZN19AnalyzerInformation11setFileInfoERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES7_ called 0 returned 0% blocks executed 0%
    #####:  153:void AnalyzerInformation::setFileInfo(const std::string &check, const std::string &fileInfo)
        -:  154:{
    #####:  155:    if (mOutputStream.is_open() && !fileInfo.empty())
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
branch  4 never executed
branch  5 never executed
branch  6 never executed
branch  7 never executed
    #####:  156:        mOutputStream << "  <FileInfo check=\"" << check << "\">\n" << fileInfo << "  </FileInfo>\n";
call    0 never executed
call    1 never executed
call    2 never executed
call    3 never executed
call    4 never executed
function _GLOBAL__sub_I__ZN19AnalyzerInformationD2Ev called 1 returned 100% blocks executed 100%
function _Z41__static_initialization_and_destruction_0ii called 1 returned 100% blocks executed 100%
        3:  157:}
call    0 returned 100%
branch  1 taken 100% (fallthrough)
branch  2 taken 0%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
