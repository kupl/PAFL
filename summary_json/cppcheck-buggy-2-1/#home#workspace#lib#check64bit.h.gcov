        -:    0:Source:/home/workspace/lib/check64bit.h
        -:    0:Graph:/home/workspace/build/lib/CMakeFiles/lib_objs.dir/check64bit.gcno
        -:    0:Data:/home/workspace/build/lib/CMakeFiles/lib_objs.dir/check64bit.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*
        -:    2: * Cppcheck - A tool for static C/C++ code analysis
        -:    3: * Copyright (C) 2007-2019 Cppcheck team.
        -:    4: *
        -:    5: * This program is free software: you can redistribute it and/or modify
        -:    6: * it under the terms of the GNU General Public License as published by
        -:    7: * the Free Software Foundation, either version 3 of the License, or
        -:    8: * (at your option) any later version.
        -:    9: *
        -:   10: * This program is distributed in the hope that it will be useful,
        -:   11: * but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   12: * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   13: * GNU General Public License for more details.
        -:   14: *
        -:   15: * You should have received a copy of the GNU General Public License
        -:   16: * along with this program.  If not, see <http://www.gnu.org/licenses/>.
        -:   17: */
        -:   18:
        -:   19:
        -:   20://---------------------------------------------------------------------------
        -:   21:#ifndef check64bitH
        -:   22:#define check64bitH
        -:   23://---------------------------------------------------------------------------
        -:   24:
        -:   25:#include "check.h"
        -:   26:#include "config.h"
        -:   27:
        -:   28:#include <string>
        -:   29:
        -:   30:class ErrorLogger;
        -:   31:class Settings;
        -:   32:class Token;
        -:   33:class Tokenizer;
        -:   34:
        -:   35:
        -:   36:/// @addtogroup Checks
        -:   37:/// @{
        -:   38:
        -:   39:/**
        -:   40: * @brief Check for 64-bit portability issues
        -:   41: */
        -:   42:
function _ZN21Check64BitPortabilityD0Ev called 0 returned 0% blocks executed 0%
function _ZN21Check64BitPortabilityD2Ev called 0 returned 0% blocks executed 0%
    #####:   43:class CPPCHECKLIB Check64BitPortability : public Check {
call    0 never executed
call    1 never executed
call    2 never executed
        -:   44:public:
        -:   45:    /** This constructor is used when registering the Check64BitPortability */
function _ZN21Check64BitPortabilityC2Ev called 1 returned 100% blocks executed 71%
        1:   46:    Check64BitPortability() : Check(myName()) {
call    0 returned 100%
call    1 returned 100%
branch  2 taken 100% (fallthrough)
branch  3 taken 0% (throw)
call    4 returned 100%
call    5 never executed
        1:   47:    }
        -:   48:
        -:   49:    /** This constructor is used when running checks. */
function _ZN21Check64BitPortabilityC2EPK9TokenizerPK8SettingsP11ErrorLogger called 0 returned 0% blocks executed 0%
    #####:   50:    Check64BitPortability(const Tokenizer *tokenizer, const Settings *settings, ErrorLogger *errorLogger)
    #####:   51:        : Check(myName(), tokenizer, settings, errorLogger) {
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
    #####:   52:    }
        -:   53:
        -:   54:    /** @brief Run checks against the normal token list */
function _ZN21Check64BitPortability9runChecksEPK9TokenizerPK8SettingsP11ErrorLogger called 0 returned 0% blocks executed 0%
    #####:   55:    void runChecks(const Tokenizer *tokenizer, const Settings *settings, ErrorLogger *errorLogger) OVERRIDE {
    #####:   56:        Check64BitPortability check64BitPortability(tokenizer, settings, errorLogger);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   57:        check64BitPortability.pointerassignment();
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   58:    }
        -:   59:
        -:   60:    /** Check for pointer assignment */
        -:   61:    void pointerassignment();
        -:   62:
        -:   63:private:
        -:   64:
        -:   65:    void assignmentAddressToIntegerError(const Token *tok);
        -:   66:    void assignmentIntegerToAddressError(const Token *tok);
        -:   67:    void returnIntegerError(const Token *tok);
        -:   68:    void returnPointerError(const Token *tok);
        -:   69:
function _ZNK21Check64BitPortability16getErrorMessagesEP11ErrorLoggerPK8Settings called 0 returned 0% blocks executed 0%
    #####:   70:    void getErrorMessages(ErrorLogger *errorLogger, const Settings *settings) const OVERRIDE {
    #####:   71:        Check64BitPortability c(nullptr, settings, errorLogger);
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
call    4 never executed
    #####:   72:        c.assignmentAddressToIntegerError(nullptr);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   73:        c.assignmentIntegerToAddressError(nullptr);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   74:        c.returnIntegerError(nullptr);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   75:        c.returnPointerError(nullptr);
call    0 never executed
branch  1 never executed
branch  2 never executed
    #####:   76:    }
        -:   77:
function _ZN21Check64BitPortability6myNameB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:   78:    static std::string myName() {
    #####:   79:        return "64-bit portability";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:   80:    }
        -:   81:
function _ZNK21Check64BitPortability9classInfoB5cxx11Ev called 0 returned 0% blocks executed 0%
    #####:   82:    std::string classInfo() const OVERRIDE {
        -:   83:        return "Check if there is 64-bit portability issues:\n"
        -:   84:               "- assign address to/from int/long\n"
    #####:   85:               "- casting address from/to integer when returning from function\n";
call    0 never executed
call    1 never executed
branch  2 never executed
branch  3 never executed
call    4 never executed
call    5 never executed
        -:   86:    }
        -:   87:};
        -:   88:/// @}
        -:   89://---------------------------------------------------------------------------
        -:   90:#endif // check64bitH
