37 :	"GAUSS"
		- NEIGH  = { GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"C"
		- NEIGH  = { C , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"K"
		- NEIGH  = { K , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"e"
		- NEIGH  = { e , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"ratexp"
		- NEIGH  = { ratexp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"srat"
		- NEIGH  = { srat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"esinp"
		- NEIGH  = { esinp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"ratexp"
		- NEIGH  = { ratexp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"return"
		- NEIGH  = { + , return , pow , - , esinp , ratexp , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"pow"
		- NEIGH  = { + , return , pow , - , esinp , ratexp , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"-"
		- NEIGH  = { + , return , pow , - , esinp , ratexp , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"esinp"
		- NEIGH  = { + , return , pow , - , esinp , ratexp , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"/"
		- NEIGH  = { + , return , pow , - , esinp , ratexp , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"+"
		- NEIGH  = { + , return , pow , - , esinp , ratexp , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"esinp"
		- NEIGH  = { + , return , pow , - , esinp , ratexp , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"ratexp"
		- NEIGH  = { + , return , pow , - , esinp , ratexp , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"pj_gauss_ini"
		- NEIGH  = { pj_gauss_ini , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"e"
		- NEIGH  = { e , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"phi0"
		- NEIGH  = { phi0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"chi"
		- NEIGH  = { chi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"rc"
		- NEIGH  = { rc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"sphi"
		- NEIGH  = { es , cphi , sphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { en , * , GAUSS , }

51 :	"cphi"
		- NEIGH  = { es , cphi , sphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { en , * , GAUSS , }

51 :	"es"
		- NEIGH  = { es , cphi , sphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { en , * , GAUSS , }

52 :	"GAUSS"
		- NEIGH  = { en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , cphi , sphi , }
		- SUCC   = { == , * , GAUSS , en , malloc , if , }

52 :	"*"
		- NEIGH  = { en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , cphi , sphi , }
		- SUCC   = { == , * , GAUSS , en , malloc , if , }

52 :	"en"
		- NEIGH  = { en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , cphi , sphi , }
		- SUCC   = { == , * , GAUSS , en , malloc , if , }

54 :	"if"
		- NEIGH  = { == , * , GAUSS , en , malloc , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { en , * , GAUSS , }
		- SUCC   = { * , e , es , }

54 :	"en"
		- NEIGH  = { == , * , GAUSS , en , malloc , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { en , * , GAUSS , }
		- SUCC   = { * , e , es , }

54 :	"GAUSS"
		- NEIGH  = { == , * , GAUSS , en , malloc , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { en , * , GAUSS , }
		- SUCC   = { * , e , es , }

54 :	"*"
		- NEIGH  = { == , * , GAUSS , en , malloc , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { en , * , GAUSS , }
		- SUCC   = { * , e , es , }

54 :	"malloc"
		- NEIGH  = { == , * , GAUSS , en , malloc , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { en , * , GAUSS , }
		- SUCC   = { * , e , es , }

54 :	"GAUSS"
		- NEIGH  = { == , * , GAUSS , en , malloc , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { en , * , GAUSS , }
		- SUCC   = { * , e , es , }

54 :	"=="
		- NEIGH  = { == , * , GAUSS , en , malloc , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { en , * , GAUSS , }
		- SUCC   = { * , e , es , }

55 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , * , GAUSS , en , malloc , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

56 :	"es"
		- NEIGH  = { * , e , es , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , * , GAUSS , en , malloc , if , }
		- SUCC   = { e , en , }

56 :	"e"
		- NEIGH  = { * , e , es , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , * , GAUSS , en , malloc , if , }
		- SUCC   = { e , en , }

56 :	"*"
		- NEIGH  = { * , e , es , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , * , GAUSS , en , malloc , if , }
		- SUCC   = { e , en , }

56 :	"e"
		- NEIGH  = { * , e , es , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , * , GAUSS , en , malloc , if , }
		- SUCC   = { e , en , }

57 :	"en"
		- NEIGH  = { e , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , e , es , }
		- SUCC   = { phi0 , sin , sphi , }

57 :	"e"
		- NEIGH  = { e , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , e , es , }
		- SUCC   = { phi0 , sin , sphi , }

57 :	"e"
		- NEIGH  = { e , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , e , es , }
		- SUCC   = { phi0 , sin , sphi , }

58 :	"sphi"
		- NEIGH  = { phi0 , sin , sphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , en , }
		- SUCC   = { phi0 , cos , cphi , }

58 :	"sin"
		- NEIGH  = { phi0 , sin , sphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , en , }
		- SUCC   = { phi0 , cos , cphi , }

58 :	"phi0"
		- NEIGH  = { phi0 , sin , sphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , en , }
		- SUCC   = { phi0 , cos , cphi , }

59 :	"cphi"
		- NEIGH  = { phi0 , cos , cphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , sin , sphi , }
		- SUCC   = { *= , cphi , }

59 :	"cos"
		- NEIGH  = { phi0 , cos , cphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , sin , sphi , }
		- SUCC   = { *= , cphi , }

59 :	"phi0"
		- NEIGH  = { phi0 , cos , cphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , sin , sphi , }
		- SUCC   = { *= , cphi , }

59 :	"cphi"
		- NEIGH  = { *= , cphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , cos , cphi , }
		- SUCC   = { sphi , / , rc , - , es , sqrt , * , }

59 :	"*="
		- NEIGH  = { *= , cphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , cos , cphi , }
		- SUCC   = { sphi , / , rc , - , es , sqrt , * , }

59 :	"cphi"
		- NEIGH  = { *= , cphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , cos , cphi , }
		- SUCC   = { sphi , / , rc , - , es , sqrt , * , }

60 :	"*"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"rc"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"sqrt"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"-"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"es"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"/"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"-"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"es"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"*"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"sphi"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"*"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

60 :	"sphi"
		- NEIGH  = { sphi , / , rc , - , es , sqrt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , cphi , }
		- SUCC   = { - , / , * , es , cphi , + , sqrt , C , en , }

61 :	"en"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"C"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"sqrt"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"+"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"es"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"*"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"cphi"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"*"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"cphi"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"/"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"-"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

61 :	"es"
		- NEIGH  = { - , / , * , es , cphi , + , sqrt , C , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphi , / , rc , - , es , sqrt , * , }
		- SUCC   = { == , C , en , if , }

62 :	"if"
		- NEIGH  = { == , C , en , if , }
		- PARENT = { }
		- CHILD  = { return , en , free , }
		- PRED   = { - , / , * , es , cphi , + , sqrt , C , en , }
		- SUCC   = { C , en , / , sphi , asin , chi , * , }

62 :	"en"
		- NEIGH  = { == , C , en , if , }
		- PARENT = { }
		- CHILD  = { return , en , free , }
		- PRED   = { - , / , * , es , cphi , + , sqrt , C , en , }
		- SUCC   = { C , en , / , sphi , asin , chi , * , }

62 :	"C"
		- NEIGH  = { == , C , en , if , }
		- PARENT = { }
		- CHILD  = { return , en , free , }
		- PRED   = { - , / , * , es , cphi , + , sqrt , C , en , }
		- SUCC   = { C , en , / , sphi , asin , chi , * , }

62 :	"=="
		- NEIGH  = { == , C , en , if , }
		- PARENT = { }
		- CHILD  = { return , en , free , }
		- PRED   = { - , / , * , es , cphi , + , sqrt , C , en , }
		- SUCC   = { C , en , / , sphi , asin , chi , * , }

63 :	"free"
		- NEIGH  = { en , free , }
		- PARENT = { == , C , en , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

63 :	"en"
		- NEIGH  = { en , free , }
		- PARENT = { == , C , en , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

64 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , C , en , if , }
		- CHILD  = { }
		- PRED   = { en , free , }
		- SUCC   = { }

66 :	"*"
		- NEIGH  = { C , en , / , sphi , asin , chi , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , C , en , if , }
		- SUCC   = { e , ratexp , C , * , en , }

66 :	"chi"
		- NEIGH  = { C , en , / , sphi , asin , chi , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , C , en , if , }
		- SUCC   = { e , ratexp , C , * , en , }

66 :	"asin"
		- NEIGH  = { C , en , / , sphi , asin , chi , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , C , en , if , }
		- SUCC   = { e , ratexp , C , * , en , }

66 :	"sphi"
		- NEIGH  = { C , en , / , sphi , asin , chi , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , C , en , if , }
		- SUCC   = { e , ratexp , C , * , en , }

66 :	"/"
		- NEIGH  = { C , en , / , sphi , asin , chi , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , C , en , if , }
		- SUCC   = { e , ratexp , C , * , en , }

66 :	"en"
		- NEIGH  = { C , en , / , sphi , asin , chi , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , C , en , if , }
		- SUCC   = { e , ratexp , C , * , en , }

66 :	"C"
		- NEIGH  = { C , en , / , sphi , asin , chi , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , C , en , if , }
		- SUCC   = { e , ratexp , C , * , en , }

67 :	"en"
		- NEIGH  = { e , ratexp , C , * , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , en , / , sphi , asin , chi , * , }
		- SUCC   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }

67 :	"ratexp"
		- NEIGH  = { e , ratexp , C , * , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , en , / , sphi , asin , chi , * , }
		- SUCC   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }

67 :	"*"
		- NEIGH  = { e , ratexp , C , * , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , en , / , sphi , asin , chi , * , }
		- SUCC   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }

67 :	"en"
		- NEIGH  = { e , ratexp , C , * , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , en , / , sphi , asin , chi , * , }
		- SUCC   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }

67 :	"C"
		- NEIGH  = { e , ratexp , C , * , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , en , / , sphi , asin , chi , * , }
		- SUCC   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }

67 :	"*"
		- NEIGH  = { e , ratexp , C , * , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , en , / , sphi , asin , chi , * , }
		- SUCC   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }

67 :	"e"
		- NEIGH  = { e , ratexp , C , * , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , en , / , sphi , asin , chi , * , }
		- SUCC   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }

68 :	"en"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

68 :	"K"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

68 :	"tan"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

68 :	"*"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

68 :	"*"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

68 :	"chi"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

68 :	"+"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

68 :	"M_FORTPI"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

68 :	"/"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

69 :	"pow"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

69 :	"tan"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

69 :	"*"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

69 :	"phi0"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

69 :	"+"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

69 :	"M_FORTPI"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

69 :	"en"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

69 :	"C"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

69 :	"*"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

70 :	"srat"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

70 :	"en"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

70 :	"e"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

70 :	"*"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

70 :	"sphi"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

70 :	"en"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

70 :	"ratexp"
		- NEIGH  = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , ratexp , C , * , en , }
		- SUCC   = { en , * , return , }

71 :	"return"
		- NEIGH  = { en , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- SUCC   = { }

71 :	"*"
		- NEIGH  = { en , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- SUCC   = { }

71 :	"en"
		- NEIGH  = { en , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ratexp , sphi , srat , K , C , en , / , phi0 , M_FORTPI , + , pow , chi , e , tan , * , }
		- SUCC   = { }

74 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"pj_gauss"
		- NEIGH  = { pj_gauss , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"projCtx"
		- NEIGH  = { projCtx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"ctx"
		- NEIGH  = { ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"elp"
		- NEIGH  = { elp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"data"
		- NEIGH  = { data , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

75 :	"GAUSS"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { slp , PJ_LP , }

75 :	"*"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { slp , PJ_LP , }

75 :	"en"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { slp , PJ_LP , }

75 :	"GAUSS"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { slp , PJ_LP , }

75 :	"*"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { slp , PJ_LP , }

75 :	"data"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { slp , PJ_LP , }

76 :	"PJ_LP"
		- NEIGH  = { slp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { data , en , * , GAUSS , }
		- SUCC   = { ctx , }

76 :	"slp"
		- NEIGH  = { slp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { data , en , * , GAUSS , }
		- SUCC   = { ctx , }

77 :	"ctx"
		- NEIGH  = { ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { slp , PJ_LP , }
		- SUCC   = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }

79 :	"slp"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

79 :	"phi"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

79 :	"*"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

79 :	"atan"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

79 :	"en"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

79 :	"K"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

79 :	"*"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"pow"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"tan"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"*"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"elp"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"phi"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"+"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"en"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"C"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

80 :	"*"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"srat"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"en"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"e"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"*"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"sin"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"elp"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"phi"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"en"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"ratexp"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"-"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

81 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ctx , }
		- SUCC   = { elp , * , C , en , lam , slp , }

82 :	"slp"
		- NEIGH  = { elp , * , C , en , lam , slp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- SUCC   = { slp , return , }

82 :	"lam"
		- NEIGH  = { elp , * , C , en , lam , slp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- SUCC   = { slp , return , }

82 :	"en"
		- NEIGH  = { elp , * , C , en , lam , slp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- SUCC   = { slp , return , }

82 :	"C"
		- NEIGH  = { elp , * , C , en , lam , slp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- SUCC   = { slp , return , }

82 :	"*"
		- NEIGH  = { elp , * , C , en , lam , slp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- SUCC   = { slp , return , }

82 :	"elp"
		- NEIGH  = { elp , * , C , en , lam , slp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- SUCC   = { slp , return , }

82 :	"lam"
		- NEIGH  = { elp , * , C , en , lam , slp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , ratexp , sin , srat , M_FORTPI , + , en , elp , e , slp , tan , pow , * , phi , C , K , atan , }
		- SUCC   = { slp , return , }

83 :	"return"
		- NEIGH  = { slp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { elp , * , C , en , lam , slp , }
		- SUCC   = { }

83 :	"slp"
		- NEIGH  = { slp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { elp , * , C , en , lam , slp , }
		- SUCC   = { }

86 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"pj_inv_gauss"
		- NEIGH  = { pj_inv_gauss , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"projCtx"
		- NEIGH  = { projCtx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"ctx"
		- NEIGH  = { ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"slp"
		- NEIGH  = { slp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"data"
		- NEIGH  = { data , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"GAUSS"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { elp , PJ_LP , }

87 :	"*"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { elp , PJ_LP , }

87 :	"en"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { elp , PJ_LP , }

87 :	"GAUSS"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { elp , PJ_LP , }

87 :	"*"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { elp , PJ_LP , }

87 :	"data"
		- NEIGH  = { data , en , * , GAUSS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { elp , PJ_LP , }

88 :	"PJ_LP"
		- NEIGH  = { elp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { data , en , * , GAUSS , }
		- SUCC   = { num , }

88 :	"elp"
		- NEIGH  = { elp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { data , en , * , GAUSS , }
		- SUCC   = { num , }

89 :	"num"
		- NEIGH  = { num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { elp , PJ_LP , }
		- SUCC   = { i , }

90 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { num , }
		- SUCC   = { C , / , slp , en , lam , elp , }

92 :	"elp"
		- NEIGH  = { C , / , slp , en , lam , elp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }

92 :	"lam"
		- NEIGH  = { C , / , slp , en , lam , elp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }

92 :	"slp"
		- NEIGH  = { C , / , slp , en , lam , elp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }

92 :	"lam"
		- NEIGH  = { C , / , slp , en , lam , elp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }

92 :	"/"
		- NEIGH  = { C , / , slp , en , lam , elp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }

92 :	"en"
		- NEIGH  = { C , / , slp , en , lam , elp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }

92 :	"C"
		- NEIGH  = { C , / , slp , en , lam , elp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }

93 :	"num"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"pow"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"tan"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"*"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"slp"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"phi"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"+"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"M_FORTPI"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"/"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"en"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"K"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"/"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"en"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

93 :	"C"
		- NEIGH  = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { C , / , slp , en , lam , elp , }
		- SUCC   = { -- , i , for , }

94 :	"for"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , M_HALFPI , num , - , if , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PRED   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- SUCC   = { i , ! , if , }

94 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , M_HALFPI , num , - , if , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PRED   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- SUCC   = { i , ! , if , }

94 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , M_HALFPI , num , - , if , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PRED   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- SUCC   = { i , ! , if , }

94 :	"--"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , M_HALFPI , num , - , if , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PRED   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- SUCC   = { i , ! , if , }

94 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , M_HALFPI , num , - , if , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PRED   = { C , K , / , en , M_FORTPI , + , * , slp , tan , pow , phi , num , }
		- SUCC   = { i , ! , if , }

95 :	"elp"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"phi"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"*"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"atan"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"num"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"*"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"srat"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"en"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"e"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"*"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"sin"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"slp"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"phi"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"-"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"*"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"en"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

95 :	"e"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

96 :	"-"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

96 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , - , slp , phi , if , elp , fabs , }

97 :	"if"
		- NEIGH  = { < , - , slp , phi , if , elp , fabs , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- SUCC   = { elp , phi , slp , }

97 :	"fabs"
		- NEIGH  = { < , - , slp , phi , if , elp , fabs , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- SUCC   = { elp , phi , slp , }

97 :	"elp"
		- NEIGH  = { < , - , slp , phi , if , elp , fabs , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- SUCC   = { elp , phi , slp , }

97 :	"phi"
		- NEIGH  = { < , - , slp , phi , if , elp , fabs , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- SUCC   = { elp , phi , slp , }

97 :	"-"
		- NEIGH  = { < , - , slp , phi , if , elp , fabs , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- SUCC   = { elp , phi , slp , }

97 :	"slp"
		- NEIGH  = { < , - , slp , phi , if , elp , fabs , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- SUCC   = { elp , phi , slp , }

97 :	"phi"
		- NEIGH  = { < , - , slp , phi , if , elp , fabs , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- SUCC   = { elp , phi , slp , }

97 :	"<"
		- NEIGH  = { < , - , slp , phi , if , elp , fabs , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { M_HALFPI , num , - , sin , slp , e , elp , en , phi , atan , * , srat , }
		- SUCC   = { elp , phi , slp , }

97 :	"break"
		- NEIGH  = { break , }
		- PARENT = { < , - , slp , phi , if , elp , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"slp"
		- NEIGH  = { elp , phi , slp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { < , - , slp , phi , if , elp , fabs , }
		- SUCC   = { }

98 :	"phi"
		- NEIGH  = { elp , phi , slp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { < , - , slp , phi , if , elp , fabs , }
		- SUCC   = { }

98 :	"elp"
		- NEIGH  = { elp , phi , slp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { < , - , slp , phi , if , elp , fabs , }
		- SUCC   = { }

98 :	"phi"
		- NEIGH  = { elp , phi , slp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { < , - , slp , phi , if , elp , fabs , }
		- SUCC   = { }

101 :	"if"
		- NEIGH  = { i , ! , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CONV_INV_MERI_DIST , ctx , pj_ctx_set_errno , }
		- PRED   = { -- , i , for , }
		- SUCC   = { elp , return , }

101 :	"!"
		- NEIGH  = { i , ! , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CONV_INV_MERI_DIST , ctx , pj_ctx_set_errno , }
		- PRED   = { -- , i , for , }
		- SUCC   = { elp , return , }

101 :	"i"
		- NEIGH  = { i , ! , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CONV_INV_MERI_DIST , ctx , pj_ctx_set_errno , }
		- PRED   = { -- , i , for , }
		- SUCC   = { elp , return , }

102 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_NON_CONV_INV_MERI_DIST , ctx , pj_ctx_set_errno , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

102 :	"ctx"
		- NEIGH  = { PJD_ERR_NON_CONV_INV_MERI_DIST , ctx , pj_ctx_set_errno , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

102 :	"PJD_ERR_NON_CONV_INV_MERI_DIST"
		- NEIGH  = { PJD_ERR_NON_CONV_INV_MERI_DIST , ctx , pj_ctx_set_errno , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"return"
		- NEIGH  = { elp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , ! , if , }
		- SUCC   = { }

103 :	"elp"
		- NEIGH  = { elp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , ! , if , }
		- SUCC   = { }

