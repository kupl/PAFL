9 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

9 :	"tmerc"
		- NEIGH  = { tmerc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

14 :	"esp"
		- NEIGH  = { esp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"ml0"
		- NEIGH  = { ml0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"en"
		- NEIGH  = { en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"e_forward"
		- NEIGH  = { e_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

32 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

33 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

33 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

33 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

33 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

33 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

33 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

33 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

33 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

33 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

33 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , al , n , sinphi , cosphi , als , }

34 :	"al"
		- NEIGH  = { t , al , n , sinphi , cosphi , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { > , || , M_HALFPI , < , lam , - , lp , if , }

34 :	"als"
		- NEIGH  = { t , al , n , sinphi , cosphi , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { > , || , M_HALFPI , < , lam , - , lp , if , }

34 :	"n"
		- NEIGH  = { t , al , n , sinphi , cosphi , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { > , || , M_HALFPI , < , lam , - , lp , if , }

34 :	"cosphi"
		- NEIGH  = { t , al , n , sinphi , cosphi , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { > , || , M_HALFPI , < , lam , - , lp , if , }

34 :	"sinphi"
		- NEIGH  = { t , al , n , sinphi , cosphi , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { > , || , M_HALFPI , < , lam , - , lp , if , }

34 :	"t"
		- NEIGH  = { t , al , n , sinphi , cosphi , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { > , || , M_HALFPI , < , lam , - , lp , if , }

43 :	"if"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	"lp"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	"lam"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	"<"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	"-"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	"M_HALFPI"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	"||"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	"lp"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	"lam"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	">"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

43 :	"M_HALFPI"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { t , al , n , sinphi , cosphi , als , }
		- SUCC   = { phi , lp , sin , sinphi , }

44 :	"xy"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , y , xy , }

44 :	"x"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , y , xy , }

44 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , y , xy , }

45 :	"xy"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }

45 :	"y"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }

45 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }

46 :	"pj_ctx_set_errno"
		- NEIGH  = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { xy , return , }

46 :	"P"
		- NEIGH  = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { xy , return , }

46 :	"ctx"
		- NEIGH  = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { xy , return , }

46 :	"PJD_ERR_LAT_OR_LON_EXCEED_LIMIT"
		- NEIGH  = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { xy , return , }

47 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- SUCC   = { }

47 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- SUCC   = { }

50 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- SUCC   = { phi , lp , cos , cosphi , }

50 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- SUCC   = { phi , lp , cos , cosphi , }

50 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- SUCC   = { phi , lp , cos , cosphi , }

50 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- SUCC   = { phi , lp , cos , cosphi , }

51 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { / , t , > , sinphi , cosphi , fabs , }

51 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { / , t , > , sinphi , cosphi , fabs , }

51 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { / , t , > , sinphi , cosphi , fabs , }

51 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { / , t , > , sinphi , cosphi , fabs , }

52 :	"t"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { *= , t , }

52 :	"fabs"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { *= , t , }

52 :	"cosphi"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { *= , t , }

52 :	">"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { *= , t , }

52 :	"sinphi"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { *= , t , }

52 :	"/"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { *= , t , }

52 :	"cosphi"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { *= , t , }

53 :	"t"
		- NEIGH  = { *= , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { lam , * , cosphi , lp , al , }

53 :	"*="
		- NEIGH  = { *= , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { lam , * , cosphi , lp , al , }

53 :	"t"
		- NEIGH  = { *= , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { lam , * , cosphi , lp , al , }

54 :	"al"
		- NEIGH  = { lam , * , cosphi , lp , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , t , }
		- SUCC   = { * , al , als , }

54 :	"cosphi"
		- NEIGH  = { lam , * , cosphi , lp , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , t , }
		- SUCC   = { * , al , als , }

54 :	"*"
		- NEIGH  = { lam , * , cosphi , lp , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , t , }
		- SUCC   = { * , al , als , }

54 :	"lp"
		- NEIGH  = { lam , * , cosphi , lp , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , t , }
		- SUCC   = { * , al , als , }

54 :	"lam"
		- NEIGH  = { lam , * , cosphi , lp , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { *= , t , }
		- SUCC   = { * , al , als , }

55 :	"als"
		- NEIGH  = { * , al , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , * , cosphi , lp , al , }
		- SUCC   = { * , P , sqrt , es , /= , - , sinphi , al , }

55 :	"al"
		- NEIGH  = { * , al , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , * , cosphi , lp , al , }
		- SUCC   = { * , P , sqrt , es , /= , - , sinphi , al , }

55 :	"*"
		- NEIGH  = { * , al , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , * , cosphi , lp , al , }
		- SUCC   = { * , P , sqrt , es , /= , - , sinphi , al , }

55 :	"al"
		- NEIGH  = { * , al , als , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , * , cosphi , lp , al , }
		- SUCC   = { * , P , sqrt , es , /= , - , sinphi , al , }

56 :	"al"
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

56 :	"/="
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

56 :	"sqrt"
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

56 :	"-"
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

56 :	"P"
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

56 :	"es"
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

56 :	"*"
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

56 :	"sinphi"
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

56 :	"*"
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

56 :	"sinphi"
		- NEIGH  = { * , P , sqrt , es , /= , - , sinphi , al , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , al , als , }
		- SUCC   = { * , esp , Q , cosphi , n , }

57 :	"n"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , P , sqrt , es , /= , - , sinphi , al , }
		- SUCC   = { t , - , als , n , al , + , k0 , P , * , x , xy , }

57 :	"Q"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , P , sqrt , es , /= , - , sinphi , al , }
		- SUCC   = { t , - , als , n , al , + , k0 , P , * , x , xy , }

57 :	"esp"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , P , sqrt , es , /= , - , sinphi , al , }
		- SUCC   = { t , - , als , n , al , + , k0 , P , * , x , xy , }

57 :	"*"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , P , sqrt , es , /= , - , sinphi , al , }
		- SUCC   = { t , - , als , n , al , + , k0 , P , * , x , xy , }

57 :	"cosphi"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , P , sqrt , es , /= , - , sinphi , al , }
		- SUCC   = { t , - , als , n , al , + , k0 , P , * , x , xy , }

57 :	"*"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , P , sqrt , es , /= , - , sinphi , al , }
		- SUCC   = { t , - , als , n , al , + , k0 , P , * , x , xy , }

57 :	"cosphi"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , P , sqrt , es , /= , - , sinphi , al , }
		- SUCC   = { t , - , als , n , al , + , k0 , P , * , x , xy , }

58 :	"xy"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

58 :	"x"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

58 :	"P"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

58 :	"k0"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

58 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

58 :	"al"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

58 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

58 :	"+"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

59 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

59 :	"als"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

59 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

59 :	"-"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

59 :	"t"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

59 :	"+"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

59 :	"n"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

59 :	"+"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"als"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"+"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"t"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"t"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"-"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"+"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"n"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"-"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

60 :	"t"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"+"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"als"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"+"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"t"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"t"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"*"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"-"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"t"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

61 :	"-"
		- NEIGH  = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }

63 :	"xy"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"y"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"P"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"k0"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"pj_mlfn"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"lp"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"phi"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"sinphi"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"cosphi"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"Q"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"en"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"-"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"Q"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"ml0"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

63 :	"+"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

64 :	"sinphi"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

64 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

64 :	"al"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

64 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

64 :	"lp"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

64 :	"lam"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

64 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

64 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

64 :	"+"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"als"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"-"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"t"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"+"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"n"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"+"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"n"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

65 :	"+"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"als"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"+"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"t"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"t"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"-"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"+"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"n"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"-"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

66 :	"t"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"+"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"als"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"+"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"t"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"t"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"*"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"-"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"t"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

67 :	"-"
		- NEIGH  = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , - , als , n , al , + , k0 , P , * , x , xy , }
		- SUCC   = { xy , return , }

69 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- SUCC   = { }

69 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , t , als , + , al , ml0 , en , Q , phi , pj_mlfn , sinphi , lam , lp , xy , cosphi , k0 , P , * , - , y , }
		- SUCC   = { }

73 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"s_forward"
		- NEIGH  = { s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cosphi , b , }

74 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cosphi , b , }

75 :	"b"
		- NEIGH  = { cosphi , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { > , || , M_HALFPI , < , lam , - , lp , if , }

75 :	"cosphi"
		- NEIGH  = { cosphi , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { > , || , M_HALFPI , < , lam , - , lp , if , }

84 :	"if"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	"lp"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	"lam"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	"<"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	"-"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	"M_HALFPI"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	"||"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	"lp"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	"lam"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	">"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

84 :	"M_HALFPI"
		- NEIGH  = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , ctx , P , pj_ctx_set_errno , y , xy , HUGE_VAL , x , }
		- PRED   = { cosphi , b , }
		- SUCC   = { phi , lp , cos , cosphi , }

85 :	"xy"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , y , xy , }

85 :	"x"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , y , xy , }

85 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , y , xy , }

86 :	"xy"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }

86 :	"y"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }

86 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }

87 :	"pj_ctx_set_errno"
		- NEIGH  = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { xy , return , }

87 :	"P"
		- NEIGH  = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { xy , return , }

87 :	"ctx"
		- NEIGH  = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { xy , return , }

87 :	"PJD_ERR_LAT_OR_LON_EXCEED_LIMIT"
		- NEIGH  = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { xy , return , }

88 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- SUCC   = { }

88 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- CHILD  = { }
		- PRED   = { ctx , P , PJD_ERR_LAT_OR_LON_EXCEED_LIMIT , pj_ctx_set_errno , }
		- SUCC   = { }

91 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- SUCC   = { lam , lp , * , cosphi , sin , b , }

91 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- SUCC   = { lam , lp , * , cosphi , sin , b , }

91 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- SUCC   = { lam , lp , * , cosphi , sin , b , }

91 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , || , M_HALFPI , < , lam , - , lp , if , }
		- SUCC   = { lam , lp , * , cosphi , sin , b , }

92 :	"b"
		- NEIGH  = { lam , lp , * , cosphi , sin , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { <= , - , fabs , b , if , }

92 :	"cosphi"
		- NEIGH  = { lam , lp , * , cosphi , sin , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { <= , - , fabs , b , if , }

92 :	"*"
		- NEIGH  = { lam , lp , * , cosphi , sin , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { <= , - , fabs , b , if , }

92 :	"sin"
		- NEIGH  = { lam , lp , * , cosphi , sin , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { <= , - , fabs , b , if , }

92 :	"lp"
		- NEIGH  = { lam , lp , * , cosphi , sin , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { <= , - , fabs , b , if , }

92 :	"lam"
		- NEIGH  = { lam , lp , * , cosphi , sin , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { <= , - , fabs , b , if , }

93 :	"if"
		- NEIGH  = { <= , - , fabs , b , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { lam , lp , * , cosphi , sin , b , }
		- SUCC   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }

93 :	"fabs"
		- NEIGH  = { <= , - , fabs , b , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { lam , lp , * , cosphi , sin , b , }
		- SUCC   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }

93 :	"fabs"
		- NEIGH  = { <= , - , fabs , b , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { lam , lp , * , cosphi , sin , b , }
		- SUCC   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }

93 :	"b"
		- NEIGH  = { <= , - , fabs , b , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { lam , lp , * , cosphi , sin , b , }
		- SUCC   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }

93 :	"-"
		- NEIGH  = { <= , - , fabs , b , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { lam , lp , * , cosphi , sin , b , }
		- SUCC   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }

93 :	"<="
		- NEIGH  = { <= , - , fabs , b , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { lam , lp , * , cosphi , sin , b , }
		- SUCC   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }

94 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { <= , - , fabs , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

94 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { <= , - , fabs , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

94 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { <= , - , fabs , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

95 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { <= , - , fabs , b , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

95 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { <= , - , fabs , b , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

98 :	"xy"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"x"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"static_cast"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"<"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"pj_opaque"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"*"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	">"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"P"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"opaque"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"ml0"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"*"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"log"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"+"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"b"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"/"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"-"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

98 :	"b"
		- NEIGH  = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , - , fabs , b , if , }
		- SUCC   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }

99 :	"xy"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"y"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"cosphi"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"*"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"cos"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"lp"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"lam"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"/"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"sqrt"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"-"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"b"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"*"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

99 :	"b"
		- NEIGH  = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , b , + , opaque , P , static_cast , log , ml0 , > , * , xy , < , pj_opaque , x , }
		- SUCC   = { y , xy , fabs , b , }

101 :	"b"
		- NEIGH  = { y , xy , fabs , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- SUCC   = { >= , b , if , }

101 :	"fabs"
		- NEIGH  = { y , xy , fabs , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- SUCC   = { >= , b , if , }

101 :	"xy"
		- NEIGH  = { y , xy , fabs , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- SUCC   = { >= , b , if , }

101 :	"y"
		- NEIGH  = { y , xy , fabs , b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , - , sqrt , lam , lp , / , cos , cosphi , * , y , xy , }
		- SUCC   = { >= , b , if , }

102 :	"if"
		- NEIGH  = { >= , b , if , }
		- PARENT = { }
		- CHILD  = { acos , y , xy , > , - , b , if , }
		- PRED   = { y , xy , fabs , b , }
		- SUCC   = { < , phi , lp , if , }

102 :	"b"
		- NEIGH  = { >= , b , if , }
		- PARENT = { }
		- CHILD  = { acos , y , xy , > , - , b , if , }
		- PRED   = { y , xy , fabs , b , }
		- SUCC   = { < , phi , lp , if , }

102 :	">="
		- NEIGH  = { >= , b , if , }
		- PARENT = { }
		- CHILD  = { acos , y , xy , > , - , b , if , }
		- PRED   = { y , xy , fabs , b , }
		- SUCC   = { < , phi , lp , if , }

103 :	"if"
		- NEIGH  = { > , - , b , if , }
		- PARENT = { >= , b , if , }
		- CHILD  = { y , xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { }

103 :	"b"
		- NEIGH  = { > , - , b , if , }
		- PARENT = { >= , b , if , }
		- CHILD  = { y , xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { }

103 :	"-"
		- NEIGH  = { > , - , b , if , }
		- PARENT = { >= , b , if , }
		- CHILD  = { y , xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { }

103 :	">"
		- NEIGH  = { > , - , b , if , }
		- PARENT = { >= , b , if , }
		- CHILD  = { y , xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { }

104 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , - , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

104 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , - , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

104 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , - , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

105 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { > , - , b , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

105 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { > , - , b , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

107 :	"xy"
		- NEIGH  = { y , xy , }
		- PARENT = { > , - , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

107 :	"y"
		- NEIGH  = { y , xy , }
		- PARENT = { > , - , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

109 :	"xy"
		- NEIGH  = { acos , y , xy , }
		- PARENT = { >= , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

109 :	"y"
		- NEIGH  = { acos , y , xy , }
		- PARENT = { >= , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

109 :	"acos"
		- NEIGH  = { acos , y , xy , }
		- PARENT = { >= , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

109 :	"xy"
		- NEIGH  = { acos , y , xy , }
		- PARENT = { >= , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

109 :	"y"
		- NEIGH  = { acos , y , xy , }
		- PARENT = { >= , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"if"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { >= , b , if , }
		- SUCC   = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }

111 :	"lp"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { >= , b , if , }
		- SUCC   = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }

111 :	"phi"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { >= , b , if , }
		- SUCC   = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }

111 :	"<"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { >= , b , if , }
		- SUCC   = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }

112 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

112 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

112 :	"-"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

112 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

112 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

113 :	"xy"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"y"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"static_cast"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"<"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"pj_opaque"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"*"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	">"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"P"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"opaque"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"esp"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"*"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"xy"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"y"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"-"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"P"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

113 :	"phi0"
		- NEIGH  = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { xy , return , }

114 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- SUCC   = { }

114 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , y , - , xy , < , esp , opaque , P , > , pj_opaque , static_cast , * , }
		- SUCC   = { }

118 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"e_inverse"
		- NEIGH  = { e_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

119 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

119 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

120 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

120 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

120 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

120 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

120 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

120 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

120 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

120 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

120 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

120 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , d , ds , cosphi , sinphi , con , n , }

121 :	"n"
		- NEIGH  = { t , d , ds , cosphi , sinphi , con , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }

121 :	"con"
		- NEIGH  = { t , d , ds , cosphi , sinphi , con , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }

121 :	"cosphi"
		- NEIGH  = { t , d , ds , cosphi , sinphi , con , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }

121 :	"d"
		- NEIGH  = { t , d , ds , cosphi , sinphi , con , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }

121 :	"ds"
		- NEIGH  = { t , d , ds , cosphi , sinphi , con , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }

121 :	"sinphi"
		- NEIGH  = { t , d , ds , cosphi , sinphi , con , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }

121 :	"t"
		- NEIGH  = { t , d , ds , cosphi , sinphi , con , n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }

123 :	"lp"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"phi"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"pj_inv_mlfn"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"P"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"ctx"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"Q"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"ml0"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"+"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"xy"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"y"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"/"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"P"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"k0"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"P"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"es"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"Q"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

123 :	"en"
		- NEIGH  = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , d , ds , cosphi , sinphi , con , n , }
		- SUCC   = { M_HALFPI , >= , phi , lp , fabs , if , }

124 :	"if"
		- NEIGH  = { M_HALFPI , >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { -= , ds , es , k0 , P , con , x , d , + , sqrt , *= , * , xy , - , Q , y , sin , t , n , / , M_HALFPI , > , cos , lp , lam , esp , cosphi , < , fabs , phi , sinphi , }
		- PRED   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- SUCC   = { lp , return , }

124 :	"fabs"
		- NEIGH  = { M_HALFPI , >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { -= , ds , es , k0 , P , con , x , d , + , sqrt , *= , * , xy , - , Q , y , sin , t , n , / , M_HALFPI , > , cos , lp , lam , esp , cosphi , < , fabs , phi , sinphi , }
		- PRED   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- SUCC   = { lp , return , }

124 :	"lp"
		- NEIGH  = { M_HALFPI , >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { -= , ds , es , k0 , P , con , x , d , + , sqrt , *= , * , xy , - , Q , y , sin , t , n , / , M_HALFPI , > , cos , lp , lam , esp , cosphi , < , fabs , phi , sinphi , }
		- PRED   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- SUCC   = { lp , return , }

124 :	"phi"
		- NEIGH  = { M_HALFPI , >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { -= , ds , es , k0 , P , con , x , d , + , sqrt , *= , * , xy , - , Q , y , sin , t , n , / , M_HALFPI , > , cos , lp , lam , esp , cosphi , < , fabs , phi , sinphi , }
		- PRED   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- SUCC   = { lp , return , }

124 :	">="
		- NEIGH  = { M_HALFPI , >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { -= , ds , es , k0 , P , con , x , d , + , sqrt , *= , * , xy , - , Q , y , sin , t , n , / , M_HALFPI , > , cos , lp , lam , esp , cosphi , < , fabs , phi , sinphi , }
		- PRED   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- SUCC   = { lp , return , }

124 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , >= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { -= , ds , es , k0 , P , con , x , d , + , sqrt , *= , * , xy , - , Q , y , sin , t , n , / , M_HALFPI , > , cos , lp , lam , esp , cosphi , < , fabs , phi , sinphi , }
		- PRED   = { y , k0 , xy , + , P , pj_inv_mlfn , Q , es , ctx , en , / , ml0 , phi , lp , }
		- SUCC   = { lp , return , }

125 :	"lp"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

125 :	"phi"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

125 :	"xy"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

125 :	"y"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

125 :	"<"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

125 :	"-"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

125 :	"M_HALFPI"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

125 :	"M_HALFPI"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

126 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , < , y , M_HALFPI , xy , phi , lp , }
		- SUCC   = { }

126 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , < , y , M_HALFPI , xy , phi , lp , }
		- SUCC   = { }

128 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , cos , cosphi , }

128 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , cos , cosphi , }

128 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , cos , cosphi , }

128 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , cos , cosphi , }

129 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { / , t , > , sinphi , cosphi , fabs , }

129 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { / , t , > , sinphi , cosphi , fabs , }

129 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { / , t , > , sinphi , cosphi , fabs , }

129 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { / , t , > , sinphi , cosphi , fabs , }

130 :	"t"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { * , esp , Q , cosphi , n , }

130 :	"fabs"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { * , esp , Q , cosphi , n , }

130 :	"cosphi"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { * , esp , Q , cosphi , n , }

130 :	">"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { * , esp , Q , cosphi , n , }

130 :	"sinphi"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { * , esp , Q , cosphi , n , }

130 :	"/"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { * , esp , Q , cosphi , n , }

130 :	"cosphi"
		- NEIGH  = { / , t , > , sinphi , cosphi , fabs , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { * , esp , Q , cosphi , n , }

131 :	"n"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }

131 :	"Q"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }

131 :	"esp"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }

131 :	"*"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }

131 :	"cosphi"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }

131 :	"*"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }

131 :	"cosphi"
		- NEIGH  = { * , esp , Q , cosphi , n , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , t , > , sinphi , cosphi , fabs , }
		- SUCC   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }

132 :	"d"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"xy"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"x"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"*"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"sqrt"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"con"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"-"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"P"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"es"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"*"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"sinphi"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"*"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"sinphi"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"/"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"P"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

132 :	"k0"
		- NEIGH  = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , esp , Q , cosphi , n , }
		- SUCC   = { *= , t , con , }

133 :	"con"
		- NEIGH  = { *= , t , con , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- SUCC   = { *= , t , }

133 :	"*="
		- NEIGH  = { *= , t , con , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- SUCC   = { *= , t , }

133 :	"t"
		- NEIGH  = { *= , t , con , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , d , P , - , sinphi , sqrt , * , es , x , k0 , xy , }
		- SUCC   = { *= , t , }

134 :	"t"
		- NEIGH  = { *= , t , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { *= , t , con , }
		- SUCC   = { * , d , ds , }

134 :	"*="
		- NEIGH  = { *= , t , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { *= , t , con , }
		- SUCC   = { * , d , ds , }

134 :	"t"
		- NEIGH  = { *= , t , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { *= , t , con , }
		- SUCC   = { * , d , ds , }

135 :	"ds"
		- NEIGH  = { * , d , ds , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { *= , t , }
		- SUCC   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }

135 :	"d"
		- NEIGH  = { * , d , ds , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { *= , t , }
		- SUCC   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }

135 :	"*"
		- NEIGH  = { * , d , ds , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { *= , t , }
		- SUCC   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }

135 :	"d"
		- NEIGH  = { * , d , ds , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { *= , t , }
		- SUCC   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }

136 :	"lp"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"phi"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"-="
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"con"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"ds"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"/"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"-"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"P"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"es"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

136 :	"-"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"ds"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"+"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"t"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"-"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"n"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"+"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"n"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"-"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"n"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

137 :	"-"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"ds"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"+"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"t"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"-"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"n"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

138 :	"+"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

139 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

139 :	"t"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

139 :	"+"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

139 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

139 :	"n"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"-"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"ds"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"+"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"t"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"+"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"t"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"+"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"*"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

140 :	"t"
		- NEIGH  = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , d , ds , }
		- SUCC   = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }

142 :	"lp"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

142 :	"lam"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

142 :	"d"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

142 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

142 :	"-"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

143 :	"ds"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

143 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

143 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

143 :	"+"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

143 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

143 :	"t"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

143 :	"+"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

143 :	"n"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

143 :	"-"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"ds"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"+"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"t"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"+"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"t"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"+"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"n"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"+"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

144 :	"n"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"-"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"ds"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"+"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"t"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"+"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"t"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"+"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"*"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

145 :	"t"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

146 :	"/"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

146 :	"cosphi"
		- NEIGH  = { cosphi , / , t , * , + , d , lam , ds , - , n , lp , }
		- PARENT = { M_HALFPI , >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { n , t , * , es , P , - , ds , lp , / , -= , con , + , phi , }
		- SUCC   = { }

148 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , >= , phi , lp , fabs , if , }
		- SUCC   = { }

148 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , >= , phi , lp , fabs , if , }
		- SUCC   = { }

152 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"s_inverse"
		- NEIGH  = { s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

153 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { g , h , }

153 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { g , h , }

154 :	"h"
		- NEIGH  = { g , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }

154 :	"g"
		- NEIGH  = { g , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }

156 :	"h"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"exp"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"xy"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"x"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"/"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"static_cast"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"<"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"pj_opaque"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"*"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	">"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"P"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"opaque"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

156 :	"esp"
		- NEIGH  = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , h , }
		- SUCC   = { / , - , h , * , g , }

157 :	"g"
		- NEIGH  = { / , - , h , * , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- SUCC   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }

157 :	"*"
		- NEIGH  = { / , - , h , * , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- SUCC   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }

157 :	"h"
		- NEIGH  = { / , - , h , * , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- SUCC   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }

157 :	"-"
		- NEIGH  = { / , - , h , * , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- SUCC   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }

157 :	"/"
		- NEIGH  = { / , - , h , * , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- SUCC   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }

157 :	"h"
		- NEIGH  = { / , - , h , * , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , * , esp , xy , < , static_cast , x , exp , > , h , / , pj_opaque , }
		- SUCC   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }

158 :	"h"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"cos"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"P"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"phi0"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"+"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"xy"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"y"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"/"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"static_cast"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"<"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"pj_opaque"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"*"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	">"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"P"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"opaque"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

158 :	"esp"
		- NEIGH  = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , - , h , * , g , }
		- SUCC   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }

159 :	"lp"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"phi"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"asin"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"sqrt"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"-"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"h"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"*"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"h"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"/"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"+"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"g"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"*"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

159 :	"g"
		- NEIGH  = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , > , * , esp , xy , < , y , static_cast , phi0 , + , P , h , / , cos , pj_opaque , }
		- SUCC   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }

162 :	"if"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"xy"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"y"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"<"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"&&"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"-"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"lp"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"phi"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"+"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"P"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"phi0"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"<"
		- NEIGH  = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- PARENT = { }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , * , sqrt , asin , - , g , / , phi , h , lp , }
		- SUCC   = { atan2 , || , != , g , lam , h , lp , }

162 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

162 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

162 :	"-"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

162 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

162 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"lp"
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

164 :	"lam"
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

164 :	"g"
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

164 :	"!="
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

164 :	"||"
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

164 :	"h"
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

164 :	"!="
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

164 :	"atan2"
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

164 :	"g"
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

164 :	"h"
		- NEIGH  = { atan2 , || , != , g , lam , h , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , phi , lp , - , && , < , y , xy , phi0 , + , if , }
		- SUCC   = { lp , return , }

165 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { atan2 , || , != , g , lam , h , lp , }
		- SUCC   = { }

165 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { atan2 , || , != , g , lam , h , lp , }
		- SUCC   = { }

169 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"destructor"
		- NEIGH  = { destructor , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"errlev"
		- NEIGH  = { errlev , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"if"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

170 :	"=="
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

170 :	"P"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

171 :	"return"
		- NEIGH  = { return , }
		- PARENT = { P , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

173 :	"if"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

173 :	"=="
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

173 :	"P"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

173 :	"opaque"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

174 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"pj_dealloc"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

176 :	"static_cast"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

176 :	"<"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

176 :	"pj_opaque"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

176 :	"*"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

176 :	">"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

176 :	"P"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

176 :	"opaque"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

176 :	"en"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

177 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

177 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

177 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

177 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

181 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

181 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

181 :	"setup"
		- NEIGH  = { setup , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

181 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

181 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

181 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

182 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

182 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

182 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

182 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

182 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

182 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

182 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

182 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

182 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

182 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

183 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_inverse , e_forward , s_forward , inv , fwd , - , cos , if , sin , pj_mlfn , e_inverse , phi0 , ml0 , * , es , ! , P , k0 , esp , pj_enfn , / , en , Q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { P , return , }

183 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_inverse , e_forward , s_forward , inv , fwd , - , cos , if , sin , pj_mlfn , e_inverse , phi0 , ml0 , * , es , ! , P , k0 , esp , pj_enfn , / , en , Q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { P , return , }

183 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_inverse , e_forward , s_forward , inv , fwd , - , cos , if , sin , pj_mlfn , e_inverse , phi0 , ml0 , * , es , ! , P , k0 , esp , pj_enfn , / , en , Q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { P , return , }

183 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_inverse , e_forward , s_forward , inv , fwd , - , cos , if , sin , pj_mlfn , e_inverse , phi0 , ml0 , * , es , ! , P , k0 , esp , pj_enfn , / , en , Q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { P , return , }

184 :	"if"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }

184 :	"!"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }

184 :	"Q"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }

184 :	"en"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }

184 :	"pj_enfn"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }

184 :	"P"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }

184 :	"es"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }

185 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { es , P , pj_enfn , en , Q , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

185 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { es , P , pj_enfn , en , Q , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

185 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { es , P , pj_enfn , en , Q , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

185 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { es , P , pj_enfn , en , Q , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"Q"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"ml0"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"pj_mlfn"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"P"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"phi0"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"sin"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"P"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"phi0"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"cos"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"P"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"phi0"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"Q"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

187 :	"en"
		- NEIGH  = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { - , es , esp , / , P , Q , }

188 :	"Q"
		- NEIGH  = { - , es , esp , / , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- SUCC   = { e_inverse , inv , P , }

188 :	"esp"
		- NEIGH  = { - , es , esp , / , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- SUCC   = { e_inverse , inv , P , }

188 :	"P"
		- NEIGH  = { - , es , esp , / , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- SUCC   = { e_inverse , inv , P , }

188 :	"es"
		- NEIGH  = { - , es , esp , / , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- SUCC   = { e_inverse , inv , P , }

188 :	"/"
		- NEIGH  = { - , es , esp , / , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- SUCC   = { e_inverse , inv , P , }

188 :	"-"
		- NEIGH  = { - , es , esp , / , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- SUCC   = { e_inverse , inv , P , }

188 :	"P"
		- NEIGH  = { - , es , esp , / , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- SUCC   = { e_inverse , inv , P , }

188 :	"es"
		- NEIGH  = { - , es , esp , / , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { en , sin , pj_mlfn , phi0 , cos , ml0 , P , Q , }
		- SUCC   = { e_inverse , inv , P , }

189 :	"P"
		- NEIGH  = { e_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , es , esp , / , P , Q , }
		- SUCC   = { e_forward , fwd , P , }

189 :	"inv"
		- NEIGH  = { e_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , es , esp , / , P , Q , }
		- SUCC   = { e_forward , fwd , P , }

189 :	"e_inverse"
		- NEIGH  = { e_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , es , esp , / , P , Q , }
		- SUCC   = { e_forward , fwd , P , }

190 :	"P"
		- NEIGH  = { e_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_inverse , inv , P , }
		- SUCC   = { }

190 :	"fwd"
		- NEIGH  = { e_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_inverse , inv , P , }
		- SUCC   = { }

190 :	"e_forward"
		- NEIGH  = { e_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_inverse , inv , P , }
		- SUCC   = { }

192 :	"Q"
		- NEIGH  = { k0 , esp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { esp , * , ml0 , Q , }

192 :	"esp"
		- NEIGH  = { k0 , esp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { esp , * , ml0 , Q , }

192 :	"P"
		- NEIGH  = { k0 , esp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { esp , * , ml0 , Q , }

192 :	"k0"
		- NEIGH  = { k0 , esp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { esp , * , ml0 , Q , }

193 :	"Q"
		- NEIGH  = { esp , * , ml0 , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { k0 , esp , P , Q , }
		- SUCC   = { s_inverse , inv , P , }

193 :	"ml0"
		- NEIGH  = { esp , * , ml0 , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { k0 , esp , P , Q , }
		- SUCC   = { s_inverse , inv , P , }

193 :	"*"
		- NEIGH  = { esp , * , ml0 , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { k0 , esp , P , Q , }
		- SUCC   = { s_inverse , inv , P , }

193 :	"Q"
		- NEIGH  = { esp , * , ml0 , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { k0 , esp , P , Q , }
		- SUCC   = { s_inverse , inv , P , }

193 :	"esp"
		- NEIGH  = { esp , * , ml0 , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { k0 , esp , P , Q , }
		- SUCC   = { s_inverse , inv , P , }

194 :	"P"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { esp , * , ml0 , Q , }
		- SUCC   = { s_forward , fwd , P , }

194 :	"inv"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { esp , * , ml0 , Q , }
		- SUCC   = { s_forward , fwd , P , }

194 :	"s_inverse"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { esp , * , ml0 , Q , }
		- SUCC   = { s_forward , fwd , P , }

195 :	"P"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { }

195 :	"fwd"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { }

195 :	"s_forward"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { }

197 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

197 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

201 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

201 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

201 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

201 :	"tmerc"
		- NEIGH  = { tmerc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

202 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

202 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

202 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

202 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

202 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

202 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

202 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

202 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

202 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

203 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

203 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

203 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

204 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

206 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

206 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

206 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

207 :	"P"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { setup , P , return , }

207 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { setup , P , return , }

207 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { setup , P , return , }

209 :	"return"
		- NEIGH  = { setup , P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { }

209 :	"setup"
		- NEIGH  = { setup , P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { }

209 :	"P"
		- NEIGH  = { setup , P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { }

