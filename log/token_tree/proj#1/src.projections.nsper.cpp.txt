8 :	"Mode"
		- NEIGH  = { Mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

9 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

10 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

17 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

18 :	"height"
		- NEIGH  = { height , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"sinph0"
		- NEIGH  = { sinph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"cosph0"
		- NEIGH  = { cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"rp"
		- NEIGH  = { rp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"pn1"
		- NEIGH  = { pn1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"pfact"
		- NEIGH  = { pfact , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

25 :	"h"
		- NEIGH  = { h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

26 :	"cg"
		- NEIGH  = { cg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

27 :	"sg"
		- NEIGH  = { sg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"sw"
		- NEIGH  = { sw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

29 :	"cw"
		- NEIGH  = { cw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

30 :	"Mode"
		- NEIGH  = { Mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

30 :	"mode"
		- NEIGH  = { mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"tilt"
		- NEIGH  = { tilt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"nsper"
		- NEIGH  = { nsper , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"tpers"
		- NEIGH  = { tpers , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"s_forward"
		- NEIGH  = { s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

42 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

43 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

43 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

43 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

43 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

43 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

43 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

43 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

43 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

43 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

43 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

44 :	"coslam"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

44 :	"cosphi"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

44 :	"sinphi"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

46 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

46 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

46 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

46 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

47 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

47 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

47 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

47 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

48 :	"coslam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

48 :	"cos"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

48 :	"lp"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

48 :	"lam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

49 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { N_POLE , S_POLE , EQUIT , break , xy , cosphi , + , OBLIQ , sinphi , sinph0 , * , - , y , coslam , Q , cosph0 , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { rp , Q , < , y , xy , if , }

49 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { N_POLE , S_POLE , EQUIT , break , xy , cosphi , + , OBLIQ , sinphi , sinph0 , * , - , y , coslam , Q , cosph0 , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { rp , Q , < , y , xy , if , }

49 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { N_POLE , S_POLE , EQUIT , break , xy , cosphi , + , OBLIQ , sinphi , sinph0 , * , - , y , coslam , Q , cosph0 , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { rp , Q , < , y , xy , if , }

50 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }

51 :	"xy"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"y"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"Q"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"sinph0"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"*"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"sinphi"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"+"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"Q"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"cosph0"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"*"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"cosphi"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"*"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

51 :	"coslam"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

52 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { EQUIT , }

53 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

54 :	"xy"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

54 :	"y"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

54 :	"cosphi"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

54 :	"*"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

54 :	"coslam"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

55 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { coslam , cosphi , * , y , xy , }
		- SUCC   = { S_POLE , }

56 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { sinphi , - , y , xy , }

57 :	"xy"
		- NEIGH  = { sinphi , - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

57 :	"y"
		- NEIGH  = { sinphi , - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

57 :	"-"
		- NEIGH  = { sinphi , - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

57 :	"sinphi"
		- NEIGH  = { sinphi , - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

58 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinphi , - , y , xy , }
		- SUCC   = { N_POLE , }

59 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { sinphi , y , xy , }

60 :	"xy"
		- NEIGH  = { sinphi , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

60 :	"y"
		- NEIGH  = { sinphi , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

60 :	"sinphi"
		- NEIGH  = { sinphi , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

61 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinphi , y , xy , }
		- SUCC   = { }

63 :	"if"
		- NEIGH  = { rp , Q , < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { - , / , p , pn1 , Q , y , xy , }

63 :	"xy"
		- NEIGH  = { rp , Q , < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { - , / , p , pn1 , Q , y , xy , }

63 :	"y"
		- NEIGH  = { rp , Q , < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { - , / , p , pn1 , Q , y , xy , }

63 :	"<"
		- NEIGH  = { rp , Q , < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { - , / , p , pn1 , Q , y , xy , }

63 :	"Q"
		- NEIGH  = { rp , Q , < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { - , / , p , pn1 , Q , y , xy , }

63 :	"rp"
		- NEIGH  = { rp , Q , < , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { - , / , p , pn1 , Q , y , xy , }

64 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { rp , Q , < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

64 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { rp , Q , < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

64 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { rp , Q , < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

65 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { rp , Q , < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

65 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { rp , Q , < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

67 :	"xy"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

67 :	"y"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

67 :	"Q"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

67 :	"pn1"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

67 :	"/"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

67 :	"Q"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

67 :	"p"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

67 :	"-"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

67 :	"xy"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

67 :	"y"
		- NEIGH  = { - , / , p , pn1 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rp , Q , < , y , xy , if , }
		- SUCC   = { lam , lp , sin , cosphi , * , y , x , xy , }

68 :	"xy"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

68 :	"x"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

68 :	"xy"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

68 :	"y"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

68 :	"*"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

68 :	"cosphi"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

68 :	"*"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

68 :	"sin"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

68 :	"lp"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

68 :	"lam"
		- NEIGH  = { lam , lp , sin , cosphi , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , / , p , pn1 , Q , y , xy , }
		- SUCC   = { mode , Q , switch , }

69 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { S_POLE , N_POLE , EQUIT , break , xy , cosphi , sinph0 , y , - , OBLIQ , sinphi , * , *= , coslam , Q , cosph0 , }
		- PRED   = { lam , lp , sin , cosphi , * , y , x , xy , }
		- SUCC   = { Q , tilt , if , }

69 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { S_POLE , N_POLE , EQUIT , break , xy , cosphi , sinph0 , y , - , OBLIQ , sinphi , * , *= , coslam , Q , cosph0 , }
		- PRED   = { lam , lp , sin , cosphi , * , y , x , xy , }
		- SUCC   = { Q , tilt , if , }

69 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { S_POLE , N_POLE , EQUIT , break , xy , cosphi , sinph0 , y , - , OBLIQ , sinphi , * , *= , coslam , Q , cosph0 , }
		- PRED   = { lam , lp , sin , cosphi , * , y , x , xy , }
		- SUCC   = { Q , tilt , if , }

70 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }

71 :	"xy"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

71 :	"y"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

71 :	"*="
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

71 :	"Q"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

71 :	"cosph0"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

71 :	"*"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

71 :	"sinphi"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

71 :	"-"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

72 :	"Q"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

72 :	"sinph0"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

72 :	"*"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

72 :	"cosphi"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

72 :	"*"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

72 :	"coslam"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

73 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- SUCC   = { EQUIT , }

74 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { sinphi , *= , y , xy , }

75 :	"xy"
		- NEIGH  = { sinphi , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

75 :	"y"
		- NEIGH  = { sinphi , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

75 :	"*="
		- NEIGH  = { sinphi , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

75 :	"sinphi"
		- NEIGH  = { sinphi , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

76 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinphi , *= , y , xy , }
		- SUCC   = { N_POLE , }

77 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { - , coslam , }

78 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

78 :	"-"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

78 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

80 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , }
		- SUCC   = { cosphi , * , *= , y , coslam , xy , }

81 :	"xy"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

81 :	"y"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

81 :	"*="
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

81 :	"cosphi"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

81 :	"*"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

81 :	"coslam"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

82 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosphi , * , *= , y , coslam , xy , }
		- SUCC   = { }

84 :	"if"
		- NEIGH  = { Q , tilt , if , }
		- PARENT = { }
		- CHILD  = { h , / , x , sw , Q , cg , sg , * , - , ba , y , xy , cw , + , yt , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

84 :	"Q"
		- NEIGH  = { Q , tilt , if , }
		- PARENT = { }
		- CHILD  = { h , / , x , sw , Q , cg , sg , * , - , ba , y , xy , cw , + , yt , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

84 :	"tilt"
		- NEIGH  = { Q , tilt , if , }
		- PARENT = { }
		- CHILD  = { h , / , x , sw , Q , cg , sg , * , - , ba , y , xy , cw , + , yt , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

85 :	"yt"
		- NEIGH  = { ba , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sg , x , Q , cg , * , y , xy , + , yt , }

85 :	"ba"
		- NEIGH  = { ba , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sg , x , Q , cg , * , y , xy , + , yt , }

87 :	"yt"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"xy"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"y"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"*"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"Q"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"cg"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"+"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"xy"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"x"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"*"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"Q"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

87 :	"sg"
		- NEIGH  = { sg , x , Q , cg , * , y , xy , + , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , yt , }
		- SUCC   = { cw , h , sw , * , + , yt , Q , / , ba , }

88 :	"ba"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"/"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"yt"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"*"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"Q"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"sw"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"*"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"Q"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"h"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"+"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"Q"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

88 :	"cw"
		- NEIGH  = { cw , h , sw , * , + , yt , Q , / , ba , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , x , Q , cg , * , y , xy , + , yt , }
		- SUCC   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }

89 :	"xy"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"x"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"xy"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"x"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"*"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"Q"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"cg"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"-"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"xy"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"y"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"*"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"Q"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"sg"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"*"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"Q"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"cw"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"*"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

89 :	"ba"
		- NEIGH  = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { cw , h , sw , * , + , yt , Q , / , ba , }
		- SUCC   = { ba , yt , * , y , xy , }

90 :	"xy"
		- NEIGH  = { ba , yt , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- SUCC   = { }

90 :	"y"
		- NEIGH  = { ba , yt , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- SUCC   = { }

90 :	"yt"
		- NEIGH  = { ba , yt , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- SUCC   = { }

90 :	"*"
		- NEIGH  = { ba , yt , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- SUCC   = { }

90 :	"ba"
		- NEIGH  = { ba , yt , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { ba , sg , - , y , * , cg , Q , cw , x , xy , }
		- SUCC   = { }

92 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , tilt , if , }
		- SUCC   = { }

92 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , tilt , if , }
		- SUCC   = { }

96 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"s_inverse"
		- NEIGH  = { s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

97 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

98 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

98 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

98 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

98 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

98 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

98 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

98 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

98 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

98 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

98 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

99 :	"rh"
		- NEIGH  = { sinz , cosz , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { Q , tilt , if , }

99 :	"cosz"
		- NEIGH  = { sinz , cosz , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { Q , tilt , if , }

99 :	"sinz"
		- NEIGH  = { sinz , cosz , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { Q , tilt , if , }

101 :	"if"
		- NEIGH  = { Q , tilt , if , }
		- PARENT = { }
		- CHILD  = { cg , + , cw , x , sg , * , - , y , bq , xy , Q , sw , pn1 , / , yt , bm , }
		- PRED   = { sinz , cosz , rh , }
		- SUCC   = { y , x , xy , hypot , rh , }

101 :	"Q"
		- NEIGH  = { Q , tilt , if , }
		- PARENT = { }
		- CHILD  = { cg , + , cw , x , sg , * , - , y , bq , xy , Q , sw , pn1 , / , yt , bm , }
		- PRED   = { sinz , cosz , rh , }
		- SUCC   = { y , x , xy , hypot , rh , }

101 :	"tilt"
		- NEIGH  = { Q , tilt , if , }
		- PARENT = { }
		- CHILD  = { cg , + , cw , x , sg , * , - , y , bq , xy , Q , sw , pn1 , / , yt , bm , }
		- PRED   = { sinz , cosz , rh , }
		- SUCC   = { y , x , xy , hypot , rh , }

102 :	"bm"
		- NEIGH  = { bq , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { * , y , xy , pn1 , Q , / , sw , - , yt , }

102 :	"bq"
		- NEIGH  = { bq , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { * , y , xy , pn1 , Q , / , sw , - , yt , }

102 :	"yt"
		- NEIGH  = { bq , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { * , y , xy , pn1 , Q , / , sw , - , yt , }

104 :	"yt"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

104 :	"/"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

104 :	"Q"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

104 :	"pn1"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

104 :	"-"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

104 :	"xy"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

104 :	"y"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

104 :	"*"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

104 :	"Q"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

104 :	"sw"
		- NEIGH  = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { bq , yt , bm , }
		- SUCC   = { x , xy , * , pn1 , Q , yt , bm , }

105 :	"bm"
		- NEIGH  = { x , xy , * , pn1 , Q , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- SUCC   = { yt , cw , xy , y , * , pn1 , Q , bq , }

105 :	"Q"
		- NEIGH  = { x , xy , * , pn1 , Q , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- SUCC   = { yt , cw , xy , y , * , pn1 , Q , bq , }

105 :	"pn1"
		- NEIGH  = { x , xy , * , pn1 , Q , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- SUCC   = { yt , cw , xy , y , * , pn1 , Q , bq , }

105 :	"*"
		- NEIGH  = { x , xy , * , pn1 , Q , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- SUCC   = { yt , cw , xy , y , * , pn1 , Q , bq , }

105 :	"xy"
		- NEIGH  = { x , xy , * , pn1 , Q , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- SUCC   = { yt , cw , xy , y , * , pn1 , Q , bq , }

105 :	"x"
		- NEIGH  = { x , xy , * , pn1 , Q , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- SUCC   = { yt , cw , xy , y , * , pn1 , Q , bq , }

105 :	"*"
		- NEIGH  = { x , xy , * , pn1 , Q , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- SUCC   = { yt , cw , xy , y , * , pn1 , Q , bq , }

105 :	"yt"
		- NEIGH  = { x , xy , * , pn1 , Q , yt , bm , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { * , y , xy , pn1 , Q , / , sw , - , yt , }
		- SUCC   = { yt , cw , xy , y , * , pn1 , Q , bq , }

106 :	"bq"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"Q"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"pn1"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"*"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"xy"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"y"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"*"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"Q"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"cw"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"*"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

106 :	"yt"
		- NEIGH  = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { x , xy , * , pn1 , Q , yt , bm , }
		- SUCC   = { sg , bq , Q , + , bm , cg , * , x , xy , }

107 :	"xy"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"x"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"bm"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"*"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"Q"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"cg"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"+"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"bq"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"*"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"Q"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

107 :	"sg"
		- NEIGH  = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { yt , cw , xy , y , * , pn1 , Q , bq , }
		- SUCC   = { sg , bm , - , Q , bq , cg , * , y , xy , }

108 :	"xy"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"y"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"bq"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"*"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"Q"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"cg"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"-"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"bm"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"*"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"Q"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

108 :	"sg"
		- NEIGH  = { sg , bm , - , Q , bq , cg , * , y , xy , }
		- PARENT = { Q , tilt , if , }
		- CHILD  = { }
		- PRED   = { sg , bq , Q , + , bm , cg , * , x , xy , }
		- SUCC   = { }

110 :	"rh"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , tilt , if , }
		- SUCC   = { < , Q , * , rh , - , sinz , pfact , if , }

110 :	"hypot"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , tilt , if , }
		- SUCC   = { < , Q , * , rh , - , sinz , pfact , if , }

110 :	"xy"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , tilt , if , }
		- SUCC   = { < , Q , * , rh , - , sinz , pfact , if , }

110 :	"x"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , tilt , if , }
		- SUCC   = { < , Q , * , rh , - , sinz , pfact , if , }

110 :	"xy"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , tilt , if , }
		- SUCC   = { < , Q , * , rh , - , sinz , pfact , if , }

110 :	"y"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , tilt , if , }
		- SUCC   = { < , Q , * , rh , - , sinz , pfact , if , }

111 :	"if"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

111 :	"sinz"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

111 :	"-"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

111 :	"rh"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

111 :	"*"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

111 :	"rh"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

111 :	"*"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

111 :	"Q"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

111 :	"pfact"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

111 :	"<"
		- NEIGH  = { < , Q , * , rh , - , sinz , pfact , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }

112 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , Q , * , rh , - , sinz , pfact , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

112 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , Q , * , rh , - , sinz , pfact , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

112 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , Q , * , rh , - , sinz , pfact , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

113 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { < , Q , * , rh , - , sinz , pfact , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

113 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { < , Q , * , rh , - , sinz , pfact , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

115 :	"sinz"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"Q"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"p"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"-"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"sqrt"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"sinz"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"/"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"Q"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"pn1"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"/"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"rh"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"+"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"rh"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"/"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"Q"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

115 :	"pn1"
		- NEIGH  = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , Q , * , rh , - , sinz , pfact , if , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

116 :	"cosz"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

116 :	"sqrt"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

116 :	"-"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

116 :	"sinz"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

116 :	"*"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

116 :	"sinz"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , rh , / , - , pn1 , sqrt , p , Q , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

117 :	"if"
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { y , x , xy , atan2 , mode , Q , switch , lp , lam , P , phi0 , phi , }
		- PRED   = { sinz , - , * , sqrt , cosz , }
		- SUCC   = { lp , return , }

117 :	"fabs"
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { y , x , xy , atan2 , mode , Q , switch , lp , lam , P , phi0 , phi , }
		- PRED   = { sinz , - , * , sqrt , cosz , }
		- SUCC   = { lp , return , }

117 :	"rh"
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { y , x , xy , atan2 , mode , Q , switch , lp , lam , P , phi0 , phi , }
		- PRED   = { sinz , - , * , sqrt , cosz , }
		- SUCC   = { lp , return , }

117 :	"<="
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { y , x , xy , atan2 , mode , Q , switch , lp , lam , P , phi0 , phi , }
		- PRED   = { sinz , - , * , sqrt , cosz , }
		- SUCC   = { lp , return , }

118 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi0 , P , phi , lp , }

118 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi0 , P , phi , lp , }

119 :	"lp"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

119 :	"phi"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

119 :	"P"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

119 :	"phi0"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

121 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { S_POLE , N_POLE , EQUIT , break , x , sin , *= , / , cosph0 , xy , + , sinph0 , Q , - , rh , sinz , y , * , cosz , asin , phi , lp , OBLIQ , }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

121 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { S_POLE , N_POLE , EQUIT , break , x , sin , *= , / , cosph0 , xy , + , sinph0 , Q , - , rh , sinz , y , * , cosz , asin , phi , lp , OBLIQ , }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

121 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { S_POLE , N_POLE , EQUIT , break , x , sin , *= , / , cosph0 , xy , + , sinph0 , Q , - , rh , sinz , y , * , cosz , asin , phi , lp , OBLIQ , }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

122 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }

123 :	"lp"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"phi"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"asin"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"cosz"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"*"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"Q"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"sinph0"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"+"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"xy"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"y"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"*"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"sinz"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"*"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"Q"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"cosph0"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"/"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

123 :	"rh"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

124 :	"xy"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"y"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"cosz"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"-"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"Q"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"sinph0"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"*"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"sin"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"lp"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"phi"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"*"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

124 :	"rh"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , asin , phi , lp , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

125 :	"xy"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

125 :	"x"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

125 :	"*="
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

125 :	"sinz"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

125 :	"*"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

125 :	"Q"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

125 :	"cosph0"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

126 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosph0 , Q , xy , sinz , * , *= , x , }
		- SUCC   = { EQUIT , }

127 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { rh , * , y , sinz , xy , asin , / , phi , lp , }

128 :	"lp"
		- NEIGH  = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { rh , cosz , * , y , xy , }

128 :	"phi"
		- NEIGH  = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { rh , cosz , * , y , xy , }

128 :	"asin"
		- NEIGH  = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { rh , cosz , * , y , xy , }

128 :	"xy"
		- NEIGH  = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { rh , cosz , * , y , xy , }

128 :	"y"
		- NEIGH  = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { rh , cosz , * , y , xy , }

128 :	"*"
		- NEIGH  = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { rh , cosz , * , y , xy , }

128 :	"sinz"
		- NEIGH  = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { rh , cosz , * , y , xy , }

128 :	"/"
		- NEIGH  = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { rh , cosz , * , y , xy , }

128 :	"rh"
		- NEIGH  = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { rh , cosz , * , y , xy , }

129 :	"xy"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- SUCC   = { sinz , *= , x , xy , }

129 :	"y"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- SUCC   = { sinz , *= , x , xy , }

129 :	"cosz"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- SUCC   = { sinz , *= , x , xy , }

129 :	"*"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- SUCC   = { sinz , *= , x , xy , }

129 :	"rh"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , * , y , sinz , xy , asin , / , phi , lp , }
		- SUCC   = { sinz , *= , x , xy , }

130 :	"xy"
		- NEIGH  = { sinz , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , cosz , * , y , xy , }
		- SUCC   = { break , }

130 :	"x"
		- NEIGH  = { sinz , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , cosz , * , y , xy , }
		- SUCC   = { break , }

130 :	"*="
		- NEIGH  = { sinz , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , cosz , * , y , xy , }
		- SUCC   = { break , }

130 :	"sinz"
		- NEIGH  = { sinz , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , cosz , * , y , xy , }
		- SUCC   = { break , }

131 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinz , *= , x , xy , }
		- SUCC   = { N_POLE , }

132 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { cosz , asin , phi , lp , }

133 :	"lp"
		- NEIGH  = { cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

133 :	"phi"
		- NEIGH  = { cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

133 :	"asin"
		- NEIGH  = { cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

133 :	"cosz"
		- NEIGH  = { cosz , asin , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

134 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosz , asin , phi , lp , }
		- SUCC   = { break , }

134 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosz , asin , phi , lp , }
		- SUCC   = { break , }

134 :	"-"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosz , asin , phi , lp , }
		- SUCC   = { break , }

134 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosz , asin , phi , lp , }
		- SUCC   = { break , }

134 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosz , asin , phi , lp , }
		- SUCC   = { break , }

135 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , y , xy , }
		- SUCC   = { S_POLE , }

136 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { cosz , asin , - , phi , lp , }

137 :	"lp"
		- NEIGH  = { cosz , asin , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

137 :	"phi"
		- NEIGH  = { cosz , asin , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

137 :	"-"
		- NEIGH  = { cosz , asin , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

137 :	"asin"
		- NEIGH  = { cosz , asin , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

137 :	"cosz"
		- NEIGH  = { cosz , asin , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

138 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosz , asin , - , phi , lp , }
		- SUCC   = { }

140 :	"lp"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

140 :	"lam"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

140 :	"atan2"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

140 :	"xy"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

140 :	"x"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

140 :	"xy"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

140 :	"y"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

142 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , rh , fabs , if , }
		- SUCC   = { }

142 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , rh , fabs , if , }
		- SUCC   = { }

146 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

146 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

146 :	"setup"
		- NEIGH  = { setup , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

146 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

146 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

146 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

147 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

147 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

147 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

147 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

147 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

147 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

147 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

147 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

147 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

147 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { <= , f , params , pj_param , height , P , ctx , Q , if , }

149 :	"if"
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

149 :	"Q"
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

149 :	"height"
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

149 :	"pj_param"
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

149 :	"P"
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

149 :	"ctx"
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

149 :	"P"
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

149 :	"params"
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

149 :	"f"
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

149 :	"<="
		- NEIGH  = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

150 :	"return"
		- NEIGH  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PARENT = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PARENT = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"P"
		- NEIGH  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PARENT = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"PJD_ERR_H_LESS_THAN_ZERO"
		- NEIGH  = { PJD_ERR_H_LESS_THAN_ZERO , P , pj_default_destructor , return , }
		- PARENT = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"if"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- SUCC   = { a , height , P , / , pn1 , Q , }

152 :	"fabs"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- SUCC   = { a , height , P , / , pn1 , Q , }

152 :	"fabs"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- SUCC   = { a , height , P , / , pn1 , Q , }

152 :	"P"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- SUCC   = { a , height , P , / , pn1 , Q , }

152 :	"phi0"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- SUCC   = { a , height , P , / , pn1 , Q , }

152 :	"-"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- SUCC   = { a , height , P , / , pn1 , Q , }

152 :	"M_HALFPI"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- SUCC   = { a , height , P , / , pn1 , Q , }

152 :	"<"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { <= , f , params , pj_param , height , P , ctx , Q , if , }
		- SUCC   = { a , height , P , / , pn1 , Q , }

153 :	"Q"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

153 :	"mode"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

153 :	"P"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

153 :	"phi0"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

153 :	"<"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

153 :	"S_POLE"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

153 :	"N_POLE"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

154 :	"if"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

154 :	"fabs"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

154 :	"P"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

154 :	"phi0"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

154 :	"<"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

155 :	"Q"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

155 :	"mode"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

155 :	"EQUIT"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

157 :	"Q"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

157 :	"mode"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

157 :	"OBLIQ"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

158 :	"Q"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

158 :	"sinph0"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

158 :	"sin"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

158 :	"P"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

158 :	"phi0"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

159 :	"Q"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

159 :	"cosph0"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

159 :	"cos"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

159 :	"P"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

159 :	"phi0"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

161 :	"Q"
		- NEIGH  = { a , height , P , / , pn1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { p , pn1 , + , Q , }

161 :	"pn1"
		- NEIGH  = { a , height , P , / , pn1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { p , pn1 , + , Q , }

161 :	"Q"
		- NEIGH  = { a , height , P , / , pn1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { p , pn1 , + , Q , }

161 :	"height"
		- NEIGH  = { a , height , P , / , pn1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { p , pn1 , + , Q , }

161 :	"/"
		- NEIGH  = { a , height , P , / , pn1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { p , pn1 , + , Q , }

161 :	"P"
		- NEIGH  = { a , height , P , / , pn1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { p , pn1 , + , Q , }

161 :	"a"
		- NEIGH  = { a , height , P , / , pn1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { p , pn1 , + , Q , }

162 :	"Q"
		- NEIGH  = { p , pn1 , + , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , height , P , / , pn1 , Q , }
		- SUCC   = { p , rp , / , Q , }

162 :	"p"
		- NEIGH  = { p , pn1 , + , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , height , P , / , pn1 , Q , }
		- SUCC   = { p , rp , / , Q , }

162 :	"+"
		- NEIGH  = { p , pn1 , + , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , height , P , / , pn1 , Q , }
		- SUCC   = { p , rp , / , Q , }

162 :	"Q"
		- NEIGH  = { p , pn1 , + , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , height , P , / , pn1 , Q , }
		- SUCC   = { p , rp , / , Q , }

162 :	"pn1"
		- NEIGH  = { p , pn1 , + , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , height , P , / , pn1 , Q , }
		- SUCC   = { p , rp , / , Q , }

163 :	"Q"
		- NEIGH  = { p , rp , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , pn1 , + , Q , }
		- SUCC   = { h , pn1 , / , Q , }

163 :	"rp"
		- NEIGH  = { p , rp , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , pn1 , + , Q , }
		- SUCC   = { h , pn1 , / , Q , }

163 :	"/"
		- NEIGH  = { p , rp , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , pn1 , + , Q , }
		- SUCC   = { h , pn1 , / , Q , }

163 :	"Q"
		- NEIGH  = { p , rp , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , pn1 , + , Q , }
		- SUCC   = { h , pn1 , / , Q , }

163 :	"p"
		- NEIGH  = { p , rp , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , pn1 , + , Q , }
		- SUCC   = { h , pn1 , / , Q , }

164 :	"Q"
		- NEIGH  = { h , pn1 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , rp , / , Q , }
		- SUCC   = { h , * , Q , p , pfact , + , }

164 :	"h"
		- NEIGH  = { h , pn1 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , rp , / , Q , }
		- SUCC   = { h , * , Q , p , pfact , + , }

164 :	"/"
		- NEIGH  = { h , pn1 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , rp , / , Q , }
		- SUCC   = { h , * , Q , p , pfact , + , }

164 :	"Q"
		- NEIGH  = { h , pn1 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , rp , / , Q , }
		- SUCC   = { h , * , Q , p , pfact , + , }

164 :	"pn1"
		- NEIGH  = { h , pn1 , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , rp , / , Q , }
		- SUCC   = { h , * , Q , p , pfact , + , }

165 :	"Q"
		- NEIGH  = { h , * , Q , p , pfact , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , pn1 , / , Q , }
		- SUCC   = { s_inverse , inv , P , }

165 :	"pfact"
		- NEIGH  = { h , * , Q , p , pfact , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , pn1 , / , Q , }
		- SUCC   = { s_inverse , inv , P , }

165 :	"Q"
		- NEIGH  = { h , * , Q , p , pfact , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , pn1 , / , Q , }
		- SUCC   = { s_inverse , inv , P , }

165 :	"p"
		- NEIGH  = { h , * , Q , p , pfact , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , pn1 , / , Q , }
		- SUCC   = { s_inverse , inv , P , }

165 :	"+"
		- NEIGH  = { h , * , Q , p , pfact , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , pn1 , / , Q , }
		- SUCC   = { s_inverse , inv , P , }

165 :	"*"
		- NEIGH  = { h , * , Q , p , pfact , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , pn1 , / , Q , }
		- SUCC   = { s_inverse , inv , P , }

165 :	"Q"
		- NEIGH  = { h , * , Q , p , pfact , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , pn1 , / , Q , }
		- SUCC   = { s_inverse , inv , P , }

165 :	"h"
		- NEIGH  = { h , * , Q , p , pfact , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , pn1 , / , Q , }
		- SUCC   = { s_inverse , inv , P , }

166 :	"P"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , * , Q , p , pfact , + , }
		- SUCC   = { s_forward , fwd , P , }

166 :	"inv"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , * , Q , p , pfact , + , }
		- SUCC   = { s_forward , fwd , P , }

166 :	"s_inverse"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , * , Q , p , pfact , + , }
		- SUCC   = { s_forward , fwd , P , }

167 :	"P"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { es , P , }

167 :	"fwd"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { es , P , }

167 :	"s_forward"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { es , P , }

168 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { P , return , }

168 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { P , return , }

170 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { }

170 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { }

174 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"nsper"
		- NEIGH  = { nsper , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

175 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

175 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

175 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

175 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

175 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

175 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

175 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

175 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

175 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

175 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

176 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

176 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

176 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

177 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

177 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

177 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

177 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

178 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { tilt , Q , }

178 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { tilt , Q , }

178 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { tilt , Q , }

180 :	"Q"
		- NEIGH  = { tilt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { setup , P , return , }

180 :	"tilt"
		- NEIGH  = { tilt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { setup , P , return , }

182 :	"return"
		- NEIGH  = { setup , P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tilt , Q , }
		- SUCC   = { }

182 :	"setup"
		- NEIGH  = { setup , P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tilt , Q , }
		- SUCC   = { }

182 :	"P"
		- NEIGH  = { setup , P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tilt , Q , }
		- SUCC   = { }

186 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

186 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

186 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

186 :	"tpers"
		- NEIGH  = { tpers , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"omega"
		- NEIGH  = { gamma , omega , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }

187 :	"gamma"
		- NEIGH  = { gamma , omega , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }

189 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

189 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

189 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

189 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

189 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

189 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

189 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

189 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

189 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

189 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , omega , }
		- SUCC   = { Q , == , if , }

190 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

190 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

190 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

191 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { f , params , ctx , pj_param , P , omega , }

192 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { f , params , ctx , pj_param , P , omega , }

192 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { f , params , ctx , pj_param , P , omega , }

194 :	"omega"
		- NEIGH  = { f , params , ctx , pj_param , P , omega , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , ctx , gamma , P , pj_param , }

194 :	"pj_param"
		- NEIGH  = { f , params , ctx , pj_param , P , omega , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , ctx , gamma , P , pj_param , }

194 :	"P"
		- NEIGH  = { f , params , ctx , pj_param , P , omega , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , ctx , gamma , P , pj_param , }

194 :	"ctx"
		- NEIGH  = { f , params , ctx , pj_param , P , omega , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , ctx , gamma , P , pj_param , }

194 :	"P"
		- NEIGH  = { f , params , ctx , pj_param , P , omega , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , ctx , gamma , P , pj_param , }

194 :	"params"
		- NEIGH  = { f , params , ctx , pj_param , P , omega , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , ctx , gamma , P , pj_param , }

194 :	"f"
		- NEIGH  = { f , params , ctx , pj_param , P , omega , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , ctx , gamma , P , pj_param , }

195 :	"gamma"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , ctx , pj_param , P , omega , }
		- SUCC   = { tilt , Q , }

195 :	"pj_param"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , ctx , pj_param , P , omega , }
		- SUCC   = { tilt , Q , }

195 :	"P"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , ctx , pj_param , P , omega , }
		- SUCC   = { tilt , Q , }

195 :	"ctx"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , ctx , pj_param , P , omega , }
		- SUCC   = { tilt , Q , }

195 :	"P"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , ctx , pj_param , P , omega , }
		- SUCC   = { tilt , Q , }

195 :	"params"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , ctx , pj_param , P , omega , }
		- SUCC   = { tilt , Q , }

195 :	"f"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , ctx , pj_param , P , omega , }
		- SUCC   = { tilt , Q , }

196 :	"Q"
		- NEIGH  = { tilt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , ctx , gamma , P , pj_param , }
		- SUCC   = { gamma , cos , cg , Q , }

196 :	"tilt"
		- NEIGH  = { tilt , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , ctx , gamma , P , pj_param , }
		- SUCC   = { gamma , cos , cg , Q , }

197 :	"Q"
		- NEIGH  = { gamma , cos , cg , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tilt , Q , }
		- SUCC   = { sin , gamma , sg , Q , }

197 :	"cg"
		- NEIGH  = { gamma , cos , cg , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tilt , Q , }
		- SUCC   = { sin , gamma , sg , Q , }

197 :	"cos"
		- NEIGH  = { gamma , cos , cg , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tilt , Q , }
		- SUCC   = { sin , gamma , sg , Q , }

197 :	"gamma"
		- NEIGH  = { gamma , cos , cg , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tilt , Q , }
		- SUCC   = { sin , gamma , sg , Q , }

197 :	"Q"
		- NEIGH  = { sin , gamma , sg , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , cos , cg , Q , }
		- SUCC   = { cos , cw , omega , Q , }

197 :	"sg"
		- NEIGH  = { sin , gamma , sg , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , cos , cg , Q , }
		- SUCC   = { cos , cw , omega , Q , }

197 :	"sin"
		- NEIGH  = { sin , gamma , sg , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , cos , cg , Q , }
		- SUCC   = { cos , cw , omega , Q , }

197 :	"gamma"
		- NEIGH  = { sin , gamma , sg , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , cos , cg , Q , }
		- SUCC   = { cos , cw , omega , Q , }

198 :	"Q"
		- NEIGH  = { cos , cw , omega , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , gamma , sg , Q , }
		- SUCC   = { sin , omega , sw , Q , }

198 :	"cw"
		- NEIGH  = { cos , cw , omega , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , gamma , sg , Q , }
		- SUCC   = { sin , omega , sw , Q , }

198 :	"cos"
		- NEIGH  = { cos , cw , omega , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , gamma , sg , Q , }
		- SUCC   = { sin , omega , sw , Q , }

198 :	"omega"
		- NEIGH  = { cos , cw , omega , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , gamma , sg , Q , }
		- SUCC   = { sin , omega , sw , Q , }

198 :	"Q"
		- NEIGH  = { sin , omega , sw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , cw , omega , Q , }
		- SUCC   = { setup , P , return , }

198 :	"sw"
		- NEIGH  = { sin , omega , sw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , cw , omega , Q , }
		- SUCC   = { setup , P , return , }

198 :	"sin"
		- NEIGH  = { sin , omega , sw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , cw , omega , Q , }
		- SUCC   = { setup , P , return , }

198 :	"omega"
		- NEIGH  = { sin , omega , sw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , cw , omega , Q , }
		- SUCC   = { setup , P , return , }

200 :	"return"
		- NEIGH  = { setup , P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , omega , sw , Q , }
		- SUCC   = { }

200 :	"setup"
		- NEIGH  = { setup , P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , omega , sw , Q , }
		- SUCC   = { }

200 :	"P"
		- NEIGH  = { setup , P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , omega , sw , Q , }
		- SUCC   = { }

