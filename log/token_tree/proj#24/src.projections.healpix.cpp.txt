39 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"healpix"
		- NEIGH  = { healpix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"rhealpix"
		- NEIGH  = { rhealpix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

56 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

57 :	"north_square"
		- NEIGH  = { north_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"south_square"
		- NEIGH  = { south_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"rot_xy"
		- NEIGH  = { rot_xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

60 :	"qp"
		- NEIGH  = { qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"apa"
		- NEIGH  = { apa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"cn"
		- NEIGH  = { cn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"Region"
		- NEIGH  = { Region , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"north"
		- NEIGH  = { north , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"south"
		- NEIGH  = { south , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"equatorial"
		- NEIGH  = { equatorial , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"region"
		- NEIGH  = { region , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"CapMap"
		- NEIGH  = { CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"rot"
		- NEIGH  = { rot , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"sign"
		- NEIGH  = { sign , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"v"
		- NEIGH  = { v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"return"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"v"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	">"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"v"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"<"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"-"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"rotate"
		- NEIGH  = { rotate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"angle"
		- NEIGH  = { angle , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

83 :	"PJ_XY"
		- NEIGH  = { result , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , - , cos , y , * , p , angle , x , result , }

83 :	"result"
		- NEIGH  = { result , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , - , cos , y , * , p , angle , x , result , }

84 :	"result"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"x"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"p"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"x"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"*"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"cos"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"angle"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"-"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"p"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"y"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"*"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"sin"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

84 :	"angle"
		- NEIGH  = { sin , - , cos , y , * , p , angle , x , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { result , PJ_XY , }
		- SUCC   = { sin , x , angle , cos , y , * , p , + , result , }

85 :	"result"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"y"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"p"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"y"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"*"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"cos"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"angle"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"+"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"p"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"x"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"*"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"sin"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

85 :	"angle"
		- NEIGH  = { sin , x , angle , cos , y , * , p , + , result , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , - , cos , y , * , p , angle , x , result , }
		- SUCC   = { result , return , }

86 :	"return"
		- NEIGH  = { result , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , x , angle , cos , y , * , p , + , result , }
		- SUCC   = { }

86 :	"result"
		- NEIGH  = { result , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , x , angle , cos , y , * , p , + , result , }
		- SUCC   = { }

93 :	"get_rotate_index"
		- NEIGH  = { get_rotate_index , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

93 :	"index"
		- NEIGH  = { index , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"switch"
		- NEIGH  = { index , switch , }
		- PARENT = { }
		- CHILD  = { - , return , }
		- PRED   = { }
		- SUCC   = { return , }

94 :	"index"
		- NEIGH  = { index , switch , }
		- PARENT = { }
		- CHILD  = { - , return , }
		- PRED   = { }
		- SUCC   = { return , }

96 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

100 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

102 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , }

103 :	"-"
		- NEIGH  = { - , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { return , }
		- SUCC   = { return , }

104 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { - , }
		- SUCC   = { - , }

105 :	"-"
		- NEIGH  = { - , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { return , }
		- SUCC   = { return , }

106 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { - , }
		- SUCC   = { - , }

107 :	"-"
		- NEIGH  = { - , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { return , }
		- SUCC   = { return , }

108 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { - , }
		- SUCC   = { }

110 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { index , switch , }
		- SUCC   = { }

121 :	"pnpoly"
		- NEIGH  = { pnpoly , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"nvert"
		- NEIGH  = { nvert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"vert"
		- NEIGH  = { vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"testx"
		- NEIGH  = { testx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"testy"
		- NEIGH  = { testy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

122 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { counter , }

123 :	"counter"
		- NEIGH  = { counter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { xinters , }

124 :	"xinters"
		- NEIGH  = { xinters , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { counter , }
		- SUCC   = { p2 , p1 , PJ_XY , }

125 :	"PJ_XY"
		- NEIGH  = { p2 , p1 , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xinters , }
		- SUCC   = { ++ , nvert , < , i , for , }

125 :	"p1"
		- NEIGH  = { p2 , p1 , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xinters , }
		- SUCC   = { ++ , nvert , < , i , for , }

125 :	"p2"
		- NEIGH  = { p2 , p1 , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xinters , }
		- SUCC   = { ++ , nvert , < , i , for , }

128 :	"for"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

128 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

128 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

128 :	"<"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

128 :	"nvert"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

128 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

128 :	"++"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

129 :	"if"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

129 :	"testx"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

129 :	"=="
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

129 :	"vert"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

129 :	"i"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

129 :	"&&"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

129 :	"testy"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

129 :	"=="
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

129 :	"vert"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

129 :	"i"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

130 :	"return"
		- NEIGH  = { return , }
		- PARENT = { i , if , vert , testy , && , == , testx , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"p1"
		- NEIGH  = { vert , x , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { vert , y , p1 , }

134 :	"x"
		- NEIGH  = { vert , x , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { vert , y , p1 , }

134 :	"vert"
		- NEIGH  = { vert , x , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { vert , y , p1 , }

135 :	"p1"
		- NEIGH  = { vert , y , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vert , x , p1 , }
		- SUCC   = { ++ , nvert , < , i , for , }

135 :	"y"
		- NEIGH  = { vert , y , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vert , x , p1 , }
		- SUCC   = { ++ , nvert , < , i , for , }

135 :	"vert"
		- NEIGH  = { vert , y , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vert , x , p1 , }
		- SUCC   = { ++ , nvert , < , i , for , }

137 :	"for"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

137 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

137 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

137 :	"<"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

137 :	"nvert"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

137 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

137 :	"++"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

138 :	"p2"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

138 :	"x"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

138 :	"vert"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

138 :	"i"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

138 :	"%"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

138 :	"nvert"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

139 :	"p2"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

139 :	"y"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

139 :	"vert"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

139 :	"i"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

139 :	"%"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

139 :	"nvert"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

140 :	"if"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

140 :	"testy"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

140 :	">"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

140 :	"MIN"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

140 :	"p1"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

140 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

140 :	"p2"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

140 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

140 :	"&&"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

141 :	"testy"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

141 :	"<="
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

141 :	"MAX"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

141 :	"p1"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

141 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

141 :	"p2"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

141 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

141 :	"&&"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

142 :	"testx"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

142 :	"<="
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

142 :	"MAX"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

142 :	"p1"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

142 :	"x"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

142 :	"p2"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

142 :	"x"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

142 :	"&&"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

143 :	"p1"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

143 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

143 :	"!="
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

143 :	"p2"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

143 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

145 :	"xinters"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"testy"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"-"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"p1"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"y"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"*"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"p2"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"x"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"-"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"p1"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"x"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"/"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"p2"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"y"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"-"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"p1"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"y"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"+"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"p1"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

145 :	"x"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

146 :	"if"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

146 :	"p1"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

146 :	"x"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

146 :	"=="
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

146 :	"p2"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

146 :	"x"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

146 :	"||"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

146 :	"testx"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

146 :	"<="
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

146 :	"xinters"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

147 :	"counter"
		- NEIGH  = { ++ , counter , }
		- PARENT = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

147 :	"++"
		- NEIGH  = { ++ , counter , }
		- PARENT = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

149 :	"p1"
		- NEIGH  = { p2 , p1 , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- SUCC   = { }

149 :	"p2"
		- NEIGH  = { p2 , p1 , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- SUCC   = { }

152 :	"if"
		- NEIGH  = { == , % , counter , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { }

152 :	"counter"
		- NEIGH  = { == , % , counter , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { }

152 :	"%"
		- NEIGH  = { == , % , counter , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { }

152 :	"=="
		- NEIGH  = { == , % , counter , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { }

153 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , % , counter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

155 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , % , counter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"in_image"
		- NEIGH  = { in_image , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"proj"
		- NEIGH  = { proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"north_square"
		- NEIGH  = { north_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

168 :	"south_square"
		- NEIGH  = { south_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"if"
		- NEIGH  = { == , proj , if , }
		- PARENT = { }
		- CHILD  = { south_square , north_square , rhealpixVertsJit , / , pnpoly , M_HALFPI , + , M_FORTPI , * , x , healpixVertsJit , M_PI , y , return , - , }
		- PRED   = { }
		- SUCC   = { }

169 :	"proj"
		- NEIGH  = { == , proj , if , }
		- PARENT = { }
		- CHILD  = { south_square , north_square , rhealpixVertsJit , / , pnpoly , M_HALFPI , + , M_FORTPI , * , x , healpixVertsJit , M_PI , y , return , - , }
		- PRED   = { }
		- SUCC   = { }

169 :	"=="
		- NEIGH  = { == , proj , if , }
		- PARENT = { }
		- CHILD  = { south_square , north_square , rhealpixVertsJit , / , pnpoly , M_HALFPI , + , M_FORTPI , * , x , healpixVertsJit , M_PI , y , return , - , }
		- PRED   = { }
		- SUCC   = { }

170 :	"healpixVertsJit"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

171 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

171 :	"M_PI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

171 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

171 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

172 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

172 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

172 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

172 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

172 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

173 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

173 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

173 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

173 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

174 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

174 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

174 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

174 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

175 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

175 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

176 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

176 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

176 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

177 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

177 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

177 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

178 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

178 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

178 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

178 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

179 :	"M_PI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

179 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

179 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

180 :	"M_PI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

180 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

180 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

180 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

182 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

182 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

182 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

182 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

183 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

183 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

183 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

183 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

184 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

184 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

184 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

185 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

185 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

185 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

185 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

185 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

186 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

186 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

186 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

186 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

186 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

187 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

187 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

187 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

187 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

187 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

187 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

188 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

188 :	"M_PI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

188 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

188 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

188 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

189 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

189 :	"M_PI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

189 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

189 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

191 :	"return"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

191 :	"pnpoly"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

191 :	"healpixVertsJit"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

191 :	"/"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

192 :	"healpixVertsJit"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

192 :	"healpixVertsJit"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

192 :	"x"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

192 :	"y"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

199 :	"rhealpixVertsJit"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

200 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

200 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

200 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

200 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

200 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

201 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

201 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

201 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

201 :	"north_square"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

201 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

201 :	"M_HALFPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

201 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

201 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

201 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"north_square"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"M_HALFPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

202 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"north_square"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"M_HALFPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

203 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"north_square"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"M_HALFPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

204 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

205 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

205 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

205 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

205 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

206 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

206 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

206 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

206 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

206 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"south_square"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"M_HALFPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

207 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"south_square"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"M_HALFPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

208 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"south_square"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"M_HALFPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

209 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"+"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"south_square"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"*"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"M_HALFPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

210 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

211 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

211 :	"M_PI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

211 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

211 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

211 :	"M_FORTPI"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

211 :	"-"
		- NEIGH  = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

214 :	"return"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { }

214 :	"pnpoly"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { }

214 :	"rhealpixVertsJit"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { }

214 :	"/"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { }

215 :	"rhealpixVertsJit"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { }

215 :	"rhealpixVertsJit"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { }

215 :	"x"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { }

215 :	"y"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , north_square , + , M_FORTPI , M_PI , south_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { }

225 :	"auth_lat"
		- NEIGH  = { auth_lat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

225 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

225 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

225 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

225 :	"alpha"
		- NEIGH  = { alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

225 :	"inverse"
		- NEIGH  = { inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

226 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

226 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

226 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

226 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

226 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

226 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

226 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

226 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

226 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

226 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

227 :	"if"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { apa , > , fabs , / , ratio , es , qp , return , - , Q , alpha , asin , P , e , pj_qsfn , if , sin , pj_authlat , q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

227 :	"inverse"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { apa , > , fabs , / , ratio , es , qp , return , - , Q , alpha , asin , P , e , pj_qsfn , if , sin , pj_authlat , q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

227 :	"=="
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { apa , > , fabs , / , ratio , es , qp , return , - , Q , alpha , asin , P , e , pj_qsfn , if , sin , pj_authlat , q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

229 :	"q"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

229 :	"pj_qsfn"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

229 :	"sin"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

229 :	"alpha"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

229 :	"P"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

229 :	"e"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

229 :	"-"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

229 :	"P"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

229 :	"es"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

230 :	"qp"
		- NEIGH  = { Q , qp , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- SUCC   = { / , q , qp , ratio , }

230 :	"Q"
		- NEIGH  = { Q , qp , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- SUCC   = { / , q , qp , ratio , }

230 :	"qp"
		- NEIGH  = { Q , qp , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- SUCC   = { / , q , qp , ratio , }

231 :	"ratio"
		- NEIGH  = { / , q , qp , ratio , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { Q , qp , }
		- SUCC   = { > , ratio , fabs , if , }

231 :	"q"
		- NEIGH  = { / , q , qp , ratio , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { Q , qp , }
		- SUCC   = { > , ratio , fabs , if , }

231 :	"/"
		- NEIGH  = { / , q , qp , ratio , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { Q , qp , }
		- SUCC   = { > , ratio , fabs , if , }

231 :	"qp"
		- NEIGH  = { / , q , qp , ratio , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { Q , qp , }
		- SUCC   = { > , ratio , fabs , if , }

233 :	"if"
		- NEIGH  = { > , ratio , fabs , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { sign , ratio , }
		- PRED   = { / , q , qp , ratio , }
		- SUCC   = { ratio , asin , return , }

233 :	"fabs"
		- NEIGH  = { > , ratio , fabs , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { sign , ratio , }
		- PRED   = { / , q , qp , ratio , }
		- SUCC   = { ratio , asin , return , }

233 :	"ratio"
		- NEIGH  = { > , ratio , fabs , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { sign , ratio , }
		- PRED   = { / , q , qp , ratio , }
		- SUCC   = { ratio , asin , return , }

233 :	">"
		- NEIGH  = { > , ratio , fabs , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { sign , ratio , }
		- PRED   = { / , q , qp , ratio , }
		- SUCC   = { ratio , asin , return , }

235 :	"ratio"
		- NEIGH  = { sign , ratio , }
		- PARENT = { > , ratio , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

235 :	"sign"
		- NEIGH  = { sign , ratio , }
		- PARENT = { > , ratio , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

235 :	"ratio"
		- NEIGH  = { sign , ratio , }
		- PARENT = { > , ratio , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"return"
		- NEIGH  = { ratio , asin , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { > , ratio , fabs , if , }
		- SUCC   = { }

237 :	"asin"
		- NEIGH  = { ratio , asin , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { > , ratio , fabs , if , }
		- SUCC   = { }

237 :	"ratio"
		- NEIGH  = { ratio , asin , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { > , ratio , fabs , if , }
		- SUCC   = { }

240 :	"return"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"pj_authlat"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"alpha"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"Q"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"apa"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

249 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

249 :	"healpix_sphere"
		- NEIGH  = { healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

249 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

249 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

250 :	"lam"
		- NEIGH  = { lp , lam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , phi , }

250 :	"lp"
		- NEIGH  = { lp , lam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , phi , }

250 :	"lam"
		- NEIGH  = { lp , lam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , phi , }

251 :	"phi"
		- NEIGH  = { lp , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , }
		- SUCC   = { / , asin , phi0 , }

251 :	"lp"
		- NEIGH  = { lp , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , }
		- SUCC   = { / , asin , phi0 , }

251 :	"phi"
		- NEIGH  = { lp , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , }
		- SUCC   = { / , asin , phi0 , }

252 :	"phi0"
		- NEIGH  = { / , asin , phi0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , phi , }
		- SUCC   = { xy , PJ_XY , }

252 :	"asin"
		- NEIGH  = { / , asin , phi0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , phi , }
		- SUCC   = { xy , PJ_XY , }

252 :	"/"
		- NEIGH  = { / , asin , phi0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , phi , }
		- SUCC   = { xy , PJ_XY , }

253 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , asin , phi0 , }
		- SUCC   = { phi0 , <= , phi , fabs , if , }

253 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , asin , phi0 , }
		- SUCC   = { phi0 , <= , phi , fabs , if , }

256 :	"if"
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

256 :	"fabs"
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

256 :	"phi"
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

256 :	"<="
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

256 :	"phi0"
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

257 :	"xy"
		- NEIGH  = { lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi , / , M_PI , * , y , xy , }

257 :	"x"
		- NEIGH  = { lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi , / , M_PI , * , y , xy , }

257 :	"lam"
		- NEIGH  = { lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi , / , M_PI , * , y , xy , }

258 :	"xy"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

258 :	"y"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

258 :	"*"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

258 :	"M_PI"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

258 :	"/"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

258 :	"*"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

258 :	"sin"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

258 :	"phi"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

260 :	"lamc"
		- NEIGH  = { lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , sin , - , * , sqrt , fabs , sigma , }

261 :	"sigma"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

261 :	"sqrt"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

261 :	"*"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

261 :	"-"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

261 :	"fabs"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

261 :	"sin"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

261 :	"phi"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

262 :	"cn"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

262 :	"floor"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

262 :	"*"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

262 :	"lam"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

262 :	"/"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

262 :	"M_PI"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

262 :	"+"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

263 :	"if"
		- NEIGH  = { >= , cn , if , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { + , M_PI , / , lam , * , floor , cn , }
		- SUCC   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }

263 :	"cn"
		- NEIGH  = { >= , cn , if , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { + , M_PI , / , lam , * , floor , cn , }
		- SUCC   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }

263 :	">="
		- NEIGH  = { >= , cn , if , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { + , M_PI , / , lam , * , floor , cn , }
		- SUCC   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }

264 :	"cn"
		- NEIGH  = { cn , }
		- PARENT = { >= , cn , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"lamc"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

266 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

266 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

266 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

266 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

266 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

266 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

266 :	"cn"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

267 :	"xy"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

267 :	"x"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

267 :	"lamc"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

267 :	"+"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

267 :	"lam"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

267 :	"-"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

267 :	"lamc"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

267 :	"*"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

267 :	"sigma"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

268 :	"xy"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

268 :	"y"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

268 :	"sign"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

268 :	"phi"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

268 :	"*"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

268 :	"M_FORTPI"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

268 :	"*"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

268 :	"-"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

268 :	"sigma"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

270 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , <= , phi , fabs , if , }
		- SUCC   = { }

270 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , <= , phi , fabs , if , }
		- SUCC   = { }

277 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

277 :	"healpix_spherhealpix_e_inverse"
		- NEIGH  = { healpix_spherhealpix_e_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

277 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

277 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

278 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , x , }

278 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , x , }

279 :	"x"
		- NEIGH  = { xy , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , y , }

279 :	"xy"
		- NEIGH  = { xy , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , y , }

279 :	"x"
		- NEIGH  = { xy , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , y , }

280 :	"y"
		- NEIGH  = { xy , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , }
		- SUCC   = { M_FORTPI , y0 , }

280 :	"xy"
		- NEIGH  = { xy , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , }
		- SUCC   = { M_FORTPI , y0 , }

280 :	"y"
		- NEIGH  = { xy , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , }
		- SUCC   = { M_FORTPI , y0 , }

281 :	"y0"
		- NEIGH  = { M_FORTPI , y0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , y , }
		- SUCC   = { y0 , <= , y , fabs , if , }

281 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , y0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , y , }
		- SUCC   = { y0 , <= , y , fabs , if , }

284 :	"if"
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

284 :	"fabs"
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

284 :	"y"
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

284 :	"<="
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

284 :	"y0"
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

285 :	"lp"
		- NEIGH  = { x , lam , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_PI , y , * , asin , / , phi , lp , }

285 :	"lam"
		- NEIGH  = { x , lam , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_PI , y , * , asin , / , phi , lp , }

285 :	"x"
		- NEIGH  = { x , lam , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_PI , y , * , asin , / , phi , lp , }

286 :	"lp"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

286 :	"phi"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

286 :	"asin"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

286 :	"*"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

286 :	"y"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

286 :	"/"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

286 :	"*"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

286 :	"M_PI"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

287 :	"if"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

287 :	"fabs"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

287 :	"y"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

287 :	"<"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

287 :	"M_HALFPI"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

288 :	"cn"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

288 :	"floor"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

288 :	"*"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

288 :	"x"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

288 :	"/"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

288 :	"M_PI"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

288 :	"+"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

289 :	"xc"
		- NEIGH  = { tau , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , / , M_PI , x , * , floor , cn , }
		- SUCC   = { >= , cn , if , }

289 :	"tau"
		- NEIGH  = { tau , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , / , M_PI , x , * , floor , cn , }
		- SUCC   = { >= , cn , if , }

290 :	"if"
		- NEIGH  = { >= , cn , if , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { tau , xc , }
		- SUCC   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }

290 :	"cn"
		- NEIGH  = { >= , cn , if , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { tau , xc , }
		- SUCC   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }

290 :	">="
		- NEIGH  = { >= , cn , if , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { tau , xc , }
		- SUCC   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }

291 :	"cn"
		- NEIGH  = { cn , }
		- PARENT = { >= , cn , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

293 :	"xc"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

293 :	"-"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

293 :	"*"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

293 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

293 :	"+"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

293 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

293 :	"*"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

293 :	"cn"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

294 :	"tau"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

294 :	"-"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

294 :	"*"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

294 :	"fabs"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

294 :	"y"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

294 :	"/"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

294 :	"M_PI"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

295 :	"lp"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

295 :	"lam"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

295 :	"xc"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

295 :	"+"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

295 :	"x"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

295 :	"-"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

295 :	"xc"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

295 :	"/"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

295 :	"tau"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

296 :	"lp"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

296 :	"phi"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

296 :	"sign"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

296 :	"y"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

296 :	"*"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

296 :	"asin"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

296 :	"-"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

296 :	"pow"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

296 :	"tau"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

296 :	"/"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

298 :	"lp"
		- NEIGH  = { M_PI , lam , - , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , * , y , sign , phi , lp , }

298 :	"lam"
		- NEIGH  = { M_PI , lam , - , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , * , y , sign , phi , lp , }

298 :	"-"
		- NEIGH  = { M_PI , lam , - , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , * , y , sign , phi , lp , }

298 :	"M_PI"
		- NEIGH  = { M_PI , lam , - , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , * , y , sign , phi , lp , }

299 :	"lp"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

299 :	"phi"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

299 :	"sign"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

299 :	"y"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

299 :	"*"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

299 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

301 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y0 , <= , y , fabs , if , }
		- SUCC   = { }

301 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y0 , <= , y , fabs , if , }
		- SUCC   = { }

309 :	"vector_add"
		- NEIGH  = { vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

309 :	"a"
		- NEIGH  = { a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

309 :	"b"
		- NEIGH  = { b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

309 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

309 :	"ret"
		- NEIGH  = { ret , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

310 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

311 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

311 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

311 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

311 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

311 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

311 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

312 :	"ret"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"i"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"a"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"i"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"+"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"b"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"i"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"vector_sub"
		- NEIGH  = { vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"a"
		- NEIGH  = { a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"b"
		- NEIGH  = { b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"ret"
		- NEIGH  = { ret , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

322 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

323 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

323 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

323 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

323 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

323 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

323 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

324 :	"ret"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

324 :	"i"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

324 :	"a"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

324 :	"i"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

324 :	"-"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

324 :	"b"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

324 :	"i"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

334 :	"dot_product"
		- NEIGH  = { dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

334 :	"a"
		- NEIGH  = { a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

334 :	"b"
		- NEIGH  = { b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

334 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

334 :	"ret"
		- NEIGH  = { ret , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

335 :	"i"
		- NEIGH  = { j , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { length , }

335 :	"j"
		- NEIGH  = { j , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { length , }

336 :	"length"
		- NEIGH  = { length , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { j , i , }
		- SUCC   = { ++ , < , length , i , for , }

337 :	"for"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

337 :	"i"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

337 :	"i"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

337 :	"<"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

337 :	"length"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

337 :	"i"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

337 :	"++"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

338 :	"ret"
		- NEIGH  = { i , ret , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , length , < , j , for , }

338 :	"i"
		- NEIGH  = { i , ret , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , length , < , j , for , }

339 :	"for"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

339 :	"j"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

339 :	"j"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

339 :	"<"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

339 :	"length"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

339 :	"j"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

339 :	"++"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

340 :	"ret"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"i"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"+="
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"a"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"i"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"j"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"*"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"b"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"j"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"CapMap"
		- NEIGH  = { CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"get_cap"
		- NEIGH  = { get_cap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"north_square"
		- NEIGH  = { north_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"south_square"
		- NEIGH  = { south_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

355 :	"inverse"
		- NEIGH  = { inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

356 :	"CapMap"
		- NEIGH  = { capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , }

356 :	"capmap"
		- NEIGH  = { capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , }

357 :	"c"
		- NEIGH  = { c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , CapMap , }
		- SUCC   = { x , capmap , }

359 :	"capmap"
		- NEIGH  = { x , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { y , capmap , }

359 :	"x"
		- NEIGH  = { x , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { y , capmap , }

359 :	"x"
		- NEIGH  = { x , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { y , capmap , }

360 :	"capmap"
		- NEIGH  = { y , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , capmap , }
		- SUCC   = { == , inverse , if , }

360 :	"y"
		- NEIGH  = { y , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , capmap , }
		- SUCC   = { == , inverse , if , }

360 :	"y"
		- NEIGH  = { y , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , capmap , }
		- SUCC   = { == , inverse , if , }

361 :	"if"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , CapMap , == , if , region , M_HALFPI , y , - , < , M_FORTPI , capmap , > , x , }
		- PRED   = { y , capmap , }
		- SUCC   = { capmap , return , }

361 :	"inverse"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , CapMap , == , if , region , M_HALFPI , y , - , < , M_FORTPI , capmap , > , x , }
		- PRED   = { y , capmap , }
		- SUCC   = { capmap , return , }

361 :	"=="
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , CapMap , == , if , region , M_HALFPI , y , - , < , M_FORTPI , capmap , > , x , }
		- PRED   = { y , capmap , }
		- SUCC   = { capmap , return , }

362 :	"if"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { - , y , M_FORTPI , if , c , M_HALFPI , north , region , < , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , < , x , if , }

362 :	"y"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { - , y , M_FORTPI , if , c , M_HALFPI , north , region , < , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , < , x , if , }

362 :	">"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { - , y , M_FORTPI , if , c , M_HALFPI , north , region , < , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , < , x , if , }

362 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { - , y , M_FORTPI , if , c , M_HALFPI , north , region , < , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , < , x , if , }

363 :	"capmap"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , c , }

363 :	"region"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , c , }

363 :	"CapMap"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , c , }

363 :	"north"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , c , }

364 :	"c"
		- NEIGH  = { M_HALFPI , c , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { }

364 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , c , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { }

365 :	"if"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

365 :	"y"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

365 :	"<"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

365 :	"-"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

365 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

366 :	"capmap"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , c , }

366 :	"region"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , c , }

366 :	"CapMap"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , c , }

366 :	"south"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , c , }

367 :	"c"
		- NEIGH  = { - , M_HALFPI , c , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { }

367 :	"-"
		- NEIGH  = { - , M_HALFPI , c , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { }

367 :	"M_HALFPI"
		- NEIGH  = { - , M_HALFPI , c , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { }

369 :	"capmap"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

369 :	"region"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

369 :	"CapMap"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

369 :	"equatorial"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

370 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { region , equatorial , CapMap , capmap , }
		- SUCC   = { capmap , return , }

370 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { region , equatorial , CapMap , capmap , }
		- SUCC   = { capmap , return , }

371 :	"return"
		- NEIGH  = { capmap , return , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { }

371 :	"capmap"
		- NEIGH  = { capmap , return , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { }

374 :	"if"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

374 :	"x"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

374 :	"<"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

374 :	"-"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

374 :	"M_HALFPI"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

375 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , - , * , x , capmap , }

375 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , - , * , x , capmap , }

376 :	"capmap"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

376 :	"x"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

376 :	"-"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

376 :	"*"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

376 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

377 :	"capmap"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , * , x , capmap , }
		- SUCC   = { }

377 :	"y"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , * , x , capmap , }
		- SUCC   = { }

377 :	"c"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , * , x , capmap , }
		- SUCC   = { }

378 :	"if"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

378 :	"x"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

378 :	">="
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

378 :	"-"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

378 :	"M_HALFPI"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

378 :	"&&"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

378 :	"x"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

378 :	"<"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

379 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , - , x , capmap , }

379 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , - , x , capmap , }

380 :	"capmap"
		- NEIGH  = { M_FORTPI , - , x , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

380 :	"x"
		- NEIGH  = { M_FORTPI , - , x , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

380 :	"-"
		- NEIGH  = { M_FORTPI , - , x , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

380 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , x , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

381 :	"capmap"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , x , capmap , }
		- SUCC   = { }

381 :	"y"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , x , capmap , }
		- SUCC   = { }

381 :	"c"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , x , capmap , }
		- SUCC   = { }

382 :	"if"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

382 :	"x"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

382 :	">="
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

382 :	"&&"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

382 :	"x"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

382 :	"<"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

382 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

383 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , x , capmap , }

383 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , x , capmap , }

384 :	"capmap"
		- NEIGH  = { M_FORTPI , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

384 :	"x"
		- NEIGH  = { M_FORTPI , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

384 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

385 :	"capmap"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , x , capmap , }
		- SUCC   = { }

385 :	"y"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , x , capmap , }
		- SUCC   = { }

385 :	"c"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , x , capmap , }
		- SUCC   = { }

387 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , * , x , capmap , }

387 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , * , x , capmap , }

388 :	"capmap"
		- NEIGH  = { M_FORTPI , * , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

388 :	"x"
		- NEIGH  = { M_FORTPI , * , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

388 :	"*"
		- NEIGH  = { M_FORTPI , * , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

388 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , * , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

389 :	"capmap"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , x , capmap , }
		- SUCC   = { }

389 :	"y"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , x , capmap , }
		- SUCC   = { }

389 :	"c"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , x , capmap , }
		- SUCC   = { }

392 :	"if"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , north_square , + , M_FORTPI , capmap , * , y , - , x , M_HALFPI , north , if , region , CapMap , }
		- PRED   = { }
		- SUCC   = { north , == , region , CapMap , capmap , if , }

392 :	"y"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , north_square , + , M_FORTPI , capmap , * , y , - , x , M_HALFPI , north , if , region , CapMap , }
		- PRED   = { }
		- SUCC   = { north , == , region , CapMap , capmap , if , }

392 :	">"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , north_square , + , M_FORTPI , capmap , * , y , - , x , M_HALFPI , north , if , region , CapMap , }
		- PRED   = { }
		- SUCC   = { north , == , region , CapMap , capmap , if , }

392 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , north_square , + , M_FORTPI , capmap , * , y , - , x , M_HALFPI , north , if , region , CapMap , }
		- PRED   = { }
		- SUCC   = { north , == , region , CapMap , capmap , if , }

393 :	"capmap"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }

393 :	"region"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }

393 :	"CapMap"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }

393 :	"north"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }

394 :	"capmap"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

394 :	"x"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

394 :	"-"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

394 :	"*"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

394 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

394 :	"+"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

394 :	"north_square"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

394 :	"*"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

394 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

395 :	"capmap"
		- NEIGH  = { M_HALFPI , y , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , north_square , - , * , x , }

395 :	"y"
		- NEIGH  = { M_HALFPI , y , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , north_square , - , * , x , }

395 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , y , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , north_square , - , * , x , }

396 :	"x"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

396 :	"x"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

396 :	"-"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

396 :	"north_square"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

396 :	"*"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

396 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

397 :	"if"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

397 :	"y"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

397 :	"<"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

397 :	"-"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

397 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

398 :	"capmap"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }

398 :	"region"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }

398 :	"CapMap"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }

398 :	"south"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }

399 :	"capmap"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

399 :	"x"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

399 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

399 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

399 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

399 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

399 :	"south_square"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

399 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

399 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

400 :	"capmap"
		- NEIGH  = { M_HALFPI , - , y , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , - , * , south_square , x , }

400 :	"y"
		- NEIGH  = { M_HALFPI , - , y , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , - , * , south_square , x , }

400 :	"-"
		- NEIGH  = { M_HALFPI , - , y , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , - , * , south_square , x , }

400 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , y , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , - , * , south_square , x , }

401 :	"x"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

401 :	"x"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

401 :	"-"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

401 :	"south_square"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

401 :	"*"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

401 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

403 :	"capmap"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

403 :	"region"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

403 :	"CapMap"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

403 :	"equatorial"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

404 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { region , equatorial , CapMap , capmap , }
		- SUCC   = { capmap , return , }

404 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { region , equatorial , CapMap , capmap , }
		- SUCC   = { capmap , return , }

405 :	"return"
		- NEIGH  = { capmap , return , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { }

405 :	"capmap"
		- NEIGH  = { capmap , return , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { }

409 :	"if"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

409 :	"capmap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

409 :	"region"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

409 :	"=="
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

409 :	"CapMap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

409 :	"north"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

410 :	"if"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"y"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	">="
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"-"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"x"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"-"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"M_FORTPI"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"-"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"&&"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"y"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"<"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"x"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"+"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"*"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"M_FORTPI"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

410 :	"-"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

411 :	"capmap"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

411 :	"cn"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

411 :	"north_square"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

411 :	"+"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

411 :	"%"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

412 :	"if"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"y"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	">"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"-"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"x"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"-"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"M_FORTPI"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"+"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"&&"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"y"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	">="
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"x"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"+"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"*"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"M_FORTPI"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

412 :	"-"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

413 :	"capmap"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

413 :	"cn"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

413 :	"north_square"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

413 :	"+"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

413 :	"%"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

414 :	"if"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"y"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"<="
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"-"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"x"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"-"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"M_FORTPI"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"+"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"&&"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"y"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	">"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"x"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"+"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"*"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"M_FORTPI"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

414 :	"+"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

415 :	"capmap"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

415 :	"cn"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

415 :	"north_square"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

415 :	"+"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

415 :	"%"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

417 :	"capmap"
		- NEIGH  = { north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

417 :	"cn"
		- NEIGH  = { north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

417 :	"north_square"
		- NEIGH  = { north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

419 :	"if"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

419 :	"capmap"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

419 :	"region"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

419 :	"=="
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

419 :	"CapMap"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

419 :	"south"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

420 :	"if"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"y"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"<="
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"x"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"+"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"M_FORTPI"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"+"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"&&"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"y"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	">"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"-"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"x"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"-"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"*"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"M_FORTPI"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"+"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

421 :	"capmap"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

421 :	"cn"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

421 :	"south_square"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

421 :	"+"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

421 :	"%"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

422 :	"if"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"y"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"<"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"x"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"+"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"M_FORTPI"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"-"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"&&"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"y"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"<="
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"-"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"x"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"-"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"*"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"M_FORTPI"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"+"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

423 :	"capmap"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"cn"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"south_square"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"+"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"%"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

424 :	"if"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"y"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	">="
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"x"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"+"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"M_FORTPI"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"-"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"&&"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"y"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"<"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"-"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"x"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"-"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"*"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"M_FORTPI"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

424 :	"-"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

425 :	"capmap"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

425 :	"cn"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

425 :	"south_square"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

425 :	"+"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

425 :	"%"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

427 :	"capmap"
		- NEIGH  = { south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

427 :	"cn"
		- NEIGH  = { south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

427 :	"south_square"
		- NEIGH  = { south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

431 :	"return"
		- NEIGH  = { capmap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { }

431 :	"capmap"
		- NEIGH  = { capmap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { }

444 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

444 :	"combine_caps"
		- NEIGH  = { combine_caps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

444 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

444 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

444 :	"north_square"
		- NEIGH  = { north_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

444 :	"south_square"
		- NEIGH  = { south_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

445 :	"inverse"
		- NEIGH  = { inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

446 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vector , }

446 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vector , }

447 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v_min_c , }

448 :	"v_min_c"
		- NEIGH  = { v_min_c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , }
		- SUCC   = { ret_dot , }

449 :	"ret_dot"
		- NEIGH  = { ret_dot , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , }
		- SUCC   = { tmpRot , * , }

450 :	"*"
		- NEIGH  = { tmpRot , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , }
		- SUCC   = { pole , }

450 :	"tmpRot"
		- NEIGH  = { tmpRot , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , }
		- SUCC   = { pole , }

451 :	"pole"
		- NEIGH  = { pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tmpRot , * , }
		- SUCC   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }

453 :	"CapMap"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

453 :	"capmap"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

453 :	"get_cap"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

453 :	"x"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

453 :	"y"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

453 :	"north_square"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

453 :	"south_square"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

453 :	"inverse"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

454 :	"if"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { y , x , v , }

454 :	"capmap"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { y , x , v , }

454 :	"region"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { y , x , v , }

454 :	"=="
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { y , x , v , }

454 :	"CapMap"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { y , x , v , }

454 :	"equatorial"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { y , x , v , }

455 :	"xy"
		- NEIGH  = { capmap , x , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { capmap , y , xy , }

455 :	"x"
		- NEIGH  = { capmap , x , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { capmap , y , xy , }

455 :	"capmap"
		- NEIGH  = { capmap , x , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { capmap , y , xy , }

455 :	"x"
		- NEIGH  = { capmap , x , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { capmap , y , xy , }

456 :	"xy"
		- NEIGH  = { capmap , y , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , x , xy , }
		- SUCC   = { xy , return , }

456 :	"y"
		- NEIGH  = { capmap , y , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , x , xy , }
		- SUCC   = { xy , return , }

456 :	"capmap"
		- NEIGH  = { capmap , y , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , x , xy , }
		- SUCC   = { xy , return , }

456 :	"y"
		- NEIGH  = { capmap , y , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , x , xy , }
		- SUCC   = { xy , return , }

457 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , y , xy , }
		- SUCC   = { }

457 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , y , xy , }
		- SUCC   = { }

460 :	"v"
		- NEIGH  = { y , x , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , region , equatorial , CapMap , capmap , if , }
		- SUCC   = { y , x , capmap , c , }

460 :	"x"
		- NEIGH  = { y , x , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , region , equatorial , CapMap , capmap , if , }
		- SUCC   = { y , x , capmap , c , }

460 :	"y"
		- NEIGH  = { y , x , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , region , equatorial , CapMap , capmap , if , }
		- SUCC   = { y , x , capmap , c , }

461 :	"c"
		- NEIGH  = { y , x , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , v , }
		- SUCC   = { == , inverse , if , }

461 :	"capmap"
		- NEIGH  = { y , x , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , v , }
		- SUCC   = { == , inverse , if , }

461 :	"x"
		- NEIGH  = { y , x , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , v , }
		- SUCC   = { == , inverse , if , }

461 :	"capmap"
		- NEIGH  = { y , x , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , v , }
		- SUCC   = { == , inverse , if , }

461 :	"y"
		- NEIGH  = { y , x , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , v , }
		- SUCC   = { == , inverse , if , }

463 :	"if"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , == , region , CapMap , capmap , if , }
		- PRED   = { y , x , capmap , c , }
		- SUCC   = { v_min_c , c , v , vector_sub , }

463 :	"inverse"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , == , region , CapMap , capmap , if , }
		- PRED   = { y , x , capmap , c , }
		- SUCC   = { v_min_c , c , v , vector_sub , }

463 :	"=="
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , == , region , CapMap , capmap , if , }
		- PRED   = { y , x , capmap , c , }
		- SUCC   = { v_min_c , c , v , vector_sub , }

467 :	"if"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

467 :	"capmap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

467 :	"region"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

467 :	"=="
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

467 :	"CapMap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

467 :	"north"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

468 :	"pole"
		- NEIGH  = { north_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }

468 :	"north_square"
		- NEIGH  = { north_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }

469 :	"tmpRot"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

469 :	"rot"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

469 :	"get_rotate_index"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

469 :	"capmap"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

469 :	"cn"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

469 :	"-"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

469 :	"pole"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

471 :	"pole"
		- NEIGH  = { south_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }

471 :	"south_square"
		- NEIGH  = { south_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }

472 :	"tmpRot"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

472 :	"rot"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

472 :	"get_rotate_index"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

472 :	"-"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

472 :	"*"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

472 :	"capmap"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

472 :	"cn"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

472 :	"-"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

472 :	"pole"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

479 :	"if"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

479 :	"capmap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

479 :	"region"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

479 :	"=="
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

479 :	"CapMap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

479 :	"north"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

480 :	"pole"
		- NEIGH  = { north_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }

480 :	"north_square"
		- NEIGH  = { north_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }

481 :	"tmpRot"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

481 :	"rot"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

481 :	"get_rotate_index"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

481 :	"-"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

481 :	"*"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

481 :	"capmap"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

481 :	"cn"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

481 :	"-"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

481 :	"pole"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

483 :	"pole"
		- NEIGH  = { south_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }

483 :	"south_square"
		- NEIGH  = { south_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }

484 :	"tmpRot"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

484 :	"rot"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

484 :	"get_rotate_index"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

484 :	"capmap"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

484 :	"cn"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

484 :	"-"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

484 :	"pole"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

488 :	"vector_sub"
		- NEIGH  = { v_min_c , c , v , vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { v_min_c , tmpRot , ret_dot , dot_product , }

488 :	"v"
		- NEIGH  = { v_min_c , c , v , vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { v_min_c , tmpRot , ret_dot , dot_product , }

488 :	"c"
		- NEIGH  = { v_min_c , c , v , vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { v_min_c , tmpRot , ret_dot , dot_product , }

488 :	"v_min_c"
		- NEIGH  = { v_min_c , c , v , vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { v_min_c , tmpRot , ret_dot , dot_product , }

489 :	"dot_product"
		- NEIGH  = { v_min_c , tmpRot , ret_dot , dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , c , v , vector_sub , }
		- SUCC   = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }

489 :	"tmpRot"
		- NEIGH  = { v_min_c , tmpRot , ret_dot , dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , c , v , vector_sub , }
		- SUCC   = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }

489 :	"v_min_c"
		- NEIGH  = { v_min_c , tmpRot , ret_dot , dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , c , v , vector_sub , }
		- SUCC   = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }

489 :	"ret_dot"
		- NEIGH  = { v_min_c , tmpRot , ret_dot , dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , c , v , vector_sub , }
		- SUCC   = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }

491 :	"a"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"-"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"*"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"M_FORTPI"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"+"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"inverse"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"=="
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"pole"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"capmap"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"cn"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"*"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

492 :	"M_HALFPI"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

493 :	"capmap"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

493 :	"region"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

493 :	"=="
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

493 :	"CapMap"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

493 :	"north"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

493 :	"-"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

493 :	"*"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

493 :	"M_HALFPI"
		- NEIGH  = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

495 :	"vector_add"
		- NEIGH  = { ret_dot , vector , a , vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- SUCC   = { vector , x , xy , }

495 :	"ret_dot"
		- NEIGH  = { ret_dot , vector , a , vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- SUCC   = { vector , x , xy , }

495 :	"a"
		- NEIGH  = { ret_dot , vector , a , vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- SUCC   = { vector , x , xy , }

495 :	"vector"
		- NEIGH  = { ret_dot , vector , a , vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , CapMap , region , a , * , capmap , M_HALFPI , pole , == , + , inverse , M_FORTPI , cn , - , }
		- SUCC   = { vector , x , xy , }

498 :	"xy"
		- NEIGH  = { vector , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , vector , a , vector_add , }
		- SUCC   = { vector , y , xy , }

498 :	"x"
		- NEIGH  = { vector , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , vector , a , vector_add , }
		- SUCC   = { vector , y , xy , }

498 :	"vector"
		- NEIGH  = { vector , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , vector , a , vector_add , }
		- SUCC   = { vector , y , xy , }

499 :	"xy"
		- NEIGH  = { vector , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , x , xy , }
		- SUCC   = { xy , return , }

499 :	"y"
		- NEIGH  = { vector , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , x , xy , }
		- SUCC   = { xy , return , }

499 :	"vector"
		- NEIGH  = { vector , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , x , xy , }
		- SUCC   = { xy , return , }

500 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , y , xy , }
		- SUCC   = { }

500 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , y , xy , }
		- SUCC   = { }

504 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

504 :	"s_healpix_forward"
		- NEIGH  = { s_healpix_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

504 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

504 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

504 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

504 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

504 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

505 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

506 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

506 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

506 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

506 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

506 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

506 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

506 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

506 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

506 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

506 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

507 :	"return"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

507 :	"rotate"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

507 :	"healpix_sphere"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

507 :	"lp"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

507 :	"-"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

507 :	"Q"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

507 :	"rot_xy"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

511 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

511 :	"e_healpix_forward"
		- NEIGH  = { e_healpix_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

511 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

511 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

511 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

511 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

511 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

512 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

512 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

512 :	"auth_lat"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

512 :	"P"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

512 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

512 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

513 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

513 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

513 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

513 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

513 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

513 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

513 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

513 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

513 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

513 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }

514 :	"return"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

514 :	"rotate"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

514 :	"healpix_sphere"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

514 :	"lp"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

514 :	"-"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

514 :	"Q"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

514 :	"rot_xy"
		- NEIGH  = { rot_xy , return , - , lp , rotate , Q , healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

518 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

518 :	"s_healpix_inverse"
		- NEIGH  = { s_healpix_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

518 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

518 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

518 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

518 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

518 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

519 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

519 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

519 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

519 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

519 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

519 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

519 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

519 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

519 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

519 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rotate , rot_xy , xy , }

520 :	"xy"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

520 :	"rotate"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

520 :	"xy"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

520 :	"Q"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

520 :	"rot_xy"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

523 :	"if"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

523 :	"in_image"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

523 :	"xy"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

523 :	"x"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

523 :	"xy"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

523 :	"y"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

523 :	"=="
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

524 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , lam , lp , }

524 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , lam , lp , }

525 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

525 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

525 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

526 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

526 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

526 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

527 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

527 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

527 :	"ctx"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

527 :	"PJD_ERR_INVALID_X_OR_Y"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

528 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

528 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

530 :	"return"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { }

530 :	"healpix_spherhealpix_e_inverse"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { }

530 :	"xy"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { }

534 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

534 :	"e_healpix_inverse"
		- NEIGH  = { e_healpix_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

534 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

534 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

534 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

534 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

534 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

535 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

535 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

536 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

536 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

536 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

536 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

536 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

536 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

536 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

536 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

536 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

536 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Q , rotate , rot_xy , xy , }

537 :	"xy"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

537 :	"rotate"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

537 :	"xy"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

537 :	"Q"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

537 :	"rot_xy"
		- NEIGH  = { Q , rotate , rot_xy , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , == , in_image , if , }

540 :	"if"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

540 :	"in_image"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

540 :	"xy"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

540 :	"x"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

540 :	"xy"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

540 :	"y"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

540 :	"=="
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { Q , rotate , rot_xy , xy , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

541 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

541 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

541 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

542 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

542 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

542 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

543 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

543 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

543 :	"ctx"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

543 :	"PJD_ERR_INVALID_X_OR_Y"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

544 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

544 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

546 :	"lp"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { P , auth_lat , phi , lp , }

546 :	"healpix_spherhealpix_e_inverse"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { P , auth_lat , phi , lp , }

546 :	"xy"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { P , auth_lat , phi , lp , }

547 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

547 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

547 :	"auth_lat"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

547 :	"P"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

547 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

547 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

548 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

548 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

552 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

552 :	"s_rhealpix_forward"
		- NEIGH  = { s_rhealpix_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

552 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

552 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

552 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

552 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

552 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

553 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

553 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

553 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

553 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

553 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

553 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

553 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

553 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

553 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

553 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

555 :	"PJ_XY"
		- NEIGH  = { lp , xy , healpix_sphere , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

555 :	"xy"
		- NEIGH  = { lp , xy , healpix_sphere , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

555 :	"healpix_sphere"
		- NEIGH  = { lp , xy , healpix_sphere , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

555 :	"lp"
		- NEIGH  = { lp , xy , healpix_sphere , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

556 :	"return"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

556 :	"combine_caps"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

556 :	"xy"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

556 :	"x"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

556 :	"xy"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

556 :	"y"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

556 :	"Q"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

556 :	"north_square"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

556 :	"Q"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

556 :	"south_square"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

560 :	"e_rhealpix_forward"
		- NEIGH  = { e_rhealpix_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

560 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

560 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

560 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

560 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

560 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

561 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

561 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

561 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

561 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

561 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

561 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

561 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

561 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

561 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

561 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

562 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { P , auth_lat , phi , lp , }

562 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { P , auth_lat , phi , lp , }

563 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

563 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

563 :	"auth_lat"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

563 :	"P"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

563 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

563 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

564 :	"xy"
		- NEIGH  = { lp , healpix_sphere , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

564 :	"healpix_sphere"
		- NEIGH  = { lp , healpix_sphere , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

564 :	"lp"
		- NEIGH  = { lp , healpix_sphere , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

565 :	"return"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

565 :	"combine_caps"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

565 :	"xy"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

565 :	"x"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

565 :	"xy"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

565 :	"y"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

565 :	"Q"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

565 :	"north_square"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

565 :	"Q"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

565 :	"south_square"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

569 :	"s_rhealpix_inverse"
		- NEIGH  = { s_rhealpix_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

569 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

569 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

569 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

569 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

569 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

570 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

570 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

570 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

570 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

570 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

570 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

570 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

570 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

570 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

570 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

573 :	"if"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"in_image"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"xy"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"x"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"xy"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"y"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"Q"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"north_square"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"Q"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"south_square"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

573 :	"=="
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

574 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , lam , lp , }

574 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , lam , lp , }

575 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

575 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

575 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

576 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

576 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

576 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

577 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

577 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

577 :	"ctx"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

577 :	"PJD_ERR_INVALID_X_OR_Y"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

578 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

578 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

580 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

580 :	"combine_caps"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

580 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

580 :	"x"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

580 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

580 :	"y"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

580 :	"Q"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

580 :	"north_square"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

580 :	"Q"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

580 :	"south_square"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , return , }

581 :	"return"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { }

581 :	"healpix_spherhealpix_e_inverse"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { }

581 :	"xy"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { }

585 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

585 :	"e_rhealpix_inverse"
		- NEIGH  = { e_rhealpix_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

585 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

585 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

585 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

585 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

585 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

586 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

586 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

586 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

586 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

586 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

586 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

586 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

586 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

586 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

586 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

587 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

587 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

590 :	"if"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"in_image"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"xy"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"x"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"xy"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"y"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"Q"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"north_square"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"Q"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"south_square"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

590 :	"=="
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

591 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

591 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

591 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

592 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

592 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

592 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

593 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

593 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

593 :	"ctx"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

593 :	"PJD_ERR_INVALID_X_OR_Y"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

594 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

594 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

596 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

596 :	"combine_caps"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

596 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

596 :	"x"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

596 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

596 :	"y"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

596 :	"Q"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

596 :	"north_square"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

596 :	"Q"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

596 :	"south_square"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_spherhealpix_e_inverse , lp , }

597 :	"lp"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { P , auth_lat , phi , lp , }

597 :	"healpix_spherhealpix_e_inverse"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { P , auth_lat , phi , lp , }

597 :	"xy"
		- NEIGH  = { xy , healpix_spherhealpix_e_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { P , auth_lat , phi , lp , }

598 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

598 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

598 :	"auth_lat"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

598 :	"P"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

598 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

598 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_spherhealpix_e_inverse , lp , }
		- SUCC   = { lp , return , }

599 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

599 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

603 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

603 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

603 :	"destructor"
		- NEIGH  = { destructor , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

603 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

603 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

603 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

603 :	"errlev"
		- NEIGH  = { errlev , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

604 :	"if"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

604 :	"=="
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

604 :	"P"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

605 :	"return"
		- NEIGH  = { return , }
		- PARENT = { P , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

607 :	"if"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

607 :	"=="
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

607 :	"P"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

607 :	"opaque"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

608 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

608 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

608 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

608 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

610 :	"pj_dealloc"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

610 :	"static_cast"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

610 :	"<"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

610 :	"pj_opaque"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

610 :	"*"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

610 :	">"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

610 :	"P"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

610 :	"opaque"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

610 :	"apa"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

611 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

611 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

611 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

611 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

615 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

615 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

615 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

615 :	"healpix"
		- NEIGH  = { healpix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

616 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

616 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

616 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

616 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

616 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

616 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

616 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

616 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

616 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

616 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

617 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

617 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

617 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

618 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

618 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

618 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

618 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

619 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

619 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

619 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

620 :	"P"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , P , angle , pj_param , ctx , }

620 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , P , angle , pj_param , ctx , }

620 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { f , params , P , angle , pj_param , ctx , }

622 :	"angle"
		- NEIGH  = { f , params , P , angle , pj_param , ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { angle , PJ_TORAD , rot_xy , Q , }

622 :	"pj_param"
		- NEIGH  = { f , params , P , angle , pj_param , ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { angle , PJ_TORAD , rot_xy , Q , }

622 :	"P"
		- NEIGH  = { f , params , P , angle , pj_param , ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { angle , PJ_TORAD , rot_xy , Q , }

622 :	"ctx"
		- NEIGH  = { f , params , P , angle , pj_param , ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { angle , PJ_TORAD , rot_xy , Q , }

622 :	"P"
		- NEIGH  = { f , params , P , angle , pj_param , ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { angle , PJ_TORAD , rot_xy , Q , }

622 :	"params"
		- NEIGH  = { f , params , P , angle , pj_param , ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { angle , PJ_TORAD , rot_xy , Q , }

622 :	"f"
		- NEIGH  = { f , params , P , angle , pj_param , ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { angle , PJ_TORAD , rot_xy , Q , }

623 :	"Q"
		- NEIGH  = { angle , PJ_TORAD , rot_xy , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , P , angle , pj_param , ctx , }
		- SUCC   = { != , es , P , if , }

623 :	"rot_xy"
		- NEIGH  = { angle , PJ_TORAD , rot_xy , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , P , angle , pj_param , ctx , }
		- SUCC   = { != , es , P , if , }

623 :	"PJ_TORAD"
		- NEIGH  = { angle , PJ_TORAD , rot_xy , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , P , angle , pj_param , ctx , }
		- SUCC   = { != , es , P , if , }

623 :	"angle"
		- NEIGH  = { angle , PJ_TORAD , rot_xy , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , params , P , angle , pj_param , ctx , }
		- SUCC   = { != , es , P , if , }

625 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_healpix_forward , inv , fwd , e_healpix_forward , pj_calc_ellipsoid_params , e_healpix_inverse , one_es , qp , P , e , s_healpix_inverse , pj_qsfn , == , if , pj_authset , sqrt , * , a , es , apa , Q , }
		- PRED   = { angle , PJ_TORAD , rot_xy , Q , }
		- SUCC   = { P , return , }

625 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_healpix_forward , inv , fwd , e_healpix_forward , pj_calc_ellipsoid_params , e_healpix_inverse , one_es , qp , P , e , s_healpix_inverse , pj_qsfn , == , if , pj_authset , sqrt , * , a , es , apa , Q , }
		- PRED   = { angle , PJ_TORAD , rot_xy , Q , }
		- SUCC   = { P , return , }

625 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_healpix_forward , inv , fwd , e_healpix_forward , pj_calc_ellipsoid_params , e_healpix_inverse , one_es , qp , P , e , s_healpix_inverse , pj_qsfn , == , if , pj_authset , sqrt , * , a , es , apa , Q , }
		- PRED   = { angle , PJ_TORAD , rot_xy , Q , }
		- SUCC   = { P , return , }

625 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_healpix_forward , inv , fwd , e_healpix_forward , pj_calc_ellipsoid_params , e_healpix_inverse , one_es , qp , P , e , s_healpix_inverse , pj_qsfn , == , if , pj_authset , sqrt , * , a , es , apa , Q , }
		- PRED   = { angle , PJ_TORAD , rot_xy , Q , }
		- SUCC   = { P , return , }

626 :	"Q"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

626 :	"apa"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

626 :	"pj_authset"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

626 :	"P"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

626 :	"es"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

627 :	"if"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

627 :	"=="
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

627 :	"Q"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

627 :	"apa"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

628 :	"return"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

628 :	"destructor"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

628 :	"P"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

628 :	"ENOMEM"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

629 :	"Q"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

629 :	"qp"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

629 :	"pj_qsfn"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

629 :	"P"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

629 :	"e"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

629 :	"P"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

629 :	"one_es"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

630 :	"P"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

630 :	"a"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

630 :	"P"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

630 :	"a"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

630 :	"*"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

630 :	"sqrt"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

630 :	"*"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

630 :	"Q"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

630 :	"qp"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

631 :	"pj_calc_ellipsoid_params"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

631 :	"P"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

631 :	"P"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

631 :	"a"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

631 :	"P"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

631 :	"es"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

632 :	"P"
		- NEIGH  = { e_healpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , a , pj_calc_ellipsoid_params , }
		- SUCC   = { inv , e_healpix_inverse , P , }

632 :	"fwd"
		- NEIGH  = { e_healpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , a , pj_calc_ellipsoid_params , }
		- SUCC   = { inv , e_healpix_inverse , P , }

632 :	"e_healpix_forward"
		- NEIGH  = { e_healpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , a , pj_calc_ellipsoid_params , }
		- SUCC   = { inv , e_healpix_inverse , P , }

633 :	"P"
		- NEIGH  = { inv , e_healpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_healpix_forward , fwd , P , }
		- SUCC   = { }

633 :	"inv"
		- NEIGH  = { inv , e_healpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_healpix_forward , fwd , P , }
		- SUCC   = { }

633 :	"e_healpix_inverse"
		- NEIGH  = { inv , e_healpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_healpix_forward , fwd , P , }
		- SUCC   = { }

635 :	"P"
		- NEIGH  = { fwd , s_healpix_forward , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_healpix_inverse , inv , P , }

635 :	"fwd"
		- NEIGH  = { fwd , s_healpix_forward , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_healpix_inverse , inv , P , }

635 :	"s_healpix_forward"
		- NEIGH  = { fwd , s_healpix_forward , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_healpix_inverse , inv , P , }

636 :	"P"
		- NEIGH  = { s_healpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { fwd , s_healpix_forward , P , }
		- SUCC   = { }

636 :	"inv"
		- NEIGH  = { s_healpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { fwd , s_healpix_forward , P , }
		- SUCC   = { }

636 :	"s_healpix_inverse"
		- NEIGH  = { s_healpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { fwd , s_healpix_forward , P , }
		- SUCC   = { }

639 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

639 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

643 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

643 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

643 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

643 :	"rhealpix"
		- NEIGH  = { rhealpix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

644 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

644 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

644 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

644 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

644 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

644 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

644 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

644 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

644 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

644 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

645 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

645 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

646 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

647 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

647 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

647 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

648 :	"P"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , pj_param , Q , ctx , north_square , P , }

648 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , pj_param , Q , ctx , north_square , P , }

648 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , pj_param , Q , ctx , north_square , P , }

650 :	"Q"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

650 :	"north_square"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

650 :	"pj_param"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

650 :	"P"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

650 :	"ctx"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

650 :	"P"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

650 :	"params"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

650 :	"i"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

651 :	"Q"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

651 :	"south_square"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

651 :	"pj_param"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

651 :	"P"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

651 :	"ctx"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

651 :	"P"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

651 :	"params"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

651 :	"i"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

654 :	"if"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

654 :	"Q"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

654 :	"north_square"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

654 :	"<"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

654 :	"||"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

654 :	"Q"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

654 :	"north_square"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

654 :	">"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

655 :	"return"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , north_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

655 :	"destructor"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , north_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

655 :	"P"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , north_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

655 :	"PJD_ERR_AXIS"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , north_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

656 :	"if"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

656 :	"Q"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

656 :	"south_square"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

656 :	"<"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

656 :	"||"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

656 :	"Q"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

656 :	"south_square"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

656 :	">"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

657 :	"return"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , south_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

657 :	"destructor"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , south_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

657 :	"P"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , south_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

657 :	"PJD_ERR_AXIS"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , south_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

658 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_rhealpix_forward , inv , fwd , / , e_rhealpix_inverse , one_es , qp , P , e , pj_qsfn , == , if , e_rhealpix_forward , pj_authset , s_rhealpix_inverse , sqrt , * , a , es , ra , apa , Q , }
		- PRED   = { > , < , south_square , || , Q , if , }
		- SUCC   = { P , return , }

658 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_rhealpix_forward , inv , fwd , / , e_rhealpix_inverse , one_es , qp , P , e , pj_qsfn , == , if , e_rhealpix_forward , pj_authset , s_rhealpix_inverse , sqrt , * , a , es , ra , apa , Q , }
		- PRED   = { > , < , south_square , || , Q , if , }
		- SUCC   = { P , return , }

658 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_rhealpix_forward , inv , fwd , / , e_rhealpix_inverse , one_es , qp , P , e , pj_qsfn , == , if , e_rhealpix_forward , pj_authset , s_rhealpix_inverse , sqrt , * , a , es , ra , apa , Q , }
		- PRED   = { > , < , south_square , || , Q , if , }
		- SUCC   = { P , return , }

658 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_rhealpix_forward , inv , fwd , / , e_rhealpix_inverse , one_es , qp , P , e , pj_qsfn , == , if , e_rhealpix_forward , pj_authset , s_rhealpix_inverse , sqrt , * , a , es , ra , apa , Q , }
		- PRED   = { > , < , south_square , || , Q , if , }
		- SUCC   = { P , return , }

659 :	"Q"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

659 :	"apa"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

659 :	"pj_authset"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

659 :	"P"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

659 :	"es"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

660 :	"if"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

660 :	"=="
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

660 :	"Q"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

660 :	"apa"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

661 :	"return"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

661 :	"destructor"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

661 :	"P"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

661 :	"ENOMEM"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

662 :	"Q"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

662 :	"qp"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

662 :	"pj_qsfn"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

662 :	"P"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

662 :	"e"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

662 :	"P"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

662 :	"one_es"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

663 :	"P"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

663 :	"a"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

663 :	"P"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

663 :	"a"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

663 :	"*"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

663 :	"sqrt"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

663 :	"*"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

663 :	"Q"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

663 :	"qp"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

664 :	"P"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

664 :	"ra"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

664 :	"/"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

664 :	"P"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

664 :	"a"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

665 :	"P"
		- NEIGH  = { e_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { a , / , ra , P , }
		- SUCC   = { inv , e_rhealpix_inverse , P , }

665 :	"fwd"
		- NEIGH  = { e_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { a , / , ra , P , }
		- SUCC   = { inv , e_rhealpix_inverse , P , }

665 :	"e_rhealpix_forward"
		- NEIGH  = { e_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { a , / , ra , P , }
		- SUCC   = { inv , e_rhealpix_inverse , P , }

666 :	"P"
		- NEIGH  = { inv , e_rhealpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_rhealpix_forward , fwd , P , }
		- SUCC   = { }

666 :	"inv"
		- NEIGH  = { inv , e_rhealpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_rhealpix_forward , fwd , P , }
		- SUCC   = { }

666 :	"e_rhealpix_inverse"
		- NEIGH  = { inv , e_rhealpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_rhealpix_forward , fwd , P , }
		- SUCC   = { }

668 :	"P"
		- NEIGH  = { s_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_rhealpix_inverse , inv , P , }

668 :	"fwd"
		- NEIGH  = { s_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_rhealpix_inverse , inv , P , }

668 :	"s_rhealpix_forward"
		- NEIGH  = { s_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_rhealpix_inverse , inv , P , }

669 :	"P"
		- NEIGH  = { s_rhealpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_rhealpix_forward , fwd , P , }
		- SUCC   = { }

669 :	"inv"
		- NEIGH  = { s_rhealpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_rhealpix_forward , fwd , P , }
		- SUCC   = { }

669 :	"s_rhealpix_inverse"
		- NEIGH  = { s_rhealpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_rhealpix_forward , fwd , P , }
		- SUCC   = { }

672 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

672 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

