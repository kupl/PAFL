35 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"tinshift"
		- NEIGH  = { tinshift , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"TINSHIFT_NAMESPACE"
		- NEIGH  = { TINSHIFT_NAMESPACE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"tinshiftData"
		- NEIGH  = { tinshiftData , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"unique_ptr"
		- NEIGH  = { unique_ptr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"Evaluator"
		- NEIGH  = { Evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"evaluator"
		- NEIGH  = { evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	"tinshiftData"
		- NEIGH  = { tinshiftData , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"tinshiftData"
		- NEIGH  = { tinshiftData , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"tinshiftData"
		- NEIGH  = { tinshiftData , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"delete"
		- NEIGH  = { delete , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"tinshiftData"
		- NEIGH  = { tinshiftData , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"tinshiftData"
		- NEIGH  = { tinshiftData , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"delete"
		- NEIGH  = { delete , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"destructor"
		- NEIGH  = { destructor , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"errlev"
		- NEIGH  = { errlev , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

53 :	"if"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }

53 :	"=="
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }

53 :	"P"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }

54 :	"return"
		- NEIGH  = { return , }
		- PARENT = { P , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

56 :	"Q"
		- NEIGH  = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , == , if , }
		- SUCC   = { Q , delete , }

56 :	"static_cast"
		- NEIGH  = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , == , if , }
		- SUCC   = { Q , delete , }

56 :	"<"
		- NEIGH  = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , == , if , }
		- SUCC   = { Q , delete , }

56 :	"tinshiftData"
		- NEIGH  = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , == , if , }
		- SUCC   = { Q , delete , }

56 :	"*"
		- NEIGH  = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , == , if , }
		- SUCC   = { Q , delete , }

56 :	">"
		- NEIGH  = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , == , if , }
		- SUCC   = { Q , delete , }

56 :	"P"
		- NEIGH  = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , == , if , }
		- SUCC   = { Q , delete , }

56 :	"opaque"
		- NEIGH  = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , == , if , }
		- SUCC   = { Q , delete , }

57 :	"delete"
		- NEIGH  = { Q , delete , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- SUCC   = { opaque , P , }

57 :	"Q"
		- NEIGH  = { Q , delete , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , tinshiftData , < , * , static_cast , opaque , Q , }
		- SUCC   = { opaque , P , }

58 :	"P"
		- NEIGH  = { opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , delete , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

58 :	"opaque"
		- NEIGH  = { opaque , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , delete , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

60 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , }
		- SUCC   = { }

60 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , }
		- SUCC   = { }

60 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , }
		- SUCC   = { }

60 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , P , }
		- SUCC   = { }

63 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"tinshift_forward_4d"
		- NEIGH  = { tinshift_forward_4d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"in"
		- NEIGH  = { in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"*"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

64 :	"Q"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

64 :	"tinshiftData"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

64 :	"*"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

64 :	"P"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

64 :	"opaque"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

66 :	"PJ_COORD"
		- NEIGH  = { in , out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , tinshiftData , P , Q , * , }
		- SUCC   = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }

66 :	"out"
		- NEIGH  = { in , out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , tinshiftData , P , Q , * , }
		- SUCC   = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }

66 :	"in"
		- NEIGH  = { in , out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , tinshiftData , P , Q , * , }
		- SUCC   = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }

67 :	"if"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"!"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"Q"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"evaluator"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"forward"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"in"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"xyz"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"x"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"in"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"xyz"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"y"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"in"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"xyz"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"z"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"out"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"xyz"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

67 :	"x"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

68 :	"out"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

68 :	"xyz"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

68 :	"y"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

68 :	"out"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

68 :	"xyz"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

68 :	"z"
		- NEIGH  = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

69 :	"return"
		- NEIGH  = { proj_coord_error , return , }
		- PARENT = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"proj_coord_error"
		- NEIGH  = { proj_coord_error , return , }
		- PARENT = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"return"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- SUCC   = { }

71 :	"out"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , y , x , in , out , forward , xyz , evaluator , Q , ! , if , }
		- SUCC   = { }

74 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"tinshift_reverse_4d"
		- NEIGH  = { tinshift_reverse_4d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"PJ_COORD"
		- NEIGH  = { PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"in"
		- NEIGH  = { in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

75 :	"*"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

75 :	"Q"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

75 :	"tinshiftData"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

75 :	"*"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

75 :	"P"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

75 :	"opaque"
		- NEIGH  = { opaque , tinshiftData , P , Q , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { in , out , PJ_COORD , }

77 :	"PJ_COORD"
		- NEIGH  = { in , out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , tinshiftData , P , Q , * , }
		- SUCC   = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }

77 :	"out"
		- NEIGH  = { in , out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , tinshiftData , P , Q , * , }
		- SUCC   = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }

77 :	"in"
		- NEIGH  = { in , out , PJ_COORD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , tinshiftData , P , Q , * , }
		- SUCC   = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }

78 :	"if"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"!"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"Q"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"evaluator"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"inverse"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"in"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"xyz"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"x"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"in"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"xyz"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"y"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"in"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"xyz"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"z"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"out"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"xyz"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

78 :	"x"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

79 :	"out"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

79 :	"xyz"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

79 :	"y"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

79 :	"out"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

79 :	"xyz"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

79 :	"z"
		- NEIGH  = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- PARENT = { }
		- CHILD  = { proj_coord_error , return , }
		- PRED   = { in , out , PJ_COORD , }
		- SUCC   = { out , return , }

80 :	"return"
		- NEIGH  = { proj_coord_error , return , }
		- PARENT = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"proj_coord_error"
		- NEIGH  = { proj_coord_error , return , }
		- PARENT = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"return"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- SUCC   = { }

82 :	"out"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , z , y , x , in , xyz , evaluator , Q , if , ! , inverse , }
		- SUCC   = { }

85 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

85 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

85 :	"TRANSFORMATION"
		- NEIGH  = { TRANSFORMATION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

85 :	"tinshift"
		- NEIGH  = { tinshift , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"*"
		- NEIGH  = { s , params , ctx , P , filename , pj_param , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , filename , if , }

87 :	"filename"
		- NEIGH  = { s , params , ctx , P , filename , pj_param , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , filename , if , }

87 :	"pj_param"
		- NEIGH  = { s , params , ctx , P , filename , pj_param , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , filename , if , }

87 :	"P"
		- NEIGH  = { s , params , ctx , P , filename , pj_param , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , filename , if , }

87 :	"ctx"
		- NEIGH  = { s , params , ctx , P , filename , pj_param , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , filename , if , }

87 :	"P"
		- NEIGH  = { s , params , ctx , P , filename , pj_param , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , filename , if , }

87 :	"params"
		- NEIGH  = { s , params , ctx , P , filename , pj_param , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , filename , if , }

87 :	"s"
		- NEIGH  = { s , params , ctx , P , filename , pj_param , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , filename , if , }

88 :	"if"
		- NEIGH  = { ! , filename , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NO_ARGS , destructor , return , P , proj_log_error , }
		- PRED   = { s , params , ctx , P , filename , pj_param , * , }
		- SUCC   = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }

88 :	"!"
		- NEIGH  = { ! , filename , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NO_ARGS , destructor , return , P , proj_log_error , }
		- PRED   = { s , params , ctx , P , filename , pj_param , * , }
		- SUCC   = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }

88 :	"filename"
		- NEIGH  = { ! , filename , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NO_ARGS , destructor , return , P , proj_log_error , }
		- PRED   = { s , params , ctx , P , filename , pj_param , * , }
		- SUCC   = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }

89 :	"proj_log_error"
		- NEIGH  = { P , proj_log_error , }
		- PARENT = { ! , filename , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_NO_ARGS , destructor , P , return , }

89 :	"P"
		- NEIGH  = { P , proj_log_error , }
		- PARENT = { ! , filename , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_NO_ARGS , destructor , P , return , }

90 :	"return"
		- NEIGH  = { PJD_ERR_NO_ARGS , destructor , P , return , }
		- PARENT = { ! , filename , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_error , }
		- SUCC   = { }

90 :	"destructor"
		- NEIGH  = { PJD_ERR_NO_ARGS , destructor , P , return , }
		- PARENT = { ! , filename , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_error , }
		- SUCC   = { }

90 :	"P"
		- NEIGH  = { PJD_ERR_NO_ARGS , destructor , P , return , }
		- PARENT = { ! , filename , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_error , }
		- SUCC   = { }

90 :	"PJD_ERR_NO_ARGS"
		- NEIGH  = { PJD_ERR_NO_ARGS , destructor , P , return , }
		- PARENT = { ! , filename , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_error , }
		- SUCC   = { }

93 :	"file"
		- NEIGH  = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , filename , if , }
		- SUCC   = { file , == , if , }

93 :	"NS_PROJ"
		- NEIGH  = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , filename , if , }
		- SUCC   = { file , == , if , }

93 :	"FileManager"
		- NEIGH  = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , filename , if , }
		- SUCC   = { file , == , if , }

93 :	"open_resource_file"
		- NEIGH  = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , filename , if , }
		- SUCC   = { file , == , if , }

93 :	"P"
		- NEIGH  = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , filename , if , }
		- SUCC   = { file , == , if , }

93 :	"ctx"
		- NEIGH  = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , filename , if , }
		- SUCC   = { file , == , if , }

93 :	"filename"
		- NEIGH  = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , filename , if , }
		- SUCC   = { file , == , if , }

94 :	"if"
		- NEIGH  = { file , == , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- SUCC   = { SEEK_END , seek , file , }

94 :	"=="
		- NEIGH  = { file , == , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- SUCC   = { SEEK_END , seek , file , }

94 :	"file"
		- NEIGH  = { file , == , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { filename , P , open_resource_file , FileManager , NS_PROJ , ctx , file , }
		- SUCC   = { SEEK_END , seek , file , }

95 :	"proj_log_error"
		- NEIGH  = { filename , P , proj_log_error , }
		- PARENT = { file , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

95 :	"P"
		- NEIGH  = { filename , P , proj_log_error , }
		- PARENT = { file , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

95 :	"filename"
		- NEIGH  = { filename , P , proj_log_error , }
		- PARENT = { file , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

96 :	"return"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { file , == , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

96 :	"destructor"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { file , == , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

96 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { file , == , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

96 :	"PJD_ERR_INVALID_ARG"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { file , == , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

98 :	"file"
		- NEIGH  = { SEEK_END , seek , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { file , == , if , }
		- SUCC   = { tell , file , size , }

98 :	"seek"
		- NEIGH  = { SEEK_END , seek , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { file , == , if , }
		- SUCC   = { tell , file , size , }

98 :	"SEEK_END"
		- NEIGH  = { SEEK_END , seek , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { file , == , if , }
		- SUCC   = { tell , file , size , }

99 :	"size"
		- NEIGH  = { tell , file , size , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { SEEK_END , seek , file , }
		- SUCC   = { * , > , size , if , }

99 :	"file"
		- NEIGH  = { tell , file , size , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { SEEK_END , seek , file , }
		- SUCC   = { * , > , size , if , }

99 :	"tell"
		- NEIGH  = { tell , file , size , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { SEEK_END , seek , file , }
		- SUCC   = { * , > , size , if , }

103 :	"if"
		- NEIGH  = { * , > , size , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { tell , file , size , }
		- SUCC   = { seek , file , }

103 :	"size"
		- NEIGH  = { * , > , size , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { tell , file , size , }
		- SUCC   = { seek , file , }

103 :	">"
		- NEIGH  = { * , > , size , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { tell , file , size , }
		- SUCC   = { seek , file , }

103 :	"*"
		- NEIGH  = { * , > , size , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { tell , file , size , }
		- SUCC   = { seek , file , }

103 :	"*"
		- NEIGH  = { * , > , size , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { tell , file , size , }
		- SUCC   = { seek , file , }

104 :	"proj_log_error"
		- NEIGH  = { filename , P , proj_log_error , }
		- PARENT = { * , > , size , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

104 :	"P"
		- NEIGH  = { filename , P , proj_log_error , }
		- PARENT = { * , > , size , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

104 :	"filename"
		- NEIGH  = { filename , P , proj_log_error , }
		- PARENT = { * , > , size , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

105 :	"return"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { * , > , size , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

105 :	"destructor"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { * , > , size , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

105 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { * , > , size , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

105 :	"PJD_ERR_INVALID_ARG"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { * , > , size , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

107 :	"file"
		- NEIGH  = { seek , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , > , size , if , }
		- SUCC   = { jsonStr , string , std , }

107 :	"seek"
		- NEIGH  = { seek , file , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , > , size , if , }
		- SUCC   = { jsonStr , string , std , }

108 :	"std"
		- NEIGH  = { jsonStr , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { seek , file , }
		- SUCC   = { > , size_t , < , size , jsonStr , resize , static_cast , }

108 :	"string"
		- NEIGH  = { jsonStr , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { seek , file , }
		- SUCC   = { > , size_t , < , size , jsonStr , resize , static_cast , }

108 :	"jsonStr"
		- NEIGH  = { jsonStr , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { seek , file , }
		- SUCC   = { > , size_t , < , size , jsonStr , resize , static_cast , }

109 :	"jsonStr"
		- NEIGH  = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { jsonStr , string , std , }
		- SUCC   = { != , file , & , read , size , jsonStr , if , }

109 :	"resize"
		- NEIGH  = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { jsonStr , string , std , }
		- SUCC   = { != , file , & , read , size , jsonStr , if , }

109 :	"static_cast"
		- NEIGH  = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { jsonStr , string , std , }
		- SUCC   = { != , file , & , read , size , jsonStr , if , }

109 :	"<"
		- NEIGH  = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { jsonStr , string , std , }
		- SUCC   = { != , file , & , read , size , jsonStr , if , }

109 :	"size_t"
		- NEIGH  = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { jsonStr , string , std , }
		- SUCC   = { != , file , & , read , size , jsonStr , if , }

109 :	">"
		- NEIGH  = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { jsonStr , string , std , }
		- SUCC   = { != , file , & , read , size , jsonStr , if , }

109 :	"size"
		- NEIGH  = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { jsonStr , string , std , }
		- SUCC   = { != , file , & , read , size , jsonStr , if , }

110 :	"if"
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

110 :	"file"
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

110 :	"read"
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

110 :	"&"
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

110 :	"jsonStr"
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

110 :	"jsonStr"
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

110 :	"size"
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

110 :	"!="
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

110 :	"jsonStr"
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

110 :	"size"
		- NEIGH  = { != , file , & , read , size , jsonStr , if , }
		- PARENT = { }
		- CHILD  = { destructor , P , filename , PJD_ERR_INVALID_ARG , return , proj_log_error , }
		- PRED   = { > , size_t , < , size , jsonStr , resize , static_cast , }
		- SUCC   = { tinshiftData , new , Q , }

111 :	"proj_log_error"
		- NEIGH  = { filename , P , proj_log_error , }
		- PARENT = { != , file , & , read , size , jsonStr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

111 :	"P"
		- NEIGH  = { filename , P , proj_log_error , }
		- PARENT = { != , file , & , read , size , jsonStr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

111 :	"filename"
		- NEIGH  = { filename , P , proj_log_error , }
		- PARENT = { != , file , & , read , size , jsonStr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

112 :	"return"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { != , file , & , read , size , jsonStr , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

112 :	"destructor"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { != , file , & , read , size , jsonStr , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

112 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { != , file , & , read , size , jsonStr , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

112 :	"PJD_ERR_INVALID_ARG"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { != , file , & , read , size , jsonStr , if , }
		- CHILD  = { }
		- PRED   = { filename , P , proj_log_error , }
		- SUCC   = { }

115 :	"Q"
		- NEIGH  = { tinshiftData , new , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , file , & , read , size , jsonStr , if , }
		- SUCC   = { * , opaque , Q , P , }

115 :	"new"
		- NEIGH  = { tinshiftData , new , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , file , & , read , size , jsonStr , if , }
		- SUCC   = { * , opaque , Q , P , }

115 :	"tinshiftData"
		- NEIGH  = { tinshiftData , new , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , file , & , read , size , jsonStr , if , }
		- SUCC   = { * , opaque , Q , P , }

116 :	"P"
		- NEIGH  = { * , opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshiftData , new , Q , }
		- SUCC   = { destructor , P , }

116 :	"opaque"
		- NEIGH  = { * , opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshiftData , new , Q , }
		- SUCC   = { destructor , P , }

116 :	"*"
		- NEIGH  = { * , opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshiftData , new , Q , }
		- SUCC   = { destructor , P , }

116 :	"Q"
		- NEIGH  = { * , opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshiftData , new , Q , }
		- SUCC   = { destructor , P , }

117 :	"P"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , opaque , Q , P , }
		- SUCC   = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }

117 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , opaque , Q , P , }
		- SUCC   = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }

117 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , opaque , Q , P , }
		- SUCC   = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }

120 :	"Q"
		- NEIGH  = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { e , & , exception , std , catch , }

120 :	"evaluator"
		- NEIGH  = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { e , & , exception , std , catch , }

120 :	"reset"
		- NEIGH  = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { e , & , exception , std , catch , }

120 :	"new"
		- NEIGH  = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { e , & , exception , std , catch , }

120 :	"Evaluator"
		- NEIGH  = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { e , & , exception , std , catch , }

120 :	"TINShiftFile"
		- NEIGH  = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { e , & , exception , std , catch , }

120 :	"parse"
		- NEIGH  = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { e , & , exception , std , catch , }

120 :	"jsonStr"
		- NEIGH  = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { e , & , exception , std , catch , }

121 :	"catch"
		- NEIGH  = { e , & , exception , std , catch , }
		- PARENT = { }
		- CHILD  = { destructor , e , what , PJD_ERR_INVALID_ARG , proj_log_error , return , P , }
		- PRED   = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- SUCC   = { destructor , P , }

121 :	"std"
		- NEIGH  = { e , & , exception , std , catch , }
		- PARENT = { }
		- CHILD  = { destructor , e , what , PJD_ERR_INVALID_ARG , proj_log_error , return , P , }
		- PRED   = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- SUCC   = { destructor , P , }

121 :	"exception"
		- NEIGH  = { e , & , exception , std , catch , }
		- PARENT = { }
		- CHILD  = { destructor , e , what , PJD_ERR_INVALID_ARG , proj_log_error , return , P , }
		- PRED   = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- SUCC   = { destructor , P , }

121 :	"&"
		- NEIGH  = { e , & , exception , std , catch , }
		- PARENT = { }
		- CHILD  = { destructor , e , what , PJD_ERR_INVALID_ARG , proj_log_error , return , P , }
		- PRED   = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- SUCC   = { destructor , P , }

121 :	"e"
		- NEIGH  = { e , & , exception , std , catch , }
		- PARENT = { }
		- CHILD  = { destructor , e , what , PJD_ERR_INVALID_ARG , proj_log_error , return , P , }
		- PRED   = { jsonStr , parse , TINShiftFile , Q , Evaluator , new , reset , evaluator , }
		- SUCC   = { destructor , P , }

122 :	"proj_log_error"
		- NEIGH  = { what , P , e , proj_log_error , }
		- PARENT = { e , & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

122 :	"P"
		- NEIGH  = { what , P , e , proj_log_error , }
		- PARENT = { e , & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

122 :	"e"
		- NEIGH  = { what , P , e , proj_log_error , }
		- PARENT = { e , & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

122 :	"what"
		- NEIGH  = { what , P , e , proj_log_error , }
		- PARENT = { e , & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PJD_ERR_INVALID_ARG , destructor , P , return , }

123 :	"return"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { e , & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { what , P , e , proj_log_error , }
		- SUCC   = { }

123 :	"destructor"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { e , & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { what , P , e , proj_log_error , }
		- SUCC   = { }

123 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { e , & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { what , P , e , proj_log_error , }
		- SUCC   = { }

123 :	"PJD_ERR_INVALID_ARG"
		- NEIGH  = { PJD_ERR_INVALID_ARG , destructor , P , return , }
		- PARENT = { e , & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { what , P , e , proj_log_error , }
		- SUCC   = { }

126 :	"P"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , & , exception , std , catch , }
		- SUCC   = { tinshift_forward_4d , fwd4d , P , }

126 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , & , exception , std , catch , }
		- SUCC   = { tinshift_forward_4d , fwd4d , P , }

126 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , & , exception , std , catch , }
		- SUCC   = { tinshift_forward_4d , fwd4d , P , }

127 :	"P"
		- NEIGH  = { tinshift_forward_4d , fwd4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { tinshift_reverse_4d , inv4d , P , }

127 :	"fwd4d"
		- NEIGH  = { tinshift_forward_4d , fwd4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { tinshift_reverse_4d , inv4d , P , }

127 :	"tinshift_forward_4d"
		- NEIGH  = { tinshift_forward_4d , fwd4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { tinshift_reverse_4d , inv4d , P , }

128 :	"P"
		- NEIGH  = { tinshift_reverse_4d , inv4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshift_forward_4d , fwd4d , P , }
		- SUCC   = { left , PJ_IO_UNITS_WHATEVER , P , }

128 :	"inv4d"
		- NEIGH  = { tinshift_reverse_4d , inv4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshift_forward_4d , fwd4d , P , }
		- SUCC   = { left , PJ_IO_UNITS_WHATEVER , P , }

128 :	"tinshift_reverse_4d"
		- NEIGH  = { tinshift_reverse_4d , inv4d , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshift_forward_4d , fwd4d , P , }
		- SUCC   = { left , PJ_IO_UNITS_WHATEVER , P , }

129 :	"P"
		- NEIGH  = { left , PJ_IO_UNITS_WHATEVER , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshift_reverse_4d , inv4d , P , }
		- SUCC   = { right , PJ_IO_UNITS_WHATEVER , P , }

129 :	"left"
		- NEIGH  = { left , PJ_IO_UNITS_WHATEVER , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshift_reverse_4d , inv4d , P , }
		- SUCC   = { right , PJ_IO_UNITS_WHATEVER , P , }

129 :	"PJ_IO_UNITS_WHATEVER"
		- NEIGH  = { left , PJ_IO_UNITS_WHATEVER , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tinshift_reverse_4d , inv4d , P , }
		- SUCC   = { right , PJ_IO_UNITS_WHATEVER , P , }

130 :	"P"
		- NEIGH  = { right , PJ_IO_UNITS_WHATEVER , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { left , PJ_IO_UNITS_WHATEVER , P , }
		- SUCC   = { P , return , }

130 :	"right"
		- NEIGH  = { right , PJ_IO_UNITS_WHATEVER , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { left , PJ_IO_UNITS_WHATEVER , P , }
		- SUCC   = { P , return , }

130 :	"PJ_IO_UNITS_WHATEVER"
		- NEIGH  = { right , PJ_IO_UNITS_WHATEVER , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { left , PJ_IO_UNITS_WHATEVER , P , }
		- SUCC   = { P , return , }

132 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , PJ_IO_UNITS_WHATEVER , P , }
		- SUCC   = { }

132 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , PJ_IO_UNITS_WHATEVER , P , }
		- SUCC   = { }

