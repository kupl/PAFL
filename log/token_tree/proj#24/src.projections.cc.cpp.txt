8 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

8 :	"cc"
		- NEIGH  = { cc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"cc_s_forward"
		- NEIGH  = { cc_s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , <= , phi , lp , fabs , if , }

13 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , <= , phi , lp , fabs , if , }

14 :	"if"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , lam , x , xy , }

14 :	"fabs"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , lam , x , xy , }

14 :	"fabs"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , lam , x , xy , }

14 :	"lp"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , lam , x , xy , }

14 :	"phi"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , lam , x , xy , }

14 :	"-"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , lam , x , xy , }

14 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , lam , x , xy , }

14 :	"<="
		- NEIGH  = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , lam , x , xy , }

15 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

15 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

15 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

16 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

16 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

18 :	"xy"
		- NEIGH  = { lp , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , tan , y , xy , }

18 :	"x"
		- NEIGH  = { lp , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , tan , y , xy , }

18 :	"lp"
		- NEIGH  = { lp , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , tan , y , xy , }

18 :	"lam"
		- NEIGH  = { lp , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , <= , phi , lp , fabs , if , }
		- SUCC   = { phi , lp , tan , y , xy , }

19 :	"xy"
		- NEIGH  = { phi , lp , tan , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

19 :	"y"
		- NEIGH  = { phi , lp , tan , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

19 :	"tan"
		- NEIGH  = { phi , lp , tan , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

19 :	"lp"
		- NEIGH  = { phi , lp , tan , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

19 :	"phi"
		- NEIGH  = { phi , lp , tan , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

20 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , y , xy , }
		- SUCC   = { }

20 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , y , xy , }
		- SUCC   = { }

24 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"cc_s_inverse"
		- NEIGH  = { cc_s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

25 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , }

25 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , }

26 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y , xy , atan , phi , lp , }

27 :	"lp"
		- NEIGH  = { y , xy , atan , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { x , xy , lam , lp , }

27 :	"phi"
		- NEIGH  = { y , xy , atan , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { x , xy , lam , lp , }

27 :	"atan"
		- NEIGH  = { y , xy , atan , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { x , xy , lam , lp , }

27 :	"xy"
		- NEIGH  = { y , xy , atan , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { x , xy , lam , lp , }

27 :	"y"
		- NEIGH  = { y , xy , atan , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { x , xy , lam , lp , }

28 :	"lp"
		- NEIGH  = { x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , atan , phi , lp , }
		- SUCC   = { lp , return , }

28 :	"lam"
		- NEIGH  = { x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , atan , phi , lp , }
		- SUCC   = { lp , return , }

28 :	"xy"
		- NEIGH  = { x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , atan , phi , lp , }
		- SUCC   = { lp , return , }

28 :	"x"
		- NEIGH  = { x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , atan , phi , lp , }
		- SUCC   = { lp , return , }

29 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , xy , lam , lp , }
		- SUCC   = { }

29 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , xy , lam , lp , }
		- SUCC   = { }

34 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"cc"
		- NEIGH  = { cc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cc_s_inverse , inv , P , }

35 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cc_s_inverse , inv , P , }

37 :	"P"
		- NEIGH  = { cc_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { cc_s_forward , fwd , P , }

37 :	"inv"
		- NEIGH  = { cc_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { cc_s_forward , fwd , P , }

37 :	"cc_s_inverse"
		- NEIGH  = { cc_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { cc_s_forward , fwd , P , }

38 :	"P"
		- NEIGH  = { cc_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cc_s_inverse , inv , P , }
		- SUCC   = { P , return , }

38 :	"fwd"
		- NEIGH  = { cc_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cc_s_inverse , inv , P , }
		- SUCC   = { P , return , }

38 :	"cc_s_forward"
		- NEIGH  = { cc_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cc_s_inverse , inv , P , }
		- SUCC   = { P , return , }

40 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cc_s_forward , fwd , P , }
		- SUCC   = { }

40 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cc_s_forward , fwd , P , }
		- SUCC   = { }

