52 :	"hex"
		- NEIGH  = { hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

53 :	"iso"
		- NEIGH  = { iso , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

54 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

54 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

54 :	"z"
		- NEIGH  = { z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"hex_xy"
		- NEIGH  = { hex_xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"hex"
		- NEIGH  = { hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"h"
		- NEIGH  = { h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

60 :	"if"
		- NEIGH  = { h , ! , iso , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { >= , x , h , if , }

60 :	"!"
		- NEIGH  = { h , ! , iso , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { >= , x , h , if , }

60 :	"h"
		- NEIGH  = { h , ! , iso , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { >= , x , h , if , }

60 :	"iso"
		- NEIGH  = { h , ! , iso , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { >= , x , h , if , }

60 :	"return"
		- NEIGH  = { return , }
		- PARENT = { h , ! , iso , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"if"
		- NEIGH  = { >= , x , h , if , }
		- PARENT = { }
		- CHILD  = { / , + , - , x , y , h , }
		- PRED   = { h , ! , iso , if , }
		- SUCC   = { iso , h , }

61 :	"h"
		- NEIGH  = { >= , x , h , if , }
		- PARENT = { }
		- CHILD  = { / , + , - , x , y , h , }
		- PRED   = { h , ! , iso , if , }
		- SUCC   = { iso , h , }

61 :	"x"
		- NEIGH  = { >= , x , h , if , }
		- PARENT = { }
		- CHILD  = { / , + , - , x , y , h , }
		- PRED   = { h , ! , iso , if , }
		- SUCC   = { iso , h , }

61 :	">="
		- NEIGH  = { >= , x , h , if , }
		- PARENT = { }
		- CHILD  = { / , + , - , x , y , h , }
		- PRED   = { h , ! , iso , if , }
		- SUCC   = { iso , h , }

62 :	"h"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"y"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"-"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"h"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"y"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"-"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"h"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"x"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"+"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"/"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"h"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"y"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"-"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"h"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"y"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"-"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"h"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"x"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"/"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"h"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { }

67 :	"iso"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { }

70 :	"hex_iso"
		- NEIGH  = { hex_iso , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"hex"
		- NEIGH  = { hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"h"
		- NEIGH  = { h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"if"
		- NEIGH  = { h , iso , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { >= , x , h , if , }

71 :	"h"
		- NEIGH  = { h , iso , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { >= , x , h , if , }

71 :	"iso"
		- NEIGH  = { h , iso , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { >= , x , h , if , }

71 :	"return"
		- NEIGH  = { return , }
		- PARENT = { h , iso , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"if"
		- NEIGH  = { >= , x , h , if , }
		- PARENT = { }
		- CHILD  = { / , + , - , x , y , h , }
		- PRED   = { h , iso , if , }
		- SUCC   = { - , y , x , z , h , }

73 :	"h"
		- NEIGH  = { >= , x , h , if , }
		- PARENT = { }
		- CHILD  = { / , + , - , x , y , h , }
		- PRED   = { h , iso , if , }
		- SUCC   = { - , y , x , z , h , }

73 :	"x"
		- NEIGH  = { >= , x , h , if , }
		- PARENT = { }
		- CHILD  = { / , + , - , x , y , h , }
		- PRED   = { h , iso , if , }
		- SUCC   = { - , y , x , z , h , }

73 :	">="
		- NEIGH  = { >= , x , h , if , }
		- PARENT = { }
		- CHILD  = { / , + , - , x , y , h , }
		- PRED   = { h , iso , if , }
		- SUCC   = { - , y , x , z , h , }

74 :	"h"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"y"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"-"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"h"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"y"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"-"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"h"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"x"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"+"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"/"
		- NEIGH  = { / , + , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"h"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"y"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"-"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"h"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"y"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"-"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"h"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"x"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"/"
		- NEIGH  = { / , - , x , y , h , }
		- PARENT = { >= , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"h"
		- NEIGH  = { - , y , x , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { iso , h , }

80 :	"z"
		- NEIGH  = { - , y , x , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { iso , h , }

80 :	"-"
		- NEIGH  = { - , y , x , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { iso , h , }

80 :	"h"
		- NEIGH  = { - , y , x , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { iso , h , }

80 :	"x"
		- NEIGH  = { - , y , x , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { iso , h , }

80 :	"-"
		- NEIGH  = { - , y , x , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { iso , h , }

80 :	"h"
		- NEIGH  = { - , y , x , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { iso , h , }

80 :	"y"
		- NEIGH  = { - , y , x , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , x , h , if , }
		- SUCC   = { iso , h , }

81 :	"h"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , y , x , z , h , }
		- SUCC   = { }

81 :	"iso"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , y , x , z , h , }
		- SUCC   = { }

84 :	"hexbin2"
		- NEIGH  = { hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

84 :	"width"
		- NEIGH  = { width , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

84 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

84 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

84 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

84 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

84 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

84 :	"j"
		- NEIGH  = { j , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

85 :	"z"
		- NEIGH  = { rz , ry , rx , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { abs_dz , abs_dy , abs_dx , }

85 :	"rx"
		- NEIGH  = { rz , ry , rx , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { abs_dz , abs_dy , abs_dx , }

85 :	"ry"
		- NEIGH  = { rz , ry , rx , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { abs_dz , abs_dy , abs_dx , }

85 :	"rz"
		- NEIGH  = { rz , ry , rx , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { abs_dz , abs_dy , abs_dx , }

86 :	"abs_dx"
		- NEIGH  = { abs_dz , abs_dy , abs_dx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rz , ry , rx , z , }
		- SUCC   = { s , iz , iy , ix , }

86 :	"abs_dy"
		- NEIGH  = { abs_dz , abs_dy , abs_dx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rz , ry , rx , z , }
		- SUCC   = { s , iz , iy , ix , }

86 :	"abs_dz"
		- NEIGH  = { abs_dz , abs_dy , abs_dx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rz , ry , rx , z , }
		- SUCC   = { s , iz , iy , ix , }

87 :	"ix"
		- NEIGH  = { s , iz , iy , ix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { abs_dz , abs_dy , abs_dx , }
		- SUCC   = { h , hex , }

87 :	"iy"
		- NEIGH  = { s , iz , iy , ix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { abs_dz , abs_dy , abs_dx , }
		- SUCC   = { h , hex , }

87 :	"iz"
		- NEIGH  = { s , iz , iy , ix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { abs_dz , abs_dy , abs_dx , }
		- SUCC   = { h , hex , }

87 :	"s"
		- NEIGH  = { s , iz , iy , ix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { abs_dz , abs_dy , abs_dx , }
		- SUCC   = { h , hex , }

88 :	"hex"
		- NEIGH  = { h , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s , iz , iy , ix , }
		- SUCC   = { cos , / , M_PI , * , x , }

88 :	"h"
		- NEIGH  = { h , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s , iz , iy , ix , }
		- SUCC   = { cos , / , M_PI , * , x , }

90 :	"x"
		- NEIGH  = { cos , / , M_PI , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , - , x , y , }

90 :	"x"
		- NEIGH  = { cos , / , M_PI , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , - , x , y , }

90 :	"/"
		- NEIGH  = { cos , / , M_PI , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , - , x , y , }

90 :	"cos"
		- NEIGH  = { cos , / , M_PI , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , - , x , y , }

90 :	"*"
		- NEIGH  = { cos , / , M_PI , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , - , x , y , }

90 :	"M_PI"
		- NEIGH  = { cos , / , M_PI , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , - , x , y , }

90 :	"/"
		- NEIGH  = { cos , / , M_PI , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , - , x , y , }

91 :	"y"
		- NEIGH  = { / , - , x , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , / , M_PI , * , x , }
		- SUCC   = { == , width , if , }

91 :	"y"
		- NEIGH  = { / , - , x , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , / , M_PI , * , x , }
		- SUCC   = { == , width , if , }

91 :	"-"
		- NEIGH  = { / , - , x , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , / , M_PI , * , x , }
		- SUCC   = { == , width , if , }

91 :	"x"
		- NEIGH  = { / , - , x , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , / , M_PI , * , x , }
		- SUCC   = { == , width , if , }

91 :	"/"
		- NEIGH  = { / , - , x , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , / , M_PI , * , x , }
		- SUCC   = { == , width , if , }

94 :	"if"
		- NEIGH  = { == , width , if , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { / , - , x , y , }
		- SUCC   = { width , /= , x , }

94 :	"width"
		- NEIGH  = { == , width , if , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { / , - , x , y , }
		- SUCC   = { width , /= , x , }

94 :	"=="
		- NEIGH  = { == , width , if , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { / , - , x , y , }
		- SUCC   = { width , /= , x , }

95 :	"throw"
		- NEIGH  = { throw , }
		- PARENT = { == , width , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"x"
		- NEIGH  = { width , /= , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , width , if , }
		- SUCC   = { width , /= , y , }

97 :	"/="
		- NEIGH  = { width , /= , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , width , if , }
		- SUCC   = { width , /= , y , }

97 :	"width"
		- NEIGH  = { width , /= , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , width , if , }
		- SUCC   = { width , /= , y , }

98 :	"y"
		- NEIGH  = { width , /= , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { width , /= , x , }
		- SUCC   = { - , y , x , z , }

98 :	"/="
		- NEIGH  = { width , /= , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { width , /= , x , }
		- SUCC   = { - , y , x , z , }

98 :	"width"
		- NEIGH  = { width , /= , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { width , /= , x , }
		- SUCC   = { - , y , x , z , }

100 :	"z"
		- NEIGH  = { - , y , x , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { width , /= , y , }
		- SUCC   = { + , x , floor , rx , }

100 :	"-"
		- NEIGH  = { - , y , x , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { width , /= , y , }
		- SUCC   = { + , x , floor , rx , }

100 :	"x"
		- NEIGH  = { - , y , x , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { width , /= , y , }
		- SUCC   = { + , x , floor , rx , }

100 :	"-"
		- NEIGH  = { - , y , x , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { width , /= , y , }
		- SUCC   = { + , x , floor , rx , }

100 :	"y"
		- NEIGH  = { - , y , x , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { width , /= , y , }
		- SUCC   = { + , x , floor , rx , }

102 :	"rx"
		- NEIGH  = { + , x , floor , rx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , y , x , z , }
		- SUCC   = { lround , rx , ix , }

102 :	"floor"
		- NEIGH  = { + , x , floor , rx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , y , x , z , }
		- SUCC   = { lround , rx , ix , }

102 :	"x"
		- NEIGH  = { + , x , floor , rx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , y , x , z , }
		- SUCC   = { lround , rx , ix , }

102 :	"+"
		- NEIGH  = { + , x , floor , rx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , y , x , z , }
		- SUCC   = { lround , rx , ix , }

103 :	"ix"
		- NEIGH  = { lround , rx , ix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , x , floor , rx , }
		- SUCC   = { + , y , floor , ry , }

103 :	"lround"
		- NEIGH  = { lround , rx , ix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , x , floor , rx , }
		- SUCC   = { + , y , floor , ry , }

103 :	"rx"
		- NEIGH  = { lround , rx , ix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , x , floor , rx , }
		- SUCC   = { + , y , floor , ry , }

104 :	"ry"
		- NEIGH  = { + , y , floor , ry , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lround , rx , ix , }
		- SUCC   = { ry , lround , iy , }

104 :	"floor"
		- NEIGH  = { + , y , floor , ry , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lround , rx , ix , }
		- SUCC   = { ry , lround , iy , }

104 :	"y"
		- NEIGH  = { + , y , floor , ry , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lround , rx , ix , }
		- SUCC   = { ry , lround , iy , }

104 :	"+"
		- NEIGH  = { + , y , floor , ry , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lround , rx , ix , }
		- SUCC   = { ry , lround , iy , }

105 :	"iy"
		- NEIGH  = { ry , lround , iy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , y , floor , ry , }
		- SUCC   = { + , z , floor , rz , }

105 :	"lround"
		- NEIGH  = { ry , lround , iy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , y , floor , ry , }
		- SUCC   = { + , z , floor , rz , }

105 :	"ry"
		- NEIGH  = { ry , lround , iy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , y , floor , ry , }
		- SUCC   = { + , z , floor , rz , }

106 :	"rz"
		- NEIGH  = { + , z , floor , rz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ry , lround , iy , }
		- SUCC   = { rz , lround , iz , }

106 :	"floor"
		- NEIGH  = { + , z , floor , rz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ry , lround , iy , }
		- SUCC   = { rz , lround , iz , }

106 :	"z"
		- NEIGH  = { + , z , floor , rz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ry , lround , iy , }
		- SUCC   = { rz , lround , iz , }

106 :	"+"
		- NEIGH  = { + , z , floor , rz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ry , lround , iy , }
		- SUCC   = { rz , lround , iz , }

107 :	"iz"
		- NEIGH  = { rz , lround , iz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , z , floor , rz , }
		- SUCC   = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }

107 :	"lround"
		- NEIGH  = { rz , lround , iz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , z , floor , rz , }
		- SUCC   = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }

107 :	"rz"
		- NEIGH  = { rz , lround , iz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , z , floor , rz , }
		- SUCC   = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }

108 :	"if"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	"fabs"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	"ix"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	"+"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	"iy"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	">"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	"std"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	"numeric_limits"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	"<"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	">"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	"max"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

108 :	"||"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"fabs"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"ix"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"+"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"iy"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"+"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"iz"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	">"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"std"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"numeric_limits"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"<"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	">"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

109 :	"max"
		- NEIGH  = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { rz , lround , iz , }
		- SUCC   = { iz , iy , + , ix , s , }

110 :	"throw"
		- NEIGH  = { throw , }
		- PARENT = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

113 :	"s"
		- NEIGH  = { iz , iy , + , ix , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- SUCC   = { s , if , }

113 :	"ix"
		- NEIGH  = { iz , iy , + , ix , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- SUCC   = { s , if , }

113 :	"+"
		- NEIGH  = { iz , iy , + , ix , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- SUCC   = { s , if , }

113 :	"iy"
		- NEIGH  = { iz , iy , + , ix , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- SUCC   = { s , if , }

113 :	"+"
		- NEIGH  = { iz , iy , + , ix , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- SUCC   = { s , if , }

113 :	"iz"
		- NEIGH  = { iz , iy , + , ix , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iz , || , max , > , numeric_limits , + , std , < , ix , iy , if , fabs , }
		- SUCC   = { s , if , }

115 :	"if"
		- NEIGH  = { s , if , }
		- PARENT = { }
		- CHILD  = { && , >= , if , abs_dz , z , - , y , abs_dy , rz , x , fabs , ry , rx , abs_dx , }
		- PRED   = { iz , iy , + , ix , s , }
		- SUCC   = { x , ix , h , }

115 :	"s"
		- NEIGH  = { s , if , }
		- PARENT = { }
		- CHILD  = { && , >= , if , abs_dz , z , - , y , abs_dy , rz , x , fabs , ry , rx , abs_dx , }
		- PRED   = { iz , iy , + , ix , s , }
		- SUCC   = { x , ix , h , }

116 :	"abs_dx"
		- NEIGH  = { x , - , rx , fabs , abs_dx , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , - , ry , fabs , abs_dy , }

116 :	"fabs"
		- NEIGH  = { x , - , rx , fabs , abs_dx , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , - , ry , fabs , abs_dy , }

116 :	"rx"
		- NEIGH  = { x , - , rx , fabs , abs_dx , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , - , ry , fabs , abs_dy , }

116 :	"-"
		- NEIGH  = { x , - , rx , fabs , abs_dx , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , - , ry , fabs , abs_dy , }

116 :	"x"
		- NEIGH  = { x , - , rx , fabs , abs_dx , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , - , ry , fabs , abs_dy , }

117 :	"abs_dy"
		- NEIGH  = { y , - , ry , fabs , abs_dy , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { x , - , rx , fabs , abs_dx , }
		- SUCC   = { z , - , rz , fabs , abs_dz , }

117 :	"fabs"
		- NEIGH  = { y , - , ry , fabs , abs_dy , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { x , - , rx , fabs , abs_dx , }
		- SUCC   = { z , - , rz , fabs , abs_dz , }

117 :	"ry"
		- NEIGH  = { y , - , ry , fabs , abs_dy , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { x , - , rx , fabs , abs_dx , }
		- SUCC   = { z , - , rz , fabs , abs_dz , }

117 :	"-"
		- NEIGH  = { y , - , ry , fabs , abs_dy , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { x , - , rx , fabs , abs_dx , }
		- SUCC   = { z , - , rz , fabs , abs_dz , }

117 :	"y"
		- NEIGH  = { y , - , ry , fabs , abs_dy , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { x , - , rx , fabs , abs_dx , }
		- SUCC   = { z , - , rz , fabs , abs_dz , }

118 :	"abs_dz"
		- NEIGH  = { z , - , rz , fabs , abs_dz , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { y , - , ry , fabs , abs_dy , }
		- SUCC   = { && , abs_dy , abs_dz , >= , abs_dx , if , }

118 :	"fabs"
		- NEIGH  = { z , - , rz , fabs , abs_dz , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { y , - , ry , fabs , abs_dy , }
		- SUCC   = { && , abs_dy , abs_dz , >= , abs_dx , if , }

118 :	"rz"
		- NEIGH  = { z , - , rz , fabs , abs_dz , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { y , - , ry , fabs , abs_dy , }
		- SUCC   = { && , abs_dy , abs_dz , >= , abs_dx , if , }

118 :	"-"
		- NEIGH  = { z , - , rz , fabs , abs_dz , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { y , - , ry , fabs , abs_dy , }
		- SUCC   = { && , abs_dy , abs_dz , >= , abs_dx , if , }

118 :	"z"
		- NEIGH  = { z , - , rz , fabs , abs_dz , }
		- PARENT = { s , if , }
		- CHILD  = { }
		- PRED   = { y , - , ry , fabs , abs_dy , }
		- SUCC   = { && , abs_dy , abs_dz , >= , abs_dx , if , }

120 :	"if"
		- NEIGH  = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- PARENT = { s , if , }
		- CHILD  = { && , abs_dx , abs_dz , >= , ix , -= , if , s , abs_dy , }
		- PRED   = { z , - , rz , fabs , abs_dz , }
		- SUCC   = { }

120 :	"abs_dx"
		- NEIGH  = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- PARENT = { s , if , }
		- CHILD  = { && , abs_dx , abs_dz , >= , ix , -= , if , s , abs_dy , }
		- PRED   = { z , - , rz , fabs , abs_dz , }
		- SUCC   = { }

120 :	">="
		- NEIGH  = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- PARENT = { s , if , }
		- CHILD  = { && , abs_dx , abs_dz , >= , ix , -= , if , s , abs_dy , }
		- PRED   = { z , - , rz , fabs , abs_dz , }
		- SUCC   = { }

120 :	"abs_dy"
		- NEIGH  = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- PARENT = { s , if , }
		- CHILD  = { && , abs_dx , abs_dz , >= , ix , -= , if , s , abs_dy , }
		- PRED   = { z , - , rz , fabs , abs_dz , }
		- SUCC   = { }

120 :	"&&"
		- NEIGH  = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- PARENT = { s , if , }
		- CHILD  = { && , abs_dx , abs_dz , >= , ix , -= , if , s , abs_dy , }
		- PRED   = { z , - , rz , fabs , abs_dz , }
		- SUCC   = { }

120 :	"abs_dx"
		- NEIGH  = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- PARENT = { s , if , }
		- CHILD  = { && , abs_dx , abs_dz , >= , ix , -= , if , s , abs_dy , }
		- PRED   = { z , - , rz , fabs , abs_dz , }
		- SUCC   = { }

120 :	">="
		- NEIGH  = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- PARENT = { s , if , }
		- CHILD  = { && , abs_dx , abs_dz , >= , ix , -= , if , s , abs_dy , }
		- PRED   = { z , - , rz , fabs , abs_dz , }
		- SUCC   = { }

120 :	"abs_dz"
		- NEIGH  = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- PARENT = { s , if , }
		- CHILD  = { && , abs_dx , abs_dz , >= , ix , -= , if , s , abs_dy , }
		- PRED   = { z , - , rz , fabs , abs_dz , }
		- SUCC   = { }

121 :	"ix"
		- NEIGH  = { s , -= , ix , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"-="
		- NEIGH  = { s , -= , ix , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"s"
		- NEIGH  = { s , -= , ix , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

122 :	"if"
		- NEIGH  = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { s , iz , -= , iy , }
		- PRED   = { }
		- SUCC   = { }

122 :	"abs_dy"
		- NEIGH  = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { s , iz , -= , iy , }
		- PRED   = { }
		- SUCC   = { }

122 :	">="
		- NEIGH  = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { s , iz , -= , iy , }
		- PRED   = { }
		- SUCC   = { }

122 :	"abs_dx"
		- NEIGH  = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { s , iz , -= , iy , }
		- PRED   = { }
		- SUCC   = { }

122 :	"&&"
		- NEIGH  = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { s , iz , -= , iy , }
		- PRED   = { }
		- SUCC   = { }

122 :	"abs_dy"
		- NEIGH  = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { s , iz , -= , iy , }
		- PRED   = { }
		- SUCC   = { }

122 :	">="
		- NEIGH  = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { s , iz , -= , iy , }
		- PRED   = { }
		- SUCC   = { }

122 :	"abs_dz"
		- NEIGH  = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- PARENT = { && , abs_dy , abs_dz , >= , abs_dx , if , }
		- CHILD  = { s , iz , -= , iy , }
		- PRED   = { }
		- SUCC   = { }

123 :	"iy"
		- NEIGH  = { s , -= , iy , }
		- PARENT = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"-="
		- NEIGH  = { s , -= , iy , }
		- PARENT = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"s"
		- NEIGH  = { s , -= , iy , }
		- PARENT = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

125 :	"iz"
		- NEIGH  = { s , -= , iz , }
		- PARENT = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

125 :	"-="
		- NEIGH  = { s , -= , iz , }
		- PARENT = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

125 :	"s"
		- NEIGH  = { s , -= , iz , }
		- PARENT = { && , abs_dz , >= , abs_dy , abs_dx , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"h"
		- NEIGH  = { x , ix , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s , if , }
		- SUCC   = { iy , y , h , }

128 :	"x"
		- NEIGH  = { x , ix , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s , if , }
		- SUCC   = { iy , y , h , }

128 :	"ix"
		- NEIGH  = { x , ix , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s , if , }
		- SUCC   = { iy , y , h , }

129 :	"h"
		- NEIGH  = { iy , y , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , ix , h , }
		- SUCC   = { iz , z , h , }

129 :	"y"
		- NEIGH  = { iy , y , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , ix , h , }
		- SUCC   = { iz , z , h , }

129 :	"iy"
		- NEIGH  = { iy , y , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , ix , h , }
		- SUCC   = { iz , z , h , }

130 :	"h"
		- NEIGH  = { iz , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iy , y , h , }
		- SUCC   = { iso , h , }

130 :	"z"
		- NEIGH  = { iz , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iy , y , h , }
		- SUCC   = { iso , h , }

130 :	"iz"
		- NEIGH  = { iz , z , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iy , y , h , }
		- SUCC   = { iso , h , }

131 :	"h"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iz , z , h , }
		- SUCC   = { & , h , hex_xy , }

131 :	"iso"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iz , z , h , }
		- SUCC   = { & , h , hex_xy , }

133 :	"hex_xy"
		- NEIGH  = { & , h , hex_xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iso , h , }
		- SUCC   = { h , i , x , * , }

133 :	"&"
		- NEIGH  = { & , h , hex_xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iso , h , }
		- SUCC   = { h , i , x , * , }

133 :	"h"
		- NEIGH  = { & , h , hex_xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iso , h , }
		- SUCC   = { h , i , x , * , }

134 :	"*"
		- NEIGH  = { h , i , x , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , h , hex_xy , }
		- SUCC   = { h , j , y , * , }

134 :	"i"
		- NEIGH  = { h , i , x , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , h , hex_xy , }
		- SUCC   = { h , j , y , * , }

134 :	"h"
		- NEIGH  = { h , i , x , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , h , hex_xy , }
		- SUCC   = { h , j , y , * , }

134 :	"x"
		- NEIGH  = { h , i , x , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , h , hex_xy , }
		- SUCC   = { h , j , y , * , }

135 :	"*"
		- NEIGH  = { h , j , y , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , i , x , * , }
		- SUCC   = { }

135 :	"j"
		- NEIGH  = { h , j , y , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , i , x , * , }
		- SUCC   = { }

135 :	"h"
		- NEIGH  = { h , j , y , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , i , x , * , }
		- SUCC   = { }

135 :	"y"
		- NEIGH  = { h , j , y , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , i , x , * , }
		- SUCC   = { }

139 :	"isea_poly"
		- NEIGH  = { isea_poly , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"ISEA_NONE"
		- NEIGH  = { ISEA_NONE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"ISEA_ICOSAHEDRON"
		- NEIGH  = { ISEA_ICOSAHEDRON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"isea_topology"
		- NEIGH  = { isea_topology , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"ISEA_HEXAGON"
		- NEIGH  = { ISEA_HEXAGON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"ISEA_TRIANGLE"
		- NEIGH  = { ISEA_TRIANGLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"ISEA_DIAMOND"
		- NEIGH  = { ISEA_DIAMOND , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"isea_address_form"
		- NEIGH  = { isea_address_form , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"ISEA_GEO"
		- NEIGH  = { ISEA_GEO , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"ISEA_Q2DI"
		- NEIGH  = { ISEA_Q2DI , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"ISEA_SEQNUM"
		- NEIGH  = { ISEA_SEQNUM , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"ISEA_INTERLEAVE"
		- NEIGH  = { ISEA_INTERLEAVE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"ISEA_PLANE"
		- NEIGH  = { ISEA_PLANE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"ISEA_Q2DD"
		- NEIGH  = { ISEA_Q2DD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"ISEA_PROJTRI"
		- NEIGH  = { ISEA_PROJTRI , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"ISEA_VERTEX2DD"
		- NEIGH  = { ISEA_VERTEX2DD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"ISEA_HEX"
		- NEIGH  = { ISEA_HEX , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

147 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

148 :	"polyhedron"
		- NEIGH  = { polyhedron , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

149 :	"o_lat"
		- NEIGH  = { o_lat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

149 :	"o_lon"
		- NEIGH  = { o_lon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

149 :	"o_az"
		- NEIGH  = { o_az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"pole"
		- NEIGH  = { pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"topology"
		- NEIGH  = { topology , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"aperture"
		- NEIGH  = { aperture , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

153 :	"resolution"
		- NEIGH  = { resolution , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

154 :	"radius"
		- NEIGH  = { radius , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

155 :	"output"
		- NEIGH  = { output , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

156 :	"triangle"
		- NEIGH  = { triangle , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

157 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

158 :	"serial"
		- NEIGH  = { serial , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

163 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"lon"
		- NEIGH  = { lon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"lat"
		- NEIGH  = { lat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

177 :	"snyder_polyhedron"
		- NEIGH  = { snyder_polyhedron , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

178 :	"SNYDER_POLY_HEXAGON"
		- NEIGH  = { SNYDER_POLY_HEXAGON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

178 :	"SNYDER_POLY_PENTAGON"
		- NEIGH  = { SNYDER_POLY_PENTAGON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

179 :	"SNYDER_POLY_TETRAHEDRON"
		- NEIGH  = { SNYDER_POLY_TETRAHEDRON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

179 :	"SNYDER_POLY_CUBE"
		- NEIGH  = { SNYDER_POLY_CUBE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

180 :	"SNYDER_POLY_OCTAHEDRON"
		- NEIGH  = { SNYDER_POLY_OCTAHEDRON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

180 :	"SNYDER_POLY_DODECAHEDRON"
		- NEIGH  = { SNYDER_POLY_DODECAHEDRON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

181 :	"SNYDER_POLY_ICOSAHEDRON"
		- NEIGH  = { SNYDER_POLY_ICOSAHEDRON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

186 :	"snyder_constants"
		- NEIGH  = { snyder_constants , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"G"
		- NEIGH  = { G , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"theta"
		- NEIGH  = { theta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"ea_w"
		- NEIGH  = { ea_w , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"ea_a"
		- NEIGH  = { ea_a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"ea_b"
		- NEIGH  = { ea_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"g_w"
		- NEIGH  = { g_w , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"g_a"
		- NEIGH  = { g_a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"g_b"
		- NEIGH  = { g_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

194 :	"snyder_constants"
		- NEIGH  = { snyder_constants , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

194 :	"constants"
		- NEIGH  = { constants , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"vertex"
		- NEIGH  = { vertex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

205 :	"M_PI_2"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

206 :	"M_PI"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

208 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

211 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

211 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

212 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

212 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

213 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

215 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

216 :	"-"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

216 :	"M_PI_2"
		- NEIGH  = { M_PI , - , M_PI_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

221 :	"tri_v1"
		- NEIGH  = { tri_v1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

224 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

224 :	"icostriangles"
		- NEIGH  = { icostriangles , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

226 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

227 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

231 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

232 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

236 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

236 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"M_PI"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

244 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

245 :	"M_PI"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

245 :	"-"
		- NEIGH  = { M_PI , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"az_adjustment"
		- NEIGH  = { az_adjustment , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"triangle"
		- NEIGH  = { triangle , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

250 :	"adj"
		- NEIGH  = { adj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { v , isea_geo , }

252 :	"isea_geo"
		- NEIGH  = { v , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { adj , }
		- SUCC   = { c , isea_geo , }

252 :	"v"
		- NEIGH  = { v , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { adj , }
		- SUCC   = { c , isea_geo , }

253 :	"isea_geo"
		- NEIGH  = { c , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , isea_geo , }
		- SUCC   = { triangle , tri_v1 , vertex , v , }

253 :	"c"
		- NEIGH  = { c , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , isea_geo , }
		- SUCC   = { triangle , tri_v1 , vertex , v , }

255 :	"v"
		- NEIGH  = { triangle , tri_v1 , vertex , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , isea_geo , }
		- SUCC   = { triangle , icostriangles , c , }

255 :	"vertex"
		- NEIGH  = { triangle , tri_v1 , vertex , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , isea_geo , }
		- SUCC   = { triangle , icostriangles , c , }

255 :	"tri_v1"
		- NEIGH  = { triangle , tri_v1 , vertex , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , isea_geo , }
		- SUCC   = { triangle , icostriangles , c , }

255 :	"triangle"
		- NEIGH  = { triangle , tri_v1 , vertex , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , isea_geo , }
		- SUCC   = { triangle , icostriangles , c , }

256 :	"c"
		- NEIGH  = { triangle , icostriangles , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , tri_v1 , vertex , v , }
		- SUCC   = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }

256 :	"icostriangles"
		- NEIGH  = { triangle , icostriangles , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , tri_v1 , vertex , v , }
		- SUCC   = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }

256 :	"triangle"
		- NEIGH  = { triangle , icostriangles , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , tri_v1 , vertex , v , }
		- SUCC   = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }

260 :	"adj"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"atan2"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"cos"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"v"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"lat"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"*"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"sin"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"v"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"lon"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"-"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"c"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

260 :	"lon"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

261 :	"cos"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

261 :	"c"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

261 :	"lat"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

261 :	"*"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

261 :	"sin"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

261 :	"v"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

261 :	"lat"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"-"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"sin"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"c"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"lat"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"*"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"cos"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"v"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"lat"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"*"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"cos"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"v"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"lon"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"-"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"c"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

262 :	"lon"
		- NEIGH  = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , icostriangles , c , }
		- SUCC   = { adj , return , }

263 :	"return"
		- NEIGH  = { adj , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- SUCC   = { }

263 :	"adj"
		- NEIGH  = { adj , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , lon , sin , * , adj , lat , v , cos , - , atan2 , }
		- SUCC   = { }

266 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"isea_triangle_xy"
		- NEIGH  = { isea_triangle_xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"triangle"
		- NEIGH  = { triangle , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

268 :	"isea_pt"
		- NEIGH  = { c , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Rprime , }

268 :	"c"
		- NEIGH  = { c , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Rprime , }

269 :	"Rprime"
		- NEIGH  = { Rprime , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , isea_pt , }
		- SUCC   = { % , - , triangle , }

271 :	"triangle"
		- NEIGH  = { % , - , triangle , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { - , triangle , % , * , x , c , }

271 :	"triangle"
		- NEIGH  = { % , - , triangle , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { - , triangle , % , * , x , c , }

271 :	"-"
		- NEIGH  = { % , - , triangle , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { - , triangle , % , * , x , c , }

271 :	"%"
		- NEIGH  = { % , - , triangle , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { - , triangle , % , * , x , c , }

273 :	"c"
		- NEIGH  = { - , triangle , % , * , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , - , triangle , }
		- SUCC   = { > , triangle , if , }

273 :	"x"
		- NEIGH  = { - , triangle , % , * , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , - , triangle , }
		- SUCC   = { > , triangle , if , }

273 :	"*"
		- NEIGH  = { - , triangle , % , * , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , - , triangle , }
		- SUCC   = { > , triangle , if , }

273 :	"triangle"
		- NEIGH  = { - , triangle , % , * , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , - , triangle , }
		- SUCC   = { > , triangle , if , }

273 :	"%"
		- NEIGH  = { - , triangle , % , * , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , - , triangle , }
		- SUCC   = { > , triangle , if , }

273 :	"-"
		- NEIGH  = { - , triangle , % , * , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , - , triangle , }
		- SUCC   = { > , triangle , if , }

273 :	"*"
		- NEIGH  = { - , triangle , % , * , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , - , triangle , }
		- SUCC   = { > , triangle , if , }

274 :	"if"
		- NEIGH  = { > , triangle , if , }
		- PARENT = { }
		- CHILD  = { x , += , c , }
		- PRED   = { - , triangle , % , * , x , c , }
		- SUCC   = { triangle , / , switch , }

274 :	"triangle"
		- NEIGH  = { > , triangle , if , }
		- PARENT = { }
		- CHILD  = { x , += , c , }
		- PRED   = { - , triangle , % , * , x , c , }
		- SUCC   = { triangle , / , switch , }

274 :	">"
		- NEIGH  = { > , triangle , if , }
		- PARENT = { }
		- CHILD  = { x , += , c , }
		- PRED   = { - , triangle , % , * , x , c , }
		- SUCC   = { triangle , / , switch , }

275 :	"c"
		- NEIGH  = { x , += , c , }
		- PARENT = { > , triangle , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

275 :	"x"
		- NEIGH  = { x , += , c , }
		- PARENT = { > , triangle , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

275 :	"+="
		- NEIGH  = { x , += , c , }
		- PARENT = { > , triangle , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

277 :	"switch"
		- NEIGH  = { triangle , / , switch , }
		- PARENT = { }
		- CHILD  = { EXIT_FAILURE , exit , - , break , * , y , c , }
		- PRED   = { > , triangle , if , }
		- SUCC   = { Rprime , *= , x , c , }

277 :	"triangle"
		- NEIGH  = { triangle , / , switch , }
		- PARENT = { }
		- CHILD  = { EXIT_FAILURE , exit , - , break , * , y , c , }
		- PRED   = { > , triangle , if , }
		- SUCC   = { Rprime , *= , x , c , }

277 :	"/"
		- NEIGH  = { triangle , / , switch , }
		- PARENT = { }
		- CHILD  = { EXIT_FAILURE , exit , - , break , * , y , c , }
		- PRED   = { > , triangle , if , }
		- SUCC   = { Rprime , *= , x , c , }

279 :	"c"
		- NEIGH  = { * , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

279 :	"y"
		- NEIGH  = { * , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

279 :	"*"
		- NEIGH  = { * , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

280 :	"break"
		- NEIGH  = { break , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { * , y , c , }
		- SUCC   = { }

282 :	"c"
		- NEIGH  = { y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

282 :	"y"
		- NEIGH  = { y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

283 :	"break"
		- NEIGH  = { break , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { y , c , }
		- SUCC   = { }

285 :	"c"
		- NEIGH  = { - , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

285 :	"y"
		- NEIGH  = { - , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

285 :	"-"
		- NEIGH  = { - , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

286 :	"break"
		- NEIGH  = { break , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { - , y , c , }
		- SUCC   = { }

288 :	"c"
		- NEIGH  = { - , * , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

288 :	"y"
		- NEIGH  = { - , * , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

288 :	"-"
		- NEIGH  = { - , * , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

288 :	"*"
		- NEIGH  = { - , * , y , c , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

289 :	"break"
		- NEIGH  = { break , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { - , * , y , c , }
		- SUCC   = { }

292 :	"exit"
		- NEIGH  = { EXIT_FAILURE , exit , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"EXIT_FAILURE"
		- NEIGH  = { EXIT_FAILURE , exit , }
		- PARENT = { triangle , / , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

294 :	"c"
		- NEIGH  = { Rprime , *= , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , / , switch , }
		- SUCC   = { Rprime , *= , y , c , }

294 :	"x"
		- NEIGH  = { Rprime , *= , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , / , switch , }
		- SUCC   = { Rprime , *= , y , c , }

294 :	"*="
		- NEIGH  = { Rprime , *= , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , / , switch , }
		- SUCC   = { Rprime , *= , y , c , }

294 :	"Rprime"
		- NEIGH  = { Rprime , *= , x , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { triangle , / , switch , }
		- SUCC   = { Rprime , *= , y , c , }

295 :	"c"
		- NEIGH  = { Rprime , *= , y , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , *= , x , c , }
		- SUCC   = { c , return , }

295 :	"y"
		- NEIGH  = { Rprime , *= , y , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , *= , x , c , }
		- SUCC   = { c , return , }

295 :	"*="
		- NEIGH  = { Rprime , *= , y , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , *= , x , c , }
		- SUCC   = { c , return , }

295 :	"Rprime"
		- NEIGH  = { Rprime , *= , y , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , *= , x , c , }
		- SUCC   = { c , return , }

297 :	"return"
		- NEIGH  = { c , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , *= , y , c , }
		- SUCC   = { }

297 :	"c"
		- NEIGH  = { c , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Rprime , *= , y , c , }
		- SUCC   = { }

301 :	"sph_azimuth"
		- NEIGH  = { sph_azimuth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

301 :	"f_lon"
		- NEIGH  = { f_lon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

301 :	"f_lat"
		- NEIGH  = { f_lat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

302 :	"t_lon"
		- NEIGH  = { t_lon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

302 :	"t_lat"
		- NEIGH  = { t_lat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

304 :	"az"
		- NEIGH  = { az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }

306 :	"az"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

306 :	"atan2"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

306 :	"cos"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

306 :	"t_lat"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

306 :	"*"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

306 :	"sin"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

306 :	"t_lon"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

306 :	"-"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

306 :	"f_lon"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

307 :	"cos"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

307 :	"f_lat"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

307 :	"*"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

307 :	"sin"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

307 :	"t_lat"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"-"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"sin"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"f_lat"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"*"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"cos"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"t_lat"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"*"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"cos"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"t_lon"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"-"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

308 :	"f_lon"
		- NEIGH  = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az , }
		- SUCC   = { az , return , }

310 :	"return"
		- NEIGH  = { az , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- SUCC   = { }

310 :	"az"
		- NEIGH  = { az , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f_lat , t_lon , sin , f_lon , * , t_lat , cos , - , atan2 , az , }
		- SUCC   = { }

320 :	"isea_snyder_forward"
		- NEIGH  = { isea_snyder_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"ll"
		- NEIGH  = { ll , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"out"
		- NEIGH  = { out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

322 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { g , }

328 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { G , }

334 :	"G"
		- NEIGH  = { G , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , }
		- SUCC   = { theta , }

340 :	"theta"
		- NEIGH  = { theta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { G , }
		- SUCC   = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }

343 :	"q"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

343 :	"Rprime"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

343 :	"H"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

343 :	"Ag"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

343 :	"Azprime"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

343 :	"Az"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

343 :	"dprime"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

343 :	"f"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

343 :	"rho"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

344 :	"x"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

344 :	"y"
		- NEIGH  = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { theta , }
		- SUCC   = { az_offset , tan_g , cot_theta , }

347 :	"cot_theta"
		- NEIGH  = { az_offset , tan_g , cot_theta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- SUCC   = { Az_adjust_multiples , }

347 :	"tan_g"
		- NEIGH  = { az_offset , tan_g , cot_theta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- SUCC   = { Az_adjust_multiples , }

347 :	"az_offset"
		- NEIGH  = { az_offset , tan_g , cot_theta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , f , Az , y , H , Ag , rho , Azprime , dprime , Rprime , q , }
		- SUCC   = { Az_adjust_multiples , }

350 :	"Az_adjust_multiples"
		- NEIGH  = { Az_adjust_multiples , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { az_offset , tan_g , cot_theta , }
		- SUCC   = { c , snyder_constants , }

352 :	"snyder_constants"
		- NEIGH  = { c , snyder_constants , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Az_adjust_multiples , }
		- SUCC   = { constants , SNYDER_POLY_ICOSAHEDRON , c , }

352 :	"c"
		- NEIGH  = { c , snyder_constants , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Az_adjust_multiples , }
		- SUCC   = { constants , SNYDER_POLY_ICOSAHEDRON , c , }

360 :	"c"
		- NEIGH  = { constants , SNYDER_POLY_ICOSAHEDRON , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , snyder_constants , }
		- SUCC   = { c , PJ_TORAD , theta , }

360 :	"constants"
		- NEIGH  = { constants , SNYDER_POLY_ICOSAHEDRON , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , snyder_constants , }
		- SUCC   = { c , PJ_TORAD , theta , }

360 :	"SNYDER_POLY_ICOSAHEDRON"
		- NEIGH  = { constants , SNYDER_POLY_ICOSAHEDRON , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , snyder_constants , }
		- SUCC   = { c , PJ_TORAD , theta , }

361 :	"theta"
		- NEIGH  = { c , PJ_TORAD , theta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { constants , SNYDER_POLY_ICOSAHEDRON , c , }
		- SUCC   = { c , PJ_TORAD , g , }

361 :	"PJ_TORAD"
		- NEIGH  = { c , PJ_TORAD , theta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { constants , SNYDER_POLY_ICOSAHEDRON , c , }
		- SUCC   = { c , PJ_TORAD , g , }

361 :	"c"
		- NEIGH  = { c , PJ_TORAD , theta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { constants , SNYDER_POLY_ICOSAHEDRON , c , }
		- SUCC   = { c , PJ_TORAD , g , }

361 :	"theta"
		- NEIGH  = { c , PJ_TORAD , theta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { constants , SNYDER_POLY_ICOSAHEDRON , c , }
		- SUCC   = { c , PJ_TORAD , g , }

362 :	"g"
		- NEIGH  = { c , PJ_TORAD , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , PJ_TORAD , theta , }
		- SUCC   = { c , PJ_TORAD , G , }

362 :	"PJ_TORAD"
		- NEIGH  = { c , PJ_TORAD , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , PJ_TORAD , theta , }
		- SUCC   = { c , PJ_TORAD , G , }

362 :	"c"
		- NEIGH  = { c , PJ_TORAD , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , PJ_TORAD , theta , }
		- SUCC   = { c , PJ_TORAD , G , }

362 :	"g"
		- NEIGH  = { c , PJ_TORAD , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , PJ_TORAD , theta , }
		- SUCC   = { c , PJ_TORAD , G , }

363 :	"G"
		- NEIGH  = { c , PJ_TORAD , G , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , PJ_TORAD , g , }
		- SUCC   = { ++ , <= , i , for , }

363 :	"PJ_TORAD"
		- NEIGH  = { c , PJ_TORAD , G , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , PJ_TORAD , g , }
		- SUCC   = { ++ , <= , i , for , }

363 :	"c"
		- NEIGH  = { c , PJ_TORAD , G , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , PJ_TORAD , g , }
		- SUCC   = { ++ , <= , i , for , }

363 :	"G"
		- NEIGH  = { c , PJ_TORAD , G , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , PJ_TORAD , g , }
		- SUCC   = { ++ , <= , i , for , }

365 :	"for"
		- NEIGH  = { ++ , <= , i , for , }
		- PARENT = { }
		- CHILD  = { x , out , += , rho , Azprime , G , H , tan_g , theta , tan , DBL_EPSILON , while , < , M_PI , -= , az_offset , sph_azimuth , Az , > , return , Az_adjust_multiples , az_adjustment , cos , center , + , i , / , ll , y , q , sin , lat , Rprime , if , icostriangles , acos , dprime , cot_theta , lon , z , f , Ag , * , g , - , atan2 , isea_geo , }
		- PRED   = { c , PJ_TORAD , G , }
		- SUCC   = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }

365 :	"i"
		- NEIGH  = { ++ , <= , i , for , }
		- PARENT = { }
		- CHILD  = { x , out , += , rho , Azprime , G , H , tan_g , theta , tan , DBL_EPSILON , while , < , M_PI , -= , az_offset , sph_azimuth , Az , > , return , Az_adjust_multiples , az_adjustment , cos , center , + , i , / , ll , y , q , sin , lat , Rprime , if , icostriangles , acos , dprime , cot_theta , lon , z , f , Ag , * , g , - , atan2 , isea_geo , }
		- PRED   = { c , PJ_TORAD , G , }
		- SUCC   = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }

365 :	"i"
		- NEIGH  = { ++ , <= , i , for , }
		- PARENT = { }
		- CHILD  = { x , out , += , rho , Azprime , G , H , tan_g , theta , tan , DBL_EPSILON , while , < , M_PI , -= , az_offset , sph_azimuth , Az , > , return , Az_adjust_multiples , az_adjustment , cos , center , + , i , / , ll , y , q , sin , lat , Rprime , if , icostriangles , acos , dprime , cot_theta , lon , z , f , Ag , * , g , - , atan2 , isea_geo , }
		- PRED   = { c , PJ_TORAD , G , }
		- SUCC   = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }

365 :	"<="
		- NEIGH  = { ++ , <= , i , for , }
		- PARENT = { }
		- CHILD  = { x , out , += , rho , Azprime , G , H , tan_g , theta , tan , DBL_EPSILON , while , < , M_PI , -= , az_offset , sph_azimuth , Az , > , return , Az_adjust_multiples , az_adjustment , cos , center , + , i , / , ll , y , q , sin , lat , Rprime , if , icostriangles , acos , dprime , cot_theta , lon , z , f , Ag , * , g , - , atan2 , isea_geo , }
		- PRED   = { c , PJ_TORAD , G , }
		- SUCC   = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }

365 :	"i"
		- NEIGH  = { ++ , <= , i , for , }
		- PARENT = { }
		- CHILD  = { x , out , += , rho , Azprime , G , H , tan_g , theta , tan , DBL_EPSILON , while , < , M_PI , -= , az_offset , sph_azimuth , Az , > , return , Az_adjust_multiples , az_adjustment , cos , center , + , i , / , ll , y , q , sin , lat , Rprime , if , icostriangles , acos , dprime , cot_theta , lon , z , f , Ag , * , g , - , atan2 , isea_geo , }
		- PRED   = { c , PJ_TORAD , G , }
		- SUCC   = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }

365 :	"++"
		- NEIGH  = { ++ , <= , i , for , }
		- PARENT = { }
		- CHILD  = { x , out , += , rho , Azprime , G , H , tan_g , theta , tan , DBL_EPSILON , while , < , M_PI , -= , az_offset , sph_azimuth , Az , > , return , Az_adjust_multiples , az_adjustment , cos , center , + , i , / , ll , y , q , sin , lat , Rprime , if , icostriangles , acos , dprime , cot_theta , lon , z , f , Ag , * , g , - , atan2 , isea_geo , }
		- PRED   = { c , PJ_TORAD , G , }
		- SUCC   = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }

366 :	"z"
		- NEIGH  = { z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { center , isea_geo , }

367 :	"isea_geo"
		- NEIGH  = { center , isea_geo , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { z , }
		- SUCC   = { icostriangles , i , center , }

367 :	"center"
		- NEIGH  = { center , isea_geo , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { z , }
		- SUCC   = { icostriangles , i , center , }

369 :	"center"
		- NEIGH  = { icostriangles , i , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { center , isea_geo , }
		- SUCC   = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }

369 :	"icostriangles"
		- NEIGH  = { icostriangles , i , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { center , isea_geo , }
		- SUCC   = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }

369 :	"i"
		- NEIGH  = { icostriangles , i , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { center , isea_geo , }
		- SUCC   = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }

372 :	"z"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

372 :	"acos"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

372 :	"sin"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

372 :	"center"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

372 :	"lat"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

372 :	"*"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

372 :	"sin"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

372 :	"ll"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

372 :	"lat"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"+"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"cos"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"center"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"lat"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"*"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"cos"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"ll"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"lat"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"*"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"cos"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"ll"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"lon"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"-"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"center"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

373 :	"lon"
		- NEIGH  = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { icostriangles , i , center , }
		- SUCC   = { + , > , z , g , if , }

375 :	"if"
		- NEIGH  = { + , > , z , g , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- SUCC   = { ll , Az , lon , lat , sph_azimuth , center , }

375 :	"z"
		- NEIGH  = { + , > , z , g , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- SUCC   = { ll , Az , lon , lat , sph_azimuth , center , }

375 :	">"
		- NEIGH  = { + , > , z , g , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- SUCC   = { ll , Az , lon , lat , sph_azimuth , center , }

375 :	"g"
		- NEIGH  = { + , > , z , g , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- SUCC   = { ll , Az , lon , lat , sph_azimuth , center , }

375 :	"+"
		- NEIGH  = { + , > , z , g , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { cos , + , - , ll , lat , lon , sin , center , acos , * , z , }
		- SUCC   = { ll , Az , lon , lat , sph_azimuth , center , }

376 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { + , > , z , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

379 :	"Az"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

379 :	"sph_azimuth"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

379 :	"center"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

379 :	"lon"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

379 :	"center"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

379 :	"lat"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

379 :	"ll"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

379 :	"lon"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

379 :	"ll"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

379 :	"lat"
		- NEIGH  = { ll , Az , lon , lat , sph_azimuth , center , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { + , > , z , g , if , }
		- SUCC   = { i , az_adjustment , az_offset , }

384 :	"az_offset"
		- NEIGH  = { i , az_adjustment , az_offset , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { ll , Az , lon , lat , sph_azimuth , center , }
		- SUCC   = { az_offset , -= , Az , }

384 :	"az_adjustment"
		- NEIGH  = { i , az_adjustment , az_offset , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { ll , Az , lon , lat , sph_azimuth , center , }
		- SUCC   = { az_offset , -= , Az , }

384 :	"i"
		- NEIGH  = { i , az_adjustment , az_offset , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { ll , Az , lon , lat , sph_azimuth , center , }
		- SUCC   = { az_offset , -= , Az , }

386 :	"Az"
		- NEIGH  = { az_offset , -= , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { i , az_adjustment , az_offset , }
		- SUCC   = { < , Az , if , }

386 :	"-="
		- NEIGH  = { az_offset , -= , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { i , az_adjustment , az_offset , }
		- SUCC   = { < , Az , if , }

386 :	"az_offset"
		- NEIGH  = { az_offset , -= , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { i , az_adjustment , az_offset , }
		- SUCC   = { < , Az , if , }

390 :	"if"
		- NEIGH  = { < , Az , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { M_PI , * , += , Az , }
		- PRED   = { az_offset , -= , Az , }
		- SUCC   = { Az_adjust_multiples , }

390 :	"Az"
		- NEIGH  = { < , Az , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { M_PI , * , += , Az , }
		- PRED   = { az_offset , -= , Az , }
		- SUCC   = { Az_adjust_multiples , }

390 :	"<"
		- NEIGH  = { < , Az , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { M_PI , * , += , Az , }
		- PRED   = { az_offset , -= , Az , }
		- SUCC   = { Az_adjust_multiples , }

391 :	"Az"
		- NEIGH  = { M_PI , * , += , Az , }
		- PARENT = { < , Az , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

391 :	"+="
		- NEIGH  = { M_PI , * , += , Az , }
		- PARENT = { < , Az , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

391 :	"*"
		- NEIGH  = { M_PI , * , += , Az , }
		- PARENT = { < , Az , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

391 :	"M_PI"
		- NEIGH  = { M_PI , * , += , Az , }
		- PARENT = { < , Az , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

402 :	"Az_adjust_multiples"
		- NEIGH  = { Az_adjust_multiples , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { < , Az , if , }
		- SUCC   = { < , Az , while , }

403 :	"while"
		- NEIGH  = { < , Az , while , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { Az_adjust_multiples , -- , += , Az , }
		- PRED   = { Az_adjust_multiples , }
		- SUCC   = { Az , DBL_EPSILON , + , > , while , }

403 :	"Az"
		- NEIGH  = { < , Az , while , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { Az_adjust_multiples , -- , += , Az , }
		- PRED   = { Az_adjust_multiples , }
		- SUCC   = { Az , DBL_EPSILON , + , > , while , }

403 :	"<"
		- NEIGH  = { < , Az , while , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { Az_adjust_multiples , -- , += , Az , }
		- PRED   = { Az_adjust_multiples , }
		- SUCC   = { Az , DBL_EPSILON , + , > , while , }

404 :	"Az"
		- NEIGH  = { += , Az , }
		- PARENT = { < , Az , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { -- , Az_adjust_multiples , }

404 :	"+="
		- NEIGH  = { += , Az , }
		- PARENT = { < , Az , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { -- , Az_adjust_multiples , }

405 :	"Az_adjust_multiples"
		- NEIGH  = { -- , Az_adjust_multiples , }
		- PARENT = { < , Az , while , }
		- CHILD  = { }
		- PRED   = { += , Az , }
		- SUCC   = { }

405 :	"--"
		- NEIGH  = { -- , Az_adjust_multiples , }
		- PARENT = { < , Az , while , }
		- CHILD  = { }
		- PRED   = { += , Az , }
		- SUCC   = { }

407 :	"while"
		- NEIGH  = { Az , DBL_EPSILON , + , > , while , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { ++ , Az_adjust_multiples , -= , Az , }
		- PRED   = { < , Az , while , }
		- SUCC   = { theta , tan , / , cot_theta , }

407 :	"Az"
		- NEIGH  = { Az , DBL_EPSILON , + , > , while , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { ++ , Az_adjust_multiples , -= , Az , }
		- PRED   = { < , Az , while , }
		- SUCC   = { theta , tan , / , cot_theta , }

407 :	">"
		- NEIGH  = { Az , DBL_EPSILON , + , > , while , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { ++ , Az_adjust_multiples , -= , Az , }
		- PRED   = { < , Az , while , }
		- SUCC   = { theta , tan , / , cot_theta , }

407 :	"+"
		- NEIGH  = { Az , DBL_EPSILON , + , > , while , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { ++ , Az_adjust_multiples , -= , Az , }
		- PRED   = { < , Az , while , }
		- SUCC   = { theta , tan , / , cot_theta , }

407 :	"DBL_EPSILON"
		- NEIGH  = { Az , DBL_EPSILON , + , > , while , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { ++ , Az_adjust_multiples , -= , Az , }
		- PRED   = { < , Az , while , }
		- SUCC   = { theta , tan , / , cot_theta , }

408 :	"Az"
		- NEIGH  = { -= , Az , }
		- PARENT = { Az , DBL_EPSILON , + , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , Az_adjust_multiples , }

408 :	"-="
		- NEIGH  = { -= , Az , }
		- PARENT = { Az , DBL_EPSILON , + , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , Az_adjust_multiples , }

409 :	"Az_adjust_multiples"
		- NEIGH  = { ++ , Az_adjust_multiples , }
		- PARENT = { Az , DBL_EPSILON , + , > , while , }
		- CHILD  = { }
		- PRED   = { -= , Az , }
		- SUCC   = { }

409 :	"++"
		- NEIGH  = { ++ , Az_adjust_multiples , }
		- PARENT = { Az , DBL_EPSILON , + , > , while , }
		- CHILD  = { }
		- PRED   = { -= , Az , }
		- SUCC   = { }

413 :	"cot_theta"
		- NEIGH  = { theta , tan , / , cot_theta , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Az , DBL_EPSILON , + , > , while , }
		- SUCC   = { g , tan , tan_g , }

413 :	"/"
		- NEIGH  = { theta , tan , / , cot_theta , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Az , DBL_EPSILON , + , > , while , }
		- SUCC   = { g , tan , tan_g , }

413 :	"tan"
		- NEIGH  = { theta , tan , / , cot_theta , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Az , DBL_EPSILON , + , > , while , }
		- SUCC   = { g , tan , tan_g , }

413 :	"theta"
		- NEIGH  = { theta , tan , / , cot_theta , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Az , DBL_EPSILON , + , > , while , }
		- SUCC   = { g , tan , tan_g , }

414 :	"tan_g"
		- NEIGH  = { g , tan , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { theta , tan , / , cot_theta , }
		- SUCC   = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }

414 :	"tan"
		- NEIGH  = { g , tan , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { theta , tan , / , cot_theta , }
		- SUCC   = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }

414 :	"g"
		- NEIGH  = { g , tan , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { theta , tan , / , cot_theta , }
		- SUCC   = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }

418 :	"q"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

418 :	"atan2"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

418 :	"tan_g"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

418 :	"cos"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

418 :	"Az"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

418 :	"+"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

418 :	"sin"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

418 :	"Az"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

418 :	"*"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

418 :	"cot_theta"
		- NEIGH  = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { g , tan , tan_g , }
		- SUCC   = { q , + , > , z , if , }

421 :	"if"
		- NEIGH  = { q , + , > , z , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- SUCC   = { Rprime , }

421 :	"z"
		- NEIGH  = { q , + , > , z , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- SUCC   = { Rprime , }

421 :	">"
		- NEIGH  = { q , + , > , z , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- SUCC   = { Rprime , }

421 :	"q"
		- NEIGH  = { q , + , > , z , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- SUCC   = { Rprime , }

421 :	"+"
		- NEIGH  = { q , + , > , z , if , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { continue , }
		- PRED   = { * , + , cos , atan2 , tan_g , sin , Az , cot_theta , q , }
		- SUCC   = { Rprime , }

422 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { q , + , > , z , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

431 :	"Rprime"
		- NEIGH  = { Rprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , + , > , z , if , }
		- SUCC   = { - , g , cos , G , H , * , sin , Az , acos , }

434 :	"H"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"acos"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"sin"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"Az"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"*"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"sin"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"G"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"*"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"cos"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"g"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"-"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"cos"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"Az"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"*"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"cos"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

434 :	"G"
		- NEIGH  = { - , g , cos , G , H , * , sin , Az , acos , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Rprime , }
		- SUCC   = { M_PI , - , Ag , H , G , + , Az , }

438 :	"Ag"
		- NEIGH  = { M_PI , - , Ag , H , G , + , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { - , g , cos , G , H , * , sin , Az , acos , }
		- SUCC   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }

438 :	"Az"
		- NEIGH  = { M_PI , - , Ag , H , G , + , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { - , g , cos , G , H , * , sin , Az , acos , }
		- SUCC   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }

438 :	"+"
		- NEIGH  = { M_PI , - , Ag , H , G , + , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { - , g , cos , G , H , * , sin , Az , acos , }
		- SUCC   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }

438 :	"G"
		- NEIGH  = { M_PI , - , Ag , H , G , + , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { - , g , cos , G , H , * , sin , Az , acos , }
		- SUCC   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }

438 :	"+"
		- NEIGH  = { M_PI , - , Ag , H , G , + , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { - , g , cos , G , H , * , sin , Az , acos , }
		- SUCC   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }

438 :	"H"
		- NEIGH  = { M_PI , - , Ag , H , G , + , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { - , g , cos , G , H , * , sin , Az , acos , }
		- SUCC   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }

438 :	"-"
		- NEIGH  = { M_PI , - , Ag , H , G , + , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { - , g , cos , G , H , * , sin , Az , acos , }
		- SUCC   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }

438 :	"M_PI"
		- NEIGH  = { M_PI , - , Ag , H , G , + , Az , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { - , g , cos , G , H , * , sin , Az , acos , }
		- SUCC   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }

441 :	"Azprime"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"atan2"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"*"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"Ag"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"Rprime"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"*"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"Rprime"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"*"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"tan_g"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"*"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"tan_g"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"-"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"*"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"Ag"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"*"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

441 :	"cot_theta"
		- NEIGH  = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { M_PI , - , Ag , H , G , + , Az , }
		- SUCC   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }

445 :	"dprime"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"Rprime"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"*"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"tan_g"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"/"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"cos"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"Azprime"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"+"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"sin"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"Azprime"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"*"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

445 :	"cot_theta"
		- NEIGH  = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , Rprime , Ag , * , - , tan_g , atan2 , Azprime , }
		- SUCC   = { q , * , Rprime , / , dprime , sin , f , }

448 :	"f"
		- NEIGH  = { q , * , Rprime , / , dprime , sin , f , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- SUCC   = { f , sin , / , Rprime , z , * , rho , }

448 :	"dprime"
		- NEIGH  = { q , * , Rprime , / , dprime , sin , f , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- SUCC   = { f , sin , / , Rprime , z , * , rho , }

448 :	"/"
		- NEIGH  = { q , * , Rprime , / , dprime , sin , f , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- SUCC   = { f , sin , / , Rprime , z , * , rho , }

448 :	"*"
		- NEIGH  = { q , * , Rprime , / , dprime , sin , f , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- SUCC   = { f , sin , / , Rprime , z , * , rho , }

448 :	"Rprime"
		- NEIGH  = { q , * , Rprime , / , dprime , sin , f , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- SUCC   = { f , sin , / , Rprime , z , * , rho , }

448 :	"*"
		- NEIGH  = { q , * , Rprime , / , dprime , sin , f , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- SUCC   = { f , sin , / , Rprime , z , * , rho , }

448 :	"sin"
		- NEIGH  = { q , * , Rprime , / , dprime , sin , f , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- SUCC   = { f , sin , / , Rprime , z , * , rho , }

448 :	"q"
		- NEIGH  = { q , * , Rprime , / , dprime , sin , f , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- SUCC   = { f , sin , / , Rprime , z , * , rho , }

448 :	"/"
		- NEIGH  = { q , * , Rprime , / , dprime , sin , f , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cot_theta , sin , + , Azprime , * , cos , dprime , Rprime , / , tan_g , }
		- SUCC   = { f , sin , / , Rprime , z , * , rho , }

451 :	"rho"
		- NEIGH  = { f , sin , / , Rprime , z , * , rho , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , * , Rprime , / , dprime , sin , f , }
		- SUCC   = { Az_adjust_multiples , * , += , Azprime , }

451 :	"*"
		- NEIGH  = { f , sin , / , Rprime , z , * , rho , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , * , Rprime , / , dprime , sin , f , }
		- SUCC   = { Az_adjust_multiples , * , += , Azprime , }

451 :	"Rprime"
		- NEIGH  = { f , sin , / , Rprime , z , * , rho , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , * , Rprime , / , dprime , sin , f , }
		- SUCC   = { Az_adjust_multiples , * , += , Azprime , }

451 :	"*"
		- NEIGH  = { f , sin , / , Rprime , z , * , rho , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , * , Rprime , / , dprime , sin , f , }
		- SUCC   = { Az_adjust_multiples , * , += , Azprime , }

451 :	"f"
		- NEIGH  = { f , sin , / , Rprime , z , * , rho , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , * , Rprime , / , dprime , sin , f , }
		- SUCC   = { Az_adjust_multiples , * , += , Azprime , }

451 :	"*"
		- NEIGH  = { f , sin , / , Rprime , z , * , rho , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , * , Rprime , / , dprime , sin , f , }
		- SUCC   = { Az_adjust_multiples , * , += , Azprime , }

451 :	"sin"
		- NEIGH  = { f , sin , / , Rprime , z , * , rho , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , * , Rprime , / , dprime , sin , f , }
		- SUCC   = { Az_adjust_multiples , * , += , Azprime , }

451 :	"z"
		- NEIGH  = { f , sin , / , Rprime , z , * , rho , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , * , Rprime , / , dprime , sin , f , }
		- SUCC   = { Az_adjust_multiples , * , += , Azprime , }

451 :	"/"
		- NEIGH  = { f , sin , / , Rprime , z , * , rho , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { q , * , Rprime , / , dprime , sin , f , }
		- SUCC   = { Az_adjust_multiples , * , += , Azprime , }

458 :	"Azprime"
		- NEIGH  = { Az_adjust_multiples , * , += , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { f , sin , / , Rprime , z , * , rho , }
		- SUCC   = { sin , Azprime , rho , * , x , }

458 :	"+="
		- NEIGH  = { Az_adjust_multiples , * , += , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { f , sin , / , Rprime , z , * , rho , }
		- SUCC   = { sin , Azprime , rho , * , x , }

458 :	"*"
		- NEIGH  = { Az_adjust_multiples , * , += , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { f , sin , / , Rprime , z , * , rho , }
		- SUCC   = { sin , Azprime , rho , * , x , }

458 :	"Az_adjust_multiples"
		- NEIGH  = { Az_adjust_multiples , * , += , Azprime , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { f , sin , / , Rprime , z , * , rho , }
		- SUCC   = { sin , Azprime , rho , * , x , }

462 :	"x"
		- NEIGH  = { sin , Azprime , rho , * , x , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Az_adjust_multiples , * , += , Azprime , }
		- SUCC   = { cos , Azprime , rho , * , y , }

462 :	"rho"
		- NEIGH  = { sin , Azprime , rho , * , x , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Az_adjust_multiples , * , += , Azprime , }
		- SUCC   = { cos , Azprime , rho , * , y , }

462 :	"*"
		- NEIGH  = { sin , Azprime , rho , * , x , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Az_adjust_multiples , * , += , Azprime , }
		- SUCC   = { cos , Azprime , rho , * , y , }

462 :	"sin"
		- NEIGH  = { sin , Azprime , rho , * , x , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Az_adjust_multiples , * , += , Azprime , }
		- SUCC   = { cos , Azprime , rho , * , y , }

462 :	"Azprime"
		- NEIGH  = { sin , Azprime , rho , * , x , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { Az_adjust_multiples , * , += , Azprime , }
		- SUCC   = { cos , Azprime , rho , * , y , }

463 :	"y"
		- NEIGH  = { cos , Azprime , rho , * , y , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { sin , Azprime , rho , * , x , }
		- SUCC   = { x , out , }

463 :	"rho"
		- NEIGH  = { cos , Azprime , rho , * , y , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { sin , Azprime , rho , * , x , }
		- SUCC   = { x , out , }

463 :	"*"
		- NEIGH  = { cos , Azprime , rho , * , y , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { sin , Azprime , rho , * , x , }
		- SUCC   = { x , out , }

463 :	"cos"
		- NEIGH  = { cos , Azprime , rho , * , y , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { sin , Azprime , rho , * , x , }
		- SUCC   = { x , out , }

463 :	"Azprime"
		- NEIGH  = { cos , Azprime , rho , * , y , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { sin , Azprime , rho , * , x , }
		- SUCC   = { x , out , }

471 :	"out"
		- NEIGH  = { x , out , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cos , Azprime , rho , * , y , }
		- SUCC   = { y , out , }

471 :	"x"
		- NEIGH  = { x , out , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cos , Azprime , rho , * , y , }
		- SUCC   = { y , out , }

471 :	"x"
		- NEIGH  = { x , out , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { cos , Azprime , rho , * , y , }
		- SUCC   = { y , out , }

472 :	"out"
		- NEIGH  = { y , out , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { x , out , }
		- SUCC   = { i , return , }

472 :	"y"
		- NEIGH  = { y , out , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { x , out , }
		- SUCC   = { i , return , }

472 :	"y"
		- NEIGH  = { y , out , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { x , out , }
		- SUCC   = { i , return , }

474 :	"return"
		- NEIGH  = { i , return , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { y , out , }
		- SUCC   = { }

474 :	"i"
		- NEIGH  = { i , return , }
		- PARENT = { ++ , <= , i , for , }
		- CHILD  = { }
		- PRED   = { y , out , }
		- SUCC   = { }

482 :	"fprintf"
		- NEIGH  = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , <= , i , for , }
		- SUCC   = { EXIT_FAILURE , exit , }

482 :	"stderr"
		- NEIGH  = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , <= , i , for , }
		- SUCC   = { EXIT_FAILURE , exit , }

483 :	"PJ_TODEG"
		- NEIGH  = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , <= , i , for , }
		- SUCC   = { EXIT_FAILURE , exit , }

483 :	"ll"
		- NEIGH  = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , <= , i , for , }
		- SUCC   = { EXIT_FAILURE , exit , }

483 :	"lon"
		- NEIGH  = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , <= , i , for , }
		- SUCC   = { EXIT_FAILURE , exit , }

483 :	"PJ_TODEG"
		- NEIGH  = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , <= , i , for , }
		- SUCC   = { EXIT_FAILURE , exit , }

483 :	"ll"
		- NEIGH  = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , <= , i , for , }
		- SUCC   = { EXIT_FAILURE , exit , }

483 :	"lat"
		- NEIGH  = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , <= , i , for , }
		- SUCC   = { EXIT_FAILURE , exit , }

485 :	"exit"
		- NEIGH  = { EXIT_FAILURE , exit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- SUCC   = { return , }

485 :	"EXIT_FAILURE"
		- NEIGH  = { EXIT_FAILURE , exit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , ll , lat , PJ_TODEG , stderr , fprintf , }
		- SUCC   = { return , }

488 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EXIT_FAILURE , exit , }
		- SUCC   = { }

510 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

510 :	"snyder_ctran"
		- NEIGH  = { snyder_ctran , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

510 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

510 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

510 :	"np"
		- NEIGH  = { np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

510 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

510 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

510 :	"pt"
		- NEIGH  = { pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

512 :	"isea_geo"
		- NEIGH  = { npt , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }

512 :	"npt"
		- NEIGH  = { npt , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }

513 :	"alpha"
		- NEIGH  = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { sin_phip , }

513 :	"phi"
		- NEIGH  = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { sin_phip , }

513 :	"lambda"
		- NEIGH  = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { sin_phip , }

513 :	"lambda0"
		- NEIGH  = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { sin_phip , }

513 :	"beta"
		- NEIGH  = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { sin_phip , }

513 :	"lambdap"
		- NEIGH  = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { sin_phip , }

513 :	"phip"
		- NEIGH  = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { sin_phip , }

514 :	"sin_phip"
		- NEIGH  = { sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lambdap , beta , phip , lambda , phi , lambda0 , alpha , }
		- SUCC   = { lp_b , }

515 :	"lp_b"
		- NEIGH  = { lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phip , }
		- SUCC   = { sin_a , cos_p , }

516 :	"cos_p"
		- NEIGH  = { sin_a , cos_p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp_b , }
		- SUCC   = { lat , pt , phi , }

516 :	"sin_a"
		- NEIGH  = { sin_a , cos_p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp_b , }
		- SUCC   = { lat , pt , phi , }

518 :	"phi"
		- NEIGH  = { lat , pt , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_a , cos_p , }
		- SUCC   = { lon , pt , lambda , }

518 :	"pt"
		- NEIGH  = { lat , pt , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_a , cos_p , }
		- SUCC   = { lon , pt , lambda , }

518 :	"lat"
		- NEIGH  = { lat , pt , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_a , cos_p , }
		- SUCC   = { lon , pt , lambda , }

519 :	"lambda"
		- NEIGH  = { lon , pt , lambda , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , pt , phi , }
		- SUCC   = { lat , np , alpha , }

519 :	"pt"
		- NEIGH  = { lon , pt , lambda , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , pt , phi , }
		- SUCC   = { lat , np , alpha , }

519 :	"lon"
		- NEIGH  = { lon , pt , lambda , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , pt , phi , }
		- SUCC   = { lat , np , alpha , }

520 :	"alpha"
		- NEIGH  = { lat , np , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , pt , lambda , }
		- SUCC   = { lon , np , beta , }

520 :	"np"
		- NEIGH  = { lat , np , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , pt , lambda , }
		- SUCC   = { lon , np , beta , }

520 :	"lat"
		- NEIGH  = { lat , np , alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , pt , lambda , }
		- SUCC   = { lon , np , beta , }

521 :	"beta"
		- NEIGH  = { lon , np , beta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , np , alpha , }
		- SUCC   = { beta , lambda0 , }

521 :	"np"
		- NEIGH  = { lon , np , beta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , np , alpha , }
		- SUCC   = { beta , lambda0 , }

521 :	"lon"
		- NEIGH  = { lon , np , beta , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , np , alpha , }
		- SUCC   = { beta , lambda0 , }

522 :	"lambda0"
		- NEIGH  = { beta , lambda0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , np , beta , }
		- SUCC   = { phi , cos , cos_p , }

522 :	"beta"
		- NEIGH  = { beta , lambda0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , np , beta , }
		- SUCC   = { phi , cos , cos_p , }

524 :	"cos_p"
		- NEIGH  = { phi , cos , cos_p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { beta , lambda0 , }
		- SUCC   = { alpha , sin , sin_a , }

524 :	"cos"
		- NEIGH  = { phi , cos , cos_p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { beta , lambda0 , }
		- SUCC   = { alpha , sin , sin_a , }

524 :	"phi"
		- NEIGH  = { phi , cos , cos_p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { beta , lambda0 , }
		- SUCC   = { alpha , sin , sin_a , }

525 :	"sin_a"
		- NEIGH  = { alpha , sin , sin_a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , cos , cos_p , }
		- SUCC   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }

525 :	"sin"
		- NEIGH  = { alpha , sin , sin_a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , cos , cos_p , }
		- SUCC   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }

525 :	"alpha"
		- NEIGH  = { alpha , sin , sin_a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , cos , cos_p , }
		- SUCC   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }

528 :	"sin_phip"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"sin_a"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"*"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"sin"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"phi"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"-"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"cos"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"alpha"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"*"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"cos_p"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"*"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"cos"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"lambda"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"-"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

528 :	"lambda0"
		- NEIGH  = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha , sin , sin_a , }
		- SUCC   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }

533 :	"lp_b"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

533 :	"atan2"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

533 :	"cos_p"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

533 :	"*"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

533 :	"sin"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

533 :	"lambda"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

533 :	"-"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

533 :	"lambda0"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"sin_a"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"*"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"cos_p"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"*"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"cos"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"lambda"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"-"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"lambda0"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"+"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"cos"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"alpha"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"*"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"sin"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

534 :	"phi"
		- NEIGH  = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos_p , lambda0 , alpha , cos , sin_a , phi , sin , * , lambda , - , sin_phip , }
		- SUCC   = { beta , + , lp_b , lambdap , }

536 :	"lambdap"
		- NEIGH  = { beta , + , lp_b , lambdap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- SUCC   = { M_PI , * , fmod , lambdap , }

536 :	"lp_b"
		- NEIGH  = { beta , + , lp_b , lambdap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- SUCC   = { M_PI , * , fmod , lambdap , }

536 :	"+"
		- NEIGH  = { beta , + , lp_b , lambdap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- SUCC   = { M_PI , * , fmod , lambdap , }

536 :	"beta"
		- NEIGH  = { beta , + , lp_b , lambdap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , alpha , + , cos , lambda , - , sin_a , lambda0 , sin , * , atan2 , cos_p , lp_b , }
		- SUCC   = { M_PI , * , fmod , lambdap , }

540 :	"lambdap"
		- NEIGH  = { M_PI , * , fmod , lambdap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { beta , + , lp_b , lambdap , }
		- SUCC   = { M_PI , lambdap , > , while , }

540 :	"fmod"
		- NEIGH  = { M_PI , * , fmod , lambdap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { beta , + , lp_b , lambdap , }
		- SUCC   = { M_PI , lambdap , > , while , }

540 :	"lambdap"
		- NEIGH  = { M_PI , * , fmod , lambdap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { beta , + , lp_b , lambdap , }
		- SUCC   = { M_PI , lambdap , > , while , }

540 :	"*"
		- NEIGH  = { M_PI , * , fmod , lambdap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { beta , + , lp_b , lambdap , }
		- SUCC   = { M_PI , lambdap , > , while , }

540 :	"M_PI"
		- NEIGH  = { M_PI , * , fmod , lambdap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { beta , + , lp_b , lambdap , }
		- SUCC   = { M_PI , lambdap , > , while , }

541 :	"while"
		- NEIGH  = { M_PI , lambdap , > , while , }
		- PARENT = { }
		- CHILD  = { -= , M_PI , * , lambdap , }
		- PRED   = { M_PI , * , fmod , lambdap , }
		- SUCC   = { - , < , M_PI , lambdap , while , }

541 :	"lambdap"
		- NEIGH  = { M_PI , lambdap , > , while , }
		- PARENT = { }
		- CHILD  = { -= , M_PI , * , lambdap , }
		- PRED   = { M_PI , * , fmod , lambdap , }
		- SUCC   = { - , < , M_PI , lambdap , while , }

541 :	">"
		- NEIGH  = { M_PI , lambdap , > , while , }
		- PARENT = { }
		- CHILD  = { -= , M_PI , * , lambdap , }
		- PRED   = { M_PI , * , fmod , lambdap , }
		- SUCC   = { - , < , M_PI , lambdap , while , }

541 :	"M_PI"
		- NEIGH  = { M_PI , lambdap , > , while , }
		- PARENT = { }
		- CHILD  = { -= , M_PI , * , lambdap , }
		- PRED   = { M_PI , * , fmod , lambdap , }
		- SUCC   = { - , < , M_PI , lambdap , while , }

542 :	"lambdap"
		- NEIGH  = { -= , M_PI , * , lambdap , }
		- PARENT = { M_PI , lambdap , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

542 :	"-="
		- NEIGH  = { -= , M_PI , * , lambdap , }
		- PARENT = { M_PI , lambdap , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

542 :	"*"
		- NEIGH  = { -= , M_PI , * , lambdap , }
		- PARENT = { M_PI , lambdap , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

542 :	"M_PI"
		- NEIGH  = { -= , M_PI , * , lambdap , }
		- PARENT = { M_PI , lambdap , > , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

543 :	"while"
		- NEIGH  = { - , < , M_PI , lambdap , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , lambdap , }
		- PRED   = { M_PI , lambdap , > , while , }
		- SUCC   = { sin_phip , asin , phip , }

543 :	"lambdap"
		- NEIGH  = { - , < , M_PI , lambdap , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , lambdap , }
		- PRED   = { M_PI , lambdap , > , while , }
		- SUCC   = { sin_phip , asin , phip , }

543 :	"<"
		- NEIGH  = { - , < , M_PI , lambdap , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , lambdap , }
		- PRED   = { M_PI , lambdap , > , while , }
		- SUCC   = { sin_phip , asin , phip , }

543 :	"-"
		- NEIGH  = { - , < , M_PI , lambdap , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , lambdap , }
		- PRED   = { M_PI , lambdap , > , while , }
		- SUCC   = { sin_phip , asin , phip , }

543 :	"M_PI"
		- NEIGH  = { - , < , M_PI , lambdap , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , lambdap , }
		- PRED   = { M_PI , lambdap , > , while , }
		- SUCC   = { sin_phip , asin , phip , }

544 :	"lambdap"
		- NEIGH  = { += , M_PI , * , lambdap , }
		- PARENT = { - , < , M_PI , lambdap , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

544 :	"+="
		- NEIGH  = { += , M_PI , * , lambdap , }
		- PARENT = { - , < , M_PI , lambdap , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

544 :	"*"
		- NEIGH  = { += , M_PI , * , lambdap , }
		- PARENT = { - , < , M_PI , lambdap , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

544 :	"M_PI"
		- NEIGH  = { += , M_PI , * , lambdap , }
		- PARENT = { - , < , M_PI , lambdap , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

546 :	"phip"
		- NEIGH  = { sin_phip , asin , phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , < , M_PI , lambdap , while , }
		- SUCC   = { phip , lat , npt , }

546 :	"asin"
		- NEIGH  = { sin_phip , asin , phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , < , M_PI , lambdap , while , }
		- SUCC   = { phip , lat , npt , }

546 :	"sin_phip"
		- NEIGH  = { sin_phip , asin , phip , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , < , M_PI , lambdap , while , }
		- SUCC   = { phip , lat , npt , }

548 :	"npt"
		- NEIGH  = { phip , lat , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phip , asin , phip , }
		- SUCC   = { lambdap , lon , npt , }

548 :	"lat"
		- NEIGH  = { phip , lat , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phip , asin , phip , }
		- SUCC   = { lambdap , lon , npt , }

548 :	"phip"
		- NEIGH  = { phip , lat , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phip , asin , phip , }
		- SUCC   = { lambdap , lon , npt , }

549 :	"npt"
		- NEIGH  = { lambdap , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lat , npt , }
		- SUCC   = { npt , return , }

549 :	"lon"
		- NEIGH  = { lambdap , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lat , npt , }
		- SUCC   = { npt , return , }

549 :	"lambdap"
		- NEIGH  = { lambdap , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phip , lat , npt , }
		- SUCC   = { npt , return , }

551 :	"return"
		- NEIGH  = { npt , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lambdap , lon , npt , }
		- SUCC   = { }

551 :	"npt"
		- NEIGH  = { npt , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lambdap , lon , npt , }
		- SUCC   = { }

554 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"isea_ctran"
		- NEIGH  = { isea_ctran , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"np"
		- NEIGH  = { np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

554 :	"pt"
		- NEIGH  = { pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

555 :	"lon0"
		- NEIGH  = { lon0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

557 :	"isea_geo"
		- NEIGH  = { npt , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_PI , += , lon , np , }

557 :	"npt"
		- NEIGH  = { npt , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_PI , += , lon , np , }

559 :	"np"
		- NEIGH  = { M_PI , += , lon , np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { pt , np , snyder_ctran , npt , }

559 :	"lon"
		- NEIGH  = { M_PI , += , lon , np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { pt , np , snyder_ctran , npt , }

559 :	"+="
		- NEIGH  = { M_PI , += , lon , np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { pt , np , snyder_ctran , npt , }

559 :	"M_PI"
		- NEIGH  = { M_PI , += , lon , np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { npt , isea_geo , }
		- SUCC   = { pt , np , snyder_ctran , npt , }

560 :	"npt"
		- NEIGH  = { pt , np , snyder_ctran , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , np , }
		- SUCC   = { M_PI , -= , lon , np , }

560 :	"snyder_ctran"
		- NEIGH  = { pt , np , snyder_ctran , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , np , }
		- SUCC   = { M_PI , -= , lon , np , }

560 :	"np"
		- NEIGH  = { pt , np , snyder_ctran , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , np , }
		- SUCC   = { M_PI , -= , lon , np , }

560 :	"pt"
		- NEIGH  = { pt , np , snyder_ctran , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , np , }
		- SUCC   = { M_PI , -= , lon , np , }

561 :	"np"
		- NEIGH  = { M_PI , -= , lon , np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , np , snyder_ctran , npt , }
		- SUCC   = { np , - , M_PI , + , lon0 , -= , lon , npt , }

561 :	"lon"
		- NEIGH  = { M_PI , -= , lon , np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , np , snyder_ctran , npt , }
		- SUCC   = { np , - , M_PI , + , lon0 , -= , lon , npt , }

561 :	"-="
		- NEIGH  = { M_PI , -= , lon , np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , np , snyder_ctran , npt , }
		- SUCC   = { np , - , M_PI , + , lon0 , -= , lon , npt , }

561 :	"M_PI"
		- NEIGH  = { M_PI , -= , lon , np , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , np , snyder_ctran , npt , }
		- SUCC   = { np , - , M_PI , + , lon0 , -= , lon , npt , }

563 :	"npt"
		- NEIGH  = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , -= , lon , np , }
		- SUCC   = { M_PI , += , lon , npt , }

563 :	"lon"
		- NEIGH  = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , -= , lon , np , }
		- SUCC   = { M_PI , += , lon , npt , }

563 :	"-="
		- NEIGH  = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , -= , lon , np , }
		- SUCC   = { M_PI , += , lon , npt , }

563 :	"M_PI"
		- NEIGH  = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , -= , lon , np , }
		- SUCC   = { M_PI , += , lon , npt , }

563 :	"-"
		- NEIGH  = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , -= , lon , np , }
		- SUCC   = { M_PI , += , lon , npt , }

563 :	"lon0"
		- NEIGH  = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , -= , lon , np , }
		- SUCC   = { M_PI , += , lon , npt , }

563 :	"+"
		- NEIGH  = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , -= , lon , np , }
		- SUCC   = { M_PI , += , lon , npt , }

563 :	"np"
		- NEIGH  = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , -= , lon , np , }
		- SUCC   = { M_PI , += , lon , npt , }

563 :	"lon"
		- NEIGH  = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , -= , lon , np , }
		- SUCC   = { M_PI , += , lon , npt , }

569 :	"npt"
		- NEIGH  = { M_PI , += , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- SUCC   = { M_PI , * , fmod , lon , npt , }

569 :	"lon"
		- NEIGH  = { M_PI , += , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- SUCC   = { M_PI , * , fmod , lon , npt , }

569 :	"+="
		- NEIGH  = { M_PI , += , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- SUCC   = { M_PI , * , fmod , lon , npt , }

569 :	"M_PI"
		- NEIGH  = { M_PI , += , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { np , - , M_PI , + , lon0 , -= , lon , npt , }
		- SUCC   = { M_PI , * , fmod , lon , npt , }

571 :	"npt"
		- NEIGH  = { M_PI , * , fmod , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , npt , }
		- SUCC   = { M_PI , npt , > , lon , while , }

571 :	"lon"
		- NEIGH  = { M_PI , * , fmod , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , npt , }
		- SUCC   = { M_PI , npt , > , lon , while , }

571 :	"fmod"
		- NEIGH  = { M_PI , * , fmod , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , npt , }
		- SUCC   = { M_PI , npt , > , lon , while , }

571 :	"npt"
		- NEIGH  = { M_PI , * , fmod , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , npt , }
		- SUCC   = { M_PI , npt , > , lon , while , }

571 :	"lon"
		- NEIGH  = { M_PI , * , fmod , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , npt , }
		- SUCC   = { M_PI , npt , > , lon , while , }

571 :	"*"
		- NEIGH  = { M_PI , * , fmod , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , npt , }
		- SUCC   = { M_PI , npt , > , lon , while , }

571 :	"M_PI"
		- NEIGH  = { M_PI , * , fmod , lon , npt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , += , lon , npt , }
		- SUCC   = { M_PI , npt , > , lon , while , }

572 :	"while"
		- NEIGH  = { M_PI , npt , > , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , -= , lon , npt , }
		- PRED   = { M_PI , * , fmod , lon , npt , }
		- SUCC   = { M_PI , - , < , npt , lon , while , }

572 :	"npt"
		- NEIGH  = { M_PI , npt , > , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , -= , lon , npt , }
		- PRED   = { M_PI , * , fmod , lon , npt , }
		- SUCC   = { M_PI , - , < , npt , lon , while , }

572 :	"lon"
		- NEIGH  = { M_PI , npt , > , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , -= , lon , npt , }
		- PRED   = { M_PI , * , fmod , lon , npt , }
		- SUCC   = { M_PI , - , < , npt , lon , while , }

572 :	">"
		- NEIGH  = { M_PI , npt , > , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , -= , lon , npt , }
		- PRED   = { M_PI , * , fmod , lon , npt , }
		- SUCC   = { M_PI , - , < , npt , lon , while , }

572 :	"M_PI"
		- NEIGH  = { M_PI , npt , > , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , -= , lon , npt , }
		- PRED   = { M_PI , * , fmod , lon , npt , }
		- SUCC   = { M_PI , - , < , npt , lon , while , }

573 :	"npt"
		- NEIGH  = { M_PI , * , -= , lon , npt , }
		- PARENT = { M_PI , npt , > , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"lon"
		- NEIGH  = { M_PI , * , -= , lon , npt , }
		- PARENT = { M_PI , npt , > , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"-="
		- NEIGH  = { M_PI , * , -= , lon , npt , }
		- PARENT = { M_PI , npt , > , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"*"
		- NEIGH  = { M_PI , * , -= , lon , npt , }
		- PARENT = { M_PI , npt , > , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"M_PI"
		- NEIGH  = { M_PI , * , -= , lon , npt , }
		- PARENT = { M_PI , npt , > , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

574 :	"while"
		- NEIGH  = { M_PI , - , < , npt , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , += , lon , npt , }
		- PRED   = { M_PI , npt , > , lon , while , }
		- SUCC   = { npt , return , }

574 :	"npt"
		- NEIGH  = { M_PI , - , < , npt , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , += , lon , npt , }
		- PRED   = { M_PI , npt , > , lon , while , }
		- SUCC   = { npt , return , }

574 :	"lon"
		- NEIGH  = { M_PI , - , < , npt , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , += , lon , npt , }
		- PRED   = { M_PI , npt , > , lon , while , }
		- SUCC   = { npt , return , }

574 :	"<"
		- NEIGH  = { M_PI , - , < , npt , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , += , lon , npt , }
		- PRED   = { M_PI , npt , > , lon , while , }
		- SUCC   = { npt , return , }

574 :	"-"
		- NEIGH  = { M_PI , - , < , npt , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , += , lon , npt , }
		- PRED   = { M_PI , npt , > , lon , while , }
		- SUCC   = { npt , return , }

574 :	"M_PI"
		- NEIGH  = { M_PI , - , < , npt , lon , while , }
		- PARENT = { }
		- CHILD  = { M_PI , * , += , lon , npt , }
		- PRED   = { M_PI , npt , > , lon , while , }
		- SUCC   = { npt , return , }

575 :	"npt"
		- NEIGH  = { M_PI , * , += , lon , npt , }
		- PARENT = { M_PI , - , < , npt , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

575 :	"lon"
		- NEIGH  = { M_PI , * , += , lon , npt , }
		- PARENT = { M_PI , - , < , npt , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

575 :	"+="
		- NEIGH  = { M_PI , * , += , lon , npt , }
		- PARENT = { M_PI , - , < , npt , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

575 :	"*"
		- NEIGH  = { M_PI , * , += , lon , npt , }
		- PARENT = { M_PI , - , < , npt , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

575 :	"M_PI"
		- NEIGH  = { M_PI , * , += , lon , npt , }
		- PARENT = { M_PI , - , < , npt , lon , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

577 :	"return"
		- NEIGH  = { npt , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , < , npt , lon , while , }
		- SUCC   = { }

577 :	"npt"
		- NEIGH  = { npt , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , < , npt , lon , while , }
		- SUCC   = { }

582 :	"isea_grid_init"
		- NEIGH  = { isea_grid_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

582 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

582 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

582 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

584 :	"if"
		- NEIGH  = { ! , g , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { polyhedron , g , }

584 :	"!"
		- NEIGH  = { ! , g , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { polyhedron , g , }

584 :	"g"
		- NEIGH  = { ! , g , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { polyhedron , g , }

585 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

587 :	"g"
		- NEIGH  = { polyhedron , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , g , if , }
		- SUCC   = { o_lat , g , }

587 :	"polyhedron"
		- NEIGH  = { polyhedron , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , g , if , }
		- SUCC   = { o_lat , g , }

588 :	"g"
		- NEIGH  = { o_lat , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polyhedron , g , }
		- SUCC   = { o_lon , g , }

588 :	"o_lat"
		- NEIGH  = { o_lat , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { polyhedron , g , }
		- SUCC   = { o_lon , g , }

589 :	"g"
		- NEIGH  = { o_lon , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lat , g , }
		- SUCC   = { o_az , g , }

589 :	"o_lon"
		- NEIGH  = { o_lon , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lat , g , }
		- SUCC   = { o_az , g , }

590 :	"g"
		- NEIGH  = { o_az , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , }
		- SUCC   = { aperture , g , }

590 :	"o_az"
		- NEIGH  = { o_az , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , }
		- SUCC   = { aperture , g , }

591 :	"g"
		- NEIGH  = { aperture , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_az , g , }
		- SUCC   = { resolution , g , }

591 :	"aperture"
		- NEIGH  = { aperture , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_az , g , }
		- SUCC   = { resolution , g , }

592 :	"g"
		- NEIGH  = { resolution , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { aperture , g , }
		- SUCC   = { radius , g , }

592 :	"resolution"
		- NEIGH  = { resolution , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { aperture , g , }
		- SUCC   = { radius , g , }

593 :	"g"
		- NEIGH  = { radius , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { resolution , g , }
		- SUCC   = { topology , g , }

593 :	"radius"
		- NEIGH  = { radius , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { resolution , g , }
		- SUCC   = { topology , g , }

594 :	"g"
		- NEIGH  = { topology , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , }
		- SUCC   = { return , }

594 :	"topology"
		- NEIGH  = { topology , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , }
		- SUCC   = { return , }

596 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topology , g , }
		- SUCC   = { }

599 :	"isea_orient_isea"
		- NEIGH  = { isea_orient_isea , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

599 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

599 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

599 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

601 :	"if"
		- NEIGH  = { ! , g , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { o_lat , g , }

601 :	"!"
		- NEIGH  = { ! , g , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { o_lat , g , }

601 :	"g"
		- NEIGH  = { ! , g , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { o_lat , g , }

602 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

603 :	"g"
		- NEIGH  = { o_lat , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , g , if , }
		- SUCC   = { o_lon , g , }

603 :	"o_lat"
		- NEIGH  = { o_lat , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , g , if , }
		- SUCC   = { o_lon , g , }

604 :	"g"
		- NEIGH  = { o_lon , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lat , g , }
		- SUCC   = { o_az , g , }

604 :	"o_lon"
		- NEIGH  = { o_lon , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lat , g , }
		- SUCC   = { o_az , g , }

605 :	"g"
		- NEIGH  = { o_az , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , }
		- SUCC   = { }

605 :	"o_az"
		- NEIGH  = { o_az , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , }
		- SUCC   = { }

608 :	"isea_orient_pole"
		- NEIGH  = { isea_orient_pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

608 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

608 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

608 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

610 :	"if"
		- NEIGH  = { ! , g , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { M_PI , / , o_lat , g , }

610 :	"!"
		- NEIGH  = { ! , g , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { M_PI , / , o_lat , g , }

610 :	"g"
		- NEIGH  = { ! , g , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { M_PI , / , o_lat , g , }

611 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

612 :	"g"
		- NEIGH  = { M_PI , / , o_lat , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , g , if , }
		- SUCC   = { o_lon , g , }

612 :	"o_lat"
		- NEIGH  = { M_PI , / , o_lat , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , g , if , }
		- SUCC   = { o_lon , g , }

612 :	"M_PI"
		- NEIGH  = { M_PI , / , o_lat , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , g , if , }
		- SUCC   = { o_lon , g , }

612 :	"/"
		- NEIGH  = { M_PI , / , o_lat , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , g , if , }
		- SUCC   = { o_lon , g , }

613 :	"g"
		- NEIGH  = { o_lon , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , / , o_lat , g , }
		- SUCC   = { o_az , g , }

613 :	"o_lon"
		- NEIGH  = { o_lon , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , / , o_lat , g , }
		- SUCC   = { o_az , g , }

614 :	"g"
		- NEIGH  = { o_az , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , }
		- SUCC   = { }

614 :	"o_az"
		- NEIGH  = { o_az , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , }
		- SUCC   = { }

617 :	"isea_transform"
		- NEIGH  = { isea_transform , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"in"
		- NEIGH  = { in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

618 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

618 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

618 :	"out"
		- NEIGH  = { out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

620 :	"isea_geo"
		- NEIGH  = { pole , i , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tri , }

620 :	"i"
		- NEIGH  = { pole , i , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tri , }

620 :	"pole"
		- NEIGH  = { pole , i , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tri , }

621 :	"tri"
		- NEIGH  = { tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , i , isea_geo , }
		- SUCC   = { g , lat , o_lat , pole , }

623 :	"pole"
		- NEIGH  = { g , lat , o_lat , pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , }
		- SUCC   = { o_lon , g , lon , pole , }

623 :	"lat"
		- NEIGH  = { g , lat , o_lat , pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , }
		- SUCC   = { o_lon , g , lon , pole , }

623 :	"g"
		- NEIGH  = { g , lat , o_lat , pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , }
		- SUCC   = { o_lon , g , lon , pole , }

623 :	"o_lat"
		- NEIGH  = { g , lat , o_lat , pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , }
		- SUCC   = { o_lon , g , lon , pole , }

624 :	"pole"
		- NEIGH  = { o_lon , g , lon , pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , lat , o_lat , pole , }
		- SUCC   = { g , in , pole , & , o_az , isea_ctran , i , }

624 :	"lon"
		- NEIGH  = { o_lon , g , lon , pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , lat , o_lat , pole , }
		- SUCC   = { g , in , pole , & , o_az , isea_ctran , i , }

624 :	"g"
		- NEIGH  = { o_lon , g , lon , pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , lat , o_lat , pole , }
		- SUCC   = { g , in , pole , & , o_az , isea_ctran , i , }

624 :	"o_lon"
		- NEIGH  = { o_lon , g , lon , pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , lat , o_lat , pole , }
		- SUCC   = { g , in , pole , & , o_az , isea_ctran , i , }

626 :	"i"
		- NEIGH  = { g , in , pole , & , o_az , isea_ctran , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , lon , pole , }
		- SUCC   = { out , i , & , isea_snyder_forward , tri , }

626 :	"isea_ctran"
		- NEIGH  = { g , in , pole , & , o_az , isea_ctran , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , lon , pole , }
		- SUCC   = { out , i , & , isea_snyder_forward , tri , }

626 :	"&"
		- NEIGH  = { g , in , pole , & , o_az , isea_ctran , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , lon , pole , }
		- SUCC   = { out , i , & , isea_snyder_forward , tri , }

626 :	"pole"
		- NEIGH  = { g , in , pole , & , o_az , isea_ctran , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , lon , pole , }
		- SUCC   = { out , i , & , isea_snyder_forward , tri , }

626 :	"in"
		- NEIGH  = { g , in , pole , & , o_az , isea_ctran , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , lon , pole , }
		- SUCC   = { out , i , & , isea_snyder_forward , tri , }

626 :	"g"
		- NEIGH  = { g , in , pole , & , o_az , isea_ctran , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , lon , pole , }
		- SUCC   = { out , i , & , isea_snyder_forward , tri , }

626 :	"o_az"
		- NEIGH  = { g , in , pole , & , o_az , isea_ctran , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { o_lon , g , lon , pole , }
		- SUCC   = { out , i , & , isea_snyder_forward , tri , }

628 :	"tri"
		- NEIGH  = { out , i , & , isea_snyder_forward , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , in , pole , & , o_az , isea_ctran , i , }
		- SUCC   = { radius , g , *= , x , out , }

628 :	"isea_snyder_forward"
		- NEIGH  = { out , i , & , isea_snyder_forward , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , in , pole , & , o_az , isea_ctran , i , }
		- SUCC   = { radius , g , *= , x , out , }

628 :	"&"
		- NEIGH  = { out , i , & , isea_snyder_forward , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , in , pole , & , o_az , isea_ctran , i , }
		- SUCC   = { radius , g , *= , x , out , }

628 :	"i"
		- NEIGH  = { out , i , & , isea_snyder_forward , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , in , pole , & , o_az , isea_ctran , i , }
		- SUCC   = { radius , g , *= , x , out , }

628 :	"out"
		- NEIGH  = { out , i , & , isea_snyder_forward , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , in , pole , & , o_az , isea_ctran , i , }
		- SUCC   = { radius , g , *= , x , out , }

629 :	"out"
		- NEIGH  = { radius , g , *= , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , i , & , isea_snyder_forward , tri , }
		- SUCC   = { radius , g , *= , y , out , }

629 :	"x"
		- NEIGH  = { radius , g , *= , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , i , & , isea_snyder_forward , tri , }
		- SUCC   = { radius , g , *= , y , out , }

629 :	"*="
		- NEIGH  = { radius , g , *= , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , i , & , isea_snyder_forward , tri , }
		- SUCC   = { radius , g , *= , y , out , }

629 :	"g"
		- NEIGH  = { radius , g , *= , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , i , & , isea_snyder_forward , tri , }
		- SUCC   = { radius , g , *= , y , out , }

629 :	"radius"
		- NEIGH  = { radius , g , *= , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , i , & , isea_snyder_forward , tri , }
		- SUCC   = { radius , g , *= , y , out , }

630 :	"out"
		- NEIGH  = { radius , g , *= , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , *= , x , out , }
		- SUCC   = { tri , triangle , g , }

630 :	"y"
		- NEIGH  = { radius , g , *= , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , *= , x , out , }
		- SUCC   = { tri , triangle , g , }

630 :	"*="
		- NEIGH  = { radius , g , *= , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , *= , x , out , }
		- SUCC   = { tri , triangle , g , }

630 :	"g"
		- NEIGH  = { radius , g , *= , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , *= , x , out , }
		- SUCC   = { tri , triangle , g , }

630 :	"radius"
		- NEIGH  = { radius , g , *= , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , *= , x , out , }
		- SUCC   = { tri , triangle , g , }

631 :	"g"
		- NEIGH  = { tri , triangle , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , *= , y , out , }
		- SUCC   = { tri , return , }

631 :	"triangle"
		- NEIGH  = { tri , triangle , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , *= , y , out , }
		- SUCC   = { tri , return , }

631 :	"tri"
		- NEIGH  = { tri , triangle , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , g , *= , y , out , }
		- SUCC   = { tri , return , }

633 :	"return"
		- NEIGH  = { tri , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , triangle , g , }
		- SUCC   = { }

633 :	"tri"
		- NEIGH  = { tri , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , triangle , g , }
		- SUCC   = { }

638 :	"isea_rotate"
		- NEIGH  = { isea_rotate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

638 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

638 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

638 :	"pt"
		- NEIGH  = { pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

638 :	"degrees"
		- NEIGH  = { degrees , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

640 :	"rad"
		- NEIGH  = { rad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , }

642 :	"x"
		- NEIGH  = { y , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rad , }
		- SUCC   = { / , degrees , - , M_PI , * , rad , }

642 :	"y"
		- NEIGH  = { y , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rad , }
		- SUCC   = { / , degrees , - , M_PI , * , rad , }

644 :	"rad"
		- NEIGH  = { / , degrees , - , M_PI , * , rad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , }
		- SUCC   = { M_PI , * , rad , >= , while , }

644 :	"-"
		- NEIGH  = { / , degrees , - , M_PI , * , rad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , }
		- SUCC   = { M_PI , * , rad , >= , while , }

644 :	"degrees"
		- NEIGH  = { / , degrees , - , M_PI , * , rad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , }
		- SUCC   = { M_PI , * , rad , >= , while , }

644 :	"*"
		- NEIGH  = { / , degrees , - , M_PI , * , rad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , }
		- SUCC   = { M_PI , * , rad , >= , while , }

644 :	"M_PI"
		- NEIGH  = { / , degrees , - , M_PI , * , rad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , }
		- SUCC   = { M_PI , * , rad , >= , while , }

644 :	"/"
		- NEIGH  = { / , degrees , - , M_PI , * , rad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , }
		- SUCC   = { M_PI , * , rad , >= , while , }

645 :	"while"
		- NEIGH  = { M_PI , * , rad , >= , while , }
		- PARENT = { }
		- CHILD  = { -= , M_PI , * , rad , }
		- PRED   = { / , degrees , - , M_PI , * , rad , }
		- SUCC   = { M_PI , - , * , <= , rad , while , }

645 :	"rad"
		- NEIGH  = { M_PI , * , rad , >= , while , }
		- PARENT = { }
		- CHILD  = { -= , M_PI , * , rad , }
		- PRED   = { / , degrees , - , M_PI , * , rad , }
		- SUCC   = { M_PI , - , * , <= , rad , while , }

645 :	">="
		- NEIGH  = { M_PI , * , rad , >= , while , }
		- PARENT = { }
		- CHILD  = { -= , M_PI , * , rad , }
		- PRED   = { / , degrees , - , M_PI , * , rad , }
		- SUCC   = { M_PI , - , * , <= , rad , while , }

645 :	"*"
		- NEIGH  = { M_PI , * , rad , >= , while , }
		- PARENT = { }
		- CHILD  = { -= , M_PI , * , rad , }
		- PRED   = { / , degrees , - , M_PI , * , rad , }
		- SUCC   = { M_PI , - , * , <= , rad , while , }

645 :	"M_PI"
		- NEIGH  = { M_PI , * , rad , >= , while , }
		- PARENT = { }
		- CHILD  = { -= , M_PI , * , rad , }
		- PRED   = { / , degrees , - , M_PI , * , rad , }
		- SUCC   = { M_PI , - , * , <= , rad , while , }

645 :	"rad"
		- NEIGH  = { -= , M_PI , * , rad , }
		- PARENT = { M_PI , * , rad , >= , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

645 :	"-="
		- NEIGH  = { -= , M_PI , * , rad , }
		- PARENT = { M_PI , * , rad , >= , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

645 :	"*"
		- NEIGH  = { -= , M_PI , * , rad , }
		- PARENT = { M_PI , * , rad , >= , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

645 :	"M_PI"
		- NEIGH  = { -= , M_PI , * , rad , }
		- PARENT = { M_PI , * , rad , >= , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"while"
		- NEIGH  = { M_PI , - , * , <= , rad , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , rad , }
		- PRED   = { M_PI , * , rad , >= , while , }
		- SUCC   = { sin , + , pt , cos , rad , y , * , x , }

646 :	"rad"
		- NEIGH  = { M_PI , - , * , <= , rad , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , rad , }
		- PRED   = { M_PI , * , rad , >= , while , }
		- SUCC   = { sin , + , pt , cos , rad , y , * , x , }

646 :	"<="
		- NEIGH  = { M_PI , - , * , <= , rad , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , rad , }
		- PRED   = { M_PI , * , rad , >= , while , }
		- SUCC   = { sin , + , pt , cos , rad , y , * , x , }

646 :	"-"
		- NEIGH  = { M_PI , - , * , <= , rad , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , rad , }
		- PRED   = { M_PI , * , rad , >= , while , }
		- SUCC   = { sin , + , pt , cos , rad , y , * , x , }

646 :	"*"
		- NEIGH  = { M_PI , - , * , <= , rad , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , rad , }
		- PRED   = { M_PI , * , rad , >= , while , }
		- SUCC   = { sin , + , pt , cos , rad , y , * , x , }

646 :	"M_PI"
		- NEIGH  = { M_PI , - , * , <= , rad , while , }
		- PARENT = { }
		- CHILD  = { += , M_PI , * , rad , }
		- PRED   = { M_PI , * , rad , >= , while , }
		- SUCC   = { sin , + , pt , cos , rad , y , * , x , }

646 :	"rad"
		- NEIGH  = { += , M_PI , * , rad , }
		- PARENT = { M_PI , - , * , <= , rad , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"+="
		- NEIGH  = { += , M_PI , * , rad , }
		- PARENT = { M_PI , - , * , <= , rad , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"*"
		- NEIGH  = { += , M_PI , * , rad , }
		- PARENT = { M_PI , - , * , <= , rad , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"M_PI"
		- NEIGH  = { += , M_PI , * , rad , }
		- PARENT = { M_PI , - , * , <= , rad , while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

648 :	"x"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"pt"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"x"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"*"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"cos"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"rad"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"+"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"pt"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"y"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"*"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"sin"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

648 :	"rad"
		- NEIGH  = { sin , + , pt , cos , rad , y , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_PI , - , * , <= , rad , while , }
		- SUCC   = { + , rad , sin , - , y , * , x , cos , pt , }

649 :	"y"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"-"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"pt"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"x"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"*"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"sin"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"rad"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"+"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"pt"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"y"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"*"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"cos"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

649 :	"rad"
		- NEIGH  = { + , rad , sin , - , y , * , x , cos , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , + , pt , cos , rad , y , * , x , }
		- SUCC   = { x , pt , }

651 :	"pt"
		- NEIGH  = { x , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , rad , sin , - , y , * , x , cos , pt , }
		- SUCC   = { y , pt , }

651 :	"x"
		- NEIGH  = { x , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , rad , sin , - , y , * , x , cos , pt , }
		- SUCC   = { y , pt , }

651 :	"x"
		- NEIGH  = { x , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , rad , sin , - , y , * , x , cos , pt , }
		- SUCC   = { y , pt , }

652 :	"pt"
		- NEIGH  = { y , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , pt , }
		- SUCC   = { }

652 :	"y"
		- NEIGH  = { y , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , pt , }
		- SUCC   = { }

652 :	"y"
		- NEIGH  = { y , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , pt , }
		- SUCC   = { }

655 :	"isea_tri_plane"
		- NEIGH  = { isea_tri_plane , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

655 :	"tri"
		- NEIGH  = { tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

655 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

655 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

655 :	"pt"
		- NEIGH  = { pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

655 :	"radius"
		- NEIGH  = { radius , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

656 :	"isea_pt"
		- NEIGH  = { tc , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , % , / , - , tri , if , }

656 :	"tc"
		- NEIGH  = { tc , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , % , / , - , tri , if , }

658 :	"if"
		- NEIGH  = { == , % , / , - , tri , if , }
		- PARENT = { }
		- CHILD  = { pt , isea_rotate , }
		- PRED   = { tc , isea_pt , }
		- SUCC   = { tri , isea_triangle_xy , tc , }

658 :	"tri"
		- NEIGH  = { == , % , / , - , tri , if , }
		- PARENT = { }
		- CHILD  = { pt , isea_rotate , }
		- PRED   = { tc , isea_pt , }
		- SUCC   = { tri , isea_triangle_xy , tc , }

658 :	"-"
		- NEIGH  = { == , % , / , - , tri , if , }
		- PARENT = { }
		- CHILD  = { pt , isea_rotate , }
		- PRED   = { tc , isea_pt , }
		- SUCC   = { tri , isea_triangle_xy , tc , }

658 :	"/"
		- NEIGH  = { == , % , / , - , tri , if , }
		- PARENT = { }
		- CHILD  = { pt , isea_rotate , }
		- PRED   = { tc , isea_pt , }
		- SUCC   = { tri , isea_triangle_xy , tc , }

658 :	"%"
		- NEIGH  = { == , % , / , - , tri , if , }
		- PARENT = { }
		- CHILD  = { pt , isea_rotate , }
		- PRED   = { tc , isea_pt , }
		- SUCC   = { tri , isea_triangle_xy , tc , }

658 :	"=="
		- NEIGH  = { == , % , / , - , tri , if , }
		- PARENT = { }
		- CHILD  = { pt , isea_rotate , }
		- PRED   = { tc , isea_pt , }
		- SUCC   = { tri , isea_triangle_xy , tc , }

659 :	"isea_rotate"
		- NEIGH  = { pt , isea_rotate , }
		- PARENT = { == , % , / , - , tri , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

659 :	"pt"
		- NEIGH  = { pt , isea_rotate , }
		- PARENT = { == , % , / , - , tri , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

661 :	"tc"
		- NEIGH  = { tri , isea_triangle_xy , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , - , tri , if , }
		- SUCC   = { radius , *= , x , tc , }

661 :	"isea_triangle_xy"
		- NEIGH  = { tri , isea_triangle_xy , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , - , tri , if , }
		- SUCC   = { radius , *= , x , tc , }

661 :	"tri"
		- NEIGH  = { tri , isea_triangle_xy , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , - , tri , if , }
		- SUCC   = { radius , *= , x , tc , }

662 :	"tc"
		- NEIGH  = { radius , *= , x , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , isea_triangle_xy , tc , }
		- SUCC   = { radius , *= , y , tc , }

662 :	"x"
		- NEIGH  = { radius , *= , x , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , isea_triangle_xy , tc , }
		- SUCC   = { radius , *= , y , tc , }

662 :	"*="
		- NEIGH  = { radius , *= , x , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , isea_triangle_xy , tc , }
		- SUCC   = { radius , *= , y , tc , }

662 :	"radius"
		- NEIGH  = { radius , *= , x , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , isea_triangle_xy , tc , }
		- SUCC   = { radius , *= , y , tc , }

663 :	"tc"
		- NEIGH  = { radius , *= , y , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , *= , x , tc , }
		- SUCC   = { += , tc , x , pt , }

663 :	"y"
		- NEIGH  = { radius , *= , y , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , *= , x , tc , }
		- SUCC   = { += , tc , x , pt , }

663 :	"*="
		- NEIGH  = { radius , *= , y , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , *= , x , tc , }
		- SUCC   = { += , tc , x , pt , }

663 :	"radius"
		- NEIGH  = { radius , *= , y , tc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , *= , x , tc , }
		- SUCC   = { += , tc , x , pt , }

664 :	"pt"
		- NEIGH  = { += , tc , x , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , *= , y , tc , }
		- SUCC   = { += , tc , y , pt , }

664 :	"x"
		- NEIGH  = { += , tc , x , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , *= , y , tc , }
		- SUCC   = { += , tc , y , pt , }

664 :	"+="
		- NEIGH  = { += , tc , x , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , *= , y , tc , }
		- SUCC   = { += , tc , y , pt , }

664 :	"tc"
		- NEIGH  = { += , tc , x , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , *= , y , tc , }
		- SUCC   = { += , tc , y , pt , }

664 :	"x"
		- NEIGH  = { += , tc , x , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { radius , *= , y , tc , }
		- SUCC   = { += , tc , y , pt , }

665 :	"pt"
		- NEIGH  = { += , tc , y , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , tc , x , pt , }
		- SUCC   = { tri , return , }

665 :	"y"
		- NEIGH  = { += , tc , y , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , tc , x , pt , }
		- SUCC   = { tri , return , }

665 :	"+="
		- NEIGH  = { += , tc , y , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , tc , x , pt , }
		- SUCC   = { tri , return , }

665 :	"tc"
		- NEIGH  = { += , tc , y , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , tc , x , pt , }
		- SUCC   = { tri , return , }

665 :	"y"
		- NEIGH  = { += , tc , y , pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , tc , x , pt , }
		- SUCC   = { tri , return , }

667 :	"return"
		- NEIGH  = { tri , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , tc , y , pt , }
		- SUCC   = { }

667 :	"tri"
		- NEIGH  = { tri , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , tc , y , pt , }
		- SUCC   = { }

671 :	"isea_ptdd"
		- NEIGH  = { isea_ptdd , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

671 :	"tri"
		- NEIGH  = { tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

671 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

671 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

671 :	"pt"
		- NEIGH  = { pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

672 :	"downtri"
		- NEIGH  = { quad , downtri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , % , / , tri , - , downtri , }

672 :	"quad"
		- NEIGH  = { quad , downtri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , % , / , tri , - , downtri , }

674 :	"downtri"
		- NEIGH  = { == , % , / , tri , - , downtri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , downtri , }
		- SUCC   = { / , % , quad , - , * , tri , + , }

674 :	"tri"
		- NEIGH  = { == , % , / , tri , - , downtri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , downtri , }
		- SUCC   = { / , % , quad , - , * , tri , + , }

674 :	"-"
		- NEIGH  = { == , % , / , tri , - , downtri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , downtri , }
		- SUCC   = { / , % , quad , - , * , tri , + , }

674 :	"/"
		- NEIGH  = { == , % , / , tri , - , downtri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , downtri , }
		- SUCC   = { / , % , quad , - , * , tri , + , }

674 :	"%"
		- NEIGH  = { == , % , / , tri , - , downtri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , downtri , }
		- SUCC   = { / , % , quad , - , * , tri , + , }

674 :	"=="
		- NEIGH  = { == , % , / , tri , - , downtri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , downtri , }
		- SUCC   = { / , % , quad , - , * , tri , + , }

675 :	"quad"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

675 :	"tri"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

675 :	"-"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

675 :	"%"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

675 :	"+"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

675 :	"tri"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

675 :	"-"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

675 :	"/"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

675 :	"*"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

675 :	"+"
		- NEIGH  = { / , % , quad , - , * , tri , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , % , / , tri , - , downtri , }
		- SUCC   = { downtri , pt , isea_rotate , }

677 :	"isea_rotate"
		- NEIGH  = { downtri , pt , isea_rotate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , % , quad , - , * , tri , + , }
		- SUCC   = { downtri , if , }

677 :	"pt"
		- NEIGH  = { downtri , pt , isea_rotate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , % , quad , - , * , tri , + , }
		- SUCC   = { downtri , if , }

677 :	"downtri"
		- NEIGH  = { downtri , pt , isea_rotate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , % , quad , - , * , tri , + , }
		- SUCC   = { downtri , if , }

678 :	"if"
		- NEIGH  = { downtri , if , }
		- PARENT = { }
		- CHILD  = { += , y , x , pt , }
		- PRED   = { downtri , pt , isea_rotate , }
		- SUCC   = { quad , return , }

678 :	"downtri"
		- NEIGH  = { downtri , if , }
		- PARENT = { }
		- CHILD  = { += , y , x , pt , }
		- PRED   = { downtri , pt , isea_rotate , }
		- SUCC   = { quad , return , }

679 :	"pt"
		- NEIGH  = { += , x , pt , }
		- PARENT = { downtri , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , y , pt , }

679 :	"x"
		- NEIGH  = { += , x , pt , }
		- PARENT = { downtri , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , y , pt , }

679 :	"+="
		- NEIGH  = { += , x , pt , }
		- PARENT = { downtri , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , y , pt , }

681 :	"pt"
		- NEIGH  = { += , y , pt , }
		- PARENT = { downtri , if , }
		- CHILD  = { }
		- PRED   = { += , x , pt , }
		- SUCC   = { }

681 :	"y"
		- NEIGH  = { += , y , pt , }
		- PARENT = { downtri , if , }
		- CHILD  = { }
		- PRED   = { += , x , pt , }
		- SUCC   = { }

681 :	"+="
		- NEIGH  = { += , y , pt , }
		- PARENT = { downtri , if , }
		- CHILD  = { }
		- PRED   = { += , x , pt , }
		- SUCC   = { }

683 :	"return"
		- NEIGH  = { quad , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { downtri , if , }
		- SUCC   = { }

683 :	"quad"
		- NEIGH  = { quad , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { downtri , if , }
		- SUCC   = { }

686 :	"isea_dddi_ap3odd"
		- NEIGH  = { isea_dddi_ap3odd , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

686 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

686 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

686 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

686 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

686 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

686 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

686 :	"pt"
		- NEIGH  = { pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

687 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

687 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

687 :	"di"
		- NEIGH  = { di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

689 :	"isea_pt"
		- NEIGH  = { v , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hexwidth , }

689 :	"v"
		- NEIGH  = { v , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hexwidth , }

690 :	"hexwidth"
		- NEIGH  = { hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , isea_pt , }
		- SUCC   = { sidelength , }

691 :	"sidelength"
		- NEIGH  = { sidelength , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hexwidth , }
		- SUCC   = { i , d , }

692 :	"d"
		- NEIGH  = { i , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sidelength , }
		- SUCC   = { maxcoord , }

692 :	"i"
		- NEIGH  = { i , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sidelength , }
		- SUCC   = { maxcoord , }

693 :	"maxcoord"
		- NEIGH  = { maxcoord , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , d , }
		- SUCC   = { h , hex , }

694 :	"hex"
		- NEIGH  = { h , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { maxcoord , }
		- SUCC   = { + , resolution , / , g , pow , sidelength , }

694 :	"h"
		- NEIGH  = { h , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { maxcoord , }
		- SUCC   = { + , resolution , / , g , pow , sidelength , }

697 :	"sidelength"
		- NEIGH  = { + , resolution , / , g , pow , sidelength , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , M_PI , cos , sidelength , hexwidth , }

697 :	"pow"
		- NEIGH  = { + , resolution , / , g , pow , sidelength , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , M_PI , cos , sidelength , hexwidth , }

697 :	"g"
		- NEIGH  = { + , resolution , / , g , pow , sidelength , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , M_PI , cos , sidelength , hexwidth , }

697 :	"resolution"
		- NEIGH  = { + , resolution , / , g , pow , sidelength , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , M_PI , cos , sidelength , hexwidth , }

697 :	"+"
		- NEIGH  = { + , resolution , / , g , pow , sidelength , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , M_PI , cos , sidelength , hexwidth , }

697 :	"/"
		- NEIGH  = { + , resolution , / , g , pow , sidelength , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , hex , }
		- SUCC   = { / , M_PI , cos , sidelength , hexwidth , }

700 :	"hexwidth"
		- NEIGH  = { / , M_PI , cos , sidelength , hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , resolution , / , g , pow , sidelength , }
		- SUCC   = { sidelength , * , lround , maxcoord , }

700 :	"cos"
		- NEIGH  = { / , M_PI , cos , sidelength , hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , resolution , / , g , pow , sidelength , }
		- SUCC   = { sidelength , * , lround , maxcoord , }

700 :	"M_PI"
		- NEIGH  = { / , M_PI , cos , sidelength , hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , resolution , / , g , pow , sidelength , }
		- SUCC   = { sidelength , * , lround , maxcoord , }

700 :	"/"
		- NEIGH  = { / , M_PI , cos , sidelength , hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , resolution , / , g , pow , sidelength , }
		- SUCC   = { sidelength , * , lround , maxcoord , }

700 :	"/"
		- NEIGH  = { / , M_PI , cos , sidelength , hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , resolution , / , g , pow , sidelength , }
		- SUCC   = { sidelength , * , lround , maxcoord , }

700 :	"sidelength"
		- NEIGH  = { / , M_PI , cos , sidelength , hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , resolution , / , g , pow , sidelength , }
		- SUCC   = { sidelength , * , lround , maxcoord , }

705 :	"maxcoord"
		- NEIGH  = { sidelength , * , lround , maxcoord , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , M_PI , cos , sidelength , hexwidth , }
		- SUCC   = { pt , * , v , }

705 :	"lround"
		- NEIGH  = { sidelength , * , lround , maxcoord , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , M_PI , cos , sidelength , hexwidth , }
		- SUCC   = { pt , * , v , }

705 :	"sidelength"
		- NEIGH  = { sidelength , * , lround , maxcoord , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , M_PI , cos , sidelength , hexwidth , }
		- SUCC   = { pt , * , v , }

705 :	"*"
		- NEIGH  = { sidelength , * , lround , maxcoord , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , M_PI , cos , sidelength , hexwidth , }
		- SUCC   = { pt , * , v , }

707 :	"v"
		- NEIGH  = { pt , * , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sidelength , * , lround , maxcoord , }
		- SUCC   = { & , y , hexwidth , x , h , v , hexbin2 , }

707 :	"*"
		- NEIGH  = { pt , * , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sidelength , * , lround , maxcoord , }
		- SUCC   = { & , y , hexwidth , x , h , v , hexbin2 , }

707 :	"pt"
		- NEIGH  = { pt , * , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sidelength , * , lround , maxcoord , }
		- SUCC   = { & , y , hexwidth , x , h , v , hexbin2 , }

708 :	"hexbin2"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"hexwidth"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"v"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"x"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"v"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"y"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"&"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"h"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"x"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"&"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"h"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

708 :	"y"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { iso , h , }

709 :	"h"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , y , hexwidth , x , h , v , hexbin2 , }
		- SUCC   = { h , & , hex_iso , }

709 :	"iso"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , y , hexwidth , x , h , v , hexbin2 , }
		- SUCC   = { h , & , hex_iso , }

710 :	"hex_iso"
		- NEIGH  = { h , & , hex_iso , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iso , h , }
		- SUCC   = { - , h , z , x , d , }

710 :	"&"
		- NEIGH  = { h , & , hex_iso , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iso , h , }
		- SUCC   = { - , h , z , x , d , }

710 :	"h"
		- NEIGH  = { h , & , hex_iso , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iso , h , }
		- SUCC   = { - , h , z , x , d , }

712 :	"d"
		- NEIGH  = { - , h , z , x , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , & , hex_iso , }
		- SUCC   = { + , y , x , h , i , }

712 :	"h"
		- NEIGH  = { - , h , z , x , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , & , hex_iso , }
		- SUCC   = { + , y , x , h , i , }

712 :	"x"
		- NEIGH  = { - , h , z , x , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , & , hex_iso , }
		- SUCC   = { + , y , x , h , i , }

712 :	"-"
		- NEIGH  = { - , h , z , x , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , & , hex_iso , }
		- SUCC   = { + , y , x , h , i , }

712 :	"h"
		- NEIGH  = { - , h , z , x , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , & , hex_iso , }
		- SUCC   = { + , y , x , h , i , }

712 :	"z"
		- NEIGH  = { - , h , z , x , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , & , hex_iso , }
		- SUCC   = { + , y , x , h , i , }

713 :	"i"
		- NEIGH  = { + , y , x , h , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , h , z , x , d , }
		- SUCC   = { <= , quad , if , }

713 :	"h"
		- NEIGH  = { + , y , x , h , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , h , z , x , d , }
		- SUCC   = { <= , quad , if , }

713 :	"x"
		- NEIGH  = { + , y , x , h , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , h , z , x , d , }
		- SUCC   = { <= , quad , if , }

713 :	"+"
		- NEIGH  = { + , y , x , h , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , h , z , x , d , }
		- SUCC   = { <= , quad , if , }

713 :	"h"
		- NEIGH  = { + , y , x , h , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , h , z , x , d , }
		- SUCC   = { <= , quad , if , }

713 :	"y"
		- NEIGH  = { + , y , x , h , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , h , z , x , d , }
		- SUCC   = { <= , quad , if , }

713 :	"+"
		- NEIGH  = { + , y , x , h , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , h , z , x , d , }
		- SUCC   = { <= , quad , if , }

713 :	"h"
		- NEIGH  = { + , y , x , h , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , h , z , x , d , }
		- SUCC   = { <= , quad , if , }

713 :	"y"
		- NEIGH  = { + , y , x , h , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , h , z , x , d , }
		- SUCC   = { <= , quad , if , }

719 :	"if"
		- NEIGH  = { <= , quad , if , }
		- PARENT = { }
		- CHILD  = { maxcoord , >= , quad , i , && , == , d , if , }
		- PRED   = { + , y , x , h , i , }
		- SUCC   = { d , x , di , }

719 :	"quad"
		- NEIGH  = { <= , quad , if , }
		- PARENT = { }
		- CHILD  = { maxcoord , >= , quad , i , && , == , d , if , }
		- PRED   = { + , y , x , h , i , }
		- SUCC   = { d , x , di , }

719 :	"<="
		- NEIGH  = { <= , quad , if , }
		- PARENT = { }
		- CHILD  = { maxcoord , >= , quad , i , && , == , d , if , }
		- PRED   = { + , y , x , h , i , }
		- SUCC   = { d , x , di , }

720 :	"if"
		- NEIGH  = { maxcoord , i , && , == , d , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

720 :	"d"
		- NEIGH  = { maxcoord , i , && , == , d , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

720 :	"=="
		- NEIGH  = { maxcoord , i , && , == , d , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

720 :	"&&"
		- NEIGH  = { maxcoord , i , && , == , d , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

720 :	"i"
		- NEIGH  = { maxcoord , i , && , == , d , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

720 :	"=="
		- NEIGH  = { maxcoord , i , && , == , d , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

720 :	"maxcoord"
		- NEIGH  = { maxcoord , i , && , == , d , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

722 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { maxcoord , i , && , == , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , }

723 :	"d"
		- NEIGH  = { d , }
		- PARENT = { maxcoord , i , && , == , d , if , }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { i , }

724 :	"i"
		- NEIGH  = { i , }
		- PARENT = { maxcoord , i , && , == , d , if , }
		- CHILD  = { }
		- PRED   = { d , }
		- SUCC   = { }

725 :	"if"
		- NEIGH  = { == , maxcoord , i , if , }
		- PARENT = { maxcoord , i , && , == , d , if , }
		- CHILD  = { maxcoord , - , quad , i , d , if , == , += , }
		- PRED   = { }
		- SUCC   = { }

725 :	"i"
		- NEIGH  = { == , maxcoord , i , if , }
		- PARENT = { maxcoord , i , && , == , d , if , }
		- CHILD  = { maxcoord , - , quad , i , d , if , == , += , }
		- PRED   = { }
		- SUCC   = { }

725 :	"=="
		- NEIGH  = { == , maxcoord , i , if , }
		- PARENT = { maxcoord , i , && , == , d , if , }
		- CHILD  = { maxcoord , - , quad , i , d , if , == , += , }
		- PRED   = { }
		- SUCC   = { }

725 :	"maxcoord"
		- NEIGH  = { == , maxcoord , i , if , }
		- PARENT = { maxcoord , i , && , == , d , if , }
		- CHILD  = { maxcoord , - , quad , i , d , if , == , += , }
		- PRED   = { }
		- SUCC   = { }

727 :	"quad"
		- NEIGH  = { += , quad , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

727 :	"+="
		- NEIGH  = { += , quad , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

728 :	"if"
		- NEIGH  = { == , quad , if , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { quad , }
		- PRED   = { += , quad , }
		- SUCC   = { d , - , maxcoord , i , }

728 :	"quad"
		- NEIGH  = { == , quad , if , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { quad , }
		- PRED   = { += , quad , }
		- SUCC   = { d , - , maxcoord , i , }

728 :	"=="
		- NEIGH  = { == , quad , if , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { quad , }
		- PRED   = { += , quad , }
		- SUCC   = { d , - , maxcoord , i , }

729 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

730 :	"i"
		- NEIGH  = { d , - , maxcoord , i , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { d , }

730 :	"maxcoord"
		- NEIGH  = { d , - , maxcoord , i , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { d , }

730 :	"-"
		- NEIGH  = { d , - , maxcoord , i , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { d , }

730 :	"d"
		- NEIGH  = { d , - , maxcoord , i , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { d , }

731 :	"d"
		- NEIGH  = { d , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { d , - , maxcoord , i , }
		- SUCC   = { }

732 :	"if"
		- NEIGH  = { maxcoord , == , d , if , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { d , += , quad , }
		- PRED   = { }
		- SUCC   = { }

732 :	"d"
		- NEIGH  = { maxcoord , == , d , if , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { d , += , quad , }
		- PRED   = { }
		- SUCC   = { }

732 :	"=="
		- NEIGH  = { maxcoord , == , d , if , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { d , += , quad , }
		- PRED   = { }
		- SUCC   = { }

732 :	"maxcoord"
		- NEIGH  = { maxcoord , == , d , if , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { d , += , quad , }
		- PRED   = { }
		- SUCC   = { }

734 :	"quad"
		- NEIGH  = { += , quad , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , }

734 :	"+="
		- NEIGH  = { += , quad , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , }

735 :	"d"
		- NEIGH  = { d , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { += , quad , }
		- SUCC   = { }

737 :	"if"
		- NEIGH  = { >= , quad , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , if , d , == , && , i , }
		- PRED   = { }
		- SUCC   = { }

737 :	"quad"
		- NEIGH  = { >= , quad , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , if , d , == , && , i , }
		- PRED   = { }
		- SUCC   = { }

737 :	">="
		- NEIGH  = { >= , quad , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { maxcoord , if , d , == , && , i , }
		- PRED   = { }
		- SUCC   = { }

738 :	"if"
		- NEIGH  = { maxcoord , if , d , == , && , i , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

738 :	"i"
		- NEIGH  = { maxcoord , if , d , == , && , i , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

738 :	"=="
		- NEIGH  = { maxcoord , if , d , == , && , i , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

738 :	"&&"
		- NEIGH  = { maxcoord , if , d , == , && , i , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

738 :	"d"
		- NEIGH  = { maxcoord , if , d , == , && , i , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

738 :	"=="
		- NEIGH  = { maxcoord , if , d , == , && , i , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

738 :	"maxcoord"
		- NEIGH  = { maxcoord , if , d , == , && , i , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { maxcoord , == , d , if , i , quad , }
		- PRED   = { }
		- SUCC   = { }

740 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { maxcoord , if , d , == , && , i , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , }

741 :	"d"
		- NEIGH  = { d , }
		- PARENT = { maxcoord , if , d , == , && , i , }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { i , }

742 :	"i"
		- NEIGH  = { i , }
		- PARENT = { maxcoord , if , d , == , && , i , }
		- CHILD  = { }
		- PRED   = { d , }
		- SUCC   = { }

743 :	"if"
		- NEIGH  = { maxcoord , == , d , if , }
		- PARENT = { maxcoord , if , d , == , && , i , }
		- CHILD  = { maxcoord , d , if , == , += , i , - , quad , }
		- PRED   = { }
		- SUCC   = { }

743 :	"d"
		- NEIGH  = { maxcoord , == , d , if , }
		- PARENT = { maxcoord , if , d , == , && , i , }
		- CHILD  = { maxcoord , d , if , == , += , i , - , quad , }
		- PRED   = { }
		- SUCC   = { }

743 :	"=="
		- NEIGH  = { maxcoord , == , d , if , }
		- PARENT = { maxcoord , if , d , == , && , i , }
		- CHILD  = { maxcoord , d , if , == , += , i , - , quad , }
		- PRED   = { }
		- SUCC   = { }

743 :	"maxcoord"
		- NEIGH  = { maxcoord , == , d , if , }
		- PARENT = { maxcoord , if , d , == , && , i , }
		- CHILD  = { maxcoord , d , if , == , += , i , - , quad , }
		- PRED   = { }
		- SUCC   = { }

745 :	"quad"
		- NEIGH  = { += , quad , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

745 :	"+="
		- NEIGH  = { += , quad , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

746 :	"if"
		- NEIGH  = { == , quad , if , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { quad , }
		- PRED   = { += , quad , }
		- SUCC   = { i , - , maxcoord , d , }

746 :	"quad"
		- NEIGH  = { == , quad , if , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { quad , }
		- PRED   = { += , quad , }
		- SUCC   = { i , - , maxcoord , d , }

746 :	"=="
		- NEIGH  = { == , quad , if , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { quad , }
		- PRED   = { += , quad , }
		- SUCC   = { i , - , maxcoord , d , }

747 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

748 :	"d"
		- NEIGH  = { i , - , maxcoord , d , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { i , }

748 :	"maxcoord"
		- NEIGH  = { i , - , maxcoord , d , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { i , }

748 :	"-"
		- NEIGH  = { i , - , maxcoord , d , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { i , }

748 :	"i"
		- NEIGH  = { i , - , maxcoord , d , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { i , }

749 :	"i"
		- NEIGH  = { i , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { }
		- PRED   = { i , - , maxcoord , d , }
		- SUCC   = { }

750 :	"if"
		- NEIGH  = { == , maxcoord , i , if , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { % , i , - , quad , }
		- PRED   = { }
		- SUCC   = { }

750 :	"i"
		- NEIGH  = { == , maxcoord , i , if , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { % , i , - , quad , }
		- PRED   = { }
		- SUCC   = { }

750 :	"=="
		- NEIGH  = { == , maxcoord , i , if , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { % , i , - , quad , }
		- PRED   = { }
		- SUCC   = { }

750 :	"maxcoord"
		- NEIGH  = { == , maxcoord , i , if , }
		- PARENT = { maxcoord , == , d , if , }
		- CHILD  = { % , i , - , quad , }
		- PRED   = { }
		- SUCC   = { }

752 :	"quad"
		- NEIGH  = { % , - , quad , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

752 :	"quad"
		- NEIGH  = { % , - , quad , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

752 :	"-"
		- NEIGH  = { % , - , quad , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

752 :	"%"
		- NEIGH  = { % , - , quad , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

753 :	"i"
		- NEIGH  = { i , }
		- PARENT = { == , maxcoord , i , if , }
		- CHILD  = { }
		- PRED   = { % , - , quad , }
		- SUCC   = { }

757 :	"di"
		- NEIGH  = { d , x , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , quad , if , }
		- SUCC   = { i , y , di , }

757 :	"x"
		- NEIGH  = { d , x , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , quad , if , }
		- SUCC   = { i , y , di , }

757 :	"d"
		- NEIGH  = { d , x , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , quad , if , }
		- SUCC   = { i , y , di , }

758 :	"di"
		- NEIGH  = { i , y , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , x , di , }
		- SUCC   = { quad , g , }

758 :	"y"
		- NEIGH  = { i , y , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , x , di , }
		- SUCC   = { quad , g , }

758 :	"i"
		- NEIGH  = { i , y , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , x , di , }
		- SUCC   = { quad , g , }

760 :	"g"
		- NEIGH  = { quad , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , y , di , }
		- SUCC   = { quad , return , }

760 :	"quad"
		- NEIGH  = { quad , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , y , di , }
		- SUCC   = { quad , return , }

760 :	"quad"
		- NEIGH  = { quad , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , y , di , }
		- SUCC   = { quad , return , }

761 :	"return"
		- NEIGH  = { quad , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , g , }
		- SUCC   = { }

761 :	"quad"
		- NEIGH  = { quad , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , g , }
		- SUCC   = { }

764 :	"isea_dddi"
		- NEIGH  = { isea_dddi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

764 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

764 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

764 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

764 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

764 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

764 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

764 :	"pt"
		- NEIGH  = { pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

765 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

765 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

765 :	"di"
		- NEIGH  = { di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

766 :	"isea_pt"
		- NEIGH  = { v , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hexwidth , }

766 :	"v"
		- NEIGH  = { v , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hexwidth , }

767 :	"hexwidth"
		- NEIGH  = { hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , isea_pt , }
		- SUCC   = { sidelength , }

768 :	"sidelength"
		- NEIGH  = { sidelength , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hexwidth , }
		- SUCC   = { h , hex , }

769 :	"hex"
		- NEIGH  = { h , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sidelength , }
		- SUCC   = { % , resolution , && , == , aperture , != , g , if , }

769 :	"h"
		- NEIGH  = { h , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sidelength , }
		- SUCC   = { % , resolution , && , == , aperture , != , g , if , }

771 :	"if"
		- NEIGH  = { % , resolution , && , == , aperture , != , g , if , }
		- PARENT = { }
		- CHILD  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PRED   = { h , hex , }
		- SUCC   = { > , aperture , g , if , }

771 :	"g"
		- NEIGH  = { % , resolution , && , == , aperture , != , g , if , }
		- PARENT = { }
		- CHILD  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PRED   = { h , hex , }
		- SUCC   = { > , aperture , g , if , }

771 :	"aperture"
		- NEIGH  = { % , resolution , && , == , aperture , != , g , if , }
		- PARENT = { }
		- CHILD  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PRED   = { h , hex , }
		- SUCC   = { > , aperture , g , if , }

771 :	"=="
		- NEIGH  = { % , resolution , && , == , aperture , != , g , if , }
		- PARENT = { }
		- CHILD  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PRED   = { h , hex , }
		- SUCC   = { > , aperture , g , if , }

771 :	"&&"
		- NEIGH  = { % , resolution , && , == , aperture , != , g , if , }
		- PARENT = { }
		- CHILD  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PRED   = { h , hex , }
		- SUCC   = { > , aperture , g , if , }

771 :	"g"
		- NEIGH  = { % , resolution , && , == , aperture , != , g , if , }
		- PARENT = { }
		- CHILD  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PRED   = { h , hex , }
		- SUCC   = { > , aperture , g , if , }

771 :	"resolution"
		- NEIGH  = { % , resolution , && , == , aperture , != , g , if , }
		- PARENT = { }
		- CHILD  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PRED   = { h , hex , }
		- SUCC   = { > , aperture , g , if , }

771 :	"%"
		- NEIGH  = { % , resolution , && , == , aperture , != , g , if , }
		- PARENT = { }
		- CHILD  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PRED   = { h , hex , }
		- SUCC   = { > , aperture , g , if , }

771 :	"!="
		- NEIGH  = { % , resolution , && , == , aperture , != , g , if , }
		- PARENT = { }
		- CHILD  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PRED   = { h , hex , }
		- SUCC   = { > , aperture , g , if , }

772 :	"return"
		- NEIGH  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PARENT = { % , resolution , && , == , aperture , != , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"isea_dddi_ap3odd"
		- NEIGH  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PARENT = { % , resolution , && , == , aperture , != , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"g"
		- NEIGH  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PARENT = { % , resolution , && , == , aperture , != , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"quad"
		- NEIGH  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PARENT = { % , resolution , && , == , aperture , != , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"pt"
		- NEIGH  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PARENT = { % , resolution , && , == , aperture , != , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"di"
		- NEIGH  = { di , pt , g , isea_dddi_ap3odd , quad , return , }
		- PARENT = { % , resolution , && , == , aperture , != , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

775 :	"if"
		- NEIGH  = { > , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { lround , sidelength , max , if , numeric_limits , > , / , sidelengthDouble , g , std , pow , resolution , fabs , < , aperture , }
		- PRED   = { % , resolution , && , == , aperture , != , g , if , }
		- SUCC   = { == , sidelength , if , }

775 :	"g"
		- NEIGH  = { > , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { lround , sidelength , max , if , numeric_limits , > , / , sidelengthDouble , g , std , pow , resolution , fabs , < , aperture , }
		- PRED   = { % , resolution , && , == , aperture , != , g , if , }
		- SUCC   = { == , sidelength , if , }

775 :	"aperture"
		- NEIGH  = { > , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { lround , sidelength , max , if , numeric_limits , > , / , sidelengthDouble , g , std , pow , resolution , fabs , < , aperture , }
		- PRED   = { % , resolution , && , == , aperture , != , g , if , }
		- SUCC   = { == , sidelength , if , }

775 :	">"
		- NEIGH  = { > , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { lround , sidelength , max , if , numeric_limits , > , / , sidelengthDouble , g , std , pow , resolution , fabs , < , aperture , }
		- PRED   = { % , resolution , && , == , aperture , != , g , if , }
		- SUCC   = { == , sidelength , if , }

776 :	"sidelengthDouble"
		- NEIGH  = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }

776 :	"pow"
		- NEIGH  = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }

776 :	"g"
		- NEIGH  = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }

776 :	"aperture"
		- NEIGH  = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }

776 :	"g"
		- NEIGH  = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }

776 :	"resolution"
		- NEIGH  = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }

776 :	"/"
		- NEIGH  = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }

777 :	"if"
		- NEIGH  = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { throw , }
		- PRED   = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- SUCC   = { sidelengthDouble , lround , sidelength , }

777 :	"fabs"
		- NEIGH  = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { throw , }
		- PRED   = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- SUCC   = { sidelengthDouble , lround , sidelength , }

777 :	"sidelengthDouble"
		- NEIGH  = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { throw , }
		- PRED   = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- SUCC   = { sidelengthDouble , lround , sidelength , }

777 :	">"
		- NEIGH  = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { throw , }
		- PRED   = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- SUCC   = { sidelengthDouble , lround , sidelength , }

777 :	"std"
		- NEIGH  = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { throw , }
		- PRED   = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- SUCC   = { sidelengthDouble , lround , sidelength , }

777 :	"numeric_limits"
		- NEIGH  = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { throw , }
		- PRED   = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- SUCC   = { sidelengthDouble , lround , sidelength , }

777 :	"<"
		- NEIGH  = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { throw , }
		- PRED   = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- SUCC   = { sidelengthDouble , lround , sidelength , }

777 :	">"
		- NEIGH  = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { throw , }
		- PRED   = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- SUCC   = { sidelengthDouble , lround , sidelength , }

777 :	"max"
		- NEIGH  = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { throw , }
		- PRED   = { / , sidelengthDouble , g , pow , resolution , aperture , }
		- SUCC   = { sidelengthDouble , lround , sidelength , }

778 :	"throw"
		- NEIGH  = { throw , }
		- PARENT = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

780 :	"sidelength"
		- NEIGH  = { sidelengthDouble , lround , sidelength , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- SUCC   = { }

780 :	"lround"
		- NEIGH  = { sidelengthDouble , lround , sidelength , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- SUCC   = { }

780 :	"sidelengthDouble"
		- NEIGH  = { sidelengthDouble , lround , sidelength , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { < , > , sidelengthDouble , fabs , max , numeric_limits , std , if , }
		- SUCC   = { }

782 :	"sidelength"
		- NEIGH  = { resolution , g , sidelength , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

782 :	"g"
		- NEIGH  = { resolution , g , sidelength , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

782 :	"resolution"
		- NEIGH  = { resolution , g , sidelength , }
		- PARENT = { > , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

785 :	"if"
		- NEIGH  = { == , sidelength , if , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { > , aperture , g , if , }
		- SUCC   = { / , sidelength , hexwidth , }

785 :	"sidelength"
		- NEIGH  = { == , sidelength , if , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { > , aperture , g , if , }
		- SUCC   = { / , sidelength , hexwidth , }

785 :	"=="
		- NEIGH  = { == , sidelength , if , }
		- PARENT = { }
		- CHILD  = { throw , }
		- PRED   = { > , aperture , g , if , }
		- SUCC   = { / , sidelength , hexwidth , }

786 :	"throw"
		- NEIGH  = { throw , }
		- PARENT = { == , sidelength , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

788 :	"hexwidth"
		- NEIGH  = { / , sidelength , hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , sidelength , if , }
		- SUCC   = { pt , * , v , }

788 :	"/"
		- NEIGH  = { / , sidelength , hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , sidelength , if , }
		- SUCC   = { pt , * , v , }

788 :	"sidelength"
		- NEIGH  = { / , sidelength , hexwidth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , sidelength , if , }
		- SUCC   = { pt , * , v , }

790 :	"v"
		- NEIGH  = { pt , * , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sidelength , hexwidth , }
		- SUCC   = { v , - , & , isea_rotate , }

790 :	"*"
		- NEIGH  = { pt , * , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sidelength , hexwidth , }
		- SUCC   = { v , - , & , isea_rotate , }

790 :	"pt"
		- NEIGH  = { pt , * , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , sidelength , hexwidth , }
		- SUCC   = { v , - , & , isea_rotate , }

791 :	"isea_rotate"
		- NEIGH  = { v , - , & , isea_rotate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { & , y , hexwidth , x , h , v , hexbin2 , }

791 :	"&"
		- NEIGH  = { v , - , & , isea_rotate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { & , y , hexwidth , x , h , v , hexbin2 , }

791 :	"v"
		- NEIGH  = { v , - , & , isea_rotate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { & , y , hexwidth , x , h , v , hexbin2 , }

791 :	"-"
		- NEIGH  = { v , - , & , isea_rotate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { & , y , hexwidth , x , h , v , hexbin2 , }

792 :	"hexbin2"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"hexwidth"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"v"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"x"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"v"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"y"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"&"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"h"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"x"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"&"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"h"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

792 :	"y"
		- NEIGH  = { & , y , hexwidth , x , h , v , hexbin2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , - , & , isea_rotate , }
		- SUCC   = { iso , h , }

793 :	"h"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , y , hexwidth , x , h , v , hexbin2 , }
		- SUCC   = { h , & , hex_iso , }

793 :	"iso"
		- NEIGH  = { iso , h , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , y , hexwidth , x , h , v , hexbin2 , }
		- SUCC   = { h , & , hex_iso , }

794 :	"hex_iso"
		- NEIGH  = { h , & , hex_iso , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iso , h , }
		- SUCC   = { <= , quad , if , }

794 :	"&"
		- NEIGH  = { h , & , hex_iso , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iso , h , }
		- SUCC   = { <= , quad , if , }

794 :	"h"
		- NEIGH  = { h , & , hex_iso , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iso , h , }
		- SUCC   = { <= , quad , if , }

797 :	"if"
		- NEIGH  = { <= , quad , if , }
		- PARENT = { }
		- CHILD  = { >= , quad , - , z , == , && , sidelength , x , h , if , }
		- PRED   = { h , & , hex_iso , }
		- SUCC   = { h , x , di , }

797 :	"quad"
		- NEIGH  = { <= , quad , if , }
		- PARENT = { }
		- CHILD  = { >= , quad , - , z , == , && , sidelength , x , h , if , }
		- PRED   = { h , & , hex_iso , }
		- SUCC   = { h , x , di , }

797 :	"<="
		- NEIGH  = { <= , quad , if , }
		- PARENT = { }
		- CHILD  = { >= , quad , - , z , == , && , sidelength , x , h , if , }
		- PRED   = { h , & , hex_iso , }
		- SUCC   = { h , x , di , }

798 :	"if"
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

798 :	"h"
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

798 :	"x"
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

798 :	"=="
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

798 :	"&&"
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

798 :	"h"
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

798 :	"z"
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

798 :	"=="
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

798 :	"-"
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

798 :	"sidelength"
		- NEIGH  = { - , z , == , && , sidelength , x , h , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { == , if , sidelength , x , y , z , h , - , quad , }
		- PRED   = { }
		- SUCC   = { }

800 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { z , h , }

801 :	"h"
		- NEIGH  = { z , h , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { y , h , }

801 :	"z"
		- NEIGH  = { z , h , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { y , h , }

802 :	"h"
		- NEIGH  = { y , h , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { }
		- PRED   = { z , h , }
		- SUCC   = { x , h , }

802 :	"y"
		- NEIGH  = { y , h , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { }
		- PRED   = { z , h , }
		- SUCC   = { x , h , }

803 :	"h"
		- NEIGH  = { x , h , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

803 :	"x"
		- NEIGH  = { x , h , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

804 :	"if"
		- NEIGH  = { sidelength , - , z , == , h , if , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { x , sidelength , z , y , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

804 :	"h"
		- NEIGH  = { sidelength , - , z , == , h , if , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { x , sidelength , z , y , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

804 :	"z"
		- NEIGH  = { sidelength , - , z , == , h , if , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { x , sidelength , z , y , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

804 :	"=="
		- NEIGH  = { sidelength , - , z , == , h , if , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { x , sidelength , z , y , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

804 :	"-"
		- NEIGH  = { sidelength , - , z , == , h , if , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { x , sidelength , z , y , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

804 :	"sidelength"
		- NEIGH  = { sidelength , - , z , == , h , if , }
		- PARENT = { - , z , == , && , sidelength , x , h , if , }
		- CHILD  = { x , sidelength , z , y , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

805 :	"quad"
		- NEIGH  = { + , quad , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

805 :	"quad"
		- NEIGH  = { + , quad , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

805 :	"+"
		- NEIGH  = { + , quad , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

806 :	"if"
		- NEIGH  = { == , quad , if , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { quad , }
		- PRED   = { + , quad , }
		- SUCC   = { - , x , y , sidelength , h , }

806 :	"quad"
		- NEIGH  = { == , quad , if , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { quad , }
		- PRED   = { + , quad , }
		- SUCC   = { - , x , y , sidelength , h , }

806 :	"=="
		- NEIGH  = { == , quad , if , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { quad , }
		- PRED   = { + , quad , }
		- SUCC   = { - , x , y , sidelength , h , }

807 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

808 :	"h"
		- NEIGH  = { - , x , y , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { - , x , z , sidelength , h , }

808 :	"y"
		- NEIGH  = { - , x , y , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { - , x , z , sidelength , h , }

808 :	"sidelength"
		- NEIGH  = { - , x , y , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { - , x , z , sidelength , h , }

808 :	"-"
		- NEIGH  = { - , x , y , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { - , x , z , sidelength , h , }

808 :	"h"
		- NEIGH  = { - , x , y , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { - , x , z , sidelength , h , }

808 :	"x"
		- NEIGH  = { - , x , y , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { - , x , z , sidelength , h , }

809 :	"h"
		- NEIGH  = { - , x , z , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , x , y , sidelength , h , }
		- SUCC   = { x , h , }

809 :	"z"
		- NEIGH  = { - , x , z , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , x , y , sidelength , h , }
		- SUCC   = { x , h , }

809 :	"h"
		- NEIGH  = { - , x , z , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , x , y , sidelength , h , }
		- SUCC   = { x , h , }

809 :	"x"
		- NEIGH  = { - , x , z , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , x , y , sidelength , h , }
		- SUCC   = { x , h , }

809 :	"-"
		- NEIGH  = { - , x , z , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , x , y , sidelength , h , }
		- SUCC   = { x , h , }

809 :	"sidelength"
		- NEIGH  = { - , x , z , sidelength , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , x , y , sidelength , h , }
		- SUCC   = { x , h , }

810 :	"h"
		- NEIGH  = { x , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , x , z , sidelength , h , }
		- SUCC   = { }

810 :	"x"
		- NEIGH  = { x , h , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , x , z , sidelength , h , }
		- SUCC   = { }

811 :	"if"
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { x , quad , - , z , y , h , += , }
		- PRED   = { }
		- SUCC   = { }

811 :	"h"
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { x , quad , - , z , y , h , += , }
		- PRED   = { }
		- SUCC   = { }

811 :	"x"
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { x , quad , - , z , y , h , += , }
		- PRED   = { }
		- SUCC   = { }

811 :	"=="
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { x , quad , - , z , y , h , += , }
		- PRED   = { }
		- SUCC   = { }

811 :	"sidelength"
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , - , z , == , h , if , }
		- CHILD  = { x , quad , - , z , y , h , += , }
		- PRED   = { }
		- SUCC   = { }

812 :	"quad"
		- NEIGH  = { += , quad , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , z , y , h , }

812 :	"+="
		- NEIGH  = { += , quad , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , z , y , h , }

813 :	"h"
		- NEIGH  = { - , z , y , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { += , quad , }
		- SUCC   = { x , h , }

813 :	"y"
		- NEIGH  = { - , z , y , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { += , quad , }
		- SUCC   = { x , h , }

813 :	"-"
		- NEIGH  = { - , z , y , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { += , quad , }
		- SUCC   = { x , h , }

813 :	"h"
		- NEIGH  = { - , z , y , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { += , quad , }
		- SUCC   = { x , h , }

813 :	"z"
		- NEIGH  = { - , z , y , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { += , quad , }
		- SUCC   = { x , h , }

814 :	"h"
		- NEIGH  = { x , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , z , y , h , }
		- SUCC   = { }

814 :	"x"
		- NEIGH  = { x , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { - , z , y , h , }
		- SUCC   = { }

816 :	"if"
		- NEIGH  = { >= , quad , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { sidelength , x , == , && , z , h , if , }
		- PRED   = { }
		- SUCC   = { }

816 :	"quad"
		- NEIGH  = { >= , quad , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { sidelength , x , == , && , z , h , if , }
		- PRED   = { }
		- SUCC   = { }

816 :	">="
		- NEIGH  = { >= , quad , if , }
		- PARENT = { <= , quad , if , }
		- CHILD  = { sidelength , x , == , && , z , h , if , }
		- PRED   = { }
		- SUCC   = { }

817 :	"if"
		- NEIGH  = { sidelength , x , == , && , z , h , if , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { == , if , z , y , sidelength , x , h , quad , }
		- PRED   = { }
		- SUCC   = { }

817 :	"h"
		- NEIGH  = { sidelength , x , == , && , z , h , if , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { == , if , z , y , sidelength , x , h , quad , }
		- PRED   = { }
		- SUCC   = { }

817 :	"z"
		- NEIGH  = { sidelength , x , == , && , z , h , if , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { == , if , z , y , sidelength , x , h , quad , }
		- PRED   = { }
		- SUCC   = { }

817 :	"=="
		- NEIGH  = { sidelength , x , == , && , z , h , if , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { == , if , z , y , sidelength , x , h , quad , }
		- PRED   = { }
		- SUCC   = { }

817 :	"&&"
		- NEIGH  = { sidelength , x , == , && , z , h , if , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { == , if , z , y , sidelength , x , h , quad , }
		- PRED   = { }
		- SUCC   = { }

817 :	"h"
		- NEIGH  = { sidelength , x , == , && , z , h , if , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { == , if , z , y , sidelength , x , h , quad , }
		- PRED   = { }
		- SUCC   = { }

817 :	"x"
		- NEIGH  = { sidelength , x , == , && , z , h , if , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { == , if , z , y , sidelength , x , h , quad , }
		- PRED   = { }
		- SUCC   = { }

817 :	"=="
		- NEIGH  = { sidelength , x , == , && , z , h , if , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { == , if , z , y , sidelength , x , h , quad , }
		- PRED   = { }
		- SUCC   = { }

817 :	"sidelength"
		- NEIGH  = { sidelength , x , == , && , z , h , if , }
		- PARENT = { >= , quad , if , }
		- CHILD  = { == , if , z , y , sidelength , x , h , quad , }
		- PRED   = { }
		- SUCC   = { }

819 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , h , }

820 :	"h"
		- NEIGH  = { x , h , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { y , h , }

820 :	"x"
		- NEIGH  = { x , h , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { y , h , }

821 :	"h"
		- NEIGH  = { y , h , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { }
		- PRED   = { x , h , }
		- SUCC   = { z , h , }

821 :	"y"
		- NEIGH  = { y , h , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { }
		- PRED   = { x , h , }
		- SUCC   = { z , h , }

822 :	"h"
		- NEIGH  = { z , h , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

822 :	"z"
		- NEIGH  = { z , h , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

823 :	"if"
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { z , y , sidelength , x , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

823 :	"h"
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { z , y , sidelength , x , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

823 :	"x"
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { z , y , sidelength , x , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

823 :	"=="
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { z , y , sidelength , x , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

823 :	"sidelength"
		- NEIGH  = { x , sidelength , == , h , if , }
		- PARENT = { sidelength , x , == , && , z , h , if , }
		- CHILD  = { z , y , sidelength , x , h , == , if , + , - , quad , }
		- PRED   = { }
		- SUCC   = { }

824 :	"quad"
		- NEIGH  = { + , quad , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

824 :	"quad"
		- NEIGH  = { + , quad , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

824 :	"+"
		- NEIGH  = { + , quad , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , quad , if , }

825 :	"if"
		- NEIGH  = { == , quad , if , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { quad , }
		- PRED   = { + , quad , }
		- SUCC   = { + , y , x , sidelength , h , }

825 :	"quad"
		- NEIGH  = { == , quad , if , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { quad , }
		- PRED   = { + , quad , }
		- SUCC   = { + , y , x , sidelength , h , }

825 :	"=="
		- NEIGH  = { == , quad , if , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { quad , }
		- PRED   = { + , quad , }
		- SUCC   = { + , y , x , sidelength , h , }

826 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

827 :	"h"
		- NEIGH  = { + , y , x , sidelength , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { y , h , }

827 :	"x"
		- NEIGH  = { + , y , x , sidelength , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { y , h , }

827 :	"h"
		- NEIGH  = { + , y , x , sidelength , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { y , h , }

827 :	"y"
		- NEIGH  = { + , y , x , sidelength , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { y , h , }

827 :	"+"
		- NEIGH  = { + , y , x , sidelength , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { y , h , }

827 :	"sidelength"
		- NEIGH  = { + , y , x , sidelength , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { y , h , }

828 :	"h"
		- NEIGH  = { y , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { + , y , x , sidelength , h , }
		- SUCC   = { - , x , z , h , }

828 :	"y"
		- NEIGH  = { y , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { + , y , x , sidelength , h , }
		- SUCC   = { - , x , z , h , }

829 :	"h"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

829 :	"z"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

829 :	"-"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

829 :	"h"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

829 :	"x"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

830 :	"if"
		- NEIGH  = { sidelength , - , y , == , h , if , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { x , z , y , h , -= , - , quad , }
		- PRED   = { }
		- SUCC   = { }

830 :	"h"
		- NEIGH  = { sidelength , - , y , == , h , if , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { x , z , y , h , -= , - , quad , }
		- PRED   = { }
		- SUCC   = { }

830 :	"y"
		- NEIGH  = { sidelength , - , y , == , h , if , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { x , z , y , h , -= , - , quad , }
		- PRED   = { }
		- SUCC   = { }

830 :	"=="
		- NEIGH  = { sidelength , - , y , == , h , if , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { x , z , y , h , -= , - , quad , }
		- PRED   = { }
		- SUCC   = { }

830 :	"-"
		- NEIGH  = { sidelength , - , y , == , h , if , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { x , z , y , h , -= , - , quad , }
		- PRED   = { }
		- SUCC   = { }

830 :	"sidelength"
		- NEIGH  = { sidelength , - , y , == , h , if , }
		- PARENT = { x , sidelength , == , h , if , }
		- CHILD  = { x , z , y , h , -= , - , quad , }
		- PRED   = { }
		- SUCC   = { }

831 :	"quad"
		- NEIGH  = { -= , quad , }
		- PARENT = { sidelength , - , y , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , h , }

831 :	"-="
		- NEIGH  = { -= , quad , }
		- PARENT = { sidelength , - , y , == , h , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , h , }

832 :	"h"
		- NEIGH  = { y , h , }
		- PARENT = { sidelength , - , y , == , h , if , }
		- CHILD  = { }
		- PRED   = { -= , quad , }
		- SUCC   = { - , x , z , h , }

832 :	"y"
		- NEIGH  = { y , h , }
		- PARENT = { sidelength , - , y , == , h , if , }
		- CHILD  = { }
		- PRED   = { -= , quad , }
		- SUCC   = { - , x , z , h , }

833 :	"h"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { sidelength , - , y , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

833 :	"z"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { sidelength , - , y , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

833 :	"-"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { sidelength , - , y , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

833 :	"h"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { sidelength , - , y , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

833 :	"x"
		- NEIGH  = { - , x , z , h , }
		- PARENT = { sidelength , - , y , == , h , if , }
		- CHILD  = { }
		- PRED   = { y , h , }
		- SUCC   = { }

836 :	"di"
		- NEIGH  = { h , x , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , quad , if , }
		- SUCC   = { h , - , z , y , di , }

836 :	"x"
		- NEIGH  = { h , x , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , quad , if , }
		- SUCC   = { h , - , z , y , di , }

836 :	"h"
		- NEIGH  = { h , x , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , quad , if , }
		- SUCC   = { h , - , z , y , di , }

836 :	"x"
		- NEIGH  = { h , x , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , quad , if , }
		- SUCC   = { h , - , z , y , di , }

837 :	"di"
		- NEIGH  = { h , - , z , y , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , x , di , }
		- SUCC   = { quad , g , }

837 :	"y"
		- NEIGH  = { h , - , z , y , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , x , di , }
		- SUCC   = { quad , g , }

837 :	"-"
		- NEIGH  = { h , - , z , y , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , x , di , }
		- SUCC   = { quad , g , }

837 :	"h"
		- NEIGH  = { h , - , z , y , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , x , di , }
		- SUCC   = { quad , g , }

837 :	"z"
		- NEIGH  = { h , - , z , y , di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , x , di , }
		- SUCC   = { quad , g , }

839 :	"g"
		- NEIGH  = { quad , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , - , z , y , di , }
		- SUCC   = { quad , return , }

839 :	"quad"
		- NEIGH  = { quad , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , - , z , y , di , }
		- SUCC   = { quad , return , }

839 :	"quad"
		- NEIGH  = { quad , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { h , - , z , y , di , }
		- SUCC   = { quad , return , }

840 :	"return"
		- NEIGH  = { quad , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , g , }
		- SUCC   = { }

840 :	"quad"
		- NEIGH  = { quad , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , g , }
		- SUCC   = { }

843 :	"isea_ptdi"
		- NEIGH  = { isea_ptdi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

843 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

843 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

843 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

843 :	"tri"
		- NEIGH  = { tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

843 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

843 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

843 :	"pt"
		- NEIGH  = { pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

844 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

844 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

844 :	"di"
		- NEIGH  = { di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

845 :	"isea_pt"
		- NEIGH  = { v , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { quad , }

845 :	"v"
		- NEIGH  = { v , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { quad , }

846 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , isea_pt , }
		- SUCC   = { pt , * , v , }

848 :	"v"
		- NEIGH  = { pt , * , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { v , & , tri , isea_ptdd , quad , }

848 :	"*"
		- NEIGH  = { pt , * , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { v , & , tri , isea_ptdd , quad , }

848 :	"pt"
		- NEIGH  = { pt , * , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { v , & , tri , isea_ptdd , quad , }

849 :	"quad"
		- NEIGH  = { v , & , tri , isea_ptdd , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { & , di , g , v , isea_dddi , quad , }

849 :	"isea_ptdd"
		- NEIGH  = { v , & , tri , isea_ptdd , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { & , di , g , v , isea_dddi , quad , }

849 :	"tri"
		- NEIGH  = { v , & , tri , isea_ptdd , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { & , di , g , v , isea_dddi , quad , }

849 :	"&"
		- NEIGH  = { v , & , tri , isea_ptdd , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { & , di , g , v , isea_dddi , quad , }

849 :	"v"
		- NEIGH  = { v , & , tri , isea_ptdd , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pt , * , v , }
		- SUCC   = { & , di , g , v , isea_dddi , quad , }

850 :	"quad"
		- NEIGH  = { & , di , g , v , isea_dddi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , isea_ptdd , quad , }
		- SUCC   = { quad , return , }

850 :	"isea_dddi"
		- NEIGH  = { & , di , g , v , isea_dddi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , isea_ptdd , quad , }
		- SUCC   = { quad , return , }

850 :	"g"
		- NEIGH  = { & , di , g , v , isea_dddi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , isea_ptdd , quad , }
		- SUCC   = { quad , return , }

850 :	"quad"
		- NEIGH  = { & , di , g , v , isea_dddi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , isea_ptdd , quad , }
		- SUCC   = { quad , return , }

850 :	"&"
		- NEIGH  = { & , di , g , v , isea_dddi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , isea_ptdd , quad , }
		- SUCC   = { quad , return , }

850 :	"v"
		- NEIGH  = { & , di , g , v , isea_dddi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , isea_ptdd , quad , }
		- SUCC   = { quad , return , }

850 :	"di"
		- NEIGH  = { & , di , g , v , isea_dddi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , isea_ptdd , quad , }
		- SUCC   = { quad , return , }

851 :	"return"
		- NEIGH  = { quad , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , di , g , v , isea_dddi , quad , }
		- SUCC   = { }

851 :	"quad"
		- NEIGH  = { quad , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , di , g , v , isea_dddi , quad , }
		- SUCC   = { }

856 :	"isea_disn"
		- NEIGH  = { isea_disn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

856 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

856 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

856 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

856 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

856 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

856 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

856 :	"di"
		- NEIGH  = { di , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

857 :	"sidelength"
		- NEIGH  = { sidelength , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , sn , }

858 :	"sn"
		- NEIGH  = { height , sn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sidelength , }
		- SUCC   = { hexes , }

858 :	"height"
		- NEIGH  = { height , sn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sidelength , }
		- SUCC   = { hexes , }

859 :	"hexes"
		- NEIGH  = { hexes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { height , sn , }
		- SUCC   = { == , quad , if , }

861 :	"if"
		- NEIGH  = { == , quad , if , }
		- PARENT = { }
		- CHILD  = { return , serial , g , }
		- PRED   = { hexes , }
		- SUCC   = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }

861 :	"quad"
		- NEIGH  = { == , quad , if , }
		- PARENT = { }
		- CHILD  = { return , serial , g , }
		- PRED   = { hexes , }
		- SUCC   = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }

861 :	"=="
		- NEIGH  = { == , quad , if , }
		- PARENT = { }
		- CHILD  = { return , serial , g , }
		- PRED   = { hexes , }
		- SUCC   = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }

862 :	"g"
		- NEIGH  = { serial , g , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { serial , g , return , }

862 :	"serial"
		- NEIGH  = { serial , g , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { serial , g , return , }

863 :	"return"
		- NEIGH  = { serial , g , return , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { serial , g , }
		- SUCC   = { }

863 :	"g"
		- NEIGH  = { serial , g , return , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { serial , g , }
		- SUCC   = { }

863 :	"serial"
		- NEIGH  = { serial , g , return , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { serial , g , }
		- SUCC   = { }

866 :	"hexes"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"lround"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"pow"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"static_cast"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"<"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	">"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"g"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"aperture"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"static_cast"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"<"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	">"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"g"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

866 :	"resolution"
		- NEIGH  = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , quad , if , }
		- SUCC   = { == , quad , if , }

867 :	"if"
		- NEIGH  = { == , quad , if , }
		- PARENT = { }
		- CHILD  = { * , return , hexes , + , serial , g , }
		- PRED   = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- SUCC   = { % , resolution , && , == , aperture , g , if , }

867 :	"quad"
		- NEIGH  = { == , quad , if , }
		- PARENT = { }
		- CHILD  = { * , return , hexes , + , serial , g , }
		- PRED   = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- SUCC   = { % , resolution , && , == , aperture , g , if , }

867 :	"=="
		- NEIGH  = { == , quad , if , }
		- PARENT = { }
		- CHILD  = { * , return , hexes , + , serial , g , }
		- PRED   = { aperture , g , > , < , hexes , pow , static_cast , resolution , lround , }
		- SUCC   = { % , resolution , && , == , aperture , g , if , }

868 :	"g"
		- NEIGH  = { * , hexes , + , serial , g , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { serial , g , return , }

868 :	"serial"
		- NEIGH  = { * , hexes , + , serial , g , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { serial , g , return , }

868 :	"+"
		- NEIGH  = { * , hexes , + , serial , g , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { serial , g , return , }

868 :	"*"
		- NEIGH  = { * , hexes , + , serial , g , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { serial , g , return , }

868 :	"hexes"
		- NEIGH  = { * , hexes , + , serial , g , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { serial , g , return , }

868 :	"+"
		- NEIGH  = { * , hexes , + , serial , g , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { serial , g , return , }

869 :	"return"
		- NEIGH  = { serial , g , return , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { * , hexes , + , serial , g , }
		- SUCC   = { }

869 :	"g"
		- NEIGH  = { serial , g , return , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { * , hexes , + , serial , g , }
		- SUCC   = { }

869 :	"serial"
		- NEIGH  = { serial , g , return , }
		- PARENT = { == , quad , if , }
		- CHILD  = { }
		- PRED   = { * , hexes , + , serial , g , }
		- SUCC   = { }

871 :	"if"
		- NEIGH  = { % , resolution , && , == , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { + , sidelength , quad , hexes , * , x , sn , aperture , pow , di , / , y , - , g , += , resolution , lround , floor , height , }
		- PRED   = { == , quad , if , }
		- SUCC   = { sn , serial , g , }

871 :	"g"
		- NEIGH  = { % , resolution , && , == , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { + , sidelength , quad , hexes , * , x , sn , aperture , pow , di , / , y , - , g , += , resolution , lround , floor , height , }
		- PRED   = { == , quad , if , }
		- SUCC   = { sn , serial , g , }

871 :	"aperture"
		- NEIGH  = { % , resolution , && , == , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { + , sidelength , quad , hexes , * , x , sn , aperture , pow , di , / , y , - , g , += , resolution , lround , floor , height , }
		- PRED   = { == , quad , if , }
		- SUCC   = { sn , serial , g , }

871 :	"=="
		- NEIGH  = { % , resolution , && , == , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { + , sidelength , quad , hexes , * , x , sn , aperture , pow , di , / , y , - , g , += , resolution , lround , floor , height , }
		- PRED   = { == , quad , if , }
		- SUCC   = { sn , serial , g , }

871 :	"&&"
		- NEIGH  = { % , resolution , && , == , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { + , sidelength , quad , hexes , * , x , sn , aperture , pow , di , / , y , - , g , += , resolution , lround , floor , height , }
		- PRED   = { == , quad , if , }
		- SUCC   = { sn , serial , g , }

871 :	"g"
		- NEIGH  = { % , resolution , && , == , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { + , sidelength , quad , hexes , * , x , sn , aperture , pow , di , / , y , - , g , += , resolution , lround , floor , height , }
		- PRED   = { == , quad , if , }
		- SUCC   = { sn , serial , g , }

871 :	"resolution"
		- NEIGH  = { % , resolution , && , == , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { + , sidelength , quad , hexes , * , x , sn , aperture , pow , di , / , y , - , g , += , resolution , lround , floor , height , }
		- PRED   = { == , quad , if , }
		- SUCC   = { sn , serial , g , }

871 :	"%"
		- NEIGH  = { % , resolution , && , == , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { + , sidelength , quad , hexes , * , x , sn , aperture , pow , di , / , y , - , g , += , resolution , lround , floor , height , }
		- PRED   = { == , quad , if , }
		- SUCC   = { sn , serial , g , }

871 :	"=="
		- NEIGH  = { % , resolution , && , == , aperture , g , if , }
		- PARENT = { }
		- CHILD  = { + , sidelength , quad , hexes , * , x , sn , aperture , pow , di , / , y , - , g , += , resolution , lround , floor , height , }
		- PRED   = { == , quad , if , }
		- SUCC   = { sn , serial , g , }

872 :	"height"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

872 :	"lround"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

872 :	"floor"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

872 :	"pow"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

872 :	"g"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

872 :	"aperture"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

872 :	"g"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

872 :	"resolution"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

872 :	"-"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

872 :	"/"
		- NEIGH  = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { height , * , x , di , sn , }

873 :	"sn"
		- NEIGH  = { height , * , x , di , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- SUCC   = { height , y , di , += , / , sn , }

873 :	"di"
		- NEIGH  = { height , * , x , di , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- SUCC   = { height , y , di , += , / , sn , }

873 :	"x"
		- NEIGH  = { height , * , x , di , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- SUCC   = { height , y , di , += , / , sn , }

873 :	"*"
		- NEIGH  = { height , * , x , di , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- SUCC   = { height , y , di , += , / , sn , }

873 :	"height"
		- NEIGH  = { height , * , x , di , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , - , pow , floor , height , }
		- SUCC   = { height , y , di , += , / , sn , }

874 :	"sn"
		- NEIGH  = { height , y , di , += , / , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , * , x , di , sn , }
		- SUCC   = { * , hexes , sn , quad , - , += , }

874 :	"+="
		- NEIGH  = { height , y , di , += , / , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , * , x , di , sn , }
		- SUCC   = { * , hexes , sn , quad , - , += , }

874 :	"di"
		- NEIGH  = { height , y , di , += , / , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , * , x , di , sn , }
		- SUCC   = { * , hexes , sn , quad , - , += , }

874 :	"y"
		- NEIGH  = { height , y , di , += , / , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , * , x , di , sn , }
		- SUCC   = { * , hexes , sn , quad , - , += , }

874 :	"/"
		- NEIGH  = { height , y , di , += , / , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , * , x , di , sn , }
		- SUCC   = { * , hexes , sn , quad , - , += , }

874 :	"height"
		- NEIGH  = { height , y , di , += , / , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , * , x , di , sn , }
		- SUCC   = { * , hexes , sn , quad , - , += , }

875 :	"sn"
		- NEIGH  = { * , hexes , sn , quad , - , += , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , y , di , += , / , sn , }
		- SUCC   = { += , sn , }

875 :	"+="
		- NEIGH  = { * , hexes , sn , quad , - , += , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , y , di , += , / , sn , }
		- SUCC   = { += , sn , }

875 :	"quad"
		- NEIGH  = { * , hexes , sn , quad , - , += , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , y , di , += , / , sn , }
		- SUCC   = { += , sn , }

875 :	"-"
		- NEIGH  = { * , hexes , sn , quad , - , += , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , y , di , += , / , sn , }
		- SUCC   = { += , sn , }

875 :	"*"
		- NEIGH  = { * , hexes , sn , quad , - , += , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , y , di , += , / , sn , }
		- SUCC   = { += , sn , }

875 :	"hexes"
		- NEIGH  = { * , hexes , sn , quad , - , += , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { height , y , di , += , / , sn , }
		- SUCC   = { += , sn , }

876 :	"sn"
		- NEIGH  = { += , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { * , hexes , sn , quad , - , += , }
		- SUCC   = { }

876 :	"+="
		- NEIGH  = { += , sn , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { * , hexes , sn , quad , - , += , }
		- SUCC   = { }

878 :	"sidelength"
		- NEIGH  = { aperture , / , g , resolution , lround , pow , sidelength , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }

878 :	"lround"
		- NEIGH  = { aperture , / , g , resolution , lround , pow , sidelength , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }

878 :	"pow"
		- NEIGH  = { aperture , / , g , resolution , lround , pow , sidelength , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }

878 :	"g"
		- NEIGH  = { aperture , / , g , resolution , lround , pow , sidelength , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }

878 :	"aperture"
		- NEIGH  = { aperture , / , g , resolution , lround , pow , sidelength , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }

878 :	"g"
		- NEIGH  = { aperture , / , g , resolution , lround , pow , sidelength , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }

878 :	"resolution"
		- NEIGH  = { aperture , / , g , resolution , lround , pow , sidelength , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }

878 :	"/"
		- NEIGH  = { aperture , / , g , resolution , lround , pow , sidelength , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }

879 :	"sn"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"lround"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"floor"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"quad"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"-"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"*"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"hexes"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"+"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"sidelength"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"*"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"di"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"x"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"+"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"di"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"y"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

879 :	"+"
		- NEIGH  = { di , x , quad , sidelength , + , * , hexes , sn , y , - , floor , lround , }
		- PARENT = { % , resolution , && , == , aperture , g , if , }
		- CHILD  = { }
		- PRED   = { aperture , / , g , resolution , lround , pow , sidelength , }
		- SUCC   = { }

882 :	"g"
		- NEIGH  = { sn , serial , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , resolution , && , == , aperture , g , if , }
		- SUCC   = { sn , return , }

882 :	"serial"
		- NEIGH  = { sn , serial , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , resolution , && , == , aperture , g , if , }
		- SUCC   = { sn , return , }

882 :	"sn"
		- NEIGH  = { sn , serial , g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { % , resolution , && , == , aperture , g , if , }
		- SUCC   = { sn , return , }

883 :	"return"
		- NEIGH  = { sn , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sn , serial , g , }
		- SUCC   = { }

883 :	"sn"
		- NEIGH  = { sn , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sn , serial , g , }
		- SUCC   = { }

891 :	"isea_hex"
		- NEIGH  = { isea_hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

891 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

891 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

891 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

891 :	"tri"
		- NEIGH  = { tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"pt"
		- NEIGH  = { pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

892 :	"hex"
		- NEIGH  = { hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

893 :	"isea_pt"
		- NEIGH  = { v , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { quad , }

893 :	"v"
		- NEIGH  = { v , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { quad , }

898 :	"quad"
		- NEIGH  = { quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , isea_pt , }
		- SUCC   = { v , & , tri , g , pt , isea_ptdi , quad , }

900 :	"quad"
		- NEIGH  = { v , & , tri , g , pt , isea_ptdi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { quad , v , x , + , << , hex , }

900 :	"isea_ptdi"
		- NEIGH  = { v , & , tri , g , pt , isea_ptdi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { quad , v , x , + , << , hex , }

900 :	"g"
		- NEIGH  = { v , & , tri , g , pt , isea_ptdi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { quad , v , x , + , << , hex , }

900 :	"tri"
		- NEIGH  = { v , & , tri , g , pt , isea_ptdi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { quad , v , x , + , << , hex , }

900 :	"pt"
		- NEIGH  = { v , & , tri , g , pt , isea_ptdi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { quad , v , x , + , << , hex , }

900 :	"&"
		- NEIGH  = { v , & , tri , g , pt , isea_ptdi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { quad , v , x , + , << , hex , }

900 :	"v"
		- NEIGH  = { v , & , tri , g , pt , isea_ptdi , quad , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , }
		- SUCC   = { quad , v , x , + , << , hex , }

902 :	"hex"
		- NEIGH  = { quad , v , x , + , << , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , g , pt , isea_ptdi , quad , }
		- SUCC   = { v , y , hex , }

902 :	"x"
		- NEIGH  = { quad , v , x , + , << , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , g , pt , isea_ptdi , quad , }
		- SUCC   = { v , y , hex , }

902 :	"v"
		- NEIGH  = { quad , v , x , + , << , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , g , pt , isea_ptdi , quad , }
		- SUCC   = { v , y , hex , }

902 :	"x"
		- NEIGH  = { quad , v , x , + , << , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , g , pt , isea_ptdi , quad , }
		- SUCC   = { v , y , hex , }

902 :	"<<"
		- NEIGH  = { quad , v , x , + , << , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , g , pt , isea_ptdi , quad , }
		- SUCC   = { v , y , hex , }

902 :	"+"
		- NEIGH  = { quad , v , x , + , << , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , g , pt , isea_ptdi , quad , }
		- SUCC   = { v , y , hex , }

902 :	"quad"
		- NEIGH  = { quad , v , x , + , << , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , & , tri , g , pt , isea_ptdi , quad , }
		- SUCC   = { v , y , hex , }

903 :	"hex"
		- NEIGH  = { v , y , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , v , x , + , << , hex , }
		- SUCC   = { return , }

903 :	"y"
		- NEIGH  = { v , y , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , v , x , + , << , hex , }
		- SUCC   = { return , }

903 :	"v"
		- NEIGH  = { v , y , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , v , x , + , << , hex , }
		- SUCC   = { return , }

903 :	"y"
		- NEIGH  = { v , y , hex , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { quad , v , x , + , << , hex , }
		- SUCC   = { return , }

905 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , y , hex , }
		- SUCC   = { }

953 :	"isea_pt"
		- NEIGH  = { isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

953 :	"isea_forward"
		- NEIGH  = { isea_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

953 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

953 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

953 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

953 :	"isea_geo"
		- NEIGH  = { isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

953 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

953 :	"in"
		- NEIGH  = { in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

955 :	"tri"
		- NEIGH  = { tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { coord , out , isea_pt , }

956 :	"isea_pt"
		- NEIGH  = { coord , out , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , }
		- SUCC   = { out , & , in , g , isea_transform , tri , }

956 :	"out"
		- NEIGH  = { coord , out , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , }
		- SUCC   = { out , & , in , g , isea_transform , tri , }

956 :	"coord"
		- NEIGH  = { coord , out , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tri , }
		- SUCC   = { out , & , in , g , isea_transform , tri , }

958 :	"tri"
		- NEIGH  = { out , & , in , g , isea_transform , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coord , out , isea_pt , }
		- SUCC   = { ISEA_PLANE , == , output , g , if , }

958 :	"isea_transform"
		- NEIGH  = { out , & , in , g , isea_transform , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coord , out , isea_pt , }
		- SUCC   = { ISEA_PLANE , == , output , g , if , }

958 :	"g"
		- NEIGH  = { out , & , in , g , isea_transform , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coord , out , isea_pt , }
		- SUCC   = { ISEA_PLANE , == , output , g , if , }

958 :	"in"
		- NEIGH  = { out , & , in , g , isea_transform , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coord , out , isea_pt , }
		- SUCC   = { ISEA_PLANE , == , output , g , if , }

958 :	"&"
		- NEIGH  = { out , & , in , g , isea_transform , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coord , out , isea_pt , }
		- SUCC   = { ISEA_PLANE , == , output , g , if , }

958 :	"out"
		- NEIGH  = { out , & , in , g , isea_transform , tri , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coord , out , isea_pt , }
		- SUCC   = { ISEA_PLANE , == , output , g , if , }

960 :	"if"
		- NEIGH  = { ISEA_PLANE , == , output , g , if , }
		- PARENT = { }
		- CHILD  = { return , radius , out , & , g , tri , isea_tri_plane , }
		- PRED   = { out , & , in , g , isea_transform , tri , }
		- SUCC   = { * , / , g , radius , x , out , }

960 :	"g"
		- NEIGH  = { ISEA_PLANE , == , output , g , if , }
		- PARENT = { }
		- CHILD  = { return , radius , out , & , g , tri , isea_tri_plane , }
		- PRED   = { out , & , in , g , isea_transform , tri , }
		- SUCC   = { * , / , g , radius , x , out , }

960 :	"output"
		- NEIGH  = { ISEA_PLANE , == , output , g , if , }
		- PARENT = { }
		- CHILD  = { return , radius , out , & , g , tri , isea_tri_plane , }
		- PRED   = { out , & , in , g , isea_transform , tri , }
		- SUCC   = { * , / , g , radius , x , out , }

960 :	"=="
		- NEIGH  = { ISEA_PLANE , == , output , g , if , }
		- PARENT = { }
		- CHILD  = { return , radius , out , & , g , tri , isea_tri_plane , }
		- PRED   = { out , & , in , g , isea_transform , tri , }
		- SUCC   = { * , / , g , radius , x , out , }

960 :	"ISEA_PLANE"
		- NEIGH  = { ISEA_PLANE , == , output , g , if , }
		- PARENT = { }
		- CHILD  = { return , radius , out , & , g , tri , isea_tri_plane , }
		- PRED   = { out , & , in , g , isea_transform , tri , }
		- SUCC   = { * , / , g , radius , x , out , }

961 :	"isea_tri_plane"
		- NEIGH  = { radius , out , & , g , tri , isea_tri_plane , }
		- PARENT = { ISEA_PLANE , == , output , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , return , }

961 :	"tri"
		- NEIGH  = { radius , out , & , g , tri , isea_tri_plane , }
		- PARENT = { ISEA_PLANE , == , output , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , return , }

961 :	"&"
		- NEIGH  = { radius , out , & , g , tri , isea_tri_plane , }
		- PARENT = { ISEA_PLANE , == , output , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , return , }

961 :	"out"
		- NEIGH  = { radius , out , & , g , tri , isea_tri_plane , }
		- PARENT = { ISEA_PLANE , == , output , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , return , }

961 :	"g"
		- NEIGH  = { radius , out , & , g , tri , isea_tri_plane , }
		- PARENT = { ISEA_PLANE , == , output , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , return , }

961 :	"radius"
		- NEIGH  = { radius , out , & , g , tri , isea_tri_plane , }
		- PARENT = { ISEA_PLANE , == , output , g , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { out , return , }

962 :	"return"
		- NEIGH  = { out , return , }
		- PARENT = { ISEA_PLANE , == , output , g , if , }
		- CHILD  = { }
		- PRED   = { radius , out , & , g , tri , isea_tri_plane , }
		- SUCC   = { }

962 :	"out"
		- NEIGH  = { out , return , }
		- PARENT = { ISEA_PLANE , == , output , g , if , }
		- CHILD  = { }
		- PRED   = { radius , out , & , g , tri , isea_tri_plane , }
		- SUCC   = { }

966 :	"out"
		- NEIGH  = { * , / , g , radius , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , == , output , g , if , }
		- SUCC   = { / , g , radius , * , y , out , }

966 :	"x"
		- NEIGH  = { * , / , g , radius , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , == , output , g , if , }
		- SUCC   = { / , g , radius , * , y , out , }

966 :	"out"
		- NEIGH  = { * , / , g , radius , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , == , output , g , if , }
		- SUCC   = { / , g , radius , * , y , out , }

966 :	"x"
		- NEIGH  = { * , / , g , radius , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , == , output , g , if , }
		- SUCC   = { / , g , radius , * , y , out , }

966 :	"/"
		- NEIGH  = { * , / , g , radius , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , == , output , g , if , }
		- SUCC   = { / , g , radius , * , y , out , }

966 :	"g"
		- NEIGH  = { * , / , g , radius , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , == , output , g , if , }
		- SUCC   = { / , g , radius , * , y , out , }

966 :	"radius"
		- NEIGH  = { * , / , g , radius , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , == , output , g , if , }
		- SUCC   = { / , g , radius , * , y , out , }

966 :	"*"
		- NEIGH  = { * , / , g , radius , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , == , output , g , if , }
		- SUCC   = { / , g , radius , * , y , out , }

967 :	"out"
		- NEIGH  = { / , g , radius , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , / , g , radius , x , out , }
		- SUCC   = { += , x , out , }

967 :	"y"
		- NEIGH  = { / , g , radius , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , / , g , radius , x , out , }
		- SUCC   = { += , x , out , }

967 :	"out"
		- NEIGH  = { / , g , radius , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , / , g , radius , x , out , }
		- SUCC   = { += , x , out , }

967 :	"y"
		- NEIGH  = { / , g , radius , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , / , g , radius , x , out , }
		- SUCC   = { += , x , out , }

967 :	"/"
		- NEIGH  = { / , g , radius , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , / , g , radius , x , out , }
		- SUCC   = { += , x , out , }

967 :	"g"
		- NEIGH  = { / , g , radius , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , / , g , radius , x , out , }
		- SUCC   = { += , x , out , }

967 :	"radius"
		- NEIGH  = { / , g , radius , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , / , g , radius , x , out , }
		- SUCC   = { += , x , out , }

967 :	"*"
		- NEIGH  = { / , g , radius , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , / , g , radius , x , out , }
		- SUCC   = { += , x , out , }

968 :	"out"
		- NEIGH  = { += , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , g , radius , * , y , out , }
		- SUCC   = { += , * , y , out , }

968 :	"x"
		- NEIGH  = { += , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , g , radius , * , y , out , }
		- SUCC   = { += , * , y , out , }

968 :	"+="
		- NEIGH  = { += , x , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , g , radius , * , y , out , }
		- SUCC   = { += , * , y , out , }

969 :	"out"
		- NEIGH  = { += , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , x , out , }
		- SUCC   = { g , output , switch , }

969 :	"y"
		- NEIGH  = { += , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , x , out , }
		- SUCC   = { g , output , switch , }

969 :	"+="
		- NEIGH  = { += , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , x , out , }
		- SUCC   = { g , output , switch , }

969 :	"*"
		- NEIGH  = { += , * , y , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , x , out , }
		- SUCC   = { g , output , switch , }

971 :	"switch"
		- NEIGH  = { g , output , switch , }
		- PARENT = { }
		- CHILD  = { isea_hex , ISEA_HEX , ISEA_SEQNUM , tri , ISEA_Q2DI , break , ISEA_Q2DD , ISEA_PROJTRI , isea_ptdd , return , g , isea_ptdi , quad , isea_disn , & , coord , ISEA_VERTEX2DD , out , }
		- PRED   = { += , * , y , out , }
		- SUCC   = { out , return , }

971 :	"g"
		- NEIGH  = { g , output , switch , }
		- PARENT = { }
		- CHILD  = { isea_hex , ISEA_HEX , ISEA_SEQNUM , tri , ISEA_Q2DI , break , ISEA_Q2DD , ISEA_PROJTRI , isea_ptdd , return , g , isea_ptdi , quad , isea_disn , & , coord , ISEA_VERTEX2DD , out , }
		- PRED   = { += , * , y , out , }
		- SUCC   = { out , return , }

971 :	"output"
		- NEIGH  = { g , output , switch , }
		- PARENT = { }
		- CHILD  = { isea_hex , ISEA_HEX , ISEA_SEQNUM , tri , ISEA_Q2DI , break , ISEA_Q2DD , ISEA_PROJTRI , isea_ptdd , return , g , isea_ptdi , quad , isea_disn , & , coord , ISEA_VERTEX2DD , out , }
		- PRED   = { += , * , y , out , }
		- SUCC   = { out , return , }

972 :	"ISEA_PROJTRI"
		- NEIGH  = { ISEA_PROJTRI , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

974 :	"break"
		- NEIGH  = { break , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_PROJTRI , }
		- SUCC   = { ISEA_VERTEX2DD , }

975 :	"ISEA_VERTEX2DD"
		- NEIGH  = { ISEA_VERTEX2DD , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { out , & , isea_ptdd , quad , tri , g , }

976 :	"g"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_VERTEX2DD , }
		- SUCC   = { break , }

976 :	"quad"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_VERTEX2DD , }
		- SUCC   = { break , }

976 :	"isea_ptdd"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_VERTEX2DD , }
		- SUCC   = { break , }

976 :	"tri"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_VERTEX2DD , }
		- SUCC   = { break , }

976 :	"&"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_VERTEX2DD , }
		- SUCC   = { break , }

976 :	"out"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_VERTEX2DD , }
		- SUCC   = { break , }

977 :	"break"
		- NEIGH  = { break , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , & , isea_ptdd , quad , tri , g , }
		- SUCC   = { ISEA_Q2DD , }

978 :	"ISEA_Q2DD"
		- NEIGH  = { ISEA_Q2DD , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { out , & , isea_ptdd , quad , tri , g , }

980 :	"g"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DD , }
		- SUCC   = { break , }

980 :	"quad"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DD , }
		- SUCC   = { break , }

980 :	"isea_ptdd"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DD , }
		- SUCC   = { break , }

980 :	"tri"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DD , }
		- SUCC   = { break , }

980 :	"&"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DD , }
		- SUCC   = { break , }

980 :	"out"
		- NEIGH  = { out , & , isea_ptdd , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DD , }
		- SUCC   = { break , }

981 :	"break"
		- NEIGH  = { break , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , & , isea_ptdd , quad , tri , g , }
		- SUCC   = { ISEA_Q2DI , }

982 :	"ISEA_Q2DI"
		- NEIGH  = { ISEA_Q2DI , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { out , coord , & , isea_ptdi , quad , tri , g , }

983 :	"g"
		- NEIGH  = { out , coord , & , isea_ptdi , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DI , }
		- SUCC   = { coord , return , }

983 :	"quad"
		- NEIGH  = { out , coord , & , isea_ptdi , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DI , }
		- SUCC   = { coord , return , }

983 :	"isea_ptdi"
		- NEIGH  = { out , coord , & , isea_ptdi , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DI , }
		- SUCC   = { coord , return , }

983 :	"g"
		- NEIGH  = { out , coord , & , isea_ptdi , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DI , }
		- SUCC   = { coord , return , }

983 :	"tri"
		- NEIGH  = { out , coord , & , isea_ptdi , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DI , }
		- SUCC   = { coord , return , }

983 :	"&"
		- NEIGH  = { out , coord , & , isea_ptdi , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DI , }
		- SUCC   = { coord , return , }

983 :	"out"
		- NEIGH  = { out , coord , & , isea_ptdi , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DI , }
		- SUCC   = { coord , return , }

983 :	"&"
		- NEIGH  = { out , coord , & , isea_ptdi , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DI , }
		- SUCC   = { coord , return , }

983 :	"coord"
		- NEIGH  = { out , coord , & , isea_ptdi , quad , tri , g , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_Q2DI , }
		- SUCC   = { coord , return , }

984 :	"return"
		- NEIGH  = { coord , return , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , isea_ptdi , quad , tri , g , }
		- SUCC   = { break , }

984 :	"coord"
		- NEIGH  = { coord , return , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , isea_ptdi , quad , tri , g , }
		- SUCC   = { break , }

985 :	"break"
		- NEIGH  = { break , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { coord , return , }
		- SUCC   = { ISEA_SEQNUM , }

986 :	"ISEA_SEQNUM"
		- NEIGH  = { ISEA_SEQNUM , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { out , coord , & , tri , g , isea_ptdi , }

987 :	"isea_ptdi"
		- NEIGH  = { out , coord , & , tri , g , isea_ptdi , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_SEQNUM , }
		- SUCC   = { & , coord , quad , g , isea_disn , }

987 :	"g"
		- NEIGH  = { out , coord , & , tri , g , isea_ptdi , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_SEQNUM , }
		- SUCC   = { & , coord , quad , g , isea_disn , }

987 :	"tri"
		- NEIGH  = { out , coord , & , tri , g , isea_ptdi , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_SEQNUM , }
		- SUCC   = { & , coord , quad , g , isea_disn , }

987 :	"&"
		- NEIGH  = { out , coord , & , tri , g , isea_ptdi , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_SEQNUM , }
		- SUCC   = { & , coord , quad , g , isea_disn , }

987 :	"out"
		- NEIGH  = { out , coord , & , tri , g , isea_ptdi , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_SEQNUM , }
		- SUCC   = { & , coord , quad , g , isea_disn , }

987 :	"&"
		- NEIGH  = { out , coord , & , tri , g , isea_ptdi , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_SEQNUM , }
		- SUCC   = { & , coord , quad , g , isea_disn , }

987 :	"coord"
		- NEIGH  = { out , coord , & , tri , g , isea_ptdi , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_SEQNUM , }
		- SUCC   = { & , coord , quad , g , isea_disn , }

989 :	"isea_disn"
		- NEIGH  = { & , coord , quad , g , isea_disn , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , tri , g , isea_ptdi , }
		- SUCC   = { coord , return , }

989 :	"g"
		- NEIGH  = { & , coord , quad , g , isea_disn , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , tri , g , isea_ptdi , }
		- SUCC   = { coord , return , }

989 :	"g"
		- NEIGH  = { & , coord , quad , g , isea_disn , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , tri , g , isea_ptdi , }
		- SUCC   = { coord , return , }

989 :	"quad"
		- NEIGH  = { & , coord , quad , g , isea_disn , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , tri , g , isea_ptdi , }
		- SUCC   = { coord , return , }

989 :	"&"
		- NEIGH  = { & , coord , quad , g , isea_disn , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , tri , g , isea_ptdi , }
		- SUCC   = { coord , return , }

989 :	"coord"
		- NEIGH  = { & , coord , quad , g , isea_disn , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , tri , g , isea_ptdi , }
		- SUCC   = { coord , return , }

990 :	"return"
		- NEIGH  = { coord , return , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { & , coord , quad , g , isea_disn , }
		- SUCC   = { break , }

990 :	"coord"
		- NEIGH  = { coord , return , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { & , coord , quad , g , isea_disn , }
		- SUCC   = { break , }

991 :	"break"
		- NEIGH  = { break , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { coord , return , }
		- SUCC   = { ISEA_HEX , }

992 :	"ISEA_HEX"
		- NEIGH  = { ISEA_HEX , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { out , coord , & , tri , g , isea_hex , }

993 :	"isea_hex"
		- NEIGH  = { out , coord , & , tri , g , isea_hex , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_HEX , }
		- SUCC   = { coord , return , }

993 :	"g"
		- NEIGH  = { out , coord , & , tri , g , isea_hex , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_HEX , }
		- SUCC   = { coord , return , }

993 :	"tri"
		- NEIGH  = { out , coord , & , tri , g , isea_hex , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_HEX , }
		- SUCC   = { coord , return , }

993 :	"&"
		- NEIGH  = { out , coord , & , tri , g , isea_hex , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_HEX , }
		- SUCC   = { coord , return , }

993 :	"out"
		- NEIGH  = { out , coord , & , tri , g , isea_hex , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_HEX , }
		- SUCC   = { coord , return , }

993 :	"&"
		- NEIGH  = { out , coord , & , tri , g , isea_hex , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_HEX , }
		- SUCC   = { coord , return , }

993 :	"coord"
		- NEIGH  = { out , coord , & , tri , g , isea_hex , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { ISEA_HEX , }
		- SUCC   = { coord , return , }

994 :	"return"
		- NEIGH  = { coord , return , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , tri , g , isea_hex , }
		- SUCC   = { break , }

994 :	"coord"
		- NEIGH  = { coord , return , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { out , coord , & , tri , g , isea_hex , }
		- SUCC   = { break , }

995 :	"break"
		- NEIGH  = { break , }
		- PARENT = { g , output , switch , }
		- CHILD  = { }
		- PRED   = { coord , return , }
		- SUCC   = { }

998 :	"return"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , output , switch , }
		- SUCC   = { }

998 :	"out"
		- NEIGH  = { out , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { g , output , switch , }
		- SUCC   = { }

1005 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1005 :	"isea"
		- NEIGH  = { isea , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1008 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1009 :	"isea_dgg"
		- NEIGH  = { isea_dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1009 :	"dgg"
		- NEIGH  = { dgg , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"s_forward"
		- NEIGH  = { s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1015 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

1015 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

1016 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1016 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1016 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1016 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1016 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1016 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1016 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1016 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1016 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1016 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { out , isea_pt , }

1017 :	"isea_pt"
		- NEIGH  = { out , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { in , isea_geo , }

1017 :	"out"
		- NEIGH  = { out , isea_pt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { in , isea_geo , }

1018 :	"isea_geo"
		- NEIGH  = { in , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , isea_pt , }
		- SUCC   = { lam , lp , lon , in , }

1018 :	"in"
		- NEIGH  = { in , isea_geo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , isea_pt , }
		- SUCC   = { lam , lp , lon , in , }

1020 :	"in"
		- NEIGH  = { lam , lp , lon , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , isea_geo , }
		- SUCC   = { phi , lp , lat , in , }

1020 :	"lon"
		- NEIGH  = { lam , lp , lon , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , isea_geo , }
		- SUCC   = { phi , lp , lat , in , }

1020 :	"lp"
		- NEIGH  = { lam , lp , lon , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , isea_geo , }
		- SUCC   = { phi , lp , lat , in , }

1020 :	"lam"
		- NEIGH  = { lam , lp , lon , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , isea_geo , }
		- SUCC   = { phi , lp , lat , in , }

1021 :	"in"
		- NEIGH  = { phi , lp , lat , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , lon , in , }
		- SUCC   = { in , & , Q , isea_forward , dgg , out , }

1021 :	"lat"
		- NEIGH  = { phi , lp , lat , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , lon , in , }
		- SUCC   = { in , & , Q , isea_forward , dgg , out , }

1021 :	"lp"
		- NEIGH  = { phi , lp , lat , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , lon , in , }
		- SUCC   = { in , & , Q , isea_forward , dgg , out , }

1021 :	"phi"
		- NEIGH  = { phi , lp , lat , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , lon , in , }
		- SUCC   = { in , & , Q , isea_forward , dgg , out , }

1024 :	"out"
		- NEIGH  = { in , & , Q , isea_forward , dgg , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , lat , in , }
		- SUCC   = { * , catch , }

1024 :	"isea_forward"
		- NEIGH  = { in , & , Q , isea_forward , dgg , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , lat , in , }
		- SUCC   = { * , catch , }

1024 :	"&"
		- NEIGH  = { in , & , Q , isea_forward , dgg , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , lat , in , }
		- SUCC   = { * , catch , }

1024 :	"Q"
		- NEIGH  = { in , & , Q , isea_forward , dgg , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , lat , in , }
		- SUCC   = { * , catch , }

1024 :	"dgg"
		- NEIGH  = { in , & , Q , isea_forward , dgg , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , lat , in , }
		- SUCC   = { * , catch , }

1024 :	"&"
		- NEIGH  = { in , & , Q , isea_forward , dgg , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , lat , in , }
		- SUCC   = { * , catch , }

1024 :	"in"
		- NEIGH  = { in , & , Q , isea_forward , dgg , out , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , lat , in , }
		- SUCC   = { * , catch , }

1025 :	"catch"
		- NEIGH  = { * , catch , }
		- PARENT = { }
		- CHILD  = { xy , proj_coord_error , PJD_ERR_NON_CONVERGENT , return , P , proj_errno_set , }
		- PRED   = { in , & , Q , isea_forward , dgg , out , }
		- SUCC   = { out , x , xy , }

1025 :	"*"
		- NEIGH  = { * , catch , }
		- PARENT = { }
		- CHILD  = { xy , proj_coord_error , PJD_ERR_NON_CONVERGENT , return , P , proj_errno_set , }
		- PRED   = { in , & , Q , isea_forward , dgg , out , }
		- SUCC   = { out , x , xy , }

1026 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , P , proj_errno_set , }
		- PARENT = { * , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , proj_coord_error , return , }

1026 :	"P"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , P , proj_errno_set , }
		- PARENT = { * , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , proj_coord_error , return , }

1026 :	"PJD_ERR_NON_CONVERGENT"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , P , proj_errno_set , }
		- PARENT = { * , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , proj_coord_error , return , }

1027 :	"return"
		- NEIGH  = { xy , proj_coord_error , return , }
		- PARENT = { * , catch , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_NON_CONVERGENT , P , proj_errno_set , }
		- SUCC   = { }

1027 :	"proj_coord_error"
		- NEIGH  = { xy , proj_coord_error , return , }
		- PARENT = { * , catch , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_NON_CONVERGENT , P , proj_errno_set , }
		- SUCC   = { }

1027 :	"xy"
		- NEIGH  = { xy , proj_coord_error , return , }
		- PARENT = { * , catch , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_NON_CONVERGENT , P , proj_errno_set , }
		- SUCC   = { }

1030 :	"xy"
		- NEIGH  = { out , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , catch , }
		- SUCC   = { out , y , xy , }

1030 :	"x"
		- NEIGH  = { out , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , catch , }
		- SUCC   = { out , y , xy , }

1030 :	"out"
		- NEIGH  = { out , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , catch , }
		- SUCC   = { out , y , xy , }

1030 :	"x"
		- NEIGH  = { out , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , catch , }
		- SUCC   = { out , y , xy , }

1031 :	"xy"
		- NEIGH  = { out , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , x , xy , }
		- SUCC   = { xy , return , }

1031 :	"y"
		- NEIGH  = { out , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , x , xy , }
		- SUCC   = { xy , return , }

1031 :	"out"
		- NEIGH  = { out , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , x , xy , }
		- SUCC   = { xy , return , }

1031 :	"y"
		- NEIGH  = { out , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , x , xy , }
		- SUCC   = { xy , return , }

1033 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , y , xy , }
		- SUCC   = { }

1033 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { out , y , xy , }
		- SUCC   = { }

1037 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"isea"
		- NEIGH  = { isea , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1038 :	"*"
		- NEIGH  = { opt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }

1038 :	"opt"
		- NEIGH  = { opt , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }

1039 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1039 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1039 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1039 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1039 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1039 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1039 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1039 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1039 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1039 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opt , * , }
		- SUCC   = { Q , == , if , }

1040 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

1040 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

1040 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

1041 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1041 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1041 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1041 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { s_forward , fwd , P , }

1042 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { s_forward , fwd , P , }

1042 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { s_forward , fwd , P , }

1045 :	"P"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { Q , dgg , & , isea_grid_init , }

1045 :	"fwd"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { Q , dgg , & , isea_grid_init , }

1045 :	"s_forward"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { Q , dgg , & , isea_grid_init , }

1046 :	"isea_grid_init"
		- NEIGH  = { Q , dgg , & , isea_grid_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { ISEA_PLANE , dgg , output , Q , }

1046 :	"&"
		- NEIGH  = { Q , dgg , & , isea_grid_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { ISEA_PLANE , dgg , output , Q , }

1046 :	"Q"
		- NEIGH  = { Q , dgg , & , isea_grid_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { ISEA_PLANE , dgg , output , Q , }

1046 :	"dgg"
		- NEIGH  = { Q , dgg , & , isea_grid_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { ISEA_PLANE , dgg , output , Q , }

1048 :	"Q"
		- NEIGH  = { ISEA_PLANE , dgg , output , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , dgg , & , isea_grid_init , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1048 :	"dgg"
		- NEIGH  = { ISEA_PLANE , dgg , output , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , dgg , & , isea_grid_init , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1048 :	"output"
		- NEIGH  = { ISEA_PLANE , dgg , output , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , dgg , & , isea_grid_init , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1048 :	"ISEA_PLANE"
		- NEIGH  = { ISEA_PLANE , dgg , output , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , dgg , & , isea_grid_init , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1052 :	"opt"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , dgg , output , Q , }
		- SUCC   = { opt , if , }

1052 :	"pj_param"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , dgg , output , Q , }
		- SUCC   = { opt , if , }

1052 :	"P"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , dgg , output , Q , }
		- SUCC   = { opt , if , }

1052 :	"ctx"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , dgg , output , Q , }
		- SUCC   = { opt , if , }

1052 :	"P"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , dgg , output , Q , }
		- SUCC   = { opt , if , }

1052 :	"params"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , dgg , output , Q , }
		- SUCC   = { opt , if , }

1052 :	"s"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ISEA_PLANE , dgg , output , Q , }
		- SUCC   = { opt , if , }

1053 :	"if"
		- NEIGH  = { opt , if , }
		- PARENT = { }
		- CHILD  = { opt , strcmp , ! , if , }
		- PRED   = { s , params , P , pj_param , ctx , opt , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1053 :	"opt"
		- NEIGH  = { opt , if , }
		- PARENT = { }
		- CHILD  = { opt , strcmp , ! , if , }
		- PRED   = { s , params , P , pj_param , ctx , opt , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1054 :	"if"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , if , }
		- CHILD  = { opt , ! , if , strcmp , dgg , & , Q , isea_orient_isea , }
		- PRED   = { }
		- SUCC   = { }

1054 :	"!"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , if , }
		- CHILD  = { opt , ! , if , strcmp , dgg , & , Q , isea_orient_isea , }
		- PRED   = { }
		- SUCC   = { }

1054 :	"strcmp"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , if , }
		- CHILD  = { opt , ! , if , strcmp , dgg , & , Q , isea_orient_isea , }
		- PRED   = { }
		- SUCC   = { }

1054 :	"opt"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , if , }
		- CHILD  = { opt , ! , if , strcmp , dgg , & , Q , isea_orient_isea , }
		- PRED   = { }
		- SUCC   = { }

1055 :	"isea_orient_isea"
		- NEIGH  = { dgg , & , Q , isea_orient_isea , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1055 :	"&"
		- NEIGH  = { dgg , & , Q , isea_orient_isea , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1055 :	"Q"
		- NEIGH  = { dgg , & , Q , isea_orient_isea , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1055 :	"dgg"
		- NEIGH  = { dgg , & , Q , isea_orient_isea , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1056 :	"if"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { P , pj_default_destructor , return , & , Q , PJD_ERR_ELLIPSOID_USE_REQUIRED , dgg , isea_orient_pole , }
		- PRED   = { }
		- SUCC   = { }

1056 :	"!"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { P , pj_default_destructor , return , & , Q , PJD_ERR_ELLIPSOID_USE_REQUIRED , dgg , isea_orient_pole , }
		- PRED   = { }
		- SUCC   = { }

1056 :	"strcmp"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { P , pj_default_destructor , return , & , Q , PJD_ERR_ELLIPSOID_USE_REQUIRED , dgg , isea_orient_pole , }
		- PRED   = { }
		- SUCC   = { }

1056 :	"opt"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { P , pj_default_destructor , return , & , Q , PJD_ERR_ELLIPSOID_USE_REQUIRED , dgg , isea_orient_pole , }
		- PRED   = { }
		- SUCC   = { }

1057 :	"isea_orient_pole"
		- NEIGH  = { Q , dgg , & , isea_orient_pole , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1057 :	"&"
		- NEIGH  = { Q , dgg , & , isea_orient_pole , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1057 :	"Q"
		- NEIGH  = { Q , dgg , & , isea_orient_pole , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1057 :	"dgg"
		- NEIGH  = { Q , dgg , & , isea_orient_pole , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1059 :	"return"
		- NEIGH  = { PJD_ERR_ELLIPSOID_USE_REQUIRED , P , pj_default_destructor , return , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1059 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_ELLIPSOID_USE_REQUIRED , P , pj_default_destructor , return , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1059 :	"P"
		- NEIGH  = { PJD_ERR_ELLIPSOID_USE_REQUIRED , P , pj_default_destructor , return , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1059 :	"PJD_ERR_ELLIPSOID_USE_REQUIRED"
		- NEIGH  = { PJD_ERR_ELLIPSOID_USE_REQUIRED , P , pj_default_destructor , return , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1063 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1063 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1063 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1063 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1063 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1063 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1063 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1064 :	"Q"
		- NEIGH  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1064 :	"dgg"
		- NEIGH  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1064 :	"o_az"
		- NEIGH  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1064 :	"pj_param"
		- NEIGH  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1064 :	"P"
		- NEIGH  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1064 :	"ctx"
		- NEIGH  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1064 :	"P"
		- NEIGH  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1064 :	"params"
		- NEIGH  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1064 :	"f"
		- NEIGH  = { f , params , pj_param , o_az , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1067 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1067 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1067 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1067 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1067 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1067 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1067 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1068 :	"Q"
		- NEIGH  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1068 :	"dgg"
		- NEIGH  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1068 :	"o_lon"
		- NEIGH  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1068 :	"pj_param"
		- NEIGH  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1068 :	"P"
		- NEIGH  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1068 :	"ctx"
		- NEIGH  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1068 :	"P"
		- NEIGH  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1068 :	"params"
		- NEIGH  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1068 :	"f"
		- NEIGH  = { f , params , pj_param , o_lon , dgg , P , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1071 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1071 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1071 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1071 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1071 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1071 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1071 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { s , params , P , pj_param , ctx , opt , }

1072 :	"Q"
		- NEIGH  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"dgg"
		- NEIGH  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"o_lat"
		- NEIGH  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"pj_param"
		- NEIGH  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"P"
		- NEIGH  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"ctx"
		- NEIGH  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"P"
		- NEIGH  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"params"
		- NEIGH  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"f"
		- NEIGH  = { f , params , pj_param , dgg , P , o_lat , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1075 :	"opt"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { opt , if , }

1075 :	"pj_param"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { opt , if , }

1075 :	"P"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { opt , if , }

1075 :	"ctx"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { opt , if , }

1075 :	"P"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { opt , if , }

1075 :	"params"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { opt , if , }

1075 :	"s"
		- NEIGH  = { s , params , P , pj_param , ctx , opt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { opt , if , }

1076 :	"if"
		- NEIGH  = { opt , if , }
		- PARENT = { }
		- CHILD  = { opt , strcmp , ! , if , }
		- PRED   = { s , params , P , pj_param , ctx , opt , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1076 :	"opt"
		- NEIGH  = { opt , if , }
		- PARENT = { }
		- CHILD  = { opt , strcmp , ! , if , }
		- PRED   = { s , params , P , pj_param , ctx , opt , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1077 :	"if"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , if , }
		- CHILD  = { opt , ! , if , strcmp , ISEA_PLANE , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1077 :	"!"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , if , }
		- CHILD  = { opt , ! , if , strcmp , ISEA_PLANE , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1077 :	"strcmp"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , if , }
		- CHILD  = { opt , ! , if , strcmp , ISEA_PLANE , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1077 :	"opt"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , if , }
		- CHILD  = { opt , ! , if , strcmp , ISEA_PLANE , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1078 :	"Q"
		- NEIGH  = { ISEA_PLANE , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1078 :	"dgg"
		- NEIGH  = { ISEA_PLANE , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1078 :	"output"
		- NEIGH  = { ISEA_PLANE , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1078 :	"ISEA_PLANE"
		- NEIGH  = { ISEA_PLANE , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1079 :	"if"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { opt , ! , if , ISEA_Q2DI , strcmp , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1079 :	"!"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { opt , ! , if , ISEA_Q2DI , strcmp , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1079 :	"strcmp"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { opt , ! , if , ISEA_Q2DI , strcmp , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1079 :	"opt"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { opt , ! , if , ISEA_Q2DI , strcmp , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1080 :	"Q"
		- NEIGH  = { ISEA_Q2DI , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1080 :	"dgg"
		- NEIGH  = { ISEA_Q2DI , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1080 :	"output"
		- NEIGH  = { ISEA_Q2DI , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1080 :	"ISEA_Q2DI"
		- NEIGH  = { ISEA_Q2DI , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1082 :	"if"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { opt , ! , if , ISEA_Q2DD , strcmp , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1082 :	"!"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { opt , ! , if , ISEA_Q2DD , strcmp , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1082 :	"strcmp"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { opt , ! , if , ISEA_Q2DD , strcmp , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1082 :	"opt"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { opt , ! , if , ISEA_Q2DD , strcmp , dgg , output , Q , }
		- PRED   = { }
		- SUCC   = { }

1083 :	"Q"
		- NEIGH  = { ISEA_Q2DD , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1083 :	"dgg"
		- NEIGH  = { ISEA_Q2DD , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1083 :	"output"
		- NEIGH  = { ISEA_Q2DD , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1083 :	"ISEA_Q2DD"
		- NEIGH  = { ISEA_Q2DD , dgg , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1085 :	"if"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { P , pj_default_destructor , PJD_ERR_ELLIPSOID_USE_REQUIRED , dgg , output , return , ISEA_HEX , Q , }
		- PRED   = { }
		- SUCC   = { }

1085 :	"!"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { P , pj_default_destructor , PJD_ERR_ELLIPSOID_USE_REQUIRED , dgg , output , return , ISEA_HEX , Q , }
		- PRED   = { }
		- SUCC   = { }

1085 :	"strcmp"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { P , pj_default_destructor , PJD_ERR_ELLIPSOID_USE_REQUIRED , dgg , output , return , ISEA_HEX , Q , }
		- PRED   = { }
		- SUCC   = { }

1085 :	"opt"
		- NEIGH  = { opt , strcmp , ! , if , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { P , pj_default_destructor , PJD_ERR_ELLIPSOID_USE_REQUIRED , dgg , output , return , ISEA_HEX , Q , }
		- PRED   = { }
		- SUCC   = { }

1086 :	"Q"
		- NEIGH  = { dgg , ISEA_HEX , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1086 :	"dgg"
		- NEIGH  = { dgg , ISEA_HEX , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1086 :	"output"
		- NEIGH  = { dgg , ISEA_HEX , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1086 :	"ISEA_HEX"
		- NEIGH  = { dgg , ISEA_HEX , output , Q , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1090 :	"return"
		- NEIGH  = { PJD_ERR_ELLIPSOID_USE_REQUIRED , P , pj_default_destructor , return , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1090 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_ELLIPSOID_USE_REQUIRED , P , pj_default_destructor , return , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1090 :	"P"
		- NEIGH  = { PJD_ERR_ELLIPSOID_USE_REQUIRED , P , pj_default_destructor , return , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1090 :	"PJD_ERR_ELLIPSOID_USE_REQUIRED"
		- NEIGH  = { PJD_ERR_ELLIPSOID_USE_REQUIRED , P , pj_default_destructor , return , }
		- PARENT = { opt , strcmp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1094 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { dgg , radius , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1094 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { dgg , radius , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1094 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { dgg , radius , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1094 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { dgg , radius , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1094 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { dgg , radius , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1094 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { dgg , radius , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1094 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { dgg , radius , Q , }
		- PRED   = { opt , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1095 :	"Q"
		- NEIGH  = { dgg , radius , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1095 :	"dgg"
		- NEIGH  = { dgg , radius , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1095 :	"radius"
		- NEIGH  = { dgg , radius , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1098 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1098 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1098 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1098 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1098 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1098 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1098 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

1099 :	"Q"
		- NEIGH  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1099 :	"dgg"
		- NEIGH  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1099 :	"resolution"
		- NEIGH  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1099 :	"pj_param"
		- NEIGH  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1099 :	"P"
		- NEIGH  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1099 :	"ctx"
		- NEIGH  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1099 :	"P"
		- NEIGH  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1099 :	"params"
		- NEIGH  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1099 :	"i"
		- NEIGH  = { i , params , pj_param , dgg , P , resolution , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1101 :	"Q"
		- NEIGH  = { dgg , resolution , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1101 :	"dgg"
		- NEIGH  = { dgg , resolution , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1101 :	"resolution"
		- NEIGH  = { dgg , resolution , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1104 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { P , return , }

1104 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { P , return , }

1104 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { P , return , }

1104 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { P , return , }

1104 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { P , return , }

1104 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { P , return , }

1104 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { P , return , }

1105 :	"Q"
		- NEIGH  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1105 :	"dgg"
		- NEIGH  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1105 :	"aperture"
		- NEIGH  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1105 :	"pj_param"
		- NEIGH  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1105 :	"P"
		- NEIGH  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1105 :	"ctx"
		- NEIGH  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1105 :	"P"
		- NEIGH  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1105 :	"params"
		- NEIGH  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1105 :	"i"
		- NEIGH  = { i , params , pj_param , dgg , P , aperture , ctx , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1107 :	"Q"
		- NEIGH  = { dgg , aperture , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1107 :	"dgg"
		- NEIGH  = { dgg , aperture , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1107 :	"aperture"
		- NEIGH  = { dgg , aperture , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1110 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { }

1110 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { }

