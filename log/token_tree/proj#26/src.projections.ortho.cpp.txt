7 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

7 :	"ortho"
		- NEIGH  = { ortho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

10 :	"Mode"
		- NEIGH  = { Mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

14 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"sinph0"
		- NEIGH  = { sinph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"cosph0"
		- NEIGH  = { cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"nu0"
		- NEIGH  = { nu0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"y_shift"
		- NEIGH  = { y_shift , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"y_scale"
		- NEIGH  = { y_scale , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

25 :	"Mode"
		- NEIGH  = { Mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

25 :	"mode"
		- NEIGH  = { mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"forward_error"
		- NEIGH  = { forward_error , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , P , lam , lp , proj_todeg , proj_log_trace , }

32 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , P , lam , lp , proj_todeg , proj_log_trace , }

32 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , P , lam , lp , proj_todeg , proj_log_trace , }

33 :	"proj_log_trace"
		- NEIGH  = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { xy , return , }

33 :	"P"
		- NEIGH  = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { xy , return , }

34 :	"proj_todeg"
		- NEIGH  = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { xy , return , }

34 :	"lp"
		- NEIGH  = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { xy , return , }

34 :	"lam"
		- NEIGH  = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { xy , return , }

34 :	"proj_todeg"
		- NEIGH  = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { xy , return , }

34 :	"lp"
		- NEIGH  = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { xy , return , }

34 :	"phi"
		- NEIGH  = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { xy , return , }

35 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- SUCC   = { }

35 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , P , lam , lp , proj_todeg , proj_log_trace , }
		- SUCC   = { }

38 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"ortho_s_forward"
		- NEIGH  = { ortho_s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

39 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

40 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

40 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

40 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

40 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

40 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

40 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

40 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

40 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

40 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

40 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

41 :	"coslam"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { HUGE_VAL , x , xy , }

41 :	"cosphi"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { HUGE_VAL , x , xy , }

41 :	"sinphi"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { HUGE_VAL , x , xy , }

43 :	"xy"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { HUGE_VAL , y , xy , }

43 :	"x"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { HUGE_VAL , y , xy , }

43 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { HUGE_VAL , y , xy , }

43 :	"xy"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { phi , lp , cos , cosphi , }

43 :	"y"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { phi , lp , cos , cosphi , }

43 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { phi , lp , cos , cosphi , }

45 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { lam , lp , cos , coslam , }

45 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { lam , lp , cos , coslam , }

45 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { lam , lp , cos , coslam , }

45 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { lam , lp , cos , coslam , }

46 :	"coslam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

46 :	"cos"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

46 :	"lp"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

46 :	"lam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

47 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , > , phi0 , P , fabs , S_POLE , N_POLE , cosph0 , + , sinph0 , sinphi , coslam , OBLIQ , break , phi , lp , if , sin , y , Q , xy , - , cosphi , < , EQUIT , * , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { lam , lp , sin , cosphi , * , x , xy , }

47 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , > , phi0 , P , fabs , S_POLE , N_POLE , cosph0 , + , sinph0 , sinphi , coslam , OBLIQ , break , phi , lp , if , sin , y , Q , xy , - , cosphi , < , EQUIT , * , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { lam , lp , sin , cosphi , * , x , xy , }

47 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , > , phi0 , P , fabs , S_POLE , N_POLE , cosph0 , + , sinph0 , sinphi , coslam , OBLIQ , break , phi , lp , if , sin , y , Q , xy , - , cosphi , < , EQUIT , * , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { lam , lp , sin , cosphi , * , x , xy , }

48 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , coslam , * , < , cosphi , if , }

49 :	"if"
		- NEIGH  = { - , coslam , * , < , cosphi , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { EQUIT , }
		- SUCC   = { phi , lp , sin , y , xy , }

49 :	"cosphi"
		- NEIGH  = { - , coslam , * , < , cosphi , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { EQUIT , }
		- SUCC   = { phi , lp , sin , y , xy , }

49 :	"*"
		- NEIGH  = { - , coslam , * , < , cosphi , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { EQUIT , }
		- SUCC   = { phi , lp , sin , y , xy , }

49 :	"coslam"
		- NEIGH  = { - , coslam , * , < , cosphi , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { EQUIT , }
		- SUCC   = { phi , lp , sin , y , xy , }

49 :	"<"
		- NEIGH  = { - , coslam , * , < , cosphi , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { EQUIT , }
		- SUCC   = { phi , lp , sin , y , xy , }

49 :	"-"
		- NEIGH  = { - , coslam , * , < , cosphi , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { EQUIT , }
		- SUCC   = { phi , lp , sin , y , xy , }

50 :	"return"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , * , < , cosphi , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"forward_error"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , * , < , cosphi , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"P"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , * , < , cosphi , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"lp"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , * , < , cosphi , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"xy"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , * , < , cosphi , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"xy"
		- NEIGH  = { phi , lp , sin , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , * , < , cosphi , if , }
		- SUCC   = { break , }

51 :	"y"
		- NEIGH  = { phi , lp , sin , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , * , < , cosphi , if , }
		- SUCC   = { break , }

51 :	"sin"
		- NEIGH  = { phi , lp , sin , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , * , < , cosphi , if , }
		- SUCC   = { break , }

51 :	"lp"
		- NEIGH  = { phi , lp , sin , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , * , < , cosphi , if , }
		- SUCC   = { break , }

51 :	"phi"
		- NEIGH  = { phi , lp , sin , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , * , < , cosphi , if , }
		- SUCC   = { break , }

52 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , y , xy , }
		- SUCC   = { OBLIQ , }

53 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { phi , lp , sin , sinphi , }

54 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }

54 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }

54 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }

54 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }

62 :	"if"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"Q"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"sinph0"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"*"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"sinphi"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"+"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"Q"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"cosph0"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"*"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"cosphi"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"*"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"coslam"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"<"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

62 :	"-"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }

63 :	"return"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"forward_error"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"P"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"lp"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"xy"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"xy"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"y"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"Q"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"cosph0"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"*"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"sinphi"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"-"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"Q"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"sinph0"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"*"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"cosphi"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"*"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

64 :	"coslam"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { break , }

65 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , y , coslam , xy , }
		- SUCC   = { N_POLE , }

66 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { - , coslam , }

67 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

67 :	"-"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

67 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

69 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , }
		- SUCC   = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }

70 :	"if"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

70 :	"fabs"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

70 :	"lp"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

70 :	"phi"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

70 :	"-"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

70 :	"P"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

70 :	"phi0"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

70 :	"-"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

70 :	">"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

70 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { lp , xy , forward_error , P , return , }
		- PRED   = { S_POLE , }
		- SUCC   = { coslam , cosphi , * , y , xy , }

71 :	"return"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"forward_error"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"P"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"lp"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"xy"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"xy"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- SUCC   = { break , }

72 :	"y"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- SUCC   = { break , }

72 :	"cosphi"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- SUCC   = { break , }

72 :	"*"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- SUCC   = { break , }

72 :	"coslam"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , > , phi , lp , P , fabs , phi0 , if , }
		- SUCC   = { break , }

73 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { coslam , cosphi , * , y , xy , }
		- SUCC   = { }

75 :	"xy"
		- NEIGH  = { lam , lp , sin , cosphi , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

75 :	"x"
		- NEIGH  = { lam , lp , sin , cosphi , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

75 :	"cosphi"
		- NEIGH  = { lam , lp , sin , cosphi , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

75 :	"*"
		- NEIGH  = { lam , lp , sin , cosphi , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

75 :	"sin"
		- NEIGH  = { lam , lp , sin , cosphi , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

75 :	"lp"
		- NEIGH  = { lam , lp , sin , cosphi , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

75 :	"lam"
		- NEIGH  = { lam , lp , sin , cosphi , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { xy , return , }

76 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , sin , cosphi , * , x , xy , }
		- SUCC   = { }

76 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , sin , cosphi , * , x , xy , }
		- SUCC   = { }

80 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"ortho_s_inverse"
		- NEIGH  = { ortho_s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

81 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

82 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

82 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

82 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

82 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

82 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

82 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

82 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

82 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

82 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

82 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , }

83 :	"sinc"
		- NEIGH  = { sinc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { HUGE_VAL , lam , lp , }

85 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinc , }
		- SUCC   = { HUGE_VAL , phi , lp , }

85 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinc , }
		- SUCC   = { HUGE_VAL , phi , lp , }

85 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinc , }
		- SUCC   = { HUGE_VAL , phi , lp , }

85 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { y , x , xy , hypot , rh , }

85 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { y , x , xy , hypot , rh , }

85 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { y , x , xy , hypot , rh , }

87 :	"rh"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { rh , sinc , }

87 :	"hypot"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { rh , sinc , }

87 :	"xy"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { rh , sinc , }

87 :	"x"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { rh , sinc , }

87 :	"xy"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { rh , sinc , }

87 :	"y"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { rh , sinc , }

88 :	"sinc"
		- NEIGH  = { rh , sinc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { > , sinc , if , }

88 :	"rh"
		- NEIGH  = { rh , sinc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { > , sinc , if , }

89 :	"if"
		- NEIGH  = { > , sinc , if , }
		- PARENT = { }
		- CHILD  = { > , - , sinc , if , }
		- PRED   = { rh , sinc , }
		- SUCC   = { sinc , * , sqrt , - , cosc , }

89 :	"sinc"
		- NEIGH  = { > , sinc , if , }
		- PARENT = { }
		- CHILD  = { > , - , sinc , if , }
		- PRED   = { rh , sinc , }
		- SUCC   = { sinc , * , sqrt , - , cosc , }

89 :	">"
		- NEIGH  = { > , sinc , if , }
		- PARENT = { }
		- CHILD  = { > , - , sinc , if , }
		- PRED   = { rh , sinc , }
		- SUCC   = { sinc , * , sqrt , - , cosc , }

90 :	"if"
		- NEIGH  = { > , - , sinc , if , }
		- PARENT = { > , sinc , if , }
		- CHILD  = { lp , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { sinc , }

90 :	"sinc"
		- NEIGH  = { > , - , sinc , if , }
		- PARENT = { > , sinc , if , }
		- CHILD  = { lp , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { sinc , }

90 :	"-"
		- NEIGH  = { > , - , sinc , if , }
		- PARENT = { > , sinc , if , }
		- CHILD  = { lp , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { sinc , }

90 :	">"
		- NEIGH  = { > , - , sinc , if , }
		- PARENT = { > , sinc , if , }
		- CHILD  = { lp , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { sinc , }

91 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { > , - , sinc , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

91 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { > , - , sinc , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

91 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { > , - , sinc , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

92 :	"proj_log_trace"
		- NEIGH  = { P , proj_log_trace , }
		- PARENT = { > , - , sinc , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { lp , return , }

92 :	"P"
		- NEIGH  = { P , proj_log_trace , }
		- PARENT = { > , - , sinc , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { lp , return , }

93 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { > , - , sinc , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { }

93 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { > , - , sinc , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { }

95 :	"sinc"
		- NEIGH  = { sinc , }
		- PARENT = { > , sinc , if , }
		- CHILD  = { }
		- PRED   = { > , - , sinc , if , }
		- SUCC   = { }

97 :	"cosc"
		- NEIGH  = { sinc , * , sqrt , - , cosc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , sinc , if , }
		- SUCC   = { <= , rh , fabs , if , }

97 :	"sqrt"
		- NEIGH  = { sinc , * , sqrt , - , cosc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , sinc , if , }
		- SUCC   = { <= , rh , fabs , if , }

97 :	"-"
		- NEIGH  = { sinc , * , sqrt , - , cosc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , sinc , if , }
		- SUCC   = { <= , rh , fabs , if , }

97 :	"sinc"
		- NEIGH  = { sinc , * , sqrt , - , cosc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , sinc , if , }
		- SUCC   = { <= , rh , fabs , if , }

97 :	"*"
		- NEIGH  = { sinc , * , sqrt , - , cosc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , sinc , if , }
		- SUCC   = { <= , rh , fabs , if , }

97 :	"sinc"
		- NEIGH  = { sinc , * , sqrt , - , cosc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , sinc , if , }
		- SUCC   = { <= , rh , fabs , if , }

98 :	"if"
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , x , atan2 , EQUIT , OBLIQ , && , - , || , y , < , xy , phi , == , mode , Q , switch , P , lp , lam , phi0 , }
		- PRED   = { sinc , * , sqrt , - , cosc , }
		- SUCC   = { lp , return , }

98 :	"fabs"
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , x , atan2 , EQUIT , OBLIQ , && , - , || , y , < , xy , phi , == , mode , Q , switch , P , lp , lam , phi0 , }
		- PRED   = { sinc , * , sqrt , - , cosc , }
		- SUCC   = { lp , return , }

98 :	"rh"
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , x , atan2 , EQUIT , OBLIQ , && , - , || , y , < , xy , phi , == , mode , Q , switch , P , lp , lam , phi0 , }
		- PRED   = { sinc , * , sqrt , - , cosc , }
		- SUCC   = { lp , return , }

98 :	"<="
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , x , atan2 , EQUIT , OBLIQ , && , - , || , y , < , xy , phi , == , mode , Q , switch , P , lp , lam , phi0 , }
		- PRED   = { sinc , * , sqrt , - , cosc , }
		- SUCC   = { lp , return , }

99 :	"lp"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

99 :	"phi"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

99 :	"P"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

99 :	"phi0"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

100 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { }

100 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { }

102 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { fabs , if , rh , + , sinph0 , xy , - , Q , OBLIQ , sinchk , cosc , cosph0 , x , EQUIT , * , *= , / , S_POLE , acos , >= , phi , lp , break , y , sinc , N_POLE , }
		- PRED   = { }
		- SUCC   = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }

102 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { fabs , if , rh , + , sinph0 , xy , - , Q , OBLIQ , sinchk , cosc , cosph0 , x , EQUIT , * , *= , / , S_POLE , acos , >= , phi , lp , break , y , sinc , N_POLE , }
		- PRED   = { }
		- SUCC   = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }

102 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { fabs , if , rh , + , sinph0 , xy , - , Q , OBLIQ , sinchk , cosc , cosph0 , x , EQUIT , * , *= , / , S_POLE , acos , >= , phi , lp , break , y , sinc , N_POLE , }
		- PRED   = { }
		- SUCC   = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }

103 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , y , xy , }

104 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { sinc , acos , phi , lp , }

104 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { sinc , acos , phi , lp , }

104 :	"-"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { sinc , acos , phi , lp , }

104 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { sinc , acos , phi , lp , }

104 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { sinc , acos , phi , lp , }

105 :	"lp"
		- NEIGH  = { sinc , acos , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , y , xy , }
		- SUCC   = { break , }

105 :	"phi"
		- NEIGH  = { sinc , acos , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , y , xy , }
		- SUCC   = { break , }

105 :	"acos"
		- NEIGH  = { sinc , acos , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , y , xy , }
		- SUCC   = { break , }

105 :	"sinc"
		- NEIGH  = { sinc , acos , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , y , xy , }
		- SUCC   = { break , }

106 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinc , acos , phi , lp , }
		- SUCC   = { S_POLE , }

107 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { sinc , acos , - , phi , lp , }

108 :	"lp"
		- NEIGH  = { sinc , acos , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

108 :	"phi"
		- NEIGH  = { sinc , acos , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

108 :	"-"
		- NEIGH  = { sinc , acos , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

108 :	"acos"
		- NEIGH  = { sinc , acos , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

108 :	"sinc"
		- NEIGH  = { sinc , acos , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

109 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinc , acos , - , phi , lp , }
		- SUCC   = { EQUIT , }

110 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { rh , sinc , * , y , xy , / , phi , lp , }

111 :	"lp"
		- NEIGH  = { rh , sinc , * , y , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { sinc , *= , x , xy , }

111 :	"phi"
		- NEIGH  = { rh , sinc , * , y , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { sinc , *= , x , xy , }

111 :	"xy"
		- NEIGH  = { rh , sinc , * , y , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { sinc , *= , x , xy , }

111 :	"y"
		- NEIGH  = { rh , sinc , * , y , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { sinc , *= , x , xy , }

111 :	"*"
		- NEIGH  = { rh , sinc , * , y , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { sinc , *= , x , xy , }

111 :	"sinc"
		- NEIGH  = { rh , sinc , * , y , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { sinc , *= , x , xy , }

111 :	"/"
		- NEIGH  = { rh , sinc , * , y , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { sinc , *= , x , xy , }

111 :	"rh"
		- NEIGH  = { rh , sinc , * , y , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { sinc , *= , x , xy , }

112 :	"xy"
		- NEIGH  = { sinc , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , sinc , * , y , xy , / , phi , lp , }
		- SUCC   = { rh , cosc , * , y , xy , }

112 :	"x"
		- NEIGH  = { sinc , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , sinc , * , y , xy , / , phi , lp , }
		- SUCC   = { rh , cosc , * , y , xy , }

112 :	"*="
		- NEIGH  = { sinc , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , sinc , * , y , xy , / , phi , lp , }
		- SUCC   = { rh , cosc , * , y , xy , }

112 :	"sinc"
		- NEIGH  = { sinc , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , sinc , * , y , xy , / , phi , lp , }
		- SUCC   = { rh , cosc , * , y , xy , }

113 :	"xy"
		- NEIGH  = { rh , cosc , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { sinchk , }

113 :	"y"
		- NEIGH  = { rh , cosc , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { sinchk , }

113 :	"cosc"
		- NEIGH  = { rh , cosc , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { sinchk , }

113 :	"*"
		- NEIGH  = { rh , cosc , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { sinchk , }

113 :	"rh"
		- NEIGH  = { rh , cosc , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { sinchk , }

114 :	"sinchk"
		- NEIGH  = { sinchk , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , cosc , * , y , xy , }
		- SUCC   = { OBLIQ , }

115 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinchk , }
		- SUCC   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }

116 :	"lp"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"phi"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"cosc"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"*"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"Q"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"sinph0"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"+"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"xy"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"y"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"*"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"sinc"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"*"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"Q"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"cosph0"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"/"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

116 :	"rh"
		- NEIGH  = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }

117 :	"xy"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"y"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"cosc"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"-"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"Q"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"sinph0"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"*"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"lp"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"phi"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"*"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

117 :	"rh"
		- NEIGH  = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { / , cosph0 , xy , + , sinph0 , Q , sinc , rh , y , * , cosc , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

118 :	"xy"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- SUCC   = { >= , phi , lp , if , fabs , sinchk , }

118 :	"x"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- SUCC   = { >= , phi , lp , if , fabs , sinchk , }

118 :	"*="
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- SUCC   = { >= , phi , lp , if , fabs , sinchk , }

118 :	"sinc"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- SUCC   = { >= , phi , lp , if , fabs , sinchk , }

118 :	"*"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- SUCC   = { >= , phi , lp , if , fabs , sinchk , }

118 :	"Q"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- SUCC   = { >= , phi , lp , if , fabs , sinchk , }

118 :	"cosph0"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , phi , lp , sinph0 , Q , - , * , cosc , y , xy , }
		- SUCC   = { >= , phi , lp , if , fabs , sinchk , }

119 :	"sinchk"
		- NEIGH  = { >= , phi , lp , if , fabs , sinchk , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosph0 , Q , sinc , * , *= , x , xy , }
		- SUCC   = { break , }

120 :	"if"
		- NEIGH  = { >= , phi , lp , if , fabs , sinchk , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { M_HALFPI , asin , < , - , phi , lp , }
		- PRED   = { cosph0 , Q , sinc , * , *= , x , xy , }
		- SUCC   = { break , }

120 :	"fabs"
		- NEIGH  = { >= , phi , lp , if , fabs , sinchk , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { M_HALFPI , asin , < , - , phi , lp , }
		- PRED   = { cosph0 , Q , sinc , * , *= , x , xy , }
		- SUCC   = { break , }

120 :	"lp"
		- NEIGH  = { >= , phi , lp , if , fabs , sinchk , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { M_HALFPI , asin , < , - , phi , lp , }
		- PRED   = { cosph0 , Q , sinc , * , *= , x , xy , }
		- SUCC   = { break , }

120 :	"phi"
		- NEIGH  = { >= , phi , lp , if , fabs , sinchk , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { M_HALFPI , asin , < , - , phi , lp , }
		- PRED   = { cosph0 , Q , sinc , * , *= , x , xy , }
		- SUCC   = { break , }

120 :	">="
		- NEIGH  = { >= , phi , lp , if , fabs , sinchk , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { M_HALFPI , asin , < , - , phi , lp , }
		- PRED   = { cosph0 , Q , sinc , * , *= , x , xy , }
		- SUCC   = { break , }

121 :	"lp"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"phi"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"lp"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"phi"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"<"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"-"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , < , - , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"lp"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"phi"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"asin"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"lp"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"phi"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , if , fabs , sinchk , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

124 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , if , fabs , sinchk , }
		- SUCC   = { }

126 :	"lp"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"lam"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"xy"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"y"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"=="
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"&&"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"Q"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"mode"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"=="
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"OBLIQ"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"||"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"Q"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"mode"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"=="
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

126 :	"EQUIT"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

127 :	"xy"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

127 :	"x"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

127 :	"=="
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

127 :	"xy"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

127 :	"x"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

127 :	"<"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

127 :	"-"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

127 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

127 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

128 :	"atan2"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

128 :	"xy"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

128 :	"x"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

128 :	"xy"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

128 :	"y"
		- NEIGH  = { M_HALFPI , x , atan2 , EQUIT , - , y , || , Q , mode , && , == , < , xy , OBLIQ , lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

130 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , rh , fabs , if , }
		- SUCC   = { }

130 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , rh , fabs , if , }
		- SUCC   = { }

134 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"ortho_e_forward"
		- NEIGH  = { ortho_e_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

135 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

136 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

136 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

136 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

136 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

136 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

136 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

136 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

136 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

136 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

136 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi , lp , cos , cosphi , }

139 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

139 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

139 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

139 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

140 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { lam , lp , cos , coslam , }

140 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { lam , lp , cos , coslam , }

140 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { lam , lp , cos , coslam , }

140 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { lam , lp , cos , coslam , }

141 :	"coslam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , sin , lp , sinlam , }

141 :	"cos"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , sin , lp , sinlam , }

141 :	"lp"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , sin , lp , sinlam , }

141 :	"lam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , sin , lp , sinlam , }

142 :	"sinlam"
		- NEIGH  = { lam , sin , lp , sinlam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }

142 :	"sin"
		- NEIGH  = { lam , sin , lp , sinlam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }

142 :	"lp"
		- NEIGH  = { lam , sin , lp , sinlam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }

142 :	"lam"
		- NEIGH  = { lam , sin , lp , sinlam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }

146 :	"if"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"Q"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"sinph0"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"*"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"sinphi"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"+"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"Q"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"cosph0"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"*"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"cosphi"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"*"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"coslam"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"<"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

146 :	"-"
		- NEIGH  = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- PARENT = { }
		- CHILD  = { lp , P , forward_error , return , y , xy , HUGE_VAL , x , }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { sinphi , * , es , nu , sqrt , P , / , - , }

147 :	"xy"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , y , xy , }

147 :	"x"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , y , xy , }

147 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , x , xy , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , y , xy , }

147 :	"xy"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { lp , xy , forward_error , P , return , }

147 :	"y"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { lp , xy , forward_error , P , return , }

147 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , y , xy , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , x , xy , }
		- SUCC   = { lp , xy , forward_error , P , return , }

148 :	"return"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { }

148 :	"forward_error"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { }

148 :	"P"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { }

148 :	"lp"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { }

148 :	"xy"
		- NEIGH  = { lp , xy , forward_error , P , return , }
		- PARENT = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , y , xy , }
		- SUCC   = { }

151 :	"nu"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

151 :	"/"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

151 :	"sqrt"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

151 :	"-"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

151 :	"P"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

151 :	"es"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

151 :	"*"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

151 :	"sinphi"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

151 :	"*"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

151 :	"sinphi"
		- NEIGH  = { sinphi , * , es , nu , sqrt , P , / , - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , coslam , < , cosphi , cosph0 , sinphi , * , sinph0 , Q , + , if , }
		- SUCC   = { sinlam , cosphi , nu , * , x , xy , }

152 :	"xy"
		- NEIGH  = { sinlam , cosphi , nu , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , nu , sqrt , P , / , - , }
		- SUCC   = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }

152 :	"x"
		- NEIGH  = { sinlam , cosphi , nu , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , nu , sqrt , P , / , - , }
		- SUCC   = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }

152 :	"nu"
		- NEIGH  = { sinlam , cosphi , nu , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , nu , sqrt , P , / , - , }
		- SUCC   = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }

152 :	"*"
		- NEIGH  = { sinlam , cosphi , nu , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , nu , sqrt , P , / , - , }
		- SUCC   = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }

152 :	"cosphi"
		- NEIGH  = { sinlam , cosphi , nu , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , nu , sqrt , P , / , - , }
		- SUCC   = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }

152 :	"*"
		- NEIGH  = { sinlam , cosphi , nu , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , nu , sqrt , P , / , - , }
		- SUCC   = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }

152 :	"sinlam"
		- NEIGH  = { sinlam , cosphi , nu , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , nu , sqrt , P , / , - , }
		- SUCC   = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }

153 :	"xy"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"y"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"nu"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"*"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"sinphi"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"*"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"Q"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"cosph0"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"-"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"cosphi"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"*"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"Q"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"sinph0"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"*"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"coslam"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

153 :	"+"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"P"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"es"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"*"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"Q"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"nu0"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"*"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"Q"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"sinph0"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"-"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"nu"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"*"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"sinphi"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"*"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"Q"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

154 :	"cosph0"
		- NEIGH  = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlam , cosphi , nu , * , x , xy , }
		- SUCC   = { xy , return , }

156 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- SUCC   = { }

156 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , sinph0 , xy , cosphi , y , - , cosph0 , sinphi , coslam , Q , nu , es , * , }
		- SUCC   = { }

160 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"ortho_e_inverse"
		- NEIGH  = { ortho_e_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

161 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

161 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

162 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

162 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

162 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

162 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

162 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

162 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

162 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

162 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

162 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

162 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { x , SQ , }

164 :	"SQ"
		- NEIGH  = { x , SQ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { || , S_POLE , == , mode , if , N_POLE , Q , }

164 :	"x"
		- NEIGH  = { x , SQ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { || , S_POLE , == , mode , if , N_POLE , Q , }

164 :	"return"
		- NEIGH  = { * , x , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"x"
		- NEIGH  = { * , x , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"*"
		- NEIGH  = { * , x , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"x"
		- NEIGH  = { * , x , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

166 :	"if"
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

166 :	"Q"
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

166 :	"mode"
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

166 :	"=="
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

166 :	"N_POLE"
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

166 :	"||"
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

166 :	"Q"
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

166 :	"mode"
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

166 :	"=="
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

166 :	"S_POLE"
		- NEIGH  = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- PARENT = { }
		- CHILD  = { N_POLE , == , mode , Q , atan2 , lam , lp , return , y , - , >= , if , + , x , rh2 , xy , * , SQ , }
		- PRED   = { x , SQ , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

176 :	"rh2"
		- NEIGH  = { y , + , x , xy , SQ , rh2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , >= , rh2 , if , }

176 :	"SQ"
		- NEIGH  = { y , + , x , xy , SQ , rh2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , >= , rh2 , if , }

176 :	"xy"
		- NEIGH  = { y , + , x , xy , SQ , rh2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , >= , rh2 , if , }

176 :	"x"
		- NEIGH  = { y , + , x , xy , SQ , rh2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , >= , rh2 , if , }

176 :	"+"
		- NEIGH  = { y , + , x , xy , SQ , rh2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , >= , rh2 , if , }

176 :	"SQ"
		- NEIGH  = { y , + , x , xy , SQ , rh2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , >= , rh2 , if , }

176 :	"xy"
		- NEIGH  = { y , + , x , xy , SQ , rh2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , >= , rh2 , if , }

176 :	"y"
		- NEIGH  = { y , + , x , xy , SQ , rh2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , >= , rh2 , if , }

177 :	"if"
		- NEIGH  = { - , >= , rh2 , if , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { N_POLE , mode , Q , / , one_es , es , * , sqrt , P , acos , == , phi , > , lp , - , rh2 , if , }
		- PRED   = { y , + , x , xy , SQ , rh2 , }
		- SUCC   = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }

177 :	"rh2"
		- NEIGH  = { - , >= , rh2 , if , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { N_POLE , mode , Q , / , one_es , es , * , sqrt , P , acos , == , phi , > , lp , - , rh2 , if , }
		- PRED   = { y , + , x , xy , SQ , rh2 , }
		- SUCC   = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }

177 :	">="
		- NEIGH  = { - , >= , rh2 , if , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { N_POLE , mode , Q , / , one_es , es , * , sqrt , P , acos , == , phi , > , lp , - , rh2 , if , }
		- PRED   = { y , + , x , xy , SQ , rh2 , }
		- SUCC   = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }

177 :	"-"
		- NEIGH  = { - , >= , rh2 , if , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { N_POLE , mode , Q , / , one_es , es , * , sqrt , P , acos , == , phi , > , lp , - , rh2 , if , }
		- PRED   = { y , + , x , xy , SQ , rh2 , }
		- SUCC   = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }

178 :	"if"
		- NEIGH  = { > , - , rh2 , if , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { phi , lp , }

178 :	"rh2"
		- NEIGH  = { > , - , rh2 , if , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { phi , lp , }

178 :	"-"
		- NEIGH  = { > , - , rh2 , if , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { phi , lp , }

178 :	">"
		- NEIGH  = { > , - , rh2 , if , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { phi , lp , }

179 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

179 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

179 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

180 :	"proj_log_trace"
		- NEIGH  = { P , proj_log_trace , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { HUGE_VAL , lam , lp , }

180 :	"P"
		- NEIGH  = { P , proj_log_trace , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { HUGE_VAL , lam , lp , }

181 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { HUGE_VAL , phi , lp , }

181 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { HUGE_VAL , phi , lp , }

181 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { HUGE_VAL , phi , lp , }

181 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { lp , return , }

181 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { lp , return , }

181 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { lp , return , }

182 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { }

182 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { > , - , rh2 , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { }

184 :	"lp"
		- NEIGH  = { phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { > , - , rh2 , if , }
		- SUCC   = { }

184 :	"phi"
		- NEIGH  = { phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { > , - , rh2 , if , }
		- SUCC   = { }

187 :	"lp"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"phi"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"acos"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"sqrt"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"rh2"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"*"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"P"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"one_es"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"/"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"-"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"P"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"es"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"*"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"rh2"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"*"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"Q"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"mode"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"=="
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"N_POLE"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"-"
		- NEIGH  = { N_POLE , mode , Q , sqrt , * , es , - , one_es , rh2 , P , acos , / , == , phi , lp , }
		- PARENT = { - , >= , rh2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"lp"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"lam"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"atan2"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"xy"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"x"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"xy"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"y"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"*"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"Q"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"mode"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"=="
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"N_POLE"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

189 :	"-"
		- NEIGH  = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { - , >= , rh2 , if , }
		- SUCC   = { lp , return , }

190 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- SUCC   = { }

190 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- CHILD  = { }
		- PRED   = { N_POLE , == , mode , Q , * , - , y , x , xy , lp , lam , atan2 , }
		- SUCC   = { }

193 :	"if"
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { }
		- CHILD  = { fabs , sinlam , lp , phi , == , sinphi2 , > , sqrt , es , SQ , * , a , asin , P , return , - , y , if , + , b , x , xy , / , }
		- PRED   = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- SUCC   = { xy_recentered , PJ_XY , }

193 :	"Q"
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { }
		- CHILD  = { fabs , sinlam , lp , phi , == , sinphi2 , > , sqrt , es , SQ , * , a , asin , P , return , - , y , if , + , b , x , xy , / , }
		- PRED   = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- SUCC   = { xy_recentered , PJ_XY , }

193 :	"mode"
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { }
		- CHILD  = { fabs , sinlam , lp , phi , == , sinphi2 , > , sqrt , es , SQ , * , a , asin , P , return , - , y , if , + , b , x , xy , / , }
		- PRED   = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- SUCC   = { xy_recentered , PJ_XY , }

193 :	"=="
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { }
		- CHILD  = { fabs , sinlam , lp , phi , == , sinphi2 , > , sqrt , es , SQ , * , a , asin , P , return , - , y , if , + , b , x , xy , / , }
		- PRED   = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- SUCC   = { xy_recentered , PJ_XY , }

193 :	"EQUIT"
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { }
		- CHILD  = { fabs , sinlam , lp , phi , == , sinphi2 , > , sqrt , es , SQ , * , a , asin , P , return , - , y , if , + , b , x , xy , / , }
		- PRED   = { || , S_POLE , == , mode , if , N_POLE , Q , }
		- SUCC   = { xy_recentered , PJ_XY , }

202 :	"if"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"SQ"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"xy"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"x"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"+"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"SQ"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"xy"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"y"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"*"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"P"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"a"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"/"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"P"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"b"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	">"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

202 :	"+"
		- NEIGH  = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { }
		- SUCC   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }

203 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

203 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

203 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

204 :	"proj_log_trace"
		- NEIGH  = { P , proj_log_trace , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { HUGE_VAL , lam , lp , }

204 :	"P"
		- NEIGH  = { P , proj_log_trace , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { HUGE_VAL , lam , lp , }

205 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { HUGE_VAL , phi , lp , }

205 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { HUGE_VAL , phi , lp , }

205 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { HUGE_VAL , phi , lp , }

205 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { lp , return , }

205 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { lp , return , }

205 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { lp , return , }

206 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { }

206 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { }

209 :	"sinphi2"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"xy"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"y"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"=="
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"/"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"SQ"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"-"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"P"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"es"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"/"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"xy"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"y"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"+"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"P"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

209 :	"es"
		- NEIGH  = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , SQ , * , a , P , y , if , + , b , x , xy , / , }
		- SUCC   = { - , > , sinphi2 , if , }

210 :	"if"
		- NEIGH  = { - , > , sinphi2 , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , - , xy , y , * , lam , M_PI_2 , > , phi , lp , }
		- PRED   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- SUCC   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }

210 :	"sinphi2"
		- NEIGH  = { - , > , sinphi2 , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , - , xy , y , * , lam , M_PI_2 , > , phi , lp , }
		- PRED   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- SUCC   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }

210 :	">"
		- NEIGH  = { - , > , sinphi2 , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , - , xy , y , * , lam , M_PI_2 , > , phi , lp , }
		- PRED   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- SUCC   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }

210 :	"-"
		- NEIGH  = { - , > , sinphi2 , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { return , - , xy , y , * , lam , M_PI_2 , > , phi , lp , }
		- PRED   = { + , es , P , - , SQ , / , == , y , xy , sinphi2 , }
		- SUCC   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }

211 :	"lp"
		- NEIGH  = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

211 :	"phi"
		- NEIGH  = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

211 :	"M_PI_2"
		- NEIGH  = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

211 :	"*"
		- NEIGH  = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

211 :	"xy"
		- NEIGH  = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

211 :	"y"
		- NEIGH  = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

211 :	">"
		- NEIGH  = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

211 :	"-"
		- NEIGH  = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

212 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- SUCC   = { lp , return , }

212 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , M_PI_2 , > , phi , lp , }
		- SUCC   = { lp , return , }

213 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

213 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { - , > , sinphi2 , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

215 :	"lp"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

215 :	"phi"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

215 :	"asin"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

215 :	"sqrt"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

215 :	"sinphi2"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

215 :	"*"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

215 :	"xy"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

215 :	"y"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

215 :	">"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

215 :	"-"
		- NEIGH  = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , > , sinphi2 , if , }
		- SUCC   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }

216 :	"sinlam"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"xy"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"x"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"*"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"sqrt"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"-"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"P"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"es"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"*"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"sinphi2"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"/"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"-"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

216 :	"sinphi2"
		- NEIGH  = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { - , xy , y , * , sqrt , sinphi2 , asin , > , phi , lp , }
		- SUCC   = { > , - , sinlam , fabs , if , }

217 :	"if"
		- NEIGH  = { > , - , sinlam , fabs , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { sinlam , asin , - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PRED   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- SUCC   = { lp , return , }

217 :	"fabs"
		- NEIGH  = { > , - , sinlam , fabs , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { sinlam , asin , - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PRED   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- SUCC   = { lp , return , }

217 :	"sinlam"
		- NEIGH  = { > , - , sinlam , fabs , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { sinlam , asin , - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PRED   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- SUCC   = { lp , return , }

217 :	"-"
		- NEIGH  = { > , - , sinlam , fabs , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { sinlam , asin , - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PRED   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- SUCC   = { lp , return , }

217 :	">"
		- NEIGH  = { > , - , sinlam , fabs , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { sinlam , asin , - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PRED   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- SUCC   = { lp , return , }

217 :	"-"
		- NEIGH  = { > , - , sinlam , fabs , if , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { sinlam , asin , - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PRED   = { / , sinphi2 , P , - , sqrt , * , es , x , xy , sinlam , }
		- SUCC   = { lp , return , }

218 :	"lp"
		- NEIGH  = { - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"lam"
		- NEIGH  = { - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"M_PI_2"
		- NEIGH  = { - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"*"
		- NEIGH  = { - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"xy"
		- NEIGH  = { - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"x"
		- NEIGH  = { - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	">"
		- NEIGH  = { - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"-"
		- NEIGH  = { - , > , x , xy , * , lam , M_PI_2 , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

220 :	"lp"
		- NEIGH  = { asin , lam , sinlam , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

220 :	"lam"
		- NEIGH  = { asin , lam , sinlam , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

220 :	"asin"
		- NEIGH  = { asin , lam , sinlam , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

220 :	"sinlam"
		- NEIGH  = { asin , lam , sinlam , lp , }
		- PARENT = { > , - , sinlam , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

221 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , - , sinlam , fabs , if , }
		- SUCC   = { }

221 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { > , - , sinlam , fabs , if , }
		- SUCC   = { }

227 :	"PJ_XY"
		- NEIGH  = { xy_recentered , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { xy , x , xy_recentered , }

227 :	"xy_recentered"
		- NEIGH  = { xy_recentered , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { xy , x , xy_recentered , }

228 :	"xy_recentered"
		- NEIGH  = { xy , x , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy_recentered , PJ_XY , }
		- SUCC   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }

228 :	"x"
		- NEIGH  = { xy , x , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy_recentered , PJ_XY , }
		- SUCC   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }

228 :	"xy"
		- NEIGH  = { xy , x , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy_recentered , PJ_XY , }
		- SUCC   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }

228 :	"x"
		- NEIGH  = { xy , x , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy_recentered , PJ_XY , }
		- SUCC   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }

229 :	"xy_recentered"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

229 :	"y"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

229 :	"xy"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

229 :	"y"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

229 :	"-"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

229 :	"Q"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

229 :	"y_shift"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

229 :	"/"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

229 :	"Q"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

229 :	"y_scale"
		- NEIGH  = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , xy_recentered , }
		- SUCC   = { y , if , + , x , xy , > , xy_recentered , SQ , }

230 :	"if"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

230 :	"SQ"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

230 :	"xy"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

230 :	"x"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

230 :	"+"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

230 :	"SQ"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

230 :	"xy_recentered"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

230 :	"y"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

230 :	">"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

230 :	"+"
		- NEIGH  = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- PARENT = { }
		- CHILD  = { return , phi , HUGE_VAL , proj_log_trace , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , lam , proj_errno_set , P , lp , }
		- PRED   = { y_shift , Q , - , xy , y , y_scale , / , xy_recentered , }
		- SUCC   = { P , xy_recentered , ortho_s_inverse , lp , }

231 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

231 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

231 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , proj_log_trace , }

232 :	"proj_log_trace"
		- NEIGH  = { P , proj_log_trace , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { HUGE_VAL , lam , lp , }

232 :	"P"
		- NEIGH  = { P , proj_log_trace , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { HUGE_VAL , lam , lp , }

233 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { HUGE_VAL , phi , lp , }

233 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { HUGE_VAL , phi , lp , }

233 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { P , proj_log_trace , }
		- SUCC   = { HUGE_VAL , phi , lp , }

233 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { lp , return , }

233 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { lp , return , }

233 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { lp , return , }

234 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { }

234 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { }

243 :	"lp"
		- NEIGH  = { P , xy_recentered , ortho_s_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- SUCC   = { ++ , < , i , for , }

243 :	"ortho_s_inverse"
		- NEIGH  = { P , xy_recentered , ortho_s_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- SUCC   = { ++ , < , i , for , }

243 :	"xy_recentered"
		- NEIGH  = { P , xy_recentered , ortho_s_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- SUCC   = { ++ , < , i , for , }

243 :	"P"
		- NEIGH  = { P , xy_recentered , ortho_s_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , if , + , x , xy , > , xy_recentered , SQ , }
		- SUCC   = { ++ , < , i , for , }

245 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { && , < , fabs , M_PI_2 , > , D , J21 , J12 , rho , nu0 , sinph0 , J22 , one_minus_es_sinphi2 , cosph0 , x , J11 , PJ_XY , xy_new , nu , / , + , sqrt , dphi , * , coslam , es , P , dlam , sin , y , xy , Q , - , dy , lp , if , dx , lam , sinlam , cos , phi , sinphi , += , cosphi , }
		- PRED   = { P , xy_recentered , ortho_s_inverse , lp , }
		- SUCC   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }

245 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { && , < , fabs , M_PI_2 , > , D , J21 , J12 , rho , nu0 , sinph0 , J22 , one_minus_es_sinphi2 , cosph0 , x , J11 , PJ_XY , xy_new , nu , / , + , sqrt , dphi , * , coslam , es , P , dlam , sin , y , xy , Q , - , dy , lp , if , dx , lam , sinlam , cos , phi , sinphi , += , cosphi , }
		- PRED   = { P , xy_recentered , ortho_s_inverse , lp , }
		- SUCC   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }

245 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { && , < , fabs , M_PI_2 , > , D , J21 , J12 , rho , nu0 , sinph0 , J22 , one_minus_es_sinphi2 , cosph0 , x , J11 , PJ_XY , xy_new , nu , / , + , sqrt , dphi , * , coslam , es , P , dlam , sin , y , xy , Q , - , dy , lp , if , dx , lam , sinlam , cos , phi , sinphi , += , cosphi , }
		- PRED   = { P , xy_recentered , ortho_s_inverse , lp , }
		- SUCC   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }

245 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { && , < , fabs , M_PI_2 , > , D , J21 , J12 , rho , nu0 , sinph0 , J22 , one_minus_es_sinphi2 , cosph0 , x , J11 , PJ_XY , xy_new , nu , / , + , sqrt , dphi , * , coslam , es , P , dlam , sin , y , xy , Q , - , dy , lp , if , dx , lam , sinlam , cos , phi , sinphi , += , cosphi , }
		- PRED   = { P , xy_recentered , ortho_s_inverse , lp , }
		- SUCC   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }

245 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { && , < , fabs , M_PI_2 , > , D , J21 , J12 , rho , nu0 , sinph0 , J22 , one_minus_es_sinphi2 , cosph0 , x , J11 , PJ_XY , xy_new , nu , / , + , sqrt , dphi , * , coslam , es , P , dlam , sin , y , xy , Q , - , dy , lp , if , dx , lam , sinlam , cos , phi , sinphi , += , cosphi , }
		- PRED   = { P , xy_recentered , ortho_s_inverse , lp , }
		- SUCC   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }

245 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { && , < , fabs , M_PI_2 , > , D , J21 , J12 , rho , nu0 , sinph0 , J22 , one_minus_es_sinphi2 , cosph0 , x , J11 , PJ_XY , xy_new , nu , / , + , sqrt , dphi , * , coslam , es , P , dlam , sin , y , xy , Q , - , dy , lp , if , dx , lam , sinlam , cos , phi , sinphi , += , cosphi , }
		- PRED   = { P , xy_recentered , ortho_s_inverse , lp , }
		- SUCC   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }

247 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinphi , }

247 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinphi , }

247 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinphi , }

247 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinphi , }

248 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { lam , lp , cos , coslam , }

248 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { lam , lp , cos , coslam , }

248 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { lam , lp , cos , coslam , }

248 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { lam , lp , cos , coslam , }

249 :	"coslam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , sin , lp , sinlam , }

249 :	"cos"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , sin , lp , sinlam , }

249 :	"lp"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , sin , lp , sinlam , }

249 :	"lam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , sin , lp , sinlam , }

250 :	"sinlam"
		- NEIGH  = { lam , sin , lp , sinlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }

250 :	"sin"
		- NEIGH  = { lam , sin , lp , sinlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }

250 :	"lp"
		- NEIGH  = { lam , sin , lp , sinlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }

250 :	"lam"
		- NEIGH  = { lam , sin , lp , sinlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }

251 :	"one_minus_es_sinphi2"
		- NEIGH  = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { one_minus_es_sinphi2 , sqrt , / , nu , }

251 :	"-"
		- NEIGH  = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { one_minus_es_sinphi2 , sqrt , / , nu , }

251 :	"P"
		- NEIGH  = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { one_minus_es_sinphi2 , sqrt , / , nu , }

251 :	"es"
		- NEIGH  = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { one_minus_es_sinphi2 , sqrt , / , nu , }

251 :	"*"
		- NEIGH  = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { one_minus_es_sinphi2 , sqrt , / , nu , }

251 :	"sinphi"
		- NEIGH  = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { one_minus_es_sinphi2 , sqrt , / , nu , }

251 :	"*"
		- NEIGH  = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { one_minus_es_sinphi2 , sqrt , / , nu , }

251 :	"sinphi"
		- NEIGH  = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lam , sin , lp , sinlam , }
		- SUCC   = { one_minus_es_sinphi2 , sqrt , / , nu , }

252 :	"nu"
		- NEIGH  = { one_minus_es_sinphi2 , sqrt , / , nu , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- SUCC   = { xy_new , PJ_XY , }

252 :	"/"
		- NEIGH  = { one_minus_es_sinphi2 , sqrt , / , nu , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- SUCC   = { xy_new , PJ_XY , }

252 :	"sqrt"
		- NEIGH  = { one_minus_es_sinphi2 , sqrt , / , nu , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- SUCC   = { xy_new , PJ_XY , }

252 :	"one_minus_es_sinphi2"
		- NEIGH  = { one_minus_es_sinphi2 , sqrt , / , nu , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinphi , one_minus_es_sinphi2 , es , P , - , * , }
		- SUCC   = { xy_new , PJ_XY , }

253 :	"PJ_XY"
		- NEIGH  = { xy_new , PJ_XY , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { one_minus_es_sinphi2 , sqrt , / , nu , }
		- SUCC   = { sinlam , xy_new , cosphi , nu , * , x , }

253 :	"xy_new"
		- NEIGH  = { xy_new , PJ_XY , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { one_minus_es_sinphi2 , sqrt , / , nu , }
		- SUCC   = { sinlam , xy_new , cosphi , nu , * , x , }

254 :	"xy_new"
		- NEIGH  = { sinlam , xy_new , cosphi , nu , * , x , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , PJ_XY , }
		- SUCC   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }

254 :	"x"
		- NEIGH  = { sinlam , xy_new , cosphi , nu , * , x , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , PJ_XY , }
		- SUCC   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }

254 :	"nu"
		- NEIGH  = { sinlam , xy_new , cosphi , nu , * , x , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , PJ_XY , }
		- SUCC   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }

254 :	"*"
		- NEIGH  = { sinlam , xy_new , cosphi , nu , * , x , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , PJ_XY , }
		- SUCC   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }

254 :	"cosphi"
		- NEIGH  = { sinlam , xy_new , cosphi , nu , * , x , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , PJ_XY , }
		- SUCC   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }

254 :	"*"
		- NEIGH  = { sinlam , xy_new , cosphi , nu , * , x , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , PJ_XY , }
		- SUCC   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }

254 :	"sinlam"
		- NEIGH  = { sinlam , xy_new , cosphi , nu , * , x , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , PJ_XY , }
		- SUCC   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }

255 :	"xy_new"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"y"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"nu"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"*"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"sinphi"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"*"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"Q"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"cosph0"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"-"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"cosphi"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"*"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"Q"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"sinph0"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"*"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"coslam"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

255 :	"+"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"P"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"es"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"*"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"Q"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"nu0"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"*"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"Q"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"sinph0"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"-"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"nu"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"*"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"sinphi"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"*"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"Q"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

256 :	"cosph0"
		- NEIGH  = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , xy_new , cosphi , nu , * , x , }
		- SUCC   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }

257 :	"rho"
		- NEIGH  = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- SUCC   = { sinlam , * , J11 , sinphi , rho , - , }

257 :	"-"
		- NEIGH  = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- SUCC   = { sinlam , * , J11 , sinphi , rho , - , }

257 :	"P"
		- NEIGH  = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- SUCC   = { sinlam , * , J11 , sinphi , rho , - , }

257 :	"es"
		- NEIGH  = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- SUCC   = { sinlam , * , J11 , sinphi , rho , - , }

257 :	"*"
		- NEIGH  = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- SUCC   = { sinlam , * , J11 , sinphi , rho , - , }

257 :	"nu"
		- NEIGH  = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- SUCC   = { sinlam , * , J11 , sinphi , rho , - , }

257 :	"/"
		- NEIGH  = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- SUCC   = { sinlam , * , J11 , sinphi , rho , - , }

257 :	"one_minus_es_sinphi2"
		- NEIGH  = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { nu0 , P , + , Q , coslam , sinph0 , y , - , cosph0 , sinphi , nu , es , * , cosphi , xy_new , }
		- SUCC   = { sinlam , * , J11 , sinphi , rho , - , }

258 :	"J11"
		- NEIGH  = { sinlam , * , J11 , sinphi , rho , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- SUCC   = { coslam , * , nu , cosphi , J12 , }

258 :	"-"
		- NEIGH  = { sinlam , * , J11 , sinphi , rho , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- SUCC   = { coslam , * , nu , cosphi , J12 , }

258 :	"rho"
		- NEIGH  = { sinlam , * , J11 , sinphi , rho , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- SUCC   = { coslam , * , nu , cosphi , J12 , }

258 :	"*"
		- NEIGH  = { sinlam , * , J11 , sinphi , rho , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- SUCC   = { coslam , * , nu , cosphi , J12 , }

258 :	"sinphi"
		- NEIGH  = { sinlam , * , J11 , sinphi , rho , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- SUCC   = { coslam , * , nu , cosphi , J12 , }

258 :	"*"
		- NEIGH  = { sinlam , * , J11 , sinphi , rho , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- SUCC   = { coslam , * , nu , cosphi , J12 , }

258 :	"sinlam"
		- NEIGH  = { sinlam , * , J11 , sinphi , rho , - , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { / , nu , * , one_minus_es_sinphi2 , es , rho , P , - , }
		- SUCC   = { coslam , * , nu , cosphi , J12 , }

259 :	"J12"
		- NEIGH  = { coslam , * , nu , cosphi , J12 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , * , J11 , sinphi , rho , - , }
		- SUCC   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }

259 :	"nu"
		- NEIGH  = { coslam , * , nu , cosphi , J12 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , * , J11 , sinphi , rho , - , }
		- SUCC   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }

259 :	"*"
		- NEIGH  = { coslam , * , nu , cosphi , J12 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , * , J11 , sinphi , rho , - , }
		- SUCC   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }

259 :	"cosphi"
		- NEIGH  = { coslam , * , nu , cosphi , J12 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , * , J11 , sinphi , rho , - , }
		- SUCC   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }

259 :	"*"
		- NEIGH  = { coslam , * , nu , cosphi , J12 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , * , J11 , sinphi , rho , - , }
		- SUCC   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }

259 :	"coslam"
		- NEIGH  = { coslam , * , nu , cosphi , J12 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , * , J11 , sinphi , rho , - , }
		- SUCC   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }

260 :	"J21"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"rho"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"*"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"cosphi"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"*"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"Q"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"cosph0"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"+"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"sinphi"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"*"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"Q"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"sinph0"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"*"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

260 :	"coslam"
		- NEIGH  = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { coslam , * , nu , cosphi , J12 , }
		- SUCC   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }

261 :	"J22"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

261 :	"nu"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

261 :	"*"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

261 :	"Q"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

261 :	"sinph0"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

261 :	"*"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

261 :	"Q"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

261 :	"cosph0"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

261 :	"*"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

261 :	"sinlam"
		- NEIGH  = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , + , Q , cosphi , cosph0 , rho , * , coslam , J21 , }
		- SUCC   = { J21 , J12 , J11 , J22 , * , - , D , }

262 :	"D"
		- NEIGH  = { J21 , J12 , J11 , J22 , * , - , D , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- SUCC   = { xy_new , x , xy , - , dx , }

262 :	"J11"
		- NEIGH  = { J21 , J12 , J11 , J22 , * , - , D , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- SUCC   = { xy_new , x , xy , - , dx , }

262 :	"*"
		- NEIGH  = { J21 , J12 , J11 , J22 , * , - , D , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- SUCC   = { xy_new , x , xy , - , dx , }

262 :	"J22"
		- NEIGH  = { J21 , J12 , J11 , J22 , * , - , D , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- SUCC   = { xy_new , x , xy , - , dx , }

262 :	"-"
		- NEIGH  = { J21 , J12 , J11 , J22 , * , - , D , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- SUCC   = { xy_new , x , xy , - , dx , }

262 :	"J12"
		- NEIGH  = { J21 , J12 , J11 , J22 , * , - , D , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- SUCC   = { xy_new , x , xy , - , dx , }

262 :	"*"
		- NEIGH  = { J21 , J12 , J11 , J22 , * , - , D , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- SUCC   = { xy_new , x , xy , - , dx , }

262 :	"J21"
		- NEIGH  = { J21 , J12 , J11 , J22 , * , - , D , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { sinlam , cosph0 , Q , nu , sinph0 , * , J22 , }
		- SUCC   = { xy_new , x , xy , - , dx , }

263 :	"dx"
		- NEIGH  = { xy_new , x , xy , - , dx , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { J21 , J12 , J11 , J22 , * , - , D , }
		- SUCC   = { xy_new , - , y , xy , dy , }

263 :	"xy"
		- NEIGH  = { xy_new , x , xy , - , dx , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { J21 , J12 , J11 , J22 , * , - , D , }
		- SUCC   = { xy_new , - , y , xy , dy , }

263 :	"x"
		- NEIGH  = { xy_new , x , xy , - , dx , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { J21 , J12 , J11 , J22 , * , - , D , }
		- SUCC   = { xy_new , - , y , xy , dy , }

263 :	"-"
		- NEIGH  = { xy_new , x , xy , - , dx , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { J21 , J12 , J11 , J22 , * , - , D , }
		- SUCC   = { xy_new , - , y , xy , dy , }

263 :	"xy_new"
		- NEIGH  = { xy_new , x , xy , - , dx , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { J21 , J12 , J11 , J22 , * , - , D , }
		- SUCC   = { xy_new , - , y , xy , dy , }

263 :	"x"
		- NEIGH  = { xy_new , x , xy , - , dx , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { J21 , J12 , J11 , J22 , * , - , D , }
		- SUCC   = { xy_new , - , y , xy , dy , }

264 :	"dy"
		- NEIGH  = { xy_new , - , y , xy , dy , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , x , xy , - , dx , }
		- SUCC   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }

264 :	"xy"
		- NEIGH  = { xy_new , - , y , xy , dy , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , x , xy , - , dx , }
		- SUCC   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }

264 :	"y"
		- NEIGH  = { xy_new , - , y , xy , dy , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , x , xy , - , dx , }
		- SUCC   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }

264 :	"-"
		- NEIGH  = { xy_new , - , y , xy , dy , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , x , xy , - , dx , }
		- SUCC   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }

264 :	"xy_new"
		- NEIGH  = { xy_new , - , y , xy , dy , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , x , xy , - , dx , }
		- SUCC   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }

264 :	"y"
		- NEIGH  = { xy_new , - , y , xy , dy , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , x , xy , - , dx , }
		- SUCC   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }

265 :	"dphi"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

265 :	"J22"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

265 :	"*"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

265 :	"dx"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

265 :	"-"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

265 :	"J12"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

265 :	"*"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

265 :	"dy"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

265 :	"/"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

265 :	"D"
		- NEIGH  = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { xy_new , - , y , xy , dy , }
		- SUCC   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }

266 :	"dlam"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"-"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"J21"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"*"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"dx"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"+"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"J11"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"*"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"dy"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"/"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

266 :	"D"
		- NEIGH  = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , J12 , * , dy , J22 , - , dx , / , dphi , }
		- SUCC   = { += , dphi , phi , lp , }

267 :	"lp"
		- NEIGH  = { += , dphi , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- SUCC   = { > , M_PI_2 , phi , lp , if , }

267 :	"phi"
		- NEIGH  = { += , dphi , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- SUCC   = { > , M_PI_2 , phi , lp , if , }

267 :	"+="
		- NEIGH  = { += , dphi , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- SUCC   = { > , M_PI_2 , phi , lp , if , }

267 :	"dphi"
		- NEIGH  = { += , dphi , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { D , dy , J11 , + , * , J21 , dx , - , / , dlam , }
		- SUCC   = { > , M_PI_2 , phi , lp , if , }

268 :	"if"
		- NEIGH  = { > , M_PI_2 , phi , lp , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { - , < , if , M_PI_2 , phi , lp , }
		- PRED   = { += , dphi , phi , lp , }
		- SUCC   = { dlam , += , lam , lp , }

268 :	"lp"
		- NEIGH  = { > , M_PI_2 , phi , lp , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { - , < , if , M_PI_2 , phi , lp , }
		- PRED   = { += , dphi , phi , lp , }
		- SUCC   = { dlam , += , lam , lp , }

268 :	"phi"
		- NEIGH  = { > , M_PI_2 , phi , lp , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { - , < , if , M_PI_2 , phi , lp , }
		- PRED   = { += , dphi , phi , lp , }
		- SUCC   = { dlam , += , lam , lp , }

268 :	">"
		- NEIGH  = { > , M_PI_2 , phi , lp , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { - , < , if , M_PI_2 , phi , lp , }
		- PRED   = { += , dphi , phi , lp , }
		- SUCC   = { dlam , += , lam , lp , }

268 :	"M_PI_2"
		- NEIGH  = { > , M_PI_2 , phi , lp , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { - , < , if , M_PI_2 , phi , lp , }
		- PRED   = { += , dphi , phi , lp , }
		- SUCC   = { dlam , += , lam , lp , }

268 :	"lp"
		- NEIGH  = { M_PI_2 , phi , lp , }
		- PARENT = { > , M_PI_2 , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

268 :	"phi"
		- NEIGH  = { M_PI_2 , phi , lp , }
		- PARENT = { > , M_PI_2 , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

268 :	"M_PI_2"
		- NEIGH  = { M_PI_2 , phi , lp , }
		- PARENT = { > , M_PI_2 , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

269 :	"if"
		- NEIGH  = { M_PI_2 , < , - , phi , lp , if , }
		- PARENT = { > , M_PI_2 , phi , lp , if , }
		- CHILD  = { M_PI_2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

269 :	"lp"
		- NEIGH  = { M_PI_2 , < , - , phi , lp , if , }
		- PARENT = { > , M_PI_2 , phi , lp , if , }
		- CHILD  = { M_PI_2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

269 :	"phi"
		- NEIGH  = { M_PI_2 , < , - , phi , lp , if , }
		- PARENT = { > , M_PI_2 , phi , lp , if , }
		- CHILD  = { M_PI_2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

269 :	"<"
		- NEIGH  = { M_PI_2 , < , - , phi , lp , if , }
		- PARENT = { > , M_PI_2 , phi , lp , if , }
		- CHILD  = { M_PI_2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

269 :	"-"
		- NEIGH  = { M_PI_2 , < , - , phi , lp , if , }
		- PARENT = { > , M_PI_2 , phi , lp , if , }
		- CHILD  = { M_PI_2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

269 :	"M_PI_2"
		- NEIGH  = { M_PI_2 , < , - , phi , lp , if , }
		- PARENT = { > , M_PI_2 , phi , lp , if , }
		- CHILD  = { M_PI_2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

269 :	"lp"
		- NEIGH  = { M_PI_2 , - , phi , lp , }
		- PARENT = { M_PI_2 , < , - , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

269 :	"phi"
		- NEIGH  = { M_PI_2 , - , phi , lp , }
		- PARENT = { M_PI_2 , < , - , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

269 :	"-"
		- NEIGH  = { M_PI_2 , - , phi , lp , }
		- PARENT = { M_PI_2 , < , - , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

269 :	"M_PI_2"
		- NEIGH  = { M_PI_2 , - , phi , lp , }
		- PARENT = { M_PI_2 , < , - , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

270 :	"lp"
		- NEIGH  = { dlam , += , lam , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , M_PI_2 , phi , lp , if , }
		- SUCC   = { && , dlam , dphi , < , fabs , if , }

270 :	"lam"
		- NEIGH  = { dlam , += , lam , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , M_PI_2 , phi , lp , if , }
		- SUCC   = { && , dlam , dphi , < , fabs , if , }

270 :	"+="
		- NEIGH  = { dlam , += , lam , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , M_PI_2 , phi , lp , if , }
		- SUCC   = { && , dlam , dphi , < , fabs , if , }

270 :	"dlam"
		- NEIGH  = { dlam , += , lam , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { > , M_PI_2 , phi , lp , if , }
		- SUCC   = { && , dlam , dphi , < , fabs , if , }

271 :	"if"
		- NEIGH  = { && , dlam , dphi , < , fabs , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { lp , return , }
		- PRED   = { dlam , += , lam , lp , }
		- SUCC   = { }

271 :	"fabs"
		- NEIGH  = { && , dlam , dphi , < , fabs , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { lp , return , }
		- PRED   = { dlam , += , lam , lp , }
		- SUCC   = { }

271 :	"dphi"
		- NEIGH  = { && , dlam , dphi , < , fabs , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { lp , return , }
		- PRED   = { dlam , += , lam , lp , }
		- SUCC   = { }

271 :	"<"
		- NEIGH  = { && , dlam , dphi , < , fabs , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { lp , return , }
		- PRED   = { dlam , += , lam , lp , }
		- SUCC   = { }

271 :	"&&"
		- NEIGH  = { && , dlam , dphi , < , fabs , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { lp , return , }
		- PRED   = { dlam , += , lam , lp , }
		- SUCC   = { }

271 :	"fabs"
		- NEIGH  = { && , dlam , dphi , < , fabs , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { lp , return , }
		- PRED   = { dlam , += , lam , lp , }
		- SUCC   = { }

271 :	"dlam"
		- NEIGH  = { && , dlam , dphi , < , fabs , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { lp , return , }
		- PRED   = { dlam , += , lam , lp , }
		- SUCC   = { }

271 :	"<"
		- NEIGH  = { && , dlam , dphi , < , fabs , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { lp , return , }
		- PRED   = { dlam , += , lam , lp , }
		- SUCC   = { }

273 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { && , dlam , dphi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

273 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { && , dlam , dphi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"proj_context_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

276 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

276 :	"ctx"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

276 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

277 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }
		- SUCC   = { }

277 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , ctx , proj_context_errno_set , }
		- SUCC   = { }

281 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

281 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

281 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

281 :	"ortho"
		- NEIGH  = { ortho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

282 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

282 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

282 :	"Q"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

282 :	"static_cast"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

282 :	"<"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

282 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

282 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

282 :	">"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

282 :	"calloc"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

282 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

283 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

283 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

283 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

284 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

285 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

285 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

285 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

287 :	"Q"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

287 :	"sinph0"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

287 :	"sin"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

287 :	"P"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

287 :	"phi0"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

288 :	"Q"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

288 :	"cosph0"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

288 :	"cos"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

288 :	"P"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

288 :	"phi0"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

289 :	"if"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { > , if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { phi0 , cos , cosph0 , P , Q , }
		- SUCC   = { == , es , P , if , }

289 :	"fabs"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { > , if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { phi0 , cos , cosph0 , P , Q , }
		- SUCC   = { == , es , P , if , }

289 :	"fabs"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { > , if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { phi0 , cos , cosph0 , P , Q , }
		- SUCC   = { == , es , P , if , }

289 :	"P"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { > , if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { phi0 , cos , cosph0 , P , Q , }
		- SUCC   = { == , es , P , if , }

289 :	"phi0"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { > , if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { phi0 , cos , cosph0 , P , Q , }
		- SUCC   = { == , es , P , if , }

289 :	"-"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { > , if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { phi0 , cos , cosph0 , P , Q , }
		- SUCC   = { == , es , P , if , }

289 :	"M_HALFPI"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { > , if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { phi0 , cos , cosph0 , P , Q , }
		- SUCC   = { == , es , P , if , }

289 :	"<="
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { > , if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { phi0 , cos , cosph0 , P , Q , }
		- SUCC   = { == , es , P , if , }

290 :	"Q"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"mode"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"P"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"phi0"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"<"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"S_POLE"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"N_POLE"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

291 :	"if"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { EQUIT , mode , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

291 :	"fabs"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { EQUIT , mode , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

291 :	"P"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { EQUIT , mode , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

291 :	"phi0"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { EQUIT , mode , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

291 :	">"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { EQUIT , mode , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

292 :	"Q"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"mode"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"OBLIQ"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

294 :	"Q"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

294 :	"mode"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

294 :	"EQUIT"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

295 :	"if"
		- NEIGH  = { == , es , P , if , }
		- PARENT = { }
		- CHILD  = { ortho_e_forward , ortho_e_inverse , y_scale , cosph0 , y_shift , sinph0 , * , sqrt , es , fwd , - , / , P , nu0 , Q , ortho_s_inverse , ortho_s_forward , inv , }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { P , return , }

295 :	"P"
		- NEIGH  = { == , es , P , if , }
		- PARENT = { }
		- CHILD  = { ortho_e_forward , ortho_e_inverse , y_scale , cosph0 , y_shift , sinph0 , * , sqrt , es , fwd , - , / , P , nu0 , Q , ortho_s_inverse , ortho_s_forward , inv , }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { P , return , }

295 :	"es"
		- NEIGH  = { == , es , P , if , }
		- PARENT = { }
		- CHILD  = { ortho_e_forward , ortho_e_inverse , y_scale , cosph0 , y_shift , sinph0 , * , sqrt , es , fwd , - , / , P , nu0 , Q , ortho_s_inverse , ortho_s_forward , inv , }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { P , return , }

295 :	"=="
		- NEIGH  = { == , es , P , if , }
		- PARENT = { }
		- CHILD  = { ortho_e_forward , ortho_e_inverse , y_scale , cosph0 , y_shift , sinph0 , * , sqrt , es , fwd , - , / , P , nu0 , Q , ortho_s_inverse , ortho_s_forward , inv , }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { P , return , }

297 :	"P"
		- NEIGH  = { ortho_s_inverse , inv , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ortho_s_forward , fwd , P , }

297 :	"inv"
		- NEIGH  = { ortho_s_inverse , inv , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ortho_s_forward , fwd , P , }

297 :	"ortho_s_inverse"
		- NEIGH  = { ortho_s_inverse , inv , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ortho_s_forward , fwd , P , }

298 :	"P"
		- NEIGH  = { ortho_s_forward , fwd , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { ortho_s_inverse , inv , P , }
		- SUCC   = { }

298 :	"fwd"
		- NEIGH  = { ortho_s_forward , fwd , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { ortho_s_inverse , inv , P , }
		- SUCC   = { }

298 :	"ortho_s_forward"
		- NEIGH  = { ortho_s_forward , fwd , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { ortho_s_inverse , inv , P , }
		- SUCC   = { }

302 :	"Q"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"nu0"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"/"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"sqrt"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"-"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"P"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"es"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"*"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"Q"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"sinph0"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"*"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"Q"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

302 :	"sinph0"
		- NEIGH  = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }

303 :	"Q"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"y_shift"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"P"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"es"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"*"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"Q"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"nu0"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"*"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"Q"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"sinph0"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"*"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"Q"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

303 :	"cosph0"
		- NEIGH  = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , es , P , - , Q , sqrt , * , nu0 , / , }
		- SUCC   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }

304 :	"Q"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"y_scale"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"/"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"sqrt"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"-"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"P"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"es"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"*"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"Q"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"cosph0"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"*"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"Q"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

304 :	"cosph0"
		- NEIGH  = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { nu0 , * , y_shift , sinph0 , es , cosph0 , P , Q , }
		- SUCC   = { ortho_e_inverse , inv , P , }

305 :	"P"
		- NEIGH  = { ortho_e_inverse , inv , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- SUCC   = { ortho_e_forward , fwd , P , }

305 :	"inv"
		- NEIGH  = { ortho_e_inverse , inv , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- SUCC   = { ortho_e_forward , fwd , P , }

305 :	"ortho_e_inverse"
		- NEIGH  = { ortho_e_inverse , inv , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , es , cosph0 , P , - , Q , sqrt , y_scale , / , }
		- SUCC   = { ortho_e_forward , fwd , P , }

306 :	"P"
		- NEIGH  = { ortho_e_forward , fwd , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { ortho_e_inverse , inv , P , }
		- SUCC   = { }

306 :	"fwd"
		- NEIGH  = { ortho_e_forward , fwd , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { ortho_e_inverse , inv , P , }
		- SUCC   = { }

306 :	"ortho_e_forward"
		- NEIGH  = { ortho_e_forward , fwd , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { ortho_e_inverse , inv , P , }
		- SUCC   = { }

309 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , es , P , if , }
		- SUCC   = { }

309 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , es , P , if , }
		- SUCC   = { }

