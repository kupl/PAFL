8 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

8 :	"lagrng"
		- NEIGH  = { lagrng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

14 :	"a1"
		- NEIGH  = { a1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"a2"
		- NEIGH  = { a2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"hrw"
		- NEIGH  = { hrw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

17 :	"hw"
		- NEIGH  = { hw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

18 :	"rw"
		- NEIGH  = { rw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"w"
		- NEIGH  = { w , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"lagrng_s_forward"
		- NEIGH  = { lagrng_s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

25 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

25 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

26 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

26 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

26 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

26 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

26 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

26 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

26 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

26 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

26 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

26 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , v , }

27 :	"v"
		- NEIGH  = { c , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { sin , phi , lp , sin_phi , }

27 :	"c"
		- NEIGH  = { c , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { sin , phi , lp , sin_phi , }

29 :	"sin_phi"
		- NEIGH  = { sin , phi , lp , sin_phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , v , }
		- SUCC   = { - , sin_phi , < , fabs , if , }

29 :	"sin"
		- NEIGH  = { sin , phi , lp , sin_phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , v , }
		- SUCC   = { - , sin_phi , < , fabs , if , }

29 :	"lp"
		- NEIGH  = { sin , phi , lp , sin_phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , v , }
		- SUCC   = { - , sin_phi , < , fabs , if , }

29 :	"phi"
		- NEIGH  = { sin , phi , lp , sin_phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , v , }
		- SUCC   = { - , sin_phi , < , fabs , if , }

30 :	"if"
		- NEIGH  = { - , sin_phi , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { sin , if , cos , c , *= , / , + , x , a1 , pow , Q , y , - , rw , xy , < , hrw , sin_phi , phi , v , lam , lp , * , }
		- PRED   = { sin , phi , lp , sin_phi , }
		- SUCC   = { xy , return , }

30 :	"fabs"
		- NEIGH  = { - , sin_phi , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { sin , if , cos , c , *= , / , + , x , a1 , pow , Q , y , - , rw , xy , < , hrw , sin_phi , phi , v , lam , lp , * , }
		- PRED   = { sin , phi , lp , sin_phi , }
		- SUCC   = { xy , return , }

30 :	"fabs"
		- NEIGH  = { - , sin_phi , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { sin , if , cos , c , *= , / , + , x , a1 , pow , Q , y , - , rw , xy , < , hrw , sin_phi , phi , v , lam , lp , * , }
		- PRED   = { sin , phi , lp , sin_phi , }
		- SUCC   = { xy , return , }

30 :	"sin_phi"
		- NEIGH  = { - , sin_phi , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { sin , if , cos , c , *= , / , + , x , a1 , pow , Q , y , - , rw , xy , < , hrw , sin_phi , phi , v , lam , lp , * , }
		- PRED   = { sin , phi , lp , sin_phi , }
		- SUCC   = { xy , return , }

30 :	"-"
		- NEIGH  = { - , sin_phi , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { sin , if , cos , c , *= , / , + , x , a1 , pow , Q , y , - , rw , xy , < , hrw , sin_phi , phi , v , lam , lp , * , }
		- PRED   = { sin , phi , lp , sin_phi , }
		- SUCC   = { xy , return , }

30 :	"<"
		- NEIGH  = { - , sin_phi , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { sin , if , cos , c , *= , / , + , x , a1 , pow , Q , y , - , rw , xy , < , hrw , sin_phi , phi , v , lam , lp , * , }
		- PRED   = { sin , phi , lp , sin_phi , }
		- SUCC   = { xy , return , }

31 :	"xy"
		- NEIGH  = { x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi , lp , y , xy , }

31 :	"x"
		- NEIGH  = { x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi , lp , y , xy , }

32 :	"xy"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , xy , }
		- SUCC   = { }

32 :	"y"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , xy , }
		- SUCC   = { }

32 :	"lp"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , xy , }
		- SUCC   = { }

32 :	"phi"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , xy , }
		- SUCC   = { }

32 :	"<"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , xy , }
		- SUCC   = { }

32 :	"-"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , xy , }
		- SUCC   = { }

34 :	"v"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"Q"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"a1"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"*"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"pow"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"+"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"sin_phi"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"/"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"-"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"sin_phi"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"Q"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

34 :	"hrw"
		- NEIGH  = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , rw , *= , lam , lp , }

35 :	"lp"
		- NEIGH  = { Q , rw , *= , lam , lp , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- SUCC   = { lam , cos , / , + , lp , v , * , c , }

35 :	"lam"
		- NEIGH  = { Q , rw , *= , lam , lp , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- SUCC   = { lam , cos , / , + , lp , v , * , c , }

35 :	"*="
		- NEIGH  = { Q , rw , *= , lam , lp , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- SUCC   = { lam , cos , / , + , lp , v , * , c , }

35 :	"Q"
		- NEIGH  = { Q , rw , *= , lam , lp , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- SUCC   = { lam , cos , / , + , lp , v , * , c , }

35 :	"rw"
		- NEIGH  = { Q , rw , *= , lam , lp , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , + , - , sin_phi , pow , a1 , Q , * , hrw , v , }
		- SUCC   = { lam , cos , / , + , lp , v , * , c , }

36 :	"c"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

36 :	"*"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

36 :	"v"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

36 :	"+"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

36 :	"/"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

36 :	"v"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

36 :	"+"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

36 :	"cos"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

36 :	"lp"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

36 :	"lam"
		- NEIGH  = { lam , cos , / , + , lp , v , * , c , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , rw , *= , lam , lp , }
		- SUCC   = { < , c , if , }

37 :	"if"
		- NEIGH  = { < , c , if , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { lam , cos , / , + , lp , v , * , c , }
		- SUCC   = { / , lam , lp , c , sin , * , x , xy , }

37 :	"c"
		- NEIGH  = { < , c , if , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { lam , cos , / , + , lp , v , * , c , }
		- SUCC   = { / , lam , lp , c , sin , * , x , xy , }

37 :	"<"
		- NEIGH  = { < , c , if , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { lam , cos , / , + , lp , v , * , c , }
		- SUCC   = { / , lam , lp , c , sin , * , x , xy , }

38 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { < , c , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

38 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { < , c , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

38 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { < , c , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

39 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { < , c , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

39 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { < , c , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

41 :	"xy"
		- NEIGH  = { / , lam , lp , c , sin , * , x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , if , }
		- SUCC   = { c , / , - , v , y , xy , }

41 :	"x"
		- NEIGH  = { / , lam , lp , c , sin , * , x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , if , }
		- SUCC   = { c , / , - , v , y , xy , }

41 :	"*"
		- NEIGH  = { / , lam , lp , c , sin , * , x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , if , }
		- SUCC   = { c , / , - , v , y , xy , }

41 :	"sin"
		- NEIGH  = { / , lam , lp , c , sin , * , x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , if , }
		- SUCC   = { c , / , - , v , y , xy , }

41 :	"lp"
		- NEIGH  = { / , lam , lp , c , sin , * , x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , if , }
		- SUCC   = { c , / , - , v , y , xy , }

41 :	"lam"
		- NEIGH  = { / , lam , lp , c , sin , * , x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , if , }
		- SUCC   = { c , / , - , v , y , xy , }

41 :	"/"
		- NEIGH  = { / , lam , lp , c , sin , * , x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , if , }
		- SUCC   = { c , / , - , v , y , xy , }

41 :	"c"
		- NEIGH  = { / , lam , lp , c , sin , * , x , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , if , }
		- SUCC   = { c , / , - , v , y , xy , }

42 :	"xy"
		- NEIGH  = { c , / , - , v , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , lam , lp , c , sin , * , x , xy , }
		- SUCC   = { }

42 :	"y"
		- NEIGH  = { c , / , - , v , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , lam , lp , c , sin , * , x , xy , }
		- SUCC   = { }

42 :	"v"
		- NEIGH  = { c , / , - , v , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , lam , lp , c , sin , * , x , xy , }
		- SUCC   = { }

42 :	"-"
		- NEIGH  = { c , / , - , v , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , lam , lp , c , sin , * , x , xy , }
		- SUCC   = { }

42 :	"/"
		- NEIGH  = { c , / , - , v , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , lam , lp , c , sin , * , x , xy , }
		- SUCC   = { }

42 :	"v"
		- NEIGH  = { c , / , - , v , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , lam , lp , c , sin , * , x , xy , }
		- SUCC   = { }

42 :	"/"
		- NEIGH  = { c , / , - , v , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , lam , lp , c , sin , * , x , xy , }
		- SUCC   = { }

42 :	"c"
		- NEIGH  = { c , / , - , v , y , xy , }
		- PARENT = { - , sin_phi , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , lam , lp , c , sin , * , x , xy , }
		- SUCC   = { }

44 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi , < , fabs , if , }
		- SUCC   = { }

44 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi , < , fabs , if , }
		- SUCC   = { }

48 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"lagrng_s_inverse"
		- NEIGH  = { lagrng_s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

49 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

49 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

50 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

50 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

50 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

50 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

50 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

50 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

50 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

50 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

50 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

50 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { y2p , x2 , y2m , c , }

51 :	"c"
		- NEIGH  = { y2p , x2 , y2m , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , - , y , xy , fabs , if , }

51 :	"x2"
		- NEIGH  = { y2p , x2 , y2m , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , - , y , xy , fabs , if , }

51 :	"y2p"
		- NEIGH  = { y2p , x2 , y2m , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , - , y , xy , fabs , if , }

51 :	"y2m"
		- NEIGH  = { y2p , x2 , y2m , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , - , y , xy , fabs , if , }

53 :	"if"
		- NEIGH  = { < , - , y , xy , fabs , if , }
		- PARENT = { }
		- CHILD  = { w , / , atan , lam , if , c , y2p , + , x , lp , hw , atan2 , a2 , y , Q , xy , - , y2m , < , * , fabs , M_HALFPI , phi , pow , x2 , }
		- PRED   = { y2p , x2 , y2m , c , }
		- SUCC   = { lp , return , }

53 :	"fabs"
		- NEIGH  = { < , - , y , xy , fabs , if , }
		- PARENT = { }
		- CHILD  = { w , / , atan , lam , if , c , y2p , + , x , lp , hw , atan2 , a2 , y , Q , xy , - , y2m , < , * , fabs , M_HALFPI , phi , pow , x2 , }
		- PRED   = { y2p , x2 , y2m , c , }
		- SUCC   = { lp , return , }

53 :	"fabs"
		- NEIGH  = { < , - , y , xy , fabs , if , }
		- PARENT = { }
		- CHILD  = { w , / , atan , lam , if , c , y2p , + , x , lp , hw , atan2 , a2 , y , Q , xy , - , y2m , < , * , fabs , M_HALFPI , phi , pow , x2 , }
		- PRED   = { y2p , x2 , y2m , c , }
		- SUCC   = { lp , return , }

53 :	"xy"
		- NEIGH  = { < , - , y , xy , fabs , if , }
		- PARENT = { }
		- CHILD  = { w , / , atan , lam , if , c , y2p , + , x , lp , hw , atan2 , a2 , y , Q , xy , - , y2m , < , * , fabs , M_HALFPI , phi , pow , x2 , }
		- PRED   = { y2p , x2 , y2m , c , }
		- SUCC   = { lp , return , }

53 :	"y"
		- NEIGH  = { < , - , y , xy , fabs , if , }
		- PARENT = { }
		- CHILD  = { w , / , atan , lam , if , c , y2p , + , x , lp , hw , atan2 , a2 , y , Q , xy , - , y2m , < , * , fabs , M_HALFPI , phi , pow , x2 , }
		- PRED   = { y2p , x2 , y2m , c , }
		- SUCC   = { lp , return , }

53 :	"-"
		- NEIGH  = { < , - , y , xy , fabs , if , }
		- PARENT = { }
		- CHILD  = { w , / , atan , lam , if , c , y2p , + , x , lp , hw , atan2 , a2 , y , Q , xy , - , y2m , < , * , fabs , M_HALFPI , phi , pow , x2 , }
		- PRED   = { y2p , x2 , y2m , c , }
		- SUCC   = { lp , return , }

53 :	"<"
		- NEIGH  = { < , - , y , xy , fabs , if , }
		- PARENT = { }
		- CHILD  = { w , / , atan , lam , if , c , y2p , + , x , lp , hw , atan2 , a2 , y , Q , xy , - , y2m , < , * , fabs , M_HALFPI , phi , pow , x2 , }
		- PRED   = { y2p , x2 , y2m , c , }
		- SUCC   = { lp , return , }

54 :	"lp"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

54 :	"phi"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

54 :	"xy"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

54 :	"y"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

54 :	"<"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

54 :	"-"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

54 :	"M_HALFPI"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

54 :	"M_HALFPI"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

55 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , < , y , M_HALFPI , xy , phi , lp , }
		- SUCC   = { }

55 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , < , y , M_HALFPI , xy , phi , lp , }
		- SUCC   = { }

57 :	"x2"
		- NEIGH  = { * , x , xy , x2 , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , y , xy , y2p , }

57 :	"xy"
		- NEIGH  = { * , x , xy , x2 , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , y , xy , y2p , }

57 :	"x"
		- NEIGH  = { * , x , xy , x2 , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , y , xy , y2p , }

57 :	"*"
		- NEIGH  = { * , x , xy , x2 , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , y , xy , y2p , }

57 :	"xy"
		- NEIGH  = { * , x , xy , x2 , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , y , xy , y2p , }

57 :	"x"
		- NEIGH  = { * , x , xy , x2 , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , y , xy , y2p , }

58 :	"y2p"
		- NEIGH  = { + , y , xy , y2p , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , x , xy , x2 , }
		- SUCC   = { y , xy , - , y2m , }

58 :	"+"
		- NEIGH  = { + , y , xy , y2p , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , x , xy , x2 , }
		- SUCC   = { y , xy , - , y2m , }

58 :	"xy"
		- NEIGH  = { + , y , xy , y2p , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , x , xy , x2 , }
		- SUCC   = { y , xy , - , y2m , }

58 :	"y"
		- NEIGH  = { + , y , xy , y2p , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , x , xy , x2 , }
		- SUCC   = { y , xy , - , y2m , }

59 :	"y2m"
		- NEIGH  = { y , xy , - , y2m , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , y , xy , y2p , }
		- SUCC   = { x2 , - , * , y2p , y2m , c , }

59 :	"-"
		- NEIGH  = { y , xy , - , y2m , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , y , xy , y2p , }
		- SUCC   = { x2 , - , * , y2p , y2m , c , }

59 :	"xy"
		- NEIGH  = { y , xy , - , y2m , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , y , xy , y2p , }
		- SUCC   = { x2 , - , * , y2p , y2m , c , }

59 :	"y"
		- NEIGH  = { y , xy , - , y2m , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , y , xy , y2p , }
		- SUCC   = { x2 , - , * , y2p , y2m , c , }

60 :	"c"
		- NEIGH  = { x2 , - , * , y2p , y2m , c , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { y , xy , - , y2m , }
		- SUCC   = { < , c , fabs , if , }

60 :	"y2p"
		- NEIGH  = { x2 , - , * , y2p , y2m , c , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { y , xy , - , y2m , }
		- SUCC   = { < , c , fabs , if , }

60 :	"*"
		- NEIGH  = { x2 , - , * , y2p , y2m , c , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { y , xy , - , y2m , }
		- SUCC   = { < , c , fabs , if , }

60 :	"y2m"
		- NEIGH  = { x2 , - , * , y2p , y2m , c , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { y , xy , - , y2m , }
		- SUCC   = { < , c , fabs , if , }

60 :	"-"
		- NEIGH  = { x2 , - , * , y2p , y2m , c , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { y , xy , - , y2m , }
		- SUCC   = { < , c , fabs , if , }

60 :	"x2"
		- NEIGH  = { x2 , - , * , y2p , y2m , c , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { y , xy , - , y2m , }
		- SUCC   = { < , c , fabs , if , }

61 :	"if"
		- NEIGH  = { < , c , fabs , if , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { x2 , - , * , y2p , y2m , c , }
		- SUCC   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }

61 :	"fabs"
		- NEIGH  = { < , c , fabs , if , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { x2 , - , * , y2p , y2m , c , }
		- SUCC   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }

61 :	"c"
		- NEIGH  = { < , c , fabs , if , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { x2 , - , * , y2p , y2m , c , }
		- SUCC   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }

61 :	"<"
		- NEIGH  = { < , c , fabs , if , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { x2 , - , * , y2p , y2m , c , }
		- SUCC   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }

62 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { < , c , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

62 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { < , c , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

62 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { < , c , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

63 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { < , c , fabs , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

63 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { < , c , fabs , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

65 :	"lp"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"phi"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"*"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"atan"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"pow"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"y2p"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"*"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"y2p"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"+"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"x2"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"/"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"Q"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"a2"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"*"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"y2m"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"*"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"y2m"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"+"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"x2"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"Q"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"hw"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"-"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

65 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { < , c , fabs , if , }
		- SUCC   = { c , x , xy , atan2 , Q , * , lam , w , lp , }

66 :	"lp"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

66 :	"lam"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

66 :	"Q"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

66 :	"w"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

66 :	"*"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

66 :	"atan2"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

66 :	"*"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

66 :	"xy"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

66 :	"x"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

66 :	"c"
		- NEIGH  = { c , x , xy , atan2 , Q , * , lam , w , lp , }
		- PARENT = { < , - , y , xy , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y2m , - , hw , a2 , x2 , pow , Q , + , y2p , lp , atan , * , / , phi , }
		- SUCC   = { }

68 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , }
		- SUCC   = { }

68 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , }
		- SUCC   = { }

72 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"lagrng"
		- NEIGH  = { lagrng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"sin_phi1"
		- NEIGH  = { sin_phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , calloc , < , Q , static_cast , * , pj_opaque , }

74 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

74 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

74 :	"Q"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

74 :	"static_cast"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

74 :	"<"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

74 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

74 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

74 :	">"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

74 :	"calloc"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

74 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin_phi1 , }
		- SUCC   = { Q , == , if , }

75 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

75 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

75 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

76 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

77 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

77 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

79 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , Q , ctx , w , P , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { <= , w , Q , if , }

79 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , Q , ctx , w , P , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { <= , w , Q , if , }

79 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , Q , ctx , w , P , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { <= , w , Q , if , }

79 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , Q , ctx , w , P , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { <= , w , Q , if , }

79 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , Q , ctx , w , P , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { <= , w , Q , if , }

79 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , Q , ctx , w , P , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { <= , w , Q , if , }

79 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { f , params , pj_param , Q , ctx , w , P , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { <= , w , Q , if , }

80 :	"Q"
		- NEIGH  = { f , params , pj_param , Q , ctx , w , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"w"
		- NEIGH  = { f , params , pj_param , Q , ctx , w , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"pj_param"
		- NEIGH  = { f , params , pj_param , Q , ctx , w , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"P"
		- NEIGH  = { f , params , pj_param , Q , ctx , w , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"ctx"
		- NEIGH  = { f , params , pj_param , Q , ctx , w , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"P"
		- NEIGH  = { f , params , pj_param , Q , ctx , w , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"params"
		- NEIGH  = { f , params , pj_param , Q , ctx , w , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"f"
		- NEIGH  = { f , params , pj_param , Q , ctx , w , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"Q"
		- NEIGH  = { w , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"w"
		- NEIGH  = { w , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

83 :	"if"
		- NEIGH  = { <= , w , Q , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { w , * , hw , Q , }

83 :	"Q"
		- NEIGH  = { <= , w , Q , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { w , * , hw , Q , }

83 :	"w"
		- NEIGH  = { <= , w , Q , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { w , * , hw , Q , }

83 :	"<="
		- NEIGH  = { <= , w , Q , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { w , * , hw , Q , }

85 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , w , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

85 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , w , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

85 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , w , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

86 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , w , Q , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

86 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , w , Q , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

86 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , w , Q , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

86 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , w , Q , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

88 :	"Q"
		- NEIGH  = { w , * , hw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , w , Q , if , }
		- SUCC   = { w , rw , / , Q , }

88 :	"hw"
		- NEIGH  = { w , * , hw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , w , Q , if , }
		- SUCC   = { w , rw , / , Q , }

88 :	"*"
		- NEIGH  = { w , * , hw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , w , Q , if , }
		- SUCC   = { w , rw , / , Q , }

88 :	"Q"
		- NEIGH  = { w , * , hw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , w , Q , if , }
		- SUCC   = { w , rw , / , Q , }

88 :	"w"
		- NEIGH  = { w , * , hw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , w , Q , if , }
		- SUCC   = { w , rw , / , Q , }

89 :	"Q"
		- NEIGH  = { w , rw , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , * , hw , Q , }
		- SUCC   = { rw , * , hrw , Q , }

89 :	"rw"
		- NEIGH  = { w , rw , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , * , hw , Q , }
		- SUCC   = { rw , * , hrw , Q , }

89 :	"/"
		- NEIGH  = { w , rw , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , * , hw , Q , }
		- SUCC   = { rw , * , hrw , Q , }

89 :	"Q"
		- NEIGH  = { w , rw , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , * , hw , Q , }
		- SUCC   = { rw , * , hrw , Q , }

89 :	"w"
		- NEIGH  = { w , rw , / , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , * , hw , Q , }
		- SUCC   = { rw , * , hrw , Q , }

90 :	"Q"
		- NEIGH  = { rw , * , hrw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , rw , / , Q , }
		- SUCC   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }

90 :	"hrw"
		- NEIGH  = { rw , * , hrw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , rw , / , Q , }
		- SUCC   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }

90 :	"*"
		- NEIGH  = { rw , * , hrw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , rw , / , Q , }
		- SUCC   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }

90 :	"Q"
		- NEIGH  = { rw , * , hrw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , rw , / , Q , }
		- SUCC   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }

90 :	"rw"
		- NEIGH  = { rw , * , hrw , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { w , rw , / , Q , }
		- SUCC   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }

91 :	"sin_phi1"
		- NEIGH  = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rw , * , hrw , Q , }
		- SUCC   = { - , sin_phi1 , < , fabs , if , }

91 :	"sin"
		- NEIGH  = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rw , * , hrw , Q , }
		- SUCC   = { - , sin_phi1 , < , fabs , if , }

91 :	"pj_param"
		- NEIGH  = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rw , * , hrw , Q , }
		- SUCC   = { - , sin_phi1 , < , fabs , if , }

91 :	"P"
		- NEIGH  = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rw , * , hrw , Q , }
		- SUCC   = { - , sin_phi1 , < , fabs , if , }

91 :	"ctx"
		- NEIGH  = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rw , * , hrw , Q , }
		- SUCC   = { - , sin_phi1 , < , fabs , if , }

91 :	"P"
		- NEIGH  = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rw , * , hrw , Q , }
		- SUCC   = { - , sin_phi1 , < , fabs , if , }

91 :	"params"
		- NEIGH  = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rw , * , hrw , Q , }
		- SUCC   = { - , sin_phi1 , < , fabs , if , }

91 :	"f"
		- NEIGH  = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rw , * , hrw , Q , }
		- SUCC   = { - , sin_phi1 , < , fabs , if , }

92 :	"if"
		- NEIGH  = { - , sin_phi1 , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- SUCC   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }

92 :	"fabs"
		- NEIGH  = { - , sin_phi1 , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- SUCC   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }

92 :	"fabs"
		- NEIGH  = { - , sin_phi1 , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- SUCC   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }

92 :	"sin_phi1"
		- NEIGH  = { - , sin_phi1 , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- SUCC   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }

92 :	"-"
		- NEIGH  = { - , sin_phi1 , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- SUCC   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }

92 :	"<"
		- NEIGH  = { - , sin_phi1 , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { params , ctx , pj_param , f , sin , P , sin_phi1 , }
		- SUCC   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }

94 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { - , sin_phi1 , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

94 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { - , sin_phi1 , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

94 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { - , sin_phi1 , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

95 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , sin_phi1 , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

95 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , sin_phi1 , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

95 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , sin_phi1 , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

95 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , sin_phi1 , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

98 :	"Q"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

98 :	"a1"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

98 :	"pow"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

98 :	"-"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

98 :	"sin_phi1"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

98 :	"/"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

98 :	"+"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

98 :	"sin_phi1"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

98 :	"Q"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

98 :	"hrw"
		- NEIGH  = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , sin_phi1 , < , fabs , if , }
		- SUCC   = { * , a1 , a2 , Q , }

99 :	"Q"
		- NEIGH  = { * , a1 , a2 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- SUCC   = { es , P , }

99 :	"a2"
		- NEIGH  = { * , a1 , a2 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- SUCC   = { es , P , }

99 :	"Q"
		- NEIGH  = { * , a1 , a2 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- SUCC   = { es , P , }

99 :	"a1"
		- NEIGH  = { * , a1 , a2 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- SUCC   = { es , P , }

99 :	"*"
		- NEIGH  = { * , a1 , a2 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- SUCC   = { es , P , }

99 :	"Q"
		- NEIGH  = { * , a1 , a2 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- SUCC   = { es , P , }

99 :	"a1"
		- NEIGH  = { * , a1 , a2 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , / , pow , - , a1 , hrw , sin_phi1 , Q , }
		- SUCC   = { es , P , }

101 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , a1 , a2 , Q , }
		- SUCC   = { inv , lagrng_s_inverse , P , }

101 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , a1 , a2 , Q , }
		- SUCC   = { inv , lagrng_s_inverse , P , }

102 :	"P"
		- NEIGH  = { inv , lagrng_s_inverse , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { fwd , lagrng_s_forward , P , }

102 :	"inv"
		- NEIGH  = { inv , lagrng_s_inverse , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { fwd , lagrng_s_forward , P , }

102 :	"lagrng_s_inverse"
		- NEIGH  = { inv , lagrng_s_inverse , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { fwd , lagrng_s_forward , P , }

103 :	"P"
		- NEIGH  = { fwd , lagrng_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , lagrng_s_inverse , P , }
		- SUCC   = { P , return , }

103 :	"fwd"
		- NEIGH  = { fwd , lagrng_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , lagrng_s_inverse , P , }
		- SUCC   = { P , return , }

103 :	"lagrng_s_forward"
		- NEIGH  = { fwd , lagrng_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { inv , lagrng_s_inverse , P , }
		- SUCC   = { P , return , }

105 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , lagrng_s_forward , P , }
		- SUCC   = { }

105 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , lagrng_s_forward , P , }
		- SUCC   = { }

