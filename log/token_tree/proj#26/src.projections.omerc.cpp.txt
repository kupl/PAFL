32 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"omerc"
		- NEIGH  = { omerc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"A"
		- NEIGH  = { A , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"B"
		- NEIGH  = { B , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"E"
		- NEIGH  = { E , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"AB"
		- NEIGH  = { AB , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"ArB"
		- NEIGH  = { ArB , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"BrA"
		- NEIGH  = { BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"rB"
		- NEIGH  = { rB , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"singam"
		- NEIGH  = { singam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"cosgam"
		- NEIGH  = { cosgam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"sinrot"
		- NEIGH  = { sinrot , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"cosrot"
		- NEIGH  = { cosrot , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"v_pole_n"
		- NEIGH  = { v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"v_pole_s"
		- NEIGH  = { v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"u_0"
		- NEIGH  = { u_0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"no_rot"
		- NEIGH  = { no_rot , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"omerc_e_forward"
		- NEIGH  = { omerc_e_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

49 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

49 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

50 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

50 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

50 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

50 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

50 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

50 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

50 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

50 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

50 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

50 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { v , u , }

51 :	"u"
		- NEIGH  = { v , u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { M_HALFPI , - , > , phi , lp , fabs , if , }

51 :	"v"
		- NEIGH  = { v , u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { M_HALFPI , - , > , phi , lp , fabs , if , }

53 :	"if"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { u , v_pole_s , v_pole_n , temp , v , < , fabs , cos , ArB , U , log , B , + , Q , - , cosgam , one_div_W , pow , P , singam , * , e , sin , S , pj_tsfn , phi , / , if , lam , lp , E , > , V , T , W , }
		- PRED   = { v , u , }
		- SUCC   = { no_rot , Q , if , }

53 :	"fabs"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { u , v_pole_s , v_pole_n , temp , v , < , fabs , cos , ArB , U , log , B , + , Q , - , cosgam , one_div_W , pow , P , singam , * , e , sin , S , pj_tsfn , phi , / , if , lam , lp , E , > , V , T , W , }
		- PRED   = { v , u , }
		- SUCC   = { no_rot , Q , if , }

53 :	"fabs"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { u , v_pole_s , v_pole_n , temp , v , < , fabs , cos , ArB , U , log , B , + , Q , - , cosgam , one_div_W , pow , P , singam , * , e , sin , S , pj_tsfn , phi , / , if , lam , lp , E , > , V , T , W , }
		- PRED   = { v , u , }
		- SUCC   = { no_rot , Q , if , }

53 :	"lp"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { u , v_pole_s , v_pole_n , temp , v , < , fabs , cos , ArB , U , log , B , + , Q , - , cosgam , one_div_W , pow , P , singam , * , e , sin , S , pj_tsfn , phi , / , if , lam , lp , E , > , V , T , W , }
		- PRED   = { v , u , }
		- SUCC   = { no_rot , Q , if , }

53 :	"phi"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { u , v_pole_s , v_pole_n , temp , v , < , fabs , cos , ArB , U , log , B , + , Q , - , cosgam , one_div_W , pow , P , singam , * , e , sin , S , pj_tsfn , phi , / , if , lam , lp , E , > , V , T , W , }
		- PRED   = { v , u , }
		- SUCC   = { no_rot , Q , if , }

53 :	"-"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { u , v_pole_s , v_pole_n , temp , v , < , fabs , cos , ArB , U , log , B , + , Q , - , cosgam , one_div_W , pow , P , singam , * , e , sin , S , pj_tsfn , phi , / , if , lam , lp , E , > , V , T , W , }
		- PRED   = { v , u , }
		- SUCC   = { no_rot , Q , if , }

53 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { u , v_pole_s , v_pole_n , temp , v , < , fabs , cos , ArB , U , log , B , + , Q , - , cosgam , one_div_W , pow , P , singam , * , e , sin , S , pj_tsfn , phi , / , if , lam , lp , E , > , V , T , W , }
		- PRED   = { v , u , }
		- SUCC   = { no_rot , Q , if , }

53 :	">"
		- NEIGH  = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { u , v_pole_s , v_pole_n , temp , v , < , fabs , cos , ArB , U , log , B , + , Q , - , cosgam , one_div_W , pow , P , singam , * , e , sin , S , pj_tsfn , phi , / , if , lam , lp , E , > , V , T , W , }
		- PRED   = { v , u , }
		- SUCC   = { no_rot , Q , if , }

54 :	"W"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"Q"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"E"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"/"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"pow"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"pj_tsfn"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"lp"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"phi"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"sin"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"lp"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"phi"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"P"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"e"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"Q"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

54 :	"B"
		- NEIGH  = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { W , / , one_div_W , }

55 :	"one_div_W"
		- NEIGH  = { W , / , one_div_W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- SUCC   = { one_div_W , - , W , * , S , }

55 :	"/"
		- NEIGH  = { W , / , one_div_W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- SUCC   = { one_div_W , - , W , * , S , }

55 :	"W"
		- NEIGH  = { W , / , one_div_W , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { B , P , e , sin , pj_tsfn , phi , / , lp , E , Q , pow , W , }
		- SUCC   = { one_div_W , - , W , * , S , }

56 :	"S"
		- NEIGH  = { one_div_W , - , W , * , S , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { W , / , one_div_W , }
		- SUCC   = { + , W , * , one_div_W , T , }

56 :	"*"
		- NEIGH  = { one_div_W , - , W , * , S , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { W , / , one_div_W , }
		- SUCC   = { + , W , * , one_div_W , T , }

56 :	"W"
		- NEIGH  = { one_div_W , - , W , * , S , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { W , / , one_div_W , }
		- SUCC   = { + , W , * , one_div_W , T , }

56 :	"-"
		- NEIGH  = { one_div_W , - , W , * , S , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { W , / , one_div_W , }
		- SUCC   = { + , W , * , one_div_W , T , }

56 :	"one_div_W"
		- NEIGH  = { one_div_W , - , W , * , S , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { W , / , one_div_W , }
		- SUCC   = { + , W , * , one_div_W , T , }

57 :	"T"
		- NEIGH  = { + , W , * , one_div_W , T , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_div_W , - , W , * , S , }
		- SUCC   = { lam , lp , * , B , Q , sin , V , }

57 :	"*"
		- NEIGH  = { + , W , * , one_div_W , T , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_div_W , - , W , * , S , }
		- SUCC   = { lam , lp , * , B , Q , sin , V , }

57 :	"W"
		- NEIGH  = { + , W , * , one_div_W , T , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_div_W , - , W , * , S , }
		- SUCC   = { lam , lp , * , B , Q , sin , V , }

57 :	"+"
		- NEIGH  = { + , W , * , one_div_W , T , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_div_W , - , W , * , S , }
		- SUCC   = { lam , lp , * , B , Q , sin , V , }

57 :	"one_div_W"
		- NEIGH  = { + , W , * , one_div_W , T , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_div_W , - , W , * , S , }
		- SUCC   = { lam , lp , * , B , Q , sin , V , }

58 :	"V"
		- NEIGH  = { lam , lp , * , B , Q , sin , V , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , W , * , one_div_W , T , }
		- SUCC   = { T , / , - , cosgam , * , singam , Q , S , V , U , }

58 :	"sin"
		- NEIGH  = { lam , lp , * , B , Q , sin , V , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , W , * , one_div_W , T , }
		- SUCC   = { T , / , - , cosgam , * , singam , Q , S , V , U , }

58 :	"Q"
		- NEIGH  = { lam , lp , * , B , Q , sin , V , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , W , * , one_div_W , T , }
		- SUCC   = { T , / , - , cosgam , * , singam , Q , S , V , U , }

58 :	"B"
		- NEIGH  = { lam , lp , * , B , Q , sin , V , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , W , * , one_div_W , T , }
		- SUCC   = { T , / , - , cosgam , * , singam , Q , S , V , U , }

58 :	"*"
		- NEIGH  = { lam , lp , * , B , Q , sin , V , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , W , * , one_div_W , T , }
		- SUCC   = { T , / , - , cosgam , * , singam , Q , S , V , U , }

58 :	"lp"
		- NEIGH  = { lam , lp , * , B , Q , sin , V , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , W , * , one_div_W , T , }
		- SUCC   = { T , / , - , cosgam , * , singam , Q , S , V , U , }

58 :	"lam"
		- NEIGH  = { lam , lp , * , B , Q , sin , V , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , W , * , one_div_W , T , }
		- SUCC   = { T , / , - , cosgam , * , singam , Q , S , V , U , }

59 :	"U"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"S"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"*"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"Q"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"singam"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"-"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"V"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"*"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"Q"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"cosgam"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"/"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

59 :	"T"
		- NEIGH  = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , * , B , Q , sin , V , }
		- SUCC   = { - , U , < , fabs , if , }

60 :	"if"
		- NEIGH  = { - , U , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- SUCC   = { + , U , - , Q , ArB , / , log , * , v , }

60 :	"fabs"
		- NEIGH  = { - , U , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- SUCC   = { + , U , - , Q , ArB , / , log , * , v , }

60 :	"fabs"
		- NEIGH  = { - , U , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- SUCC   = { + , U , - , Q , ArB , / , log , * , v , }

60 :	"U"
		- NEIGH  = { - , U , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- SUCC   = { + , U , - , Q , ArB , / , log , * , v , }

60 :	"-"
		- NEIGH  = { - , U , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- SUCC   = { + , U , - , Q , ArB , / , log , * , v , }

60 :	"<"
		- NEIGH  = { - , U , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { T , / , - , cosgam , * , singam , Q , S , V , U , }
		- SUCC   = { + , U , - , Q , ArB , / , log , * , v , }

61 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { - , U , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

61 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { - , U , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

61 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { - , U , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

62 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { - , U , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

62 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { - , U , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

64 :	"v"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"*"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"Q"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"ArB"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"*"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"log"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"-"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"U"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"/"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"+"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

64 :	"U"
		- NEIGH  = { + , U , - , Q , ArB , / , log , * , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { - , U , < , fabs , if , }
		- SUCC   = { lam , * , B , cos , Q , lp , temp , }

65 :	"temp"
		- NEIGH  = { lam , * , B , cos , Q , lp , temp , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , U , - , Q , ArB , / , log , * , v , }
		- SUCC   = { temp , < , fabs , if , }

65 :	"cos"
		- NEIGH  = { lam , * , B , cos , Q , lp , temp , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , U , - , Q , ArB , / , log , * , v , }
		- SUCC   = { temp , < , fabs , if , }

65 :	"Q"
		- NEIGH  = { lam , * , B , cos , Q , lp , temp , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , U , - , Q , ArB , / , log , * , v , }
		- SUCC   = { temp , < , fabs , if , }

65 :	"B"
		- NEIGH  = { lam , * , B , cos , Q , lp , temp , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , U , - , Q , ArB , / , log , * , v , }
		- SUCC   = { temp , < , fabs , if , }

65 :	"*"
		- NEIGH  = { lam , * , B , cos , Q , lp , temp , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , U , - , Q , ArB , / , log , * , v , }
		- SUCC   = { temp , < , fabs , if , }

65 :	"lp"
		- NEIGH  = { lam , * , B , cos , Q , lp , temp , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , U , - , Q , ArB , / , log , * , v , }
		- SUCC   = { temp , < , fabs , if , }

65 :	"lam"
		- NEIGH  = { lam , * , B , cos , Q , lp , temp , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , U , - , Q , ArB , / , log , * , v , }
		- SUCC   = { temp , < , fabs , if , }

66 :	"if"
		- NEIGH  = { temp , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { + , S , V , atan2 , lp , lam , cosgam , singam , * , ArB , temp , A , Q , u , }
		- PRED   = { lam , * , B , cos , Q , lp , temp , }
		- SUCC   = { }

66 :	"fabs"
		- NEIGH  = { temp , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { + , S , V , atan2 , lp , lam , cosgam , singam , * , ArB , temp , A , Q , u , }
		- PRED   = { lam , * , B , cos , Q , lp , temp , }
		- SUCC   = { }

66 :	"temp"
		- NEIGH  = { temp , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { + , S , V , atan2 , lp , lam , cosgam , singam , * , ArB , temp , A , Q , u , }
		- PRED   = { lam , * , B , cos , Q , lp , temp , }
		- SUCC   = { }

66 :	"<"
		- NEIGH  = { temp , < , fabs , if , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { + , S , V , atan2 , lp , lam , cosgam , singam , * , ArB , temp , A , Q , u , }
		- PRED   = { lam , * , B , cos , Q , lp , temp , }
		- SUCC   = { }

67 :	"u"
		- NEIGH  = { lam , * , A , Q , lp , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"Q"
		- NEIGH  = { lam , * , A , Q , lp , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"A"
		- NEIGH  = { lam , * , A , Q , lp , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"*"
		- NEIGH  = { lam , * , A , Q , lp , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"lp"
		- NEIGH  = { lam , * , A , Q , lp , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"lam"
		- NEIGH  = { lam , * , A , Q , lp , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"u"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"Q"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"ArB"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"*"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"atan2"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"S"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"*"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"Q"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"cosgam"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"+"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"V"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"*"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"Q"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"singam"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"temp"
		- NEIGH  = { temp , V , + , S , singam , cosgam , * , ArB , Q , atan2 , u , }
		- PARENT = { temp , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"v"
		- NEIGH  = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , * , ArB , Q , lp , u , }

72 :	"lp"
		- NEIGH  = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , * , ArB , Q , lp , u , }

72 :	"phi"
		- NEIGH  = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , * , ArB , Q , lp , u , }

72 :	">"
		- NEIGH  = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , * , ArB , Q , lp , u , }

72 :	"Q"
		- NEIGH  = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , * , ArB , Q , lp , u , }

72 :	"v_pole_n"
		- NEIGH  = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , * , ArB , Q , lp , u , }

72 :	"Q"
		- NEIGH  = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , * , ArB , Q , lp , u , }

72 :	"v_pole_s"
		- NEIGH  = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , * , ArB , Q , lp , u , }

73 :	"u"
		- NEIGH  = { phi , * , ArB , Q , lp , u , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- SUCC   = { }

73 :	"Q"
		- NEIGH  = { phi , * , ArB , Q , lp , u , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- SUCC   = { }

73 :	"ArB"
		- NEIGH  = { phi , * , ArB , Q , lp , u , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- SUCC   = { }

73 :	"*"
		- NEIGH  = { phi , * , ArB , Q , lp , u , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- SUCC   = { }

73 :	"lp"
		- NEIGH  = { phi , * , ArB , Q , lp , u , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- SUCC   = { }

73 :	"phi"
		- NEIGH  = { phi , * , ArB , Q , lp , u , }
		- PARENT = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { v_pole_s , v_pole_n , Q , > , phi , lp , v , }
		- SUCC   = { }

75 :	"if"
		- NEIGH  = { no_rot , Q , if , }
		- PARENT = { }
		- CHILD  = { u_0 , Q , + , -= , u , sinrot , v , cosrot , * , - , y , x , xy , }
		- PRED   = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- SUCC   = { xy , return , }

75 :	"Q"
		- NEIGH  = { no_rot , Q , if , }
		- PARENT = { }
		- CHILD  = { u_0 , Q , + , -= , u , sinrot , v , cosrot , * , - , y , x , xy , }
		- PRED   = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- SUCC   = { xy , return , }

75 :	"no_rot"
		- NEIGH  = { no_rot , Q , if , }
		- PARENT = { }
		- CHILD  = { u_0 , Q , + , -= , u , sinrot , v , cosrot , * , - , y , x , xy , }
		- PRED   = { M_HALFPI , - , > , phi , lp , fabs , if , }
		- SUCC   = { xy , return , }

76 :	"xy"
		- NEIGH  = { u , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { v , y , xy , }

76 :	"x"
		- NEIGH  = { u , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { v , y , xy , }

76 :	"u"
		- NEIGH  = { u , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { v , y , xy , }

77 :	"xy"
		- NEIGH  = { v , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , x , xy , }
		- SUCC   = { }

77 :	"y"
		- NEIGH  = { v , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , x , xy , }
		- SUCC   = { }

77 :	"v"
		- NEIGH  = { v , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , x , xy , }
		- SUCC   = { }

79 :	"u"
		- NEIGH  = { u_0 , Q , -= , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }

79 :	"-="
		- NEIGH  = { u_0 , Q , -= , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }

79 :	"Q"
		- NEIGH  = { u_0 , Q , -= , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }

79 :	"u_0"
		- NEIGH  = { u_0 , Q , -= , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }

80 :	"xy"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"x"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"v"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"*"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"Q"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"cosrot"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"+"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"u"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"*"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"Q"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

80 :	"sinrot"
		- NEIGH  = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u_0 , Q , -= , u , }
		- SUCC   = { sinrot , v , - , Q , u , cosrot , * , y , xy , }

81 :	"xy"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"y"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"u"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"*"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"Q"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"cosrot"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"-"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"v"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"*"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"Q"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

81 :	"sinrot"
		- NEIGH  = { sinrot , v , - , Q , u , cosrot , * , y , xy , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { u , sinrot , + , Q , cosrot , * , v , x , xy , }
		- SUCC   = { }

83 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_rot , Q , if , }
		- SUCC   = { }

83 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_rot , Q , if , }
		- SUCC   = { }

87 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"omerc_e_inverse"
		- NEIGH  = { omerc_e_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

88 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

88 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

89 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

89 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

89 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

89 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

89 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

89 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

89 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

89 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

89 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

89 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { Up , Vp , u , Sp , v , Tp , Qp , }

90 :	"u"
		- NEIGH  = { Up , Vp , u , Sp , v , Tp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { no_rot , Q , if , }

90 :	"v"
		- NEIGH  = { Up , Vp , u , Sp , v , Tp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { no_rot , Q , if , }

90 :	"Qp"
		- NEIGH  = { Up , Vp , u , Sp , v , Tp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { no_rot , Q , if , }

90 :	"Sp"
		- NEIGH  = { Up , Vp , u , Sp , v , Tp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { no_rot , Q , if , }

90 :	"Tp"
		- NEIGH  = { Up , Vp , u , Sp , v , Tp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { no_rot , Q , if , }

90 :	"Vp"
		- NEIGH  = { Up , Vp , u , Sp , v , Tp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { no_rot , Q , if , }

90 :	"Up"
		- NEIGH  = { Up , Vp , u , Sp , v , Tp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { no_rot , Q , if , }

92 :	"if"
		- NEIGH  = { no_rot , Q , if , }
		- PARENT = { }
		- CHILD  = { u_0 , + , v , sinrot , y , - , Q , u , x , cosrot , * , xy , }
		- PRED   = { Up , Vp , u , Sp , v , Tp , Qp , }
		- SUCC   = { v , * , - , BrA , Q , exp , Qp , }

92 :	"Q"
		- NEIGH  = { no_rot , Q , if , }
		- PARENT = { }
		- CHILD  = { u_0 , + , v , sinrot , y , - , Q , u , x , cosrot , * , xy , }
		- PRED   = { Up , Vp , u , Sp , v , Tp , Qp , }
		- SUCC   = { v , * , - , BrA , Q , exp , Qp , }

92 :	"no_rot"
		- NEIGH  = { no_rot , Q , if , }
		- PARENT = { }
		- CHILD  = { u_0 , + , v , sinrot , y , - , Q , u , x , cosrot , * , xy , }
		- PRED   = { Up , Vp , u , Sp , v , Tp , Qp , }
		- SUCC   = { v , * , - , BrA , Q , exp , Qp , }

93 :	"v"
		- NEIGH  = { y , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , xy , u , }

93 :	"xy"
		- NEIGH  = { y , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , xy , u , }

93 :	"y"
		- NEIGH  = { y , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , xy , u , }

94 :	"u"
		- NEIGH  = { x , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { y , xy , v , }
		- SUCC   = { }

94 :	"xy"
		- NEIGH  = { x , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { y , xy , v , }
		- SUCC   = { }

94 :	"x"
		- NEIGH  = { x , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { y , xy , v , }
		- SUCC   = { }

96 :	"v"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"xy"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"x"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"*"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"Q"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"cosrot"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"-"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"xy"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"y"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"*"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"Q"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

96 :	"sinrot"
		- NEIGH  = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }

97 :	"u"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"xy"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"y"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"*"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"Q"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"cosrot"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"+"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"xy"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"x"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"*"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"Q"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"sinrot"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"+"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"Q"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

97 :	"u_0"
		- NEIGH  = { u_0 , x , sinrot , + , Q , cosrot , * , y , xy , u , }
		- PARENT = { no_rot , Q , if , }
		- CHILD  = { }
		- PRED   = { sinrot , - , Q , y , cosrot , * , x , xy , v , }
		- SUCC   = { }

99 :	"Qp"
		- NEIGH  = { v , * , - , BrA , Q , exp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_rot , Q , if , }
		- SUCC   = { == , Qp , if , }

99 :	"exp"
		- NEIGH  = { v , * , - , BrA , Q , exp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_rot , Q , if , }
		- SUCC   = { == , Qp , if , }

99 :	"-"
		- NEIGH  = { v , * , - , BrA , Q , exp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_rot , Q , if , }
		- SUCC   = { == , Qp , if , }

99 :	"Q"
		- NEIGH  = { v , * , - , BrA , Q , exp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_rot , Q , if , }
		- SUCC   = { == , Qp , if , }

99 :	"BrA"
		- NEIGH  = { v , * , - , BrA , Q , exp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_rot , Q , if , }
		- SUCC   = { == , Qp , if , }

99 :	"*"
		- NEIGH  = { v , * , - , BrA , Q , exp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_rot , Q , if , }
		- SUCC   = { == , Qp , if , }

99 :	"v"
		- NEIGH  = { v , * , - , BrA , Q , exp , Qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_rot , Q , if , }
		- SUCC   = { == , Qp , if , }

100 :	"if"
		- NEIGH  = { == , Qp , if , }
		- PARENT = { }
		- CHILD  = { lp , proj_coord_error , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { v , * , - , BrA , Q , exp , Qp , }
		- SUCC   = { - , Qp , * , / , Sp , }

100 :	"Qp"
		- NEIGH  = { == , Qp , if , }
		- PARENT = { }
		- CHILD  = { lp , proj_coord_error , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { v , * , - , BrA , Q , exp , Qp , }
		- SUCC   = { - , Qp , * , / , Sp , }

100 :	"=="
		- NEIGH  = { == , Qp , if , }
		- PARENT = { }
		- CHILD  = { lp , proj_coord_error , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { v , * , - , BrA , Q , exp , Qp , }
		- SUCC   = { - , Qp , * , / , Sp , }

101 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { == , Qp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , proj_coord_error , return , }

101 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { == , Qp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , proj_coord_error , return , }

101 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { == , Qp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , proj_coord_error , return , }

102 :	"return"
		- NEIGH  = { lp , proj_coord_error , return , }
		- PARENT = { == , Qp , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

102 :	"proj_coord_error"
		- NEIGH  = { lp , proj_coord_error , return , }
		- PARENT = { == , Qp , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

102 :	"lp"
		- NEIGH  = { lp , proj_coord_error , return , }
		- PARENT = { == , Qp , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

104 :	"Sp"
		- NEIGH  = { - , Qp , * , / , Sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , Qp , if , }
		- SUCC   = { / , + , * , Qp , Tp , }

104 :	"*"
		- NEIGH  = { - , Qp , * , / , Sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , Qp , if , }
		- SUCC   = { / , + , * , Qp , Tp , }

104 :	"Qp"
		- NEIGH  = { - , Qp , * , / , Sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , Qp , if , }
		- SUCC   = { / , + , * , Qp , Tp , }

104 :	"-"
		- NEIGH  = { - , Qp , * , / , Sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , Qp , if , }
		- SUCC   = { / , + , * , Qp , Tp , }

104 :	"/"
		- NEIGH  = { - , Qp , * , / , Sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , Qp , if , }
		- SUCC   = { / , + , * , Qp , Tp , }

104 :	"Qp"
		- NEIGH  = { - , Qp , * , / , Sp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , Qp , if , }
		- SUCC   = { / , + , * , Qp , Tp , }

105 :	"Tp"
		- NEIGH  = { / , + , * , Qp , Tp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , Qp , * , / , Sp , }
		- SUCC   = { * , BrA , Q , u , sin , Vp , }

105 :	"*"
		- NEIGH  = { / , + , * , Qp , Tp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , Qp , * , / , Sp , }
		- SUCC   = { * , BrA , Q , u , sin , Vp , }

105 :	"Qp"
		- NEIGH  = { / , + , * , Qp , Tp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , Qp , * , / , Sp , }
		- SUCC   = { * , BrA , Q , u , sin , Vp , }

105 :	"+"
		- NEIGH  = { / , + , * , Qp , Tp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , Qp , * , / , Sp , }
		- SUCC   = { * , BrA , Q , u , sin , Vp , }

105 :	"/"
		- NEIGH  = { / , + , * , Qp , Tp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , Qp , * , / , Sp , }
		- SUCC   = { * , BrA , Q , u , sin , Vp , }

105 :	"Qp"
		- NEIGH  = { / , + , * , Qp , Tp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , Qp , * , / , Sp , }
		- SUCC   = { * , BrA , Q , u , sin , Vp , }

106 :	"Vp"
		- NEIGH  = { * , BrA , Q , u , sin , Vp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , + , * , Qp , Tp , }
		- SUCC   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }

106 :	"sin"
		- NEIGH  = { * , BrA , Q , u , sin , Vp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , + , * , Qp , Tp , }
		- SUCC   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }

106 :	"Q"
		- NEIGH  = { * , BrA , Q , u , sin , Vp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , + , * , Qp , Tp , }
		- SUCC   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }

106 :	"BrA"
		- NEIGH  = { * , BrA , Q , u , sin , Vp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , + , * , Qp , Tp , }
		- SUCC   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }

106 :	"*"
		- NEIGH  = { * , BrA , Q , u , sin , Vp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , + , * , Qp , Tp , }
		- SUCC   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }

106 :	"u"
		- NEIGH  = { * , BrA , Q , u , sin , Vp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , + , * , Qp , Tp , }
		- SUCC   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }

107 :	"Up"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"Vp"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"*"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"Q"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"cosgam"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"+"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"Sp"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"*"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"Q"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"singam"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"/"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

107 :	"Tp"
		- NEIGH  = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , BrA , Q , u , sin , Vp , }
		- SUCC   = { - , Up , < , fabs , if , }

108 :	"if"
		- NEIGH  = { - , Up , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { BrA , cos , u , Vp , cosgam , atan2 , HUGE_VAL , rB , e , singam , pow , P , lam , if , sqrt , B , + , * , Sp , ctx , < , pj_phi2 , - , Q , M_HALFPI , lp , Up , E , / , == , phi , }
		- PRED   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- SUCC   = { lp , return , }

108 :	"fabs"
		- NEIGH  = { - , Up , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { BrA , cos , u , Vp , cosgam , atan2 , HUGE_VAL , rB , e , singam , pow , P , lam , if , sqrt , B , + , * , Sp , ctx , < , pj_phi2 , - , Q , M_HALFPI , lp , Up , E , / , == , phi , }
		- PRED   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- SUCC   = { lp , return , }

108 :	"fabs"
		- NEIGH  = { - , Up , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { BrA , cos , u , Vp , cosgam , atan2 , HUGE_VAL , rB , e , singam , pow , P , lam , if , sqrt , B , + , * , Sp , ctx , < , pj_phi2 , - , Q , M_HALFPI , lp , Up , E , / , == , phi , }
		- PRED   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- SUCC   = { lp , return , }

108 :	"Up"
		- NEIGH  = { - , Up , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { BrA , cos , u , Vp , cosgam , atan2 , HUGE_VAL , rB , e , singam , pow , P , lam , if , sqrt , B , + , * , Sp , ctx , < , pj_phi2 , - , Q , M_HALFPI , lp , Up , E , / , == , phi , }
		- PRED   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- SUCC   = { lp , return , }

108 :	"-"
		- NEIGH  = { - , Up , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { BrA , cos , u , Vp , cosgam , atan2 , HUGE_VAL , rB , e , singam , pow , P , lam , if , sqrt , B , + , * , Sp , ctx , < , pj_phi2 , - , Q , M_HALFPI , lp , Up , E , / , == , phi , }
		- PRED   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- SUCC   = { lp , return , }

108 :	"<"
		- NEIGH  = { - , Up , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { BrA , cos , u , Vp , cosgam , atan2 , HUGE_VAL , rB , e , singam , pow , P , lam , if , sqrt , B , + , * , Sp , ctx , < , pj_phi2 , - , Q , M_HALFPI , lp , Up , E , / , == , phi , }
		- PRED   = { Tp , / , Sp , + , singam , * , cosgam , Q , Vp , Up , }
		- SUCC   = { lp , return , }

109 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , < , Up , - , phi , lp , }

109 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , < , Up , - , phi , lp , }

110 :	"lp"
		- NEIGH  = { M_HALFPI , < , Up , - , phi , lp , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

110 :	"phi"
		- NEIGH  = { M_HALFPI , < , Up , - , phi , lp , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

110 :	"Up"
		- NEIGH  = { M_HALFPI , < , Up , - , phi , lp , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

110 :	"<"
		- NEIGH  = { M_HALFPI , < , Up , - , phi , lp , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

110 :	"-"
		- NEIGH  = { M_HALFPI , < , Up , - , phi , lp , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

110 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , < , Up , - , phi , lp , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

110 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , < , Up , - , phi , lp , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

112 :	"lp"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"phi"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"Q"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"E"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"/"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"sqrt"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"+"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"Up"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"/"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"-"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

112 :	"Up"
		- NEIGH  = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }

113 :	"if"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"lp"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"phi"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"pj_phi2"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"P"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"ctx"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"pow"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"lp"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"phi"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"/"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"Q"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"B"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"P"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"e"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"=="
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

113 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , lp , proj_errno_set , }
		- PRED   = { - , Up , + , phi , / , lp , E , sqrt , Q , }
		- SUCC   = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }

114 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

114 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

114 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

115 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

115 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

117 :	"lp"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"lam"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"-"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"Q"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"rB"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"*"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"atan2"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"Sp"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"*"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"Q"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"cosgam"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

117 :	"-"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

118 :	"Vp"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

118 :	"*"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

118 :	"Q"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

118 :	"singam"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

118 :	"cos"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

118 :	"Q"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

118 :	"BrA"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

118 :	"*"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

118 :	"u"
		- NEIGH  = { u , BrA , cos , Vp , Sp , * , singam , cosgam , rB , Q , lp , lam , atan2 , - , }
		- PARENT = { - , Up , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , P , e , pj_phi2 , pow , Q , B , ctx , / , == , phi , lp , if , }
		- SUCC   = { }

120 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , Up , < , fabs , if , }
		- SUCC   = { }

120 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , Up , < , fabs , if , }
		- SUCC   = { }

124 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

124 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

124 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

124 :	"omerc"
		- NEIGH  = { omerc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

125 :	"con"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"com"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"cosph0"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"D"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"F"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"H"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"L"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"sinph0"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"p"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"J"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

125 :	"gamma"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

126 :	"gamma0"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

126 :	"lamc"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

126 :	"lam1"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

126 :	"lam2"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

126 :	"phi1"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

126 :	"phi2"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

126 :	"alpha_c"
		- NEIGH  = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { no_off , gam , alp , }

127 :	"alp"
		- NEIGH  = { no_off , gam , alp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- SUCC   = { > , calloc , < , Q , static_cast , * , pj_opaque , }

127 :	"gam"
		- NEIGH  = { no_off , gam , alp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- SUCC   = { > , calloc , < , Q , static_cast , * , pj_opaque , }

127 :	"no_off"
		- NEIGH  = { no_off , gam , alp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { alpha_c , phi1 , lam2 , phi2 , gamma0 , lam1 , lamc , J , F , sinph0 , gamma , L , H , p , con , D , com , cosph0 , }
		- SUCC   = { > , calloc , < , Q , static_cast , * , pj_opaque , }

129 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

129 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

129 :	"Q"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

129 :	"static_cast"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

129 :	"<"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

129 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

129 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

129 :	">"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

129 :	"calloc"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

129 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , gam , alp , }
		- SUCC   = { Q , == , if , }

130 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

130 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

130 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

131 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

131 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

131 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

131 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

132 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { i , params , Q , ctx , pj_param , no_rot , P , }

132 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { i , params , Q , ctx , pj_param , no_rot , P , }

132 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { i , params , Q , ctx , pj_param , no_rot , P , }

134 :	"Q"
		- NEIGH  = { i , params , Q , ctx , pj_param , no_rot , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , i , params , P , pj_param , ctx , alp , if , }

134 :	"no_rot"
		- NEIGH  = { i , params , Q , ctx , pj_param , no_rot , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , i , params , P , pj_param , ctx , alp , if , }

134 :	"pj_param"
		- NEIGH  = { i , params , Q , ctx , pj_param , no_rot , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , i , params , P , pj_param , ctx , alp , if , }

134 :	"P"
		- NEIGH  = { i , params , Q , ctx , pj_param , no_rot , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , i , params , P , pj_param , ctx , alp , if , }

134 :	"ctx"
		- NEIGH  = { i , params , Q , ctx , pj_param , no_rot , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , i , params , P , pj_param , ctx , alp , if , }

134 :	"P"
		- NEIGH  = { i , params , Q , ctx , pj_param , no_rot , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , i , params , P , pj_param , ctx , alp , if , }

134 :	"params"
		- NEIGH  = { i , params , Q , ctx , pj_param , no_rot , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , i , params , P , pj_param , ctx , alp , if , }

134 :	"i"
		- NEIGH  = { i , params , Q , ctx , pj_param , no_rot , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , i , params , P , pj_param , ctx , alp , if , }

135 :	"if"
		- NEIGH  = { != , i , params , P , pj_param , ctx , alp , if , }
		- PARENT = { }
		- CHILD  = { f , ctx , P , pj_param , params , alpha_c , }
		- PRED   = { i , params , Q , ctx , pj_param , no_rot , P , }
		- SUCC   = { != , i , params , ctx , P , pj_param , gam , if , }

135 :	"alp"
		- NEIGH  = { != , i , params , P , pj_param , ctx , alp , if , }
		- PARENT = { }
		- CHILD  = { f , ctx , P , pj_param , params , alpha_c , }
		- PRED   = { i , params , Q , ctx , pj_param , no_rot , P , }
		- SUCC   = { != , i , params , ctx , P , pj_param , gam , if , }

135 :	"pj_param"
		- NEIGH  = { != , i , params , P , pj_param , ctx , alp , if , }
		- PARENT = { }
		- CHILD  = { f , ctx , P , pj_param , params , alpha_c , }
		- PRED   = { i , params , Q , ctx , pj_param , no_rot , P , }
		- SUCC   = { != , i , params , ctx , P , pj_param , gam , if , }

135 :	"P"
		- NEIGH  = { != , i , params , P , pj_param , ctx , alp , if , }
		- PARENT = { }
		- CHILD  = { f , ctx , P , pj_param , params , alpha_c , }
		- PRED   = { i , params , Q , ctx , pj_param , no_rot , P , }
		- SUCC   = { != , i , params , ctx , P , pj_param , gam , if , }

135 :	"ctx"
		- NEIGH  = { != , i , params , P , pj_param , ctx , alp , if , }
		- PARENT = { }
		- CHILD  = { f , ctx , P , pj_param , params , alpha_c , }
		- PRED   = { i , params , Q , ctx , pj_param , no_rot , P , }
		- SUCC   = { != , i , params , ctx , P , pj_param , gam , if , }

135 :	"P"
		- NEIGH  = { != , i , params , P , pj_param , ctx , alp , if , }
		- PARENT = { }
		- CHILD  = { f , ctx , P , pj_param , params , alpha_c , }
		- PRED   = { i , params , Q , ctx , pj_param , no_rot , P , }
		- SUCC   = { != , i , params , ctx , P , pj_param , gam , if , }

135 :	"params"
		- NEIGH  = { != , i , params , P , pj_param , ctx , alp , if , }
		- PARENT = { }
		- CHILD  = { f , ctx , P , pj_param , params , alpha_c , }
		- PRED   = { i , params , Q , ctx , pj_param , no_rot , P , }
		- SUCC   = { != , i , params , ctx , P , pj_param , gam , if , }

135 :	"i"
		- NEIGH  = { != , i , params , P , pj_param , ctx , alp , if , }
		- PARENT = { }
		- CHILD  = { f , ctx , P , pj_param , params , alpha_c , }
		- PRED   = { i , params , Q , ctx , pj_param , no_rot , P , }
		- SUCC   = { != , i , params , ctx , P , pj_param , gam , if , }

135 :	"!="
		- NEIGH  = { != , i , params , P , pj_param , ctx , alp , if , }
		- PARENT = { }
		- CHILD  = { f , ctx , P , pj_param , params , alpha_c , }
		- PRED   = { i , params , Q , ctx , pj_param , no_rot , P , }
		- SUCC   = { != , i , params , ctx , P , pj_param , gam , if , }

136 :	"alpha_c"
		- NEIGH  = { f , ctx , P , pj_param , params , alpha_c , }
		- PARENT = { != , i , params , P , pj_param , ctx , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"pj_param"
		- NEIGH  = { f , ctx , P , pj_param , params , alpha_c , }
		- PARENT = { != , i , params , P , pj_param , ctx , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"P"
		- NEIGH  = { f , ctx , P , pj_param , params , alpha_c , }
		- PARENT = { != , i , params , P , pj_param , ctx , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"ctx"
		- NEIGH  = { f , ctx , P , pj_param , params , alpha_c , }
		- PARENT = { != , i , params , P , pj_param , ctx , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"P"
		- NEIGH  = { f , ctx , P , pj_param , params , alpha_c , }
		- PARENT = { != , i , params , P , pj_param , ctx , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"params"
		- NEIGH  = { f , ctx , P , pj_param , params , alpha_c , }
		- PARENT = { != , i , params , P , pj_param , ctx , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"f"
		- NEIGH  = { f , ctx , P , pj_param , params , alpha_c , }
		- PARENT = { != , i , params , P , pj_param , ctx , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

137 :	"if"
		- NEIGH  = { != , i , params , ctx , P , pj_param , gam , if , }
		- PARENT = { }
		- CHILD  = { f , params , ctx , gamma , P , pj_param , }
		- PRED   = { != , i , params , P , pj_param , ctx , alp , if , }
		- SUCC   = { gam , || , alp , if , }

137 :	"gam"
		- NEIGH  = { != , i , params , ctx , P , pj_param , gam , if , }
		- PARENT = { }
		- CHILD  = { f , params , ctx , gamma , P , pj_param , }
		- PRED   = { != , i , params , P , pj_param , ctx , alp , if , }
		- SUCC   = { gam , || , alp , if , }

137 :	"pj_param"
		- NEIGH  = { != , i , params , ctx , P , pj_param , gam , if , }
		- PARENT = { }
		- CHILD  = { f , params , ctx , gamma , P , pj_param , }
		- PRED   = { != , i , params , P , pj_param , ctx , alp , if , }
		- SUCC   = { gam , || , alp , if , }

137 :	"P"
		- NEIGH  = { != , i , params , ctx , P , pj_param , gam , if , }
		- PARENT = { }
		- CHILD  = { f , params , ctx , gamma , P , pj_param , }
		- PRED   = { != , i , params , P , pj_param , ctx , alp , if , }
		- SUCC   = { gam , || , alp , if , }

137 :	"ctx"
		- NEIGH  = { != , i , params , ctx , P , pj_param , gam , if , }
		- PARENT = { }
		- CHILD  = { f , params , ctx , gamma , P , pj_param , }
		- PRED   = { != , i , params , P , pj_param , ctx , alp , if , }
		- SUCC   = { gam , || , alp , if , }

137 :	"P"
		- NEIGH  = { != , i , params , ctx , P , pj_param , gam , if , }
		- PARENT = { }
		- CHILD  = { f , params , ctx , gamma , P , pj_param , }
		- PRED   = { != , i , params , P , pj_param , ctx , alp , if , }
		- SUCC   = { gam , || , alp , if , }

137 :	"params"
		- NEIGH  = { != , i , params , ctx , P , pj_param , gam , if , }
		- PARENT = { }
		- CHILD  = { f , params , ctx , gamma , P , pj_param , }
		- PRED   = { != , i , params , P , pj_param , ctx , alp , if , }
		- SUCC   = { gam , || , alp , if , }

137 :	"i"
		- NEIGH  = { != , i , params , ctx , P , pj_param , gam , if , }
		- PARENT = { }
		- CHILD  = { f , params , ctx , gamma , P , pj_param , }
		- PRED   = { != , i , params , P , pj_param , ctx , alp , if , }
		- SUCC   = { gam , || , alp , if , }

137 :	"!="
		- NEIGH  = { != , i , params , ctx , P , pj_param , gam , if , }
		- PARENT = { }
		- CHILD  = { f , params , ctx , gamma , P , pj_param , }
		- PRED   = { != , i , params , P , pj_param , ctx , alp , if , }
		- SUCC   = { gam , || , alp , if , }

138 :	"gamma"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { != , i , params , ctx , P , pj_param , gam , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"pj_param"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { != , i , params , ctx , P , pj_param , gam , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"P"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { != , i , params , ctx , P , pj_param , gam , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"ctx"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { != , i , params , ctx , P , pj_param , gam , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"P"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { != , i , params , ctx , P , pj_param , gam , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"params"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { != , i , params , ctx , P , pj_param , gam , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"f"
		- NEIGH  = { f , params , ctx , gamma , P , pj_param , }
		- PARENT = { != , i , params , ctx , P , pj_param , gam , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"if"
		- NEIGH  = { gam , || , alp , if , }
		- PARENT = { }
		- CHILD  = { phi0 , <= , > , con , M_HALFPI , fabs , phi2 , lam2 , phi1 , lamc , lam1 , if , no_off , f , i , params , pj_param , P , - , || , ctx , }
		- PRED   = { != , i , params , ctx , P , pj_param , gam , if , }
		- SUCC   = { one_es , sqrt , P , com , }

139 :	"alp"
		- NEIGH  = { gam , || , alp , if , }
		- PARENT = { }
		- CHILD  = { phi0 , <= , > , con , M_HALFPI , fabs , phi2 , lam2 , phi1 , lamc , lam1 , if , no_off , f , i , params , pj_param , P , - , || , ctx , }
		- PRED   = { != , i , params , ctx , P , pj_param , gam , if , }
		- SUCC   = { one_es , sqrt , P , com , }

139 :	"||"
		- NEIGH  = { gam , || , alp , if , }
		- PARENT = { }
		- CHILD  = { phi0 , <= , > , con , M_HALFPI , fabs , phi2 , lam2 , phi1 , lamc , lam1 , if , no_off , f , i , params , pj_param , P , - , || , ctx , }
		- PRED   = { != , i , params , ctx , P , pj_param , gam , if , }
		- SUCC   = { one_es , sqrt , P , com , }

139 :	"gam"
		- NEIGH  = { gam , || , alp , if , }
		- PARENT = { }
		- CHILD  = { phi0 , <= , > , con , M_HALFPI , fabs , phi2 , lam2 , phi1 , lamc , lam1 , if , no_off , f , i , params , pj_param , P , - , || , ctx , }
		- PRED   = { != , i , params , ctx , P , pj_param , gam , if , }
		- SUCC   = { one_es , sqrt , P , com , }

140 :	"lamc"
		- NEIGH  = { f , params , P , pj_param , ctx , lamc , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ctx , P , || , pj_param , i , params , no_off , }

140 :	"pj_param"
		- NEIGH  = { f , params , P , pj_param , ctx , lamc , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ctx , P , || , pj_param , i , params , no_off , }

140 :	"P"
		- NEIGH  = { f , params , P , pj_param , ctx , lamc , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ctx , P , || , pj_param , i , params , no_off , }

140 :	"ctx"
		- NEIGH  = { f , params , P , pj_param , ctx , lamc , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ctx , P , || , pj_param , i , params , no_off , }

140 :	"P"
		- NEIGH  = { f , params , P , pj_param , ctx , lamc , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ctx , P , || , pj_param , i , params , no_off , }

140 :	"params"
		- NEIGH  = { f , params , P , pj_param , ctx , lamc , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ctx , P , || , pj_param , i , params , no_off , }

140 :	"f"
		- NEIGH  = { f , params , P , pj_param , ctx , lamc , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ctx , P , || , pj_param , i , params , no_off , }

141 :	"no_off"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

143 :	"pj_param"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

143 :	"P"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

143 :	"ctx"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

143 :	"P"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

143 :	"params"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

143 :	"i"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

145 :	"||"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

145 :	"pj_param"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

145 :	"P"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

145 :	"ctx"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

145 :	"P"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

145 :	"params"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

145 :	"i"
		- NEIGH  = { ctx , P , || , pj_param , i , params , no_off , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , P , pj_param , ctx , lamc , }
		- SUCC   = { no_off , if , }

146 :	"if"
		- NEIGH  = { no_off , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { params , ctx , P , pj_param , }
		- PRED   = { ctx , P , || , pj_param , i , params , no_off , }
		- SUCC   = { }

146 :	"no_off"
		- NEIGH  = { no_off , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { params , ctx , P , pj_param , }
		- PRED   = { ctx , P , || , pj_param , i , params , no_off , }
		- SUCC   = { }

149 :	"pj_param"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , }

149 :	"P"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , }

149 :	"ctx"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , }

149 :	"P"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , }

149 :	"params"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , }

150 :	"pj_param"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , }
		- SUCC   = { }

150 :	"P"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , }
		- SUCC   = { }

150 :	"ctx"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , }
		- SUCC   = { }

150 :	"P"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , }
		- SUCC   = { }

150 :	"params"
		- NEIGH  = { params , ctx , P , pj_param , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , }
		- SUCC   = { }

153 :	"lam1"
		- NEIGH  = { f , ctx , P , pj_param , params , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , f , phi1 , }

153 :	"pj_param"
		- NEIGH  = { f , ctx , P , pj_param , params , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , f , phi1 , }

153 :	"P"
		- NEIGH  = { f , ctx , P , pj_param , params , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , f , phi1 , }

153 :	"ctx"
		- NEIGH  = { f , ctx , P , pj_param , params , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , f , phi1 , }

153 :	"P"
		- NEIGH  = { f , ctx , P , pj_param , params , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , f , phi1 , }

153 :	"params"
		- NEIGH  = { f , ctx , P , pj_param , params , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , f , phi1 , }

153 :	"f"
		- NEIGH  = { f , ctx , P , pj_param , params , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , ctx , P , pj_param , f , phi1 , }

154 :	"phi1"
		- NEIGH  = { params , ctx , P , pj_param , f , phi1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam1 , }
		- SUCC   = { f , ctx , P , pj_param , params , lam2 , }

154 :	"pj_param"
		- NEIGH  = { params , ctx , P , pj_param , f , phi1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam1 , }
		- SUCC   = { f , ctx , P , pj_param , params , lam2 , }

154 :	"P"
		- NEIGH  = { params , ctx , P , pj_param , f , phi1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam1 , }
		- SUCC   = { f , ctx , P , pj_param , params , lam2 , }

154 :	"ctx"
		- NEIGH  = { params , ctx , P , pj_param , f , phi1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam1 , }
		- SUCC   = { f , ctx , P , pj_param , params , lam2 , }

154 :	"P"
		- NEIGH  = { params , ctx , P , pj_param , f , phi1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam1 , }
		- SUCC   = { f , ctx , P , pj_param , params , lam2 , }

154 :	"params"
		- NEIGH  = { params , ctx , P , pj_param , f , phi1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam1 , }
		- SUCC   = { f , ctx , P , pj_param , params , lam2 , }

154 :	"f"
		- NEIGH  = { params , ctx , P , pj_param , f , phi1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam1 , }
		- SUCC   = { f , ctx , P , pj_param , params , lam2 , }

155 :	"lam2"
		- NEIGH  = { f , ctx , P , pj_param , params , lam2 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , f , phi1 , }
		- SUCC   = { f , params , phi2 , ctx , pj_param , P , }

155 :	"pj_param"
		- NEIGH  = { f , ctx , P , pj_param , params , lam2 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , f , phi1 , }
		- SUCC   = { f , params , phi2 , ctx , pj_param , P , }

155 :	"P"
		- NEIGH  = { f , ctx , P , pj_param , params , lam2 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , f , phi1 , }
		- SUCC   = { f , params , phi2 , ctx , pj_param , P , }

155 :	"ctx"
		- NEIGH  = { f , ctx , P , pj_param , params , lam2 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , f , phi1 , }
		- SUCC   = { f , params , phi2 , ctx , pj_param , P , }

155 :	"P"
		- NEIGH  = { f , ctx , P , pj_param , params , lam2 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , f , phi1 , }
		- SUCC   = { f , params , phi2 , ctx , pj_param , P , }

155 :	"params"
		- NEIGH  = { f , ctx , P , pj_param , params , lam2 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , f , phi1 , }
		- SUCC   = { f , params , phi2 , ctx , pj_param , P , }

155 :	"f"
		- NEIGH  = { f , ctx , P , pj_param , params , lam2 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { params , ctx , P , pj_param , f , phi1 , }
		- SUCC   = { f , params , phi2 , ctx , pj_param , P , }

156 :	"phi2"
		- NEIGH  = { f , params , phi2 , ctx , pj_param , P , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam2 , }
		- SUCC   = { phi1 , fabs , con , }

156 :	"pj_param"
		- NEIGH  = { f , params , phi2 , ctx , pj_param , P , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam2 , }
		- SUCC   = { phi1 , fabs , con , }

156 :	"P"
		- NEIGH  = { f , params , phi2 , ctx , pj_param , P , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam2 , }
		- SUCC   = { phi1 , fabs , con , }

156 :	"ctx"
		- NEIGH  = { f , params , phi2 , ctx , pj_param , P , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam2 , }
		- SUCC   = { phi1 , fabs , con , }

156 :	"P"
		- NEIGH  = { f , params , phi2 , ctx , pj_param , P , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam2 , }
		- SUCC   = { phi1 , fabs , con , }

156 :	"params"
		- NEIGH  = { f , params , phi2 , ctx , pj_param , P , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam2 , }
		- SUCC   = { phi1 , fabs , con , }

156 :	"f"
		- NEIGH  = { f , params , phi2 , ctx , pj_param , P , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , ctx , P , pj_param , params , lam2 , }
		- SUCC   = { phi1 , fabs , con , }

157 :	"con"
		- NEIGH  = { phi1 , fabs , con , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , phi2 , ctx , pj_param , P , }
		- SUCC   = { - , > , M_HALFPI , fabs , phi1 , if , }

157 :	"fabs"
		- NEIGH  = { phi1 , fabs , con , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , phi2 , ctx , pj_param , P , }
		- SUCC   = { - , > , M_HALFPI , fabs , phi1 , if , }

157 :	"phi1"
		- NEIGH  = { phi1 , fabs , con , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { f , params , phi2 , ctx , pj_param , P , }
		- SUCC   = { - , > , M_HALFPI , fabs , phi1 , if , }

159 :	"if"
		- NEIGH  = { - , > , M_HALFPI , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { phi1 , fabs , con , }
		- SUCC   = { - , > , phi2 , M_HALFPI , fabs , if , }

159 :	"fabs"
		- NEIGH  = { - , > , M_HALFPI , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { phi1 , fabs , con , }
		- SUCC   = { - , > , phi2 , M_HALFPI , fabs , if , }

159 :	"phi1"
		- NEIGH  = { - , > , M_HALFPI , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { phi1 , fabs , con , }
		- SUCC   = { - , > , phi2 , M_HALFPI , fabs , if , }

159 :	">"
		- NEIGH  = { - , > , M_HALFPI , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { phi1 , fabs , con , }
		- SUCC   = { - , > , phi2 , M_HALFPI , fabs , if , }

159 :	"M_HALFPI"
		- NEIGH  = { - , > , M_HALFPI , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { phi1 , fabs , con , }
		- SUCC   = { - , > , phi2 , M_HALFPI , fabs , if , }

159 :	"-"
		- NEIGH  = { - , > , M_HALFPI , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { phi1 , fabs , con , }
		- SUCC   = { - , > , phi2 , M_HALFPI , fabs , if , }

161 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { - , > , M_HALFPI , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

161 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { - , > , M_HALFPI , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

161 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { - , > , M_HALFPI , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

162 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , > , M_HALFPI , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

162 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , > , M_HALFPI , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

162 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , > , M_HALFPI , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

162 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , > , M_HALFPI , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

164 :	"if"
		- NEIGH  = { - , > , phi2 , M_HALFPI , fabs , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , M_HALFPI , fabs , phi1 , if , }
		- SUCC   = { <= , phi2 , - , fabs , phi1 , if , }

164 :	"fabs"
		- NEIGH  = { - , > , phi2 , M_HALFPI , fabs , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , M_HALFPI , fabs , phi1 , if , }
		- SUCC   = { <= , phi2 , - , fabs , phi1 , if , }

164 :	"phi2"
		- NEIGH  = { - , > , phi2 , M_HALFPI , fabs , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , M_HALFPI , fabs , phi1 , if , }
		- SUCC   = { <= , phi2 , - , fabs , phi1 , if , }

164 :	">"
		- NEIGH  = { - , > , phi2 , M_HALFPI , fabs , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , M_HALFPI , fabs , phi1 , if , }
		- SUCC   = { <= , phi2 , - , fabs , phi1 , if , }

164 :	"M_HALFPI"
		- NEIGH  = { - , > , phi2 , M_HALFPI , fabs , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , M_HALFPI , fabs , phi1 , if , }
		- SUCC   = { <= , phi2 , - , fabs , phi1 , if , }

164 :	"-"
		- NEIGH  = { - , > , phi2 , M_HALFPI , fabs , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , M_HALFPI , fabs , phi1 , if , }
		- SUCC   = { <= , phi2 , - , fabs , phi1 , if , }

166 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { - , > , phi2 , M_HALFPI , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

166 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { - , > , phi2 , M_HALFPI , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

166 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { - , > , phi2 , M_HALFPI , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

167 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , > , phi2 , M_HALFPI , fabs , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

167 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , > , phi2 , M_HALFPI , fabs , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

167 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , > , phi2 , M_HALFPI , fabs , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

167 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { - , > , phi2 , M_HALFPI , fabs , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

170 :	"if"
		- NEIGH  = { <= , phi2 , - , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , phi2 , M_HALFPI , fabs , if , }
		- SUCC   = { <= , con , if , }

170 :	"fabs"
		- NEIGH  = { <= , phi2 , - , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , phi2 , M_HALFPI , fabs , if , }
		- SUCC   = { <= , con , if , }

170 :	"phi1"
		- NEIGH  = { <= , phi2 , - , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , phi2 , M_HALFPI , fabs , if , }
		- SUCC   = { <= , con , if , }

170 :	"-"
		- NEIGH  = { <= , phi2 , - , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , phi2 , M_HALFPI , fabs , if , }
		- SUCC   = { <= , con , if , }

170 :	"phi2"
		- NEIGH  = { <= , phi2 , - , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , phi2 , M_HALFPI , fabs , if , }
		- SUCC   = { <= , con , if , }

170 :	"<="
		- NEIGH  = { <= , phi2 , - , fabs , phi1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { - , > , phi2 , M_HALFPI , fabs , if , }
		- SUCC   = { <= , con , if , }

172 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , phi2 , - , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

172 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , phi2 , - , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

172 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , phi2 , - , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

173 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , phi2 , - , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

173 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , phi2 , - , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

173 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , phi2 , - , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

173 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , phi2 , - , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

176 :	"if"
		- NEIGH  = { <= , con , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , phi2 , - , fabs , phi1 , if , }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

176 :	"con"
		- NEIGH  = { <= , con , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , phi2 , - , fabs , phi1 , if , }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

176 :	"<="
		- NEIGH  = { <= , con , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , phi2 , - , fabs , phi1 , if , }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

178 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , con , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

178 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , con , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

178 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , con , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

179 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , con , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

179 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , con , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

179 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , con , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

179 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , con , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

182 :	"if"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , con , if , }
		- SUCC   = { }

182 :	"fabs"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , con , if , }
		- SUCC   = { }

182 :	"fabs"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , con , if , }
		- SUCC   = { }

182 :	"P"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , con , if , }
		- SUCC   = { }

182 :	"phi0"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , con , if , }
		- SUCC   = { }

182 :	"-"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , con , if , }
		- SUCC   = { }

182 :	"M_HALFPI"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , con , if , }
		- SUCC   = { }

182 :	"<="
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { <= , con , if , }
		- SUCC   = { }

184 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

184 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

184 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

185 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

185 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

185 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

185 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

188 :	"com"
		- NEIGH  = { one_es , sqrt , P , com , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gam , || , alp , if , }
		- SUCC   = { phi0 , > , P , fabs , if , }

188 :	"sqrt"
		- NEIGH  = { one_es , sqrt , P , com , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gam , || , alp , if , }
		- SUCC   = { phi0 , > , P , fabs , if , }

188 :	"P"
		- NEIGH  = { one_es , sqrt , P , com , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gam , || , alp , if , }
		- SUCC   = { phi0 , > , P , fabs , if , }

188 :	"one_es"
		- NEIGH  = { one_es , sqrt , P , com , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gam , || , alp , if , }
		- SUCC   = { phi0 , > , P , fabs , if , }

189 :	"if"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { }
		- CHILD  = { e , += , pj_tsfn , com , pow , P , k0 , one_es , if , <= , B , sqrt , + , - , Q , E , es , *= , * , F , D , / , con , cos , cosph0 , A , sin , phi0 , sinph0 , }
		- PRED   = { one_es , sqrt , P , com , }
		- SUCC   = { gam , || , alp , if , }

189 :	"fabs"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { }
		- CHILD  = { e , += , pj_tsfn , com , pow , P , k0 , one_es , if , <= , B , sqrt , + , - , Q , E , es , *= , * , F , D , / , con , cos , cosph0 , A , sin , phi0 , sinph0 , }
		- PRED   = { one_es , sqrt , P , com , }
		- SUCC   = { gam , || , alp , if , }

189 :	"P"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { }
		- CHILD  = { e , += , pj_tsfn , com , pow , P , k0 , one_es , if , <= , B , sqrt , + , - , Q , E , es , *= , * , F , D , / , con , cos , cosph0 , A , sin , phi0 , sinph0 , }
		- PRED   = { one_es , sqrt , P , com , }
		- SUCC   = { gam , || , alp , if , }

189 :	"phi0"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { }
		- CHILD  = { e , += , pj_tsfn , com , pow , P , k0 , one_es , if , <= , B , sqrt , + , - , Q , E , es , *= , * , F , D , / , con , cos , cosph0 , A , sin , phi0 , sinph0 , }
		- PRED   = { one_es , sqrt , P , com , }
		- SUCC   = { gam , || , alp , if , }

189 :	">"
		- NEIGH  = { phi0 , > , P , fabs , if , }
		- PARENT = { }
		- CHILD  = { e , += , pj_tsfn , com , pow , P , k0 , one_es , if , <= , B , sqrt , + , - , Q , E , es , *= , * , F , D , / , con , cos , cosph0 , A , sin , phi0 , sinph0 , }
		- PRED   = { one_es , sqrt , P , com , }
		- SUCC   = { gam , || , alp , if , }

190 :	"sinph0"
		- NEIGH  = { P , sin , phi0 , sinph0 , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi0 , P , cos , cosph0 , }

190 :	"sin"
		- NEIGH  = { P , sin , phi0 , sinph0 , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi0 , P , cos , cosph0 , }

190 :	"P"
		- NEIGH  = { P , sin , phi0 , sinph0 , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi0 , P , cos , cosph0 , }

190 :	"phi0"
		- NEIGH  = { P , sin , phi0 , sinph0 , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi0 , P , cos , cosph0 , }

191 :	"cosph0"
		- NEIGH  = { phi0 , P , cos , cosph0 , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { P , sin , phi0 , sinph0 , }
		- SUCC   = { * , sinph0 , es , P , - , con , }

191 :	"cos"
		- NEIGH  = { phi0 , P , cos , cosph0 , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { P , sin , phi0 , sinph0 , }
		- SUCC   = { * , sinph0 , es , P , - , con , }

191 :	"P"
		- NEIGH  = { phi0 , P , cos , cosph0 , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { P , sin , phi0 , sinph0 , }
		- SUCC   = { * , sinph0 , es , P , - , con , }

191 :	"phi0"
		- NEIGH  = { phi0 , P , cos , cosph0 , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { P , sin , phi0 , sinph0 , }
		- SUCC   = { * , sinph0 , es , P , - , con , }

192 :	"con"
		- NEIGH  = { * , sinph0 , es , P , - , con , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , cos , cosph0 , }
		- SUCC   = { cosph0 , * , B , Q , }

192 :	"-"
		- NEIGH  = { * , sinph0 , es , P , - , con , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , cos , cosph0 , }
		- SUCC   = { cosph0 , * , B , Q , }

192 :	"P"
		- NEIGH  = { * , sinph0 , es , P , - , con , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , cos , cosph0 , }
		- SUCC   = { cosph0 , * , B , Q , }

192 :	"es"
		- NEIGH  = { * , sinph0 , es , P , - , con , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , cos , cosph0 , }
		- SUCC   = { cosph0 , * , B , Q , }

192 :	"*"
		- NEIGH  = { * , sinph0 , es , P , - , con , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , cos , cosph0 , }
		- SUCC   = { cosph0 , * , B , Q , }

192 :	"sinph0"
		- NEIGH  = { * , sinph0 , es , P , - , con , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , cos , cosph0 , }
		- SUCC   = { cosph0 , * , B , Q , }

192 :	"*"
		- NEIGH  = { * , sinph0 , es , P , - , con , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , cos , cosph0 , }
		- SUCC   = { cosph0 , * , B , Q , }

192 :	"sinph0"
		- NEIGH  = { * , sinph0 , es , P , - , con , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , cos , cosph0 , }
		- SUCC   = { cosph0 , * , B , Q , }

193 :	"Q"
		- NEIGH  = { cosph0 , * , B , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , - , con , }
		- SUCC   = { one_es , / , * , es , Q , sqrt , + , B , P , }

193 :	"B"
		- NEIGH  = { cosph0 , * , B , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , - , con , }
		- SUCC   = { one_es , / , * , es , Q , sqrt , + , B , P , }

193 :	"cosph0"
		- NEIGH  = { cosph0 , * , B , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , - , con , }
		- SUCC   = { one_es , / , * , es , Q , sqrt , + , B , P , }

193 :	"*"
		- NEIGH  = { cosph0 , * , B , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , - , con , }
		- SUCC   = { one_es , / , * , es , Q , sqrt , + , B , P , }

193 :	"cosph0"
		- NEIGH  = { cosph0 , * , B , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , - , con , }
		- SUCC   = { one_es , / , * , es , Q , sqrt , + , B , P , }

194 :	"Q"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"B"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"sqrt"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"+"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"P"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"es"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"*"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"Q"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"B"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"*"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"Q"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"B"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"/"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"P"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

194 :	"one_es"
		- NEIGH  = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { cosph0 , * , B , Q , }
		- SUCC   = { con , / , * , k0 , B , com , Q , A , P , }

195 :	"Q"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"A"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"Q"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"B"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"*"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"P"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"k0"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"*"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"com"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"/"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

195 :	"con"
		- NEIGH  = { con , / , * , k0 , B , com , Q , A , P , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { one_es , / , * , es , Q , sqrt , + , B , P , }
		- SUCC   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }

196 :	"D"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

196 :	"Q"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

196 :	"B"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

196 :	"*"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

196 :	"com"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

196 :	"/"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

196 :	"cosph0"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

196 :	"*"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

196 :	"sqrt"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

196 :	"con"
		- NEIGH  = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { con , / , * , k0 , B , com , Q , A , P , }
		- SUCC   = { <= , * , - , D , F , if , }

197 :	"if"
		- NEIGH  = { <= , * , - , D , F , if , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { < , P , if , phi0 , sqrt , F , }
		- PRED   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- SUCC   = { += , D , F , E , Q , }

197 :	"F"
		- NEIGH  = { <= , * , - , D , F , if , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { < , P , if , phi0 , sqrt , F , }
		- PRED   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- SUCC   = { += , D , F , E , Q , }

197 :	"D"
		- NEIGH  = { <= , * , - , D , F , if , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { < , P , if , phi0 , sqrt , F , }
		- PRED   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- SUCC   = { += , D , F , E , Q , }

197 :	"*"
		- NEIGH  = { <= , * , - , D , F , if , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { < , P , if , phi0 , sqrt , F , }
		- PRED   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- SUCC   = { += , D , F , E , Q , }

197 :	"D"
		- NEIGH  = { <= , * , - , D , F , if , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { < , P , if , phi0 , sqrt , F , }
		- PRED   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- SUCC   = { += , D , F , E , Q , }

197 :	"-"
		- NEIGH  = { <= , * , - , D , F , if , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { < , P , if , phi0 , sqrt , F , }
		- PRED   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- SUCC   = { += , D , F , E , Q , }

197 :	"<="
		- NEIGH  = { <= , * , - , D , F , if , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { < , P , if , phi0 , sqrt , F , }
		- PRED   = { con , cosph0 , / , * , B , sqrt , com , Q , D , }
		- SUCC   = { += , D , F , E , Q , }

198 :	"F"
		- NEIGH  = { F , }
		- PARENT = { <= , * , - , D , F , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

200 :	"F"
		- NEIGH  = { sqrt , F , }
		- PARENT = { <= , * , - , D , F , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

200 :	"sqrt"
		- NEIGH  = { sqrt , F , }
		- PARENT = { <= , * , - , D , F , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

200 :	"F"
		- NEIGH  = { sqrt , F , }
		- PARENT = { <= , * , - , D , F , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

201 :	"if"
		- NEIGH  = { < , phi0 , P , if , }
		- PARENT = { <= , * , - , D , F , if , }
		- CHILD  = { - , F , }
		- PRED   = { sqrt , F , }
		- SUCC   = { }

201 :	"P"
		- NEIGH  = { < , phi0 , P , if , }
		- PARENT = { <= , * , - , D , F , if , }
		- CHILD  = { - , F , }
		- PRED   = { sqrt , F , }
		- SUCC   = { }

201 :	"phi0"
		- NEIGH  = { < , phi0 , P , if , }
		- PARENT = { <= , * , - , D , F , if , }
		- CHILD  = { - , F , }
		- PRED   = { sqrt , F , }
		- SUCC   = { }

201 :	"<"
		- NEIGH  = { < , phi0 , P , if , }
		- PARENT = { <= , * , - , D , F , if , }
		- CHILD  = { - , F , }
		- PRED   = { sqrt , F , }
		- SUCC   = { }

202 :	"F"
		- NEIGH  = { - , F , }
		- PARENT = { < , phi0 , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"-"
		- NEIGH  = { - , F , }
		- PARENT = { < , phi0 , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"F"
		- NEIGH  = { - , F , }
		- PARENT = { < , phi0 , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"Q"
		- NEIGH  = { += , D , F , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { <= , * , - , D , F , if , }
		- SUCC   = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }

204 :	"E"
		- NEIGH  = { += , D , F , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { <= , * , - , D , F , if , }
		- SUCC   = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }

204 :	"F"
		- NEIGH  = { += , D , F , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { <= , * , - , D , F , if , }
		- SUCC   = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }

204 :	"+="
		- NEIGH  = { += , D , F , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { <= , * , - , D , F , if , }
		- SUCC   = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }

204 :	"D"
		- NEIGH  = { += , D , F , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { <= , * , - , D , F , if , }
		- SUCC   = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }

205 :	"Q"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"E"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"*="
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"pow"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"pj_tsfn"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"P"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"phi0"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"sinph0"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"P"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"e"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"Q"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

205 :	"B"
		- NEIGH  = { e , sinph0 , B , phi0 , P , *= , pj_tsfn , pow , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { += , D , F , E , Q , }
		- SUCC   = { }

207 :	"Q"
		- NEIGH  = { B , com , / , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { k0 , A , P , Q , }

207 :	"B"
		- NEIGH  = { B , com , / , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { k0 , A , P , Q , }

207 :	"/"
		- NEIGH  = { B , com , / , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { k0 , A , P , Q , }

207 :	"com"
		- NEIGH  = { B , com , / , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { k0 , A , P , Q , }

208 :	"Q"
		- NEIGH  = { k0 , A , P , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { B , com , / , Q , }
		- SUCC   = { F , D , E , Q , }

208 :	"A"
		- NEIGH  = { k0 , A , P , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { B , com , / , Q , }
		- SUCC   = { F , D , E , Q , }

208 :	"P"
		- NEIGH  = { k0 , A , P , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { B , com , / , Q , }
		- SUCC   = { F , D , E , Q , }

208 :	"k0"
		- NEIGH  = { k0 , A , P , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { B , com , / , Q , }
		- SUCC   = { F , D , E , Q , }

209 :	"Q"
		- NEIGH  = { F , D , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { k0 , A , P , Q , }
		- SUCC   = { }

209 :	"E"
		- NEIGH  = { F , D , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { k0 , A , P , Q , }
		- SUCC   = { }

209 :	"D"
		- NEIGH  = { F , D , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { k0 , A , P , Q , }
		- SUCC   = { }

209 :	"F"
		- NEIGH  = { F , D , E , Q , }
		- PARENT = { phi0 , > , P , fabs , if , }
		- CHILD  = { }
		- PRED   = { k0 , A , P , Q , }
		- SUCC   = { }

211 :	"if"
		- NEIGH  = { gam , || , alp , if , }
		- PARENT = { }
		- CHILD  = { alpha_c , gamma , denom , M_PI , < , lam2 , lam1 , con , J , == , phi2 , e , sin , * , phi1 , P , pow , - , Q , / , ctx , pj_tsfn , D , tan , F , + , B , L , aasin , p , lamc , <= , if , adjlon , E , H , atan , phi0 , lam0 , gamma0 , fabs , M_HALFPI , alp , }
		- PRED   = { phi0 , > , P , fabs , if , }
		- SUCC   = { gamma0 , sin , singam , Q , }

211 :	"alp"
		- NEIGH  = { gam , || , alp , if , }
		- PARENT = { }
		- CHILD  = { alpha_c , gamma , denom , M_PI , < , lam2 , lam1 , con , J , == , phi2 , e , sin , * , phi1 , P , pow , - , Q , / , ctx , pj_tsfn , D , tan , F , + , B , L , aasin , p , lamc , <= , if , adjlon , E , H , atan , phi0 , lam0 , gamma0 , fabs , M_HALFPI , alp , }
		- PRED   = { phi0 , > , P , fabs , if , }
		- SUCC   = { gamma0 , sin , singam , Q , }

211 :	"||"
		- NEIGH  = { gam , || , alp , if , }
		- PARENT = { }
		- CHILD  = { alpha_c , gamma , denom , M_PI , < , lam2 , lam1 , con , J , == , phi2 , e , sin , * , phi1 , P , pow , - , Q , / , ctx , pj_tsfn , D , tan , F , + , B , L , aasin , p , lamc , <= , if , adjlon , E , H , atan , phi0 , lam0 , gamma0 , fabs , M_HALFPI , alp , }
		- PRED   = { phi0 , > , P , fabs , if , }
		- SUCC   = { gamma0 , sin , singam , Q , }

211 :	"gam"
		- NEIGH  = { gam , || , alp , if , }
		- PARENT = { }
		- CHILD  = { alpha_c , gamma , denom , M_PI , < , lam2 , lam1 , con , J , == , phi2 , e , sin , * , phi1 , P , pow , - , Q , / , ctx , pj_tsfn , D , tan , F , + , B , L , aasin , p , lamc , <= , if , adjlon , E , H , atan , phi0 , lam0 , gamma0 , fabs , M_HALFPI , alp , }
		- PRED   = { phi0 , > , P , fabs , if , }
		- SUCC   = { gamma0 , sin , singam , Q , }

212 :	"if"
		- NEIGH  = { alp , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { gamma , P , ! , sin , if , * , ctx , alpha_c , / , D , gam , aasin , gamma0 , }
		- PRED   = { }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

212 :	"alp"
		- NEIGH  = { alp , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { gamma , P , ! , sin , if , * , ctx , alpha_c , / , D , gam , aasin , gamma0 , }
		- PRED   = { }
		- SUCC   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }

213 :	"gamma0"
		- NEIGH  = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gam , ! , if , }

213 :	"aasin"
		- NEIGH  = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gam , ! , if , }

213 :	"P"
		- NEIGH  = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gam , ! , if , }

213 :	"ctx"
		- NEIGH  = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gam , ! , if , }

213 :	"sin"
		- NEIGH  = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gam , ! , if , }

213 :	"alpha_c"
		- NEIGH  = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gam , ! , if , }

213 :	"/"
		- NEIGH  = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gam , ! , if , }

213 :	"D"
		- NEIGH  = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gam , ! , if , }

214 :	"if"
		- NEIGH  = { gam , ! , if , }
		- PARENT = { alp , if , }
		- CHILD  = { alpha_c , gamma , }
		- PRED   = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- SUCC   = { }

214 :	"!"
		- NEIGH  = { gam , ! , if , }
		- PARENT = { alp , if , }
		- CHILD  = { alpha_c , gamma , }
		- PRED   = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- SUCC   = { }

214 :	"gam"
		- NEIGH  = { gam , ! , if , }
		- PARENT = { alp , if , }
		- CHILD  = { alpha_c , gamma , }
		- PRED   = { alpha_c , D , ctx , P , sin , aasin , / , gamma0 , }
		- SUCC   = { }

215 :	"gamma"
		- NEIGH  = { alpha_c , gamma , }
		- PARENT = { gam , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

215 :	"alpha_c"
		- NEIGH  = { alpha_c , gamma , }
		- PARENT = { gam , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"alpha_c"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"aasin"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"P"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"ctx"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"D"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"*"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"sin"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"gamma0"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"gamma"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

219 :	"if"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { alp , if , }
		- SUCC   = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }

219 :	"fabs"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { alp , if , }
		- SUCC   = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }

219 :	"fabs"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { alp , if , }
		- SUCC   = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }

219 :	"P"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { alp , if , }
		- SUCC   = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }

219 :	"phi0"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { alp , if , }
		- SUCC   = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }

219 :	"-"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { alp , if , }
		- SUCC   = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }

219 :	"M_HALFPI"
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { alp , if , }
		- SUCC   = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }

219 :	"<="
		- NEIGH  = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { alp , if , }
		- SUCC   = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }

221 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

221 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

221 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

222 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

222 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

222 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

222 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

225 :	"P"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"lam0"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"lamc"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"-"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"aasin"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"P"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"ctx"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"*"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"F"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"-"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"/"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"F"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

225 :	"*"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

226 :	"tan"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

226 :	"gamma0"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

226 :	"/"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

226 :	"Q"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

226 :	"B"
		- NEIGH  = { Q , gamma0 , / , F , B , ctx , * , aasin , P , tan , - , lamc , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { <= , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { }

228 :	"H"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

228 :	"pow"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

228 :	"pj_tsfn"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

228 :	"phi1"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

228 :	"sin"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

228 :	"phi1"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

228 :	"P"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

228 :	"e"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

228 :	"Q"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

228 :	"B"
		- NEIGH  = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }

229 :	"L"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

229 :	"pow"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

229 :	"pj_tsfn"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

229 :	"phi2"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

229 :	"sin"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

229 :	"phi2"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

229 :	"P"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

229 :	"e"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

229 :	"Q"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

229 :	"B"
		- NEIGH  = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , Q , P , e , sin , phi1 , H , pj_tsfn , pow , }
		- SUCC   = { H , / , E , Q , F , }

230 :	"F"
		- NEIGH  = { H , / , E , Q , F , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- SUCC   = { + , / , L , H , - , p , }

230 :	"Q"
		- NEIGH  = { H , / , E , Q , F , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- SUCC   = { + , / , L , H , - , p , }

230 :	"E"
		- NEIGH  = { H , / , E , Q , F , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- SUCC   = { + , / , L , H , - , p , }

230 :	"/"
		- NEIGH  = { H , / , E , Q , F , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- SUCC   = { + , / , L , H , - , p , }

230 :	"H"
		- NEIGH  = { H , / , E , Q , F , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { B , P , e , sin , Q , phi2 , L , pj_tsfn , pow , }
		- SUCC   = { + , / , L , H , - , p , }

231 :	"p"
		- NEIGH  = { + , / , L , H , - , p , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { H , / , E , Q , F , }
		- SUCC   = { == , p , if , }

231 :	"L"
		- NEIGH  = { + , / , L , H , - , p , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { H , / , E , Q , F , }
		- SUCC   = { == , p , if , }

231 :	"-"
		- NEIGH  = { + , / , L , H , - , p , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { H , / , E , Q , F , }
		- SUCC   = { == , p , if , }

231 :	"H"
		- NEIGH  = { + , / , L , H , - , p , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { H , / , E , Q , F , }
		- SUCC   = { == , p , if , }

231 :	"/"
		- NEIGH  = { + , / , L , H , - , p , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { H , / , E , Q , F , }
		- SUCC   = { == , p , if , }

231 :	"L"
		- NEIGH  = { + , / , L , H , - , p , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { H , / , E , Q , F , }
		- SUCC   = { == , p , if , }

231 :	"+"
		- NEIGH  = { + , / , L , H , - , p , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { H , / , E , Q , F , }
		- SUCC   = { == , p , if , }

231 :	"H"
		- NEIGH  = { + , / , L , H , - , p , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { H , / , E , Q , F , }
		- SUCC   = { == , p , if , }

232 :	"if"
		- NEIGH  = { == , p , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { + , / , L , H , - , p , }
		- SUCC   = { * , E , Q , J , }

232 :	"p"
		- NEIGH  = { == , p , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { + , / , L , H , - , p , }
		- SUCC   = { * , E , Q , J , }

232 :	"=="
		- NEIGH  = { == , p , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { + , / , L , H , - , p , }
		- SUCC   = { * , E , Q , J , }

234 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { == , p , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

234 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { == , p , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

234 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { == , p , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

235 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { == , p , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

235 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { == , p , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

235 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { == , p , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

235 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { == , p , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

237 :	"J"
		- NEIGH  = { * , E , Q , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , p , if , }
		- SUCC   = { + , / , H , * , L , - , J , }

237 :	"Q"
		- NEIGH  = { * , E , Q , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , p , if , }
		- SUCC   = { + , / , H , * , L , - , J , }

237 :	"E"
		- NEIGH  = { * , E , Q , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , p , if , }
		- SUCC   = { + , / , H , * , L , - , J , }

237 :	"*"
		- NEIGH  = { * , E , Q , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , p , if , }
		- SUCC   = { + , / , H , * , L , - , J , }

237 :	"Q"
		- NEIGH  = { * , E , Q , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , p , if , }
		- SUCC   = { + , / , H , * , L , - , J , }

237 :	"E"
		- NEIGH  = { * , E , Q , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , p , if , }
		- SUCC   = { + , / , H , * , L , - , J , }

238 :	"J"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"J"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"-"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"L"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"*"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"H"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"/"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"J"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"+"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"L"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"*"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

238 :	"H"
		- NEIGH  = { + , / , H , * , L , - , J , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { * , E , Q , J , }
		- SUCC   = { M_PI , < , - , con , lam2 , lam1 , if , }

239 :	"if"
		- NEIGH  = { M_PI , < , - , con , lam2 , lam1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { M_PI , > , if , -= , lam2 , con , M_TWOPI , }
		- PRED   = { + , / , H , * , L , - , J , }
		- SUCC   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }

239 :	"con"
		- NEIGH  = { M_PI , < , - , con , lam2 , lam1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { M_PI , > , if , -= , lam2 , con , M_TWOPI , }
		- PRED   = { + , / , H , * , L , - , J , }
		- SUCC   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }

239 :	"lam1"
		- NEIGH  = { M_PI , < , - , con , lam2 , lam1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { M_PI , > , if , -= , lam2 , con , M_TWOPI , }
		- PRED   = { + , / , H , * , L , - , J , }
		- SUCC   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }

239 :	"-"
		- NEIGH  = { M_PI , < , - , con , lam2 , lam1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { M_PI , > , if , -= , lam2 , con , M_TWOPI , }
		- PRED   = { + , / , H , * , L , - , J , }
		- SUCC   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }

239 :	"lam2"
		- NEIGH  = { M_PI , < , - , con , lam2 , lam1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { M_PI , > , if , -= , lam2 , con , M_TWOPI , }
		- PRED   = { + , / , H , * , L , - , J , }
		- SUCC   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }

239 :	"<"
		- NEIGH  = { M_PI , < , - , con , lam2 , lam1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { M_PI , > , if , -= , lam2 , con , M_TWOPI , }
		- PRED   = { + , / , H , * , L , - , J , }
		- SUCC   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }

239 :	"-"
		- NEIGH  = { M_PI , < , - , con , lam2 , lam1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { M_PI , > , if , -= , lam2 , con , M_TWOPI , }
		- PRED   = { + , / , H , * , L , - , J , }
		- SUCC   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }

239 :	"M_PI"
		- NEIGH  = { M_PI , < , - , con , lam2 , lam1 , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { M_PI , > , if , -= , lam2 , con , M_TWOPI , }
		- PRED   = { + , / , H , * , L , - , J , }
		- SUCC   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }

240 :	"lam2"
		- NEIGH  = { -= , M_TWOPI , lam2 , }
		- PARENT = { M_PI , < , - , con , lam2 , lam1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"-="
		- NEIGH  = { -= , M_TWOPI , lam2 , }
		- PARENT = { M_PI , < , - , con , lam2 , lam1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"M_TWOPI"
		- NEIGH  = { -= , M_TWOPI , lam2 , }
		- PARENT = { M_PI , < , - , con , lam2 , lam1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"if"
		- NEIGH  = { M_PI , > , con , if , }
		- PARENT = { M_PI , < , - , con , lam2 , lam1 , if , }
		- CHILD  = { M_TWOPI , += , lam2 , }
		- PRED   = { }
		- SUCC   = { }

241 :	"con"
		- NEIGH  = { M_PI , > , con , if , }
		- PARENT = { M_PI , < , - , con , lam2 , lam1 , if , }
		- CHILD  = { M_TWOPI , += , lam2 , }
		- PRED   = { }
		- SUCC   = { }

241 :	">"
		- NEIGH  = { M_PI , > , con , if , }
		- PARENT = { M_PI , < , - , con , lam2 , lam1 , if , }
		- CHILD  = { M_TWOPI , += , lam2 , }
		- PRED   = { }
		- SUCC   = { }

241 :	"M_PI"
		- NEIGH  = { M_PI , > , con , if , }
		- PARENT = { M_PI , < , - , con , lam2 , lam1 , if , }
		- CHILD  = { M_TWOPI , += , lam2 , }
		- PRED   = { }
		- SUCC   = { }

242 :	"lam2"
		- NEIGH  = { M_TWOPI , += , lam2 , }
		- PARENT = { M_PI , > , con , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"+="
		- NEIGH  = { M_TWOPI , += , lam2 , }
		- PARENT = { M_PI , > , con , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"M_TWOPI"
		- NEIGH  = { M_TWOPI , += , lam2 , }
		- PARENT = { M_PI , > , con , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"P"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

243 :	"lam0"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

243 :	"adjlon"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

243 :	"*"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

243 :	"lam1"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

243 :	"+"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

243 :	"lam2"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

243 :	"-"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

243 :	"atan"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"J"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"*"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"tan"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"*"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"Q"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"B"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"*"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"lam1"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"-"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"lam2"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"/"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"p"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"/"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"Q"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

244 :	"B"
		- NEIGH  = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { M_PI , < , - , con , lam2 , lam1 , if , }
		- SUCC   = { / , - , F , denom , }

245 :	"denom"
		- NEIGH  = { / , - , F , denom , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- SUCC   = { == , denom , if , }

245 :	"F"
		- NEIGH  = { / , - , F , denom , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- SUCC   = { == , denom , if , }

245 :	"-"
		- NEIGH  = { / , - , F , denom , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- SUCC   = { == , denom , if , }

245 :	"/"
		- NEIGH  = { / , - , F , denom , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- SUCC   = { == , denom , if , }

245 :	"F"
		- NEIGH  = { / , - , F , denom , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { / , Q , lam1 , J , P , tan , - , atan , lam2 , + , adjlon , B , * , p , lam0 , }
		- SUCC   = { == , denom , if , }

246 :	"if"
		- NEIGH  = { == , denom , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { / , - , F , denom , }
		- SUCC   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }

246 :	"denom"
		- NEIGH  = { == , denom , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { / , - , F , denom , }
		- SUCC   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }

246 :	"=="
		- NEIGH  = { == , denom , if , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { / , - , F , denom , }
		- SUCC   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }

247 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

247 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

247 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

248 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

248 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

248 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

248 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

250 :	"gamma0"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"atan"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"*"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"sin"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"Q"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"B"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"*"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"adjlon"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"lam1"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"-"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"P"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"lam0"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"/"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

250 :	"denom"
		- NEIGH  = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }

251 :	"gamma"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- SUCC   = { }

251 :	"alpha_c"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- SUCC   = { }

251 :	"aasin"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- SUCC   = { }

251 :	"P"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- SUCC   = { }

251 :	"ctx"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- SUCC   = { }

251 :	"D"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- SUCC   = { }

251 :	"*"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- SUCC   = { }

251 :	"sin"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- SUCC   = { }

251 :	"gamma0"
		- NEIGH  = { gamma0 , * , D , ctx , gamma , P , sin , aasin , alpha_c , }
		- PARENT = { gam , || , alp , if , }
		- CHILD  = { }
		- PRED   = { denom , / , lam0 , P , - , gamma0 , adjlon , B , * , Q , atan , sin , lam1 , }
		- SUCC   = { }

253 :	"Q"
		- NEIGH  = { gamma0 , sin , singam , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gam , || , alp , if , }
		- SUCC   = { gamma0 , cos , cosgam , Q , }

253 :	"singam"
		- NEIGH  = { gamma0 , sin , singam , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gam , || , alp , if , }
		- SUCC   = { gamma0 , cos , cosgam , Q , }

253 :	"sin"
		- NEIGH  = { gamma0 , sin , singam , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gam , || , alp , if , }
		- SUCC   = { gamma0 , cos , cosgam , Q , }

253 :	"gamma0"
		- NEIGH  = { gamma0 , sin , singam , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gam , || , alp , if , }
		- SUCC   = { gamma0 , cos , cosgam , Q , }

254 :	"Q"
		- NEIGH  = { gamma0 , cos , cosgam , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , sin , singam , Q , }
		- SUCC   = { gamma , sin , sinrot , Q , }

254 :	"cosgam"
		- NEIGH  = { gamma0 , cos , cosgam , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , sin , singam , Q , }
		- SUCC   = { gamma , sin , sinrot , Q , }

254 :	"cos"
		- NEIGH  = { gamma0 , cos , cosgam , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , sin , singam , Q , }
		- SUCC   = { gamma , sin , sinrot , Q , }

254 :	"gamma0"
		- NEIGH  = { gamma0 , cos , cosgam , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , sin , singam , Q , }
		- SUCC   = { gamma , sin , sinrot , Q , }

255 :	"Q"
		- NEIGH  = { gamma , sin , sinrot , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , cos , cosgam , Q , }
		- SUCC   = { cos , gamma , cosrot , Q , }

255 :	"sinrot"
		- NEIGH  = { gamma , sin , sinrot , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , cos , cosgam , Q , }
		- SUCC   = { cos , gamma , cosrot , Q , }

255 :	"sin"
		- NEIGH  = { gamma , sin , sinrot , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , cos , cosgam , Q , }
		- SUCC   = { cos , gamma , cosrot , Q , }

255 :	"gamma"
		- NEIGH  = { gamma , sin , sinrot , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , cos , cosgam , Q , }
		- SUCC   = { cos , gamma , cosrot , Q , }

256 :	"Q"
		- NEIGH  = { cos , gamma , cosrot , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , sin , sinrot , Q , }
		- SUCC   = { B , rB , * , Q , A , ArB , / , BrA , }

256 :	"cosrot"
		- NEIGH  = { cos , gamma , cosrot , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , sin , sinrot , Q , }
		- SUCC   = { B , rB , * , Q , A , ArB , / , BrA , }

256 :	"cos"
		- NEIGH  = { cos , gamma , cosrot , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , sin , sinrot , Q , }
		- SUCC   = { B , rB , * , Q , A , ArB , / , BrA , }

256 :	"gamma"
		- NEIGH  = { cos , gamma , cosrot , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma , sin , sinrot , Q , }
		- SUCC   = { B , rB , * , Q , A , ArB , / , BrA , }

257 :	"Q"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"BrA"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"/"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"Q"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"ArB"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"Q"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"A"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"*"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"Q"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"rB"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"/"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"Q"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

257 :	"B"
		- NEIGH  = { B , rB , * , Q , A , ArB , / , BrA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cos , gamma , cosrot , Q , }
		- SUCC   = { B , * , A , AB , Q , }

258 :	"Q"
		- NEIGH  = { B , * , A , AB , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { B , rB , * , Q , A , ArB , / , BrA , }
		- SUCC   = { no_off , if , }

258 :	"AB"
		- NEIGH  = { B , * , A , AB , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { B , rB , * , Q , A , ArB , / , BrA , }
		- SUCC   = { no_off , if , }

258 :	"Q"
		- NEIGH  = { B , * , A , AB , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { B , rB , * , Q , A , ArB , / , BrA , }
		- SUCC   = { no_off , if , }

258 :	"A"
		- NEIGH  = { B , * , A , AB , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { B , rB , * , Q , A , ArB , / , BrA , }
		- SUCC   = { no_off , if , }

258 :	"*"
		- NEIGH  = { B , * , A , AB , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { B , rB , * , Q , A , ArB , / , BrA , }
		- SUCC   = { no_off , if , }

258 :	"Q"
		- NEIGH  = { B , * , A , AB , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { B , rB , * , Q , A , ArB , / , BrA , }
		- SUCC   = { no_off , if , }

258 :	"B"
		- NEIGH  = { B , * , A , AB , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { B , rB , * , Q , A , ArB , / , BrA , }
		- SUCC   = { no_off , if , }

259 :	"if"
		- NEIGH  = { no_off , if , }
		- PARENT = { }
		- CHILD  = { < , P , if , cos , D , / , - , phi0 , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PRED   = { B , * , A , AB , Q , }
		- SUCC   = { gamma0 , * , F , }

259 :	"no_off"
		- NEIGH  = { no_off , if , }
		- PARENT = { }
		- CHILD  = { < , P , if , cos , D , / , - , phi0 , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PRED   = { B , * , A , AB , Q , }
		- SUCC   = { gamma0 , * , F , }

260 :	"Q"
		- NEIGH  = { u_0 , Q , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

260 :	"u_0"
		- NEIGH  = { u_0 , Q , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

262 :	"Q"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"u_0"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"fabs"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"Q"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"ArB"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"*"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"atan"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"sqrt"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"D"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"*"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"D"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"-"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"/"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"cos"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

262 :	"alpha_c"
		- NEIGH  = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- PARENT = { no_off , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , phi0 , P , if , }

263 :	"if"
		- NEIGH  = { < , phi0 , P , if , }
		- PARENT = { no_off , if , }
		- CHILD  = { - , u_0 , Q , }
		- PRED   = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- SUCC   = { }

263 :	"P"
		- NEIGH  = { < , phi0 , P , if , }
		- PARENT = { no_off , if , }
		- CHILD  = { - , u_0 , Q , }
		- PRED   = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- SUCC   = { }

263 :	"phi0"
		- NEIGH  = { < , phi0 , P , if , }
		- PARENT = { no_off , if , }
		- CHILD  = { - , u_0 , Q , }
		- PRED   = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- SUCC   = { }

263 :	"<"
		- NEIGH  = { < , phi0 , P , if , }
		- PARENT = { no_off , if , }
		- CHILD  = { - , u_0 , Q , }
		- PRED   = { cos , D , / , - , atan , alpha_c , * , sqrt , Q , ArB , fabs , u_0 , }
		- SUCC   = { }

264 :	"Q"
		- NEIGH  = { - , u_0 , Q , }
		- PARENT = { < , phi0 , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"u_0"
		- NEIGH  = { - , u_0 , Q , }
		- PARENT = { < , phi0 , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"-"
		- NEIGH  = { - , u_0 , Q , }
		- PARENT = { < , phi0 , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"Q"
		- NEIGH  = { - , u_0 , Q , }
		- PARENT = { < , phi0 , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

264 :	"u_0"
		- NEIGH  = { - , u_0 , Q , }
		- PARENT = { < , phi0 , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"F"
		- NEIGH  = { gamma0 , * , F , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , if , }
		- SUCC   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }

266 :	"*"
		- NEIGH  = { gamma0 , * , F , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , if , }
		- SUCC   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }

266 :	"gamma0"
		- NEIGH  = { gamma0 , * , F , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { no_off , if , }
		- SUCC   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }

267 :	"Q"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

267 :	"v_pole_n"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

267 :	"Q"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

267 :	"ArB"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

267 :	"*"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

267 :	"log"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

267 :	"tan"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

267 :	"M_FORTPI"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

267 :	"-"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

267 :	"F"
		- NEIGH  = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gamma0 , * , F , }
		- SUCC   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }

268 :	"Q"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

268 :	"v_pole_s"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

268 :	"Q"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

268 :	"ArB"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

268 :	"*"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

268 :	"log"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

268 :	"tan"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

268 :	"M_FORTPI"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

268 :	"+"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

268 :	"F"
		- NEIGH  = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , M_FORTPI , * , Q , ArB , log , - , tan , v_pole_n , }
		- SUCC   = { omerc_e_inverse , inv , P , }

269 :	"P"
		- NEIGH  = { omerc_e_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- SUCC   = { omerc_e_forward , fwd , P , }

269 :	"inv"
		- NEIGH  = { omerc_e_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- SUCC   = { omerc_e_forward , fwd , P , }

269 :	"omerc_e_inverse"
		- NEIGH  = { omerc_e_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { F , + , M_FORTPI , tan , * , Q , ArB , log , v_pole_s , }
		- SUCC   = { omerc_e_forward , fwd , P , }

270 :	"P"
		- NEIGH  = { omerc_e_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omerc_e_inverse , inv , P , }
		- SUCC   = { P , return , }

270 :	"fwd"
		- NEIGH  = { omerc_e_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omerc_e_inverse , inv , P , }
		- SUCC   = { P , return , }

270 :	"omerc_e_forward"
		- NEIGH  = { omerc_e_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omerc_e_inverse , inv , P , }
		- SUCC   = { P , return , }

272 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omerc_e_forward , fwd , P , }
		- SUCC   = { }

272 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omerc_e_forward , fwd , P , }
		- SUCC   = { }

