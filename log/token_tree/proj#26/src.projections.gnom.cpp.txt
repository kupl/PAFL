10 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

10 :	"gnom"
		- NEIGH  = { gnom , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"Mode"
		- NEIGH  = { Mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

17 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

18 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

25 :	"sinph0"
		- NEIGH  = { sinph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

26 :	"cosph0"
		- NEIGH  = { cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

27 :	"Mode"
		- NEIGH  = { Mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

27 :	"mode"
		- NEIGH  = { mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"gnom_s_forward"
		- NEIGH  = { gnom_s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

33 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

33 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

34 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

34 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

34 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

34 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

34 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

34 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

34 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

34 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

34 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

34 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

35 :	"coslam"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

35 :	"cosphi"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

35 :	"sinphi"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

37 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

37 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

37 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

37 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

38 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

38 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

38 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

38 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

39 :	"coslam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

39 :	"cos"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

39 :	"lp"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

39 :	"lam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

41 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { N_POLE , S_POLE , cosph0 , + , OBLIQ , sinphi , sinph0 , coslam , Q , break , EQUIT , xy , cosphi , * , - , y , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { <= , y , xy , if , }

41 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { N_POLE , S_POLE , cosph0 , + , OBLIQ , sinphi , sinph0 , coslam , Q , break , EQUIT , xy , cosphi , * , - , y , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { <= , y , xy , if , }

41 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { N_POLE , S_POLE , cosph0 , + , OBLIQ , sinphi , sinph0 , coslam , Q , break , EQUIT , xy , cosphi , * , - , y , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { <= , y , xy , if , }

42 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { coslam , cosphi , * , y , xy , }

43 :	"xy"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

43 :	"y"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

43 :	"cosphi"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

43 :	"*"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

43 :	"coslam"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

44 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { coslam , cosphi , * , y , xy , }
		- SUCC   = { OBLIQ , }

45 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }

46 :	"xy"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"y"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"Q"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"sinph0"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"*"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"sinphi"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"+"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"Q"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"cosph0"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"*"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"cosphi"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"*"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

46 :	"coslam"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

47 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { S_POLE , }

48 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { sinphi , - , y , xy , }

49 :	"xy"
		- NEIGH  = { sinphi , - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

49 :	"y"
		- NEIGH  = { sinphi , - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

49 :	"-"
		- NEIGH  = { sinphi , - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

49 :	"sinphi"
		- NEIGH  = { sinphi , - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

50 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinphi , - , y , xy , }
		- SUCC   = { N_POLE , }

51 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { sinphi , y , xy , }

52 :	"xy"
		- NEIGH  = { sinphi , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

52 :	"y"
		- NEIGH  = { sinphi , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

52 :	"sinphi"
		- NEIGH  = { sinphi , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

53 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinphi , y , xy , }
		- SUCC   = { }

56 :	"if"
		- NEIGH  = { <= , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { lam , lp , sin , cosphi , / , * , y , x , xy , }

56 :	"xy"
		- NEIGH  = { <= , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { lam , lp , sin , cosphi , / , * , y , x , xy , }

56 :	"y"
		- NEIGH  = { <= , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { lam , lp , sin , cosphi , / , * , y , x , xy , }

56 :	"<="
		- NEIGH  = { <= , y , xy , if , }
		- PARENT = { }
		- CHILD  = { xy , PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , return , P , proj_errno_set , }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { lam , lp , sin , cosphi , / , * , y , x , xy , }

57 :	"proj_errno_set"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { <= , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

57 :	"P"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { <= , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

57 :	"PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN"
		- NEIGH  = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- PARENT = { <= , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

58 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { <= , y , xy , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

58 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { <= , y , xy , if , }
		- CHILD  = { }
		- PRED   = { PROJ_ERR_COORD_TRANSFM_OUTSIDE_PROJECTION_DOMAIN , P , proj_errno_set , }
		- SUCC   = { }

61 :	"xy"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"x"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"xy"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"y"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"/"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"xy"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"y"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"*"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"cosphi"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"*"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"sin"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"lp"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

61 :	"lam"
		- NEIGH  = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , y , xy , if , }
		- SUCC   = { mode , Q , switch , }

62 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { S_POLE , N_POLE , sinph0 , coslam , Q , cosph0 , sinphi , OBLIQ , y , - , break , * , *= , cosphi , xy , EQUIT , }
		- PRED   = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- SUCC   = { xy , return , }

62 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { S_POLE , N_POLE , sinph0 , coslam , Q , cosph0 , sinphi , OBLIQ , y , - , break , * , *= , cosphi , xy , EQUIT , }
		- PRED   = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- SUCC   = { xy , return , }

62 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { S_POLE , N_POLE , sinph0 , coslam , Q , cosph0 , sinphi , OBLIQ , y , - , break , * , *= , cosphi , xy , EQUIT , }
		- PRED   = { lam , lp , sin , cosphi , / , * , y , x , xy , }
		- SUCC   = { xy , return , }

63 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinphi , *= , y , xy , }

64 :	"xy"
		- NEIGH  = { sinphi , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

64 :	"y"
		- NEIGH  = { sinphi , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

64 :	"*="
		- NEIGH  = { sinphi , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

64 :	"sinphi"
		- NEIGH  = { sinphi , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { break , }

65 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinphi , *= , y , xy , }
		- SUCC   = { OBLIQ , }

66 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }

67 :	"xy"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"y"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"*="
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"Q"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"cosph0"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"*"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"sinphi"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"-"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"Q"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"sinph0"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"*"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"cosphi"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"*"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

67 :	"coslam"
		- NEIGH  = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { break , }

68 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosphi , sinph0 , - , sinphi , cosph0 , Q , * , *= , y , coslam , xy , }
		- SUCC   = { N_POLE , }

69 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { - , coslam , }

70 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

70 :	"-"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

70 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

72 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , }
		- SUCC   = { cosphi , * , *= , y , coslam , xy , }

73 :	"xy"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

73 :	"y"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

73 :	"*="
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

73 :	"cosphi"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

73 :	"*"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

73 :	"coslam"
		- NEIGH  = { cosphi , * , *= , y , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

74 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosphi , * , *= , y , coslam , xy , }
		- SUCC   = { }

76 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

76 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

80 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"gnom_s_inverse"
		- NEIGH  = { gnom_s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

81 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

82 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

82 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

82 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

82 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

82 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

82 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

82 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

82 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

82 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

82 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinz , cosz , rh , }

83 :	"rh"
		- NEIGH  = { sinz , cosz , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , hypot , rh , }

83 :	"cosz"
		- NEIGH  = { sinz , cosz , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , hypot , rh , }

83 :	"sinz"
		- NEIGH  = { sinz , cosz , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , x , xy , hypot , rh , }

85 :	"rh"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinz , cosz , rh , }
		- SUCC   = { phi , atan , lp , rh , sin , sinz , }

85 :	"hypot"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinz , cosz , rh , }
		- SUCC   = { phi , atan , lp , rh , sin , sinz , }

85 :	"xy"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinz , cosz , rh , }
		- SUCC   = { phi , atan , lp , rh , sin , sinz , }

85 :	"x"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinz , cosz , rh , }
		- SUCC   = { phi , atan , lp , rh , sin , sinz , }

85 :	"xy"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinz , cosz , rh , }
		- SUCC   = { phi , atan , lp , rh , sin , sinz , }

85 :	"y"
		- NEIGH  = { y , x , xy , hypot , rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinz , cosz , rh , }
		- SUCC   = { phi , atan , lp , rh , sin , sinz , }

86 :	"sinz"
		- NEIGH  = { phi , atan , lp , rh , sin , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

86 :	"sin"
		- NEIGH  = { phi , atan , lp , rh , sin , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

86 :	"lp"
		- NEIGH  = { phi , atan , lp , rh , sin , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

86 :	"phi"
		- NEIGH  = { phi , atan , lp , rh , sin , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

86 :	"atan"
		- NEIGH  = { phi , atan , lp , rh , sin , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

86 :	"rh"
		- NEIGH  = { phi , atan , lp , rh , sin , sinz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , hypot , rh , }
		- SUCC   = { sinz , - , * , sqrt , cosz , }

87 :	"cosz"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , atan , lp , rh , sin , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

87 :	"sqrt"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , atan , lp , rh , sin , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

87 :	"-"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , atan , lp , rh , sin , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

87 :	"sinz"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , atan , lp , rh , sin , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

87 :	"*"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , atan , lp , rh , sin , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

87 :	"sinz"
		- NEIGH  = { sinz , - , * , sqrt , cosz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , atan , lp , rh , sin , sinz , }
		- SUCC   = { <= , rh , fabs , if , }

89 :	"if"
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { y , x , xy , atan2 , mode , Q , switch , P , lp , lam , phi0 , phi , }
		- PRED   = { sinz , - , * , sqrt , cosz , }
		- SUCC   = { lp , return , }

89 :	"fabs"
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { y , x , xy , atan2 , mode , Q , switch , P , lp , lam , phi0 , phi , }
		- PRED   = { sinz , - , * , sqrt , cosz , }
		- SUCC   = { lp , return , }

89 :	"rh"
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { y , x , xy , atan2 , mode , Q , switch , P , lp , lam , phi0 , phi , }
		- PRED   = { sinz , - , * , sqrt , cosz , }
		- SUCC   = { lp , return , }

89 :	"<="
		- NEIGH  = { <= , rh , fabs , if , }
		- PARENT = { }
		- CHILD  = { y , x , xy , atan2 , mode , Q , switch , P , lp , lam , phi0 , phi , }
		- PRED   = { sinz , - , * , sqrt , cosz , }
		- SUCC   = { lp , return , }

90 :	"lp"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

90 :	"phi"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

90 :	"P"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

90 :	"phi0"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

91 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { }

91 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { }

93 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { N_POLE , M_HALFPI , -= , S_POLE , * , *= , EQUIT , break , cosph0 , x , phi , >= , fabs , y , sin , if , / , Q , xy , - , + , rh , sinz , sinph0 , cosz , lp , OBLIQ , }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

93 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { N_POLE , M_HALFPI , -= , S_POLE , * , *= , EQUIT , break , cosph0 , x , phi , >= , fabs , y , sin , if , / , Q , xy , - , + , rh , sinz , sinph0 , cosz , lp , OBLIQ , }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

93 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { N_POLE , M_HALFPI , -= , S_POLE , * , *= , EQUIT , break , cosph0 , x , phi , >= , fabs , y , sin , if , / , Q , xy , - , + , rh , sinz , sinph0 , cosz , lp , OBLIQ , }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

94 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }

95 :	"lp"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"phi"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"cosz"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"*"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"Q"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"sinph0"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"+"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"xy"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"y"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"*"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"sinz"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"*"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"Q"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"cosph0"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"/"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

95 :	"rh"
		- NEIGH  = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { >= , phi , lp , fabs , if , }

96 :	"if"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

96 :	"fabs"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

96 :	"lp"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

96 :	"phi"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

96 :	">="
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { / , cosph0 , rh , y , sinz , xy , + , sinph0 , Q , * , cosz , phi , lp , }
		- SUCC   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }

97 :	"lp"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"phi"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"lp"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"phi"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	">"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"-"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"lp"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"phi"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"asin"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"lp"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"phi"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

100 :	"xy"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"y"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"cosz"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"-"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"Q"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"sinph0"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"*"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"sin"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"lp"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"phi"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"*"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

100 :	"rh"
		- NEIGH  = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { cosph0 , Q , xy , sinz , * , *= , x , }

101 :	"xy"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

101 :	"x"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

101 :	"*="
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

101 :	"sinz"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

101 :	"*"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

101 :	"Q"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

101 :	"cosph0"
		- NEIGH  = { cosph0 , Q , xy , sinz , * , *= , x , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , rh , sin , sinph0 , Q , - , cosz , * , y , xy , }
		- SUCC   = { break , }

102 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosph0 , Q , xy , sinz , * , *= , x , }
		- SUCC   = { EQUIT , }

103 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { rh , * , y , sinz , xy , / , phi , lp , }

104 :	"lp"
		- NEIGH  = { rh , * , y , sinz , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { >= , phi , lp , fabs , if , }

104 :	"phi"
		- NEIGH  = { rh , * , y , sinz , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { >= , phi , lp , fabs , if , }

104 :	"xy"
		- NEIGH  = { rh , * , y , sinz , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { >= , phi , lp , fabs , if , }

104 :	"y"
		- NEIGH  = { rh , * , y , sinz , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { >= , phi , lp , fabs , if , }

104 :	"*"
		- NEIGH  = { rh , * , y , sinz , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { >= , phi , lp , fabs , if , }

104 :	"sinz"
		- NEIGH  = { rh , * , y , sinz , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { >= , phi , lp , fabs , if , }

104 :	"/"
		- NEIGH  = { rh , * , y , sinz , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { >= , phi , lp , fabs , if , }

104 :	"rh"
		- NEIGH  = { rh , * , y , sinz , xy , / , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { >= , phi , lp , fabs , if , }

105 :	"if"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { rh , * , y , sinz , xy , / , phi , lp , }
		- SUCC   = { rh , cosz , * , y , xy , }

105 :	"fabs"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { rh , * , y , sinz , xy , / , phi , lp , }
		- SUCC   = { rh , cosz , * , y , xy , }

105 :	"lp"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { rh , * , y , sinz , xy , / , phi , lp , }
		- SUCC   = { rh , cosz , * , y , xy , }

105 :	"phi"
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { rh , * , y , sinz , xy , / , phi , lp , }
		- SUCC   = { rh , cosz , * , y , xy , }

105 :	">="
		- NEIGH  = { >= , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { asin , M_HALFPI , phi , > , - , lp , }
		- PRED   = { rh , * , y , sinz , xy , / , phi , lp , }
		- SUCC   = { rh , cosz , * , y , xy , }

106 :	"lp"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

106 :	"phi"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

106 :	"lp"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

106 :	"phi"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

106 :	">"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

106 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

106 :	"-"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

106 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , > , - , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

108 :	"lp"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

108 :	"phi"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

108 :	"asin"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

108 :	"lp"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

108 :	"phi"
		- NEIGH  = { asin , phi , lp , }
		- PARENT = { >= , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

109 :	"xy"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { sinz , *= , x , xy , }

109 :	"y"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { sinz , *= , x , xy , }

109 :	"cosz"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { sinz , *= , x , xy , }

109 :	"*"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { sinz , *= , x , xy , }

109 :	"rh"
		- NEIGH  = { rh , cosz , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , fabs , if , }
		- SUCC   = { sinz , *= , x , xy , }

110 :	"xy"
		- NEIGH  = { sinz , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , cosz , * , y , xy , }
		- SUCC   = { break , }

110 :	"x"
		- NEIGH  = { sinz , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , cosz , * , y , xy , }
		- SUCC   = { break , }

110 :	"*="
		- NEIGH  = { sinz , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , cosz , * , y , xy , }
		- SUCC   = { break , }

110 :	"sinz"
		- NEIGH  = { sinz , *= , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { rh , cosz , * , y , xy , }
		- SUCC   = { break , }

111 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinz , *= , x , xy , }
		- SUCC   = { S_POLE , }

112 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { M_HALFPI , -= , phi , lp , }

113 :	"lp"
		- NEIGH  = { M_HALFPI , -= , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

113 :	"phi"
		- NEIGH  = { M_HALFPI , -= , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

113 :	"-="
		- NEIGH  = { M_HALFPI , -= , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

113 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , -= , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

114 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , -= , phi , lp , }
		- SUCC   = { N_POLE , }

115 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { M_HALFPI , - , phi , lp , }

116 :	"lp"
		- NEIGH  = { M_HALFPI , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

116 :	"phi"
		- NEIGH  = { M_HALFPI , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

116 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

116 :	"-"
		- NEIGH  = { M_HALFPI , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

116 :	"lp"
		- NEIGH  = { M_HALFPI , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

116 :	"phi"
		- NEIGH  = { M_HALFPI , - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , y , xy , }

117 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , phi , lp , }
		- SUCC   = { break , }

117 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , phi , lp , }
		- SUCC   = { break , }

117 :	"-"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , phi , lp , }
		- SUCC   = { break , }

117 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , phi , lp , }
		- SUCC   = { break , }

117 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , phi , lp , }
		- SUCC   = { break , }

118 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , y , xy , }
		- SUCC   = { }

120 :	"lp"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

120 :	"lam"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

120 :	"atan2"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

120 :	"xy"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

120 :	"x"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

120 :	"xy"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

120 :	"y"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { <= , rh , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

122 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , rh , fabs , if , }
		- SUCC   = { }

122 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , rh , fabs , if , }
		- SUCC   = { }

126 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

126 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

126 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

126 :	"gnom"
		- NEIGH  = { gnom , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

127 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

127 :	"Q"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

127 :	"static_cast"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

127 :	"<"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

127 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

127 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

127 :	">"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

127 :	"calloc"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

127 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

128 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

128 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

128 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

129 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

129 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

129 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

129 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

130 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

130 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

130 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

132 :	"if"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { gnom_s_inverse , inv , P , }

132 :	"fabs"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { gnom_s_inverse , inv , P , }

132 :	"fabs"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { gnom_s_inverse , inv , P , }

132 :	"P"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { gnom_s_inverse , inv , P , }

132 :	"phi0"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { gnom_s_inverse , inv , P , }

132 :	"-"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { gnom_s_inverse , inv , P , }

132 :	"M_HALFPI"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { gnom_s_inverse , inv , P , }

132 :	"<"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { if , N_POLE , phi0 , < , S_POLE , mode , fabs , P , Q , }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { gnom_s_inverse , inv , P , }

133 :	"Q"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"mode"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"P"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"phi0"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"<"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"S_POLE"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"N_POLE"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"if"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

134 :	"fabs"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

134 :	"P"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

134 :	"phi0"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

134 :	"<"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , sin , mode , cosph0 , P , OBLIQ , Q , }
		- PRED   = { }
		- SUCC   = { }

135 :	"Q"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"mode"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"EQUIT"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

137 :	"Q"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

137 :	"mode"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

137 :	"OBLIQ"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

138 :	"Q"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

138 :	"sinph0"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

138 :	"sin"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

138 :	"P"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

138 :	"phi0"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

139 :	"Q"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

139 :	"cosph0"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

139 :	"cos"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

139 :	"P"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

139 :	"phi0"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

142 :	"P"
		- NEIGH  = { gnom_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { gnom_s_forward , fwd , P , }

142 :	"inv"
		- NEIGH  = { gnom_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { gnom_s_forward , fwd , P , }

142 :	"gnom_s_inverse"
		- NEIGH  = { gnom_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { gnom_s_forward , fwd , P , }

143 :	"P"
		- NEIGH  = { gnom_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gnom_s_inverse , inv , P , }
		- SUCC   = { es , P , }

143 :	"fwd"
		- NEIGH  = { gnom_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gnom_s_inverse , inv , P , }
		- SUCC   = { es , P , }

143 :	"gnom_s_forward"
		- NEIGH  = { gnom_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gnom_s_inverse , inv , P , }
		- SUCC   = { es , P , }

144 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gnom_s_forward , fwd , P , }
		- SUCC   = { P , return , }

144 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { gnom_s_forward , fwd , P , }
		- SUCC   = { P , return , }

146 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { }

146 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { }

