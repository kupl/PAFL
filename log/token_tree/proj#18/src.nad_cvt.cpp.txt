15 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"nad_cvt"
		- NEIGH  = { nad_cvt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"projCtx"
		- NEIGH  = { projCtx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"ctx"
		- NEIGH  = { ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"in"
		- NEIGH  = { in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"inverse"
		- NEIGH  = { inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"CTABLE"
		- NEIGH  = { CTABLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"ct"
		- NEIGH  = { ct , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"grid_count"
		- NEIGH  = { grid_count , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"PJ_GRIDINFO"
		- NEIGH  = { PJ_GRIDINFO , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"tables"
		- NEIGH  = { tables , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"PJ_LP"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

16 :	"t"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

16 :	"tb"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

16 :	"del"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

16 :	"dif"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

17 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { del , dif , tb , t , PJ_LP , }
		- SUCC   = { * , toltol , }

18 :	"toltol"
		- NEIGH  = { * , toltol , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , HUGE_VAL , lam , in , if , }

18 :	"*"
		- NEIGH  = { * , toltol , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , HUGE_VAL , lam , in , if , }

20 :	"if"
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

20 :	"in"
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

20 :	"lam"
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

20 :	"=="
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

20 :	"HUGE_VAL"
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

21 :	"return"
		- NEIGH  = { in , return , }
		- PARENT = { == , HUGE_VAL , lam , in , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

21 :	"in"
		- NEIGH  = { in , return , }
		- PARENT = { == , HUGE_VAL , lam , in , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"tb"
		- NEIGH  = { in , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , in , if , }
		- SUCC   = { ct , ll , -= , lam , tb , }

24 :	"in"
		- NEIGH  = { in , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , in , if , }
		- SUCC   = { ct , ll , -= , lam , tb , }

25 :	"tb"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

25 :	"lam"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

25 :	"-="
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

25 :	"ct"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

25 :	"ll"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

25 :	"lam"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

26 :	"tb"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

26 :	"phi"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

26 :	"-="
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

26 :	"ct"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

26 :	"ll"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

26 :	"phi"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

27 :	"tb"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

27 :	"lam"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

27 :	"adjlon"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

27 :	"tb"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

27 :	"lam"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

27 :	"-"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

27 :	"M_PI"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

27 :	"+"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

27 :	"M_PI"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

29 :	"t"
		- NEIGH  = { tb , nad_intr , ct , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { HUGE_VAL , lam , == , t , if , }

29 :	"nad_intr"
		- NEIGH  = { tb , nad_intr , ct , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { HUGE_VAL , lam , == , t , if , }

29 :	"tb"
		- NEIGH  = { tb , nad_intr , ct , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { HUGE_VAL , lam , == , t , if , }

29 :	"ct"
		- NEIGH  = { tb , nad_intr , ct , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { HUGE_VAL , lam , == , t , if , }

30 :	"if"
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

30 :	"t"
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

30 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

30 :	"=="
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

30 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

31 :	"return"
		- NEIGH  = { t , return , }
		- PARENT = { HUGE_VAL , lam , == , t , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"t"
		- NEIGH  = { t , return , }
		- PARENT = { HUGE_VAL , lam , == , t , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

33 :	"if"
		- NEIGH  = { ! , inverse , if , }
		- PARENT = { }
		- CHILD  = { return , += , phi , t , lam , -= , in , }
		- PRED   = { HUGE_VAL , lam , == , t , if , }
		- SUCC   = { + , tb , lam , t , }

33 :	"!"
		- NEIGH  = { ! , inverse , if , }
		- PARENT = { }
		- CHILD  = { return , += , phi , t , lam , -= , in , }
		- PRED   = { HUGE_VAL , lam , == , t , if , }
		- SUCC   = { + , tb , lam , t , }

33 :	"inverse"
		- NEIGH  = { ! , inverse , if , }
		- PARENT = { }
		- CHILD  = { return , += , phi , t , lam , -= , in , }
		- PRED   = { HUGE_VAL , lam , == , t , if , }
		- SUCC   = { + , tb , lam , t , }

34 :	"in"
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

34 :	"lam"
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

34 :	"-="
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

34 :	"t"
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

34 :	"lam"
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

35 :	"in"
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

35 :	"phi"
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

35 :	"+="
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

35 :	"t"
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

35 :	"phi"
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

36 :	"return"
		- NEIGH  = { in , return , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , += , phi , in , }
		- SUCC   = { }

36 :	"in"
		- NEIGH  = { in , return , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , += , phi , in , }
		- SUCC   = { }

39 :	"t"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

39 :	"lam"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

39 :	"tb"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

39 :	"lam"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

39 :	"+"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

39 :	"t"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

39 :	"lam"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

40 :	"t"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

40 :	"phi"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

40 :	"tb"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

40 :	"phi"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

40 :	"-"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

40 :	"t"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

40 :	"phi"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

43 :	"del"
		- NEIGH  = { ct , t , nad_intr , del , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , phi , t , }
		- SUCC   = { phi , && , == , lam , del , if , }

43 :	"nad_intr"
		- NEIGH  = { ct , t , nad_intr , del , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , phi , t , }
		- SUCC   = { phi , && , == , lam , del , if , }

43 :	"t"
		- NEIGH  = { ct , t , nad_intr , del , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , phi , t , }
		- SUCC   = { phi , && , == , lam , del , if , }

43 :	"ct"
		- NEIGH  = { ct , t , nad_intr , del , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , phi , t , }
		- SUCC   = { phi , && , == , lam , del , if , }

46 :	"if"
		- NEIGH  = { phi , && , == , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

46 :	"del"
		- NEIGH  = { phi , && , == , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

46 :	"lam"
		- NEIGH  = { phi , && , == , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

46 :	"=="
		- NEIGH  = { phi , && , == , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

46 :	"&&"
		- NEIGH  = { phi , && , == , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

46 :	"del"
		- NEIGH  = { phi , && , == , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

46 :	"phi"
		- NEIGH  = { phi , && , == , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

46 :	"=="
		- NEIGH  = { phi , && , == , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

47 :	"break"
		- NEIGH  = { break , }
		- PARENT = { phi , && , == , lam , del , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"if"
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , dif , adjlon , max , M_PI , -= , tb , PJ_LOG_DEBUG_MINOR , - , tables , || , in , ctx , newCt , numeric_limits , find_ctable , ll , id , continue , == , phi , PJ_LP , t , ct , if , lam , lp , grid_count , + , pj_log , }
		- PRED   = { phi , && , == , lam , del , if , }
		- SUCC   = { tb , del , - , t , lam , dif , }

51 :	"del"
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , dif , adjlon , max , M_PI , -= , tb , PJ_LOG_DEBUG_MINOR , - , tables , || , in , ctx , newCt , numeric_limits , find_ctable , ll , id , continue , == , phi , PJ_LP , t , ct , if , lam , lp , grid_count , + , pj_log , }
		- PRED   = { phi , && , == , lam , del , if , }
		- SUCC   = { tb , del , - , t , lam , dif , }

51 :	"lam"
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , dif , adjlon , max , M_PI , -= , tb , PJ_LOG_DEBUG_MINOR , - , tables , || , in , ctx , newCt , numeric_limits , find_ctable , ll , id , continue , == , phi , PJ_LP , t , ct , if , lam , lp , grid_count , + , pj_log , }
		- PRED   = { phi , && , == , lam , del , if , }
		- SUCC   = { tb , del , - , t , lam , dif , }

51 :	"=="
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , dif , adjlon , max , M_PI , -= , tb , PJ_LOG_DEBUG_MINOR , - , tables , || , in , ctx , newCt , numeric_limits , find_ctable , ll , id , continue , == , phi , PJ_LP , t , ct , if , lam , lp , grid_count , + , pj_log , }
		- PRED   = { phi , && , == , lam , del , if , }
		- SUCC   = { tb , del , - , t , lam , dif , }

51 :	"HUGE_VAL"
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , dif , adjlon , max , M_PI , -= , tb , PJ_LOG_DEBUG_MINOR , - , tables , || , in , ctx , newCt , numeric_limits , find_ctable , ll , id , continue , == , phi , PJ_LP , t , ct , if , lam , lp , grid_count , + , pj_log , }
		- PRED   = { phi , && , == , lam , del , if , }
		- SUCC   = { tb , del , - , t , lam , dif , }

53 :	"if"
		- NEIGH  = { == , grid_count , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

53 :	"grid_count"
		- NEIGH  = { == , grid_count , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

53 :	"=="
		- NEIGH  = { == , grid_count , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

54 :	"break"
		- NEIGH  = { break , }
		- PARENT = { == , grid_count , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

55 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { == , grid_count , if , }
		- SUCC   = { ll , + , lam , ct , t , lp , }

55 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { == , grid_count , if , }
		- SUCC   = { ll , + , lam , ct , t , lp , }

56 :	"lp"
		- NEIGH  = { ll , + , lam , ct , t , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { ll , + , ct , t , phi , lp , }

56 :	"lam"
		- NEIGH  = { ll , + , lam , ct , t , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { ll , + , ct , t , phi , lp , }

56 :	"t"
		- NEIGH  = { ll , + , lam , ct , t , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { ll , + , ct , t , phi , lp , }

56 :	"lam"
		- NEIGH  = { ll , + , lam , ct , t , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { ll , + , ct , t , phi , lp , }

56 :	"+"
		- NEIGH  = { ll , + , lam , ct , t , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { ll , + , ct , t , phi , lp , }

56 :	"ct"
		- NEIGH  = { ll , + , lam , ct , t , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { ll , + , ct , t , phi , lp , }

56 :	"ll"
		- NEIGH  = { ll , + , lam , ct , t , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { ll , + , ct , t , phi , lp , }

56 :	"lam"
		- NEIGH  = { ll , + , lam , ct , t , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { ll , + , ct , t , phi , lp , }

57 :	"lp"
		- NEIGH  = { ll , + , ct , t , phi , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , lam , ct , t , lp , }
		- SUCC   = { grid_count , lp , ctx , tables , find_ctable , newCt , }

57 :	"phi"
		- NEIGH  = { ll , + , ct , t , phi , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , lam , ct , t , lp , }
		- SUCC   = { grid_count , lp , ctx , tables , find_ctable , newCt , }

57 :	"t"
		- NEIGH  = { ll , + , ct , t , phi , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , lam , ct , t , lp , }
		- SUCC   = { grid_count , lp , ctx , tables , find_ctable , newCt , }

57 :	"phi"
		- NEIGH  = { ll , + , ct , t , phi , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , lam , ct , t , lp , }
		- SUCC   = { grid_count , lp , ctx , tables , find_ctable , newCt , }

57 :	"+"
		- NEIGH  = { ll , + , ct , t , phi , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , lam , ct , t , lp , }
		- SUCC   = { grid_count , lp , ctx , tables , find_ctable , newCt , }

57 :	"ct"
		- NEIGH  = { ll , + , ct , t , phi , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , lam , ct , t , lp , }
		- SUCC   = { grid_count , lp , ctx , tables , find_ctable , newCt , }

57 :	"ll"
		- NEIGH  = { ll , + , ct , t , phi , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , lam , ct , t , lp , }
		- SUCC   = { grid_count , lp , ctx , tables , find_ctable , newCt , }

57 :	"phi"
		- NEIGH  = { ll , + , ct , t , phi , lp , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , lam , ct , t , lp , }
		- SUCC   = { grid_count , lp , ctx , tables , find_ctable , newCt , }

58 :	"newCt"
		- NEIGH  = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , ct , t , phi , lp , }
		- SUCC   = { || , ct , == , newCt , if , }

58 :	"find_ctable"
		- NEIGH  = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , ct , t , phi , lp , }
		- SUCC   = { || , ct , == , newCt , if , }

58 :	"ctx"
		- NEIGH  = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , ct , t , phi , lp , }
		- SUCC   = { || , ct , == , newCt , if , }

58 :	"lp"
		- NEIGH  = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , ct , t , phi , lp , }
		- SUCC   = { || , ct , == , newCt , if , }

58 :	"grid_count"
		- NEIGH  = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , ct , t , phi , lp , }
		- SUCC   = { || , ct , == , newCt , if , }

58 :	"tables"
		- NEIGH  = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , + , ct , t , phi , lp , }
		- SUCC   = { || , ct , == , newCt , if , }

59 :	"if"
		- NEIGH  = { || , ct , == , newCt , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- SUCC   = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }

59 :	"newCt"
		- NEIGH  = { || , ct , == , newCt , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- SUCC   = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }

59 :	"=="
		- NEIGH  = { || , ct , == , newCt , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- SUCC   = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }

59 :	"||"
		- NEIGH  = { || , ct , == , newCt , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- SUCC   = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }

59 :	"newCt"
		- NEIGH  = { || , ct , == , newCt , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- SUCC   = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }

59 :	"=="
		- NEIGH  = { || , ct , == , newCt , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- SUCC   = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }

59 :	"ct"
		- NEIGH  = { || , ct , == , newCt , if , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { break , }
		- PRED   = { grid_count , lp , ctx , tables , find_ctable , newCt , }
		- SUCC   = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }

60 :	"break"
		- NEIGH  = { break , }
		- PARENT = { || , ct , == , newCt , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"pj_log"
		- NEIGH  = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { || , ct , == , newCt , if , }
		- SUCC   = { newCt , ct , }

61 :	"ctx"
		- NEIGH  = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { || , ct , == , newCt , if , }
		- SUCC   = { newCt , ct , }

61 :	"PJ_LOG_DEBUG_MINOR"
		- NEIGH  = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { || , ct , == , newCt , if , }
		- SUCC   = { newCt , ct , }

62 :	"ct"
		- NEIGH  = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { || , ct , == , newCt , if , }
		- SUCC   = { newCt , ct , }

62 :	"id"
		- NEIGH  = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { || , ct , == , newCt , if , }
		- SUCC   = { newCt , ct , }

63 :	"newCt"
		- NEIGH  = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { || , ct , == , newCt , if , }
		- SUCC   = { newCt , ct , }

63 :	"id"
		- NEIGH  = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { || , ct , == , newCt , if , }
		- SUCC   = { newCt , ct , }

64 :	"ct"
		- NEIGH  = { newCt , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }
		- SUCC   = { ll , - , lp , lam , ct , t , }

64 :	"newCt"
		- NEIGH  = { newCt , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , id , ct , PJ_LOG_DEBUG_MINOR , ctx , pj_log , }
		- SUCC   = { ll , - , lp , lam , ct , t , }

65 :	"t"
		- NEIGH  = { ll , - , lp , lam , ct , t , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , ct , }
		- SUCC   = { ll , - , lp , t , phi , ct , }

65 :	"lam"
		- NEIGH  = { ll , - , lp , lam , ct , t , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , ct , }
		- SUCC   = { ll , - , lp , t , phi , ct , }

65 :	"lp"
		- NEIGH  = { ll , - , lp , lam , ct , t , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , ct , }
		- SUCC   = { ll , - , lp , t , phi , ct , }

65 :	"lam"
		- NEIGH  = { ll , - , lp , lam , ct , t , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , ct , }
		- SUCC   = { ll , - , lp , t , phi , ct , }

65 :	"-"
		- NEIGH  = { ll , - , lp , lam , ct , t , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , ct , }
		- SUCC   = { ll , - , lp , t , phi , ct , }

65 :	"ct"
		- NEIGH  = { ll , - , lp , lam , ct , t , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , ct , }
		- SUCC   = { ll , - , lp , t , phi , ct , }

65 :	"ll"
		- NEIGH  = { ll , - , lp , lam , ct , t , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , ct , }
		- SUCC   = { ll , - , lp , t , phi , ct , }

65 :	"lam"
		- NEIGH  = { ll , - , lp , lam , ct , t , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { newCt , ct , }
		- SUCC   = { ll , - , lp , t , phi , ct , }

66 :	"t"
		- NEIGH  = { ll , - , lp , t , phi , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , lam , ct , t , }
		- SUCC   = { in , tb , }

66 :	"phi"
		- NEIGH  = { ll , - , lp , t , phi , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , lam , ct , t , }
		- SUCC   = { in , tb , }

66 :	"lp"
		- NEIGH  = { ll , - , lp , t , phi , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , lam , ct , t , }
		- SUCC   = { in , tb , }

66 :	"phi"
		- NEIGH  = { ll , - , lp , t , phi , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , lam , ct , t , }
		- SUCC   = { in , tb , }

66 :	"-"
		- NEIGH  = { ll , - , lp , t , phi , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , lam , ct , t , }
		- SUCC   = { in , tb , }

66 :	"ct"
		- NEIGH  = { ll , - , lp , t , phi , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , lam , ct , t , }
		- SUCC   = { in , tb , }

66 :	"ll"
		- NEIGH  = { ll , - , lp , t , phi , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , lam , ct , t , }
		- SUCC   = { in , tb , }

66 :	"phi"
		- NEIGH  = { ll , - , lp , t , phi , ct , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , lam , ct , t , }
		- SUCC   = { in , tb , }

67 :	"tb"
		- NEIGH  = { in , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , t , phi , ct , }
		- SUCC   = { ct , ll , -= , lam , tb , }

67 :	"in"
		- NEIGH  = { in , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ll , - , lp , t , phi , ct , }
		- SUCC   = { ct , ll , -= , lam , tb , }

68 :	"tb"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

68 :	"lam"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

68 :	"-="
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

68 :	"ct"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

68 :	"ll"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

68 :	"lam"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

69 :	"tb"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

69 :	"phi"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

69 :	"-="
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

69 :	"ct"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

69 :	"ll"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

69 :	"phi"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

70 :	"tb"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { > , < , max , numeric_limits , std , lam , dif , }

70 :	"lam"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { > , < , max , numeric_limits , std , lam , dif , }

70 :	"adjlon"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { > , < , max , numeric_limits , std , lam , dif , }

70 :	"tb"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { > , < , max , numeric_limits , std , lam , dif , }

70 :	"lam"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { > , < , max , numeric_limits , std , lam , dif , }

70 :	"-"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { > , < , max , numeric_limits , std , lam , dif , }

70 :	"M_PI"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { > , < , max , numeric_limits , std , lam , dif , }

70 :	"+"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { > , < , max , numeric_limits , std , lam , dif , }

70 :	"M_PI"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { > , < , max , numeric_limits , std , lam , dif , }

71 :	"dif"
		- NEIGH  = { > , < , max , numeric_limits , std , lam , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { < , max , numeric_limits , std , > , phi , dif , }

71 :	"lam"
		- NEIGH  = { > , < , max , numeric_limits , std , lam , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { < , max , numeric_limits , std , > , phi , dif , }

71 :	"std"
		- NEIGH  = { > , < , max , numeric_limits , std , lam , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { < , max , numeric_limits , std , > , phi , dif , }

71 :	"numeric_limits"
		- NEIGH  = { > , < , max , numeric_limits , std , lam , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { < , max , numeric_limits , std , > , phi , dif , }

71 :	"<"
		- NEIGH  = { > , < , max , numeric_limits , std , lam , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { < , max , numeric_limits , std , > , phi , dif , }

71 :	">"
		- NEIGH  = { > , < , max , numeric_limits , std , lam , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { < , max , numeric_limits , std , > , phi , dif , }

71 :	"max"
		- NEIGH  = { > , < , max , numeric_limits , std , lam , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { < , max , numeric_limits , std , > , phi , dif , }

72 :	"dif"
		- NEIGH  = { < , max , numeric_limits , std , > , phi , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { > , < , max , numeric_limits , std , lam , dif , }
		- SUCC   = { continue , }

72 :	"phi"
		- NEIGH  = { < , max , numeric_limits , std , > , phi , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { > , < , max , numeric_limits , std , lam , dif , }
		- SUCC   = { continue , }

72 :	"std"
		- NEIGH  = { < , max , numeric_limits , std , > , phi , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { > , < , max , numeric_limits , std , lam , dif , }
		- SUCC   = { continue , }

72 :	"numeric_limits"
		- NEIGH  = { < , max , numeric_limits , std , > , phi , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { > , < , max , numeric_limits , std , lam , dif , }
		- SUCC   = { continue , }

72 :	"<"
		- NEIGH  = { < , max , numeric_limits , std , > , phi , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { > , < , max , numeric_limits , std , lam , dif , }
		- SUCC   = { continue , }

72 :	">"
		- NEIGH  = { < , max , numeric_limits , std , > , phi , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { > , < , max , numeric_limits , std , lam , dif , }
		- SUCC   = { continue , }

72 :	"max"
		- NEIGH  = { < , max , numeric_limits , std , > , phi , dif , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { > , < , max , numeric_limits , std , lam , dif , }
		- SUCC   = { continue , }

73 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { < , max , numeric_limits , std , > , phi , dif , }
		- SUCC   = { }

76 :	"dif"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

76 :	"lam"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

76 :	"t"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

76 :	"lam"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

76 :	"-"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

76 :	"del"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

76 :	"lam"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

76 :	"-"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

76 :	"tb"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

76 :	"lam"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

77 :	"dif"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

77 :	"phi"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

77 :	"t"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

77 :	"phi"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

77 :	"+"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

77 :	"del"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

77 :	"phi"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

77 :	"-"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

77 :	"tb"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

77 :	"phi"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

78 :	"t"
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

78 :	"lam"
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

78 :	"-="
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

78 :	"dif"
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

78 :	"lam"
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

79 :	"t"
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

79 :	"phi"
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

79 :	"-="
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

79 :	"dif"
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

79 :	"phi"
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

81 :	"while"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"--"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"i"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"&&"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"dif"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"lam"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"*"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"dif"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"lam"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"+"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"dif"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"phi"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"*"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"dif"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"phi"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	">"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

81 :	"toltol"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

83 :	"if"
		- NEIGH  = { == , i , if , }
		- PARENT = { }
		- CHILD  = { return , HUGE_VAL , getenv , lam , t , phi , if , }
		- PRED   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- SUCC   = { && , == , HUGE_VAL , getenv , lam , del , if , }

83 :	"i"
		- NEIGH  = { == , i , if , }
		- PARENT = { }
		- CHILD  = { return , HUGE_VAL , getenv , lam , t , phi , if , }
		- PRED   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- SUCC   = { && , == , HUGE_VAL , getenv , lam , del , if , }

83 :	"=="
		- NEIGH  = { == , i , if , }
		- PARENT = { }
		- CHILD  = { return , HUGE_VAL , getenv , lam , t , phi , if , }
		- PRED   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- SUCC   = { && , == , HUGE_VAL , getenv , lam , del , if , }

85 :	"if"
		- NEIGH  = { getenv , if , }
		- PARENT = { == , i , if , }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { }
		- SUCC   = { phi , HUGE_VAL , lam , t , }

85 :	"getenv"
		- NEIGH  = { getenv , if , }
		- PARENT = { == , i , if , }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { }
		- SUCC   = { phi , HUGE_VAL , lam , t , }

86 :	"fprintf"
		- NEIGH  = { stderr , fprintf , }
		- PARENT = { getenv , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"stderr"
		- NEIGH  = { stderr , fprintf , }
		- PARENT = { getenv , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"t"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

87 :	"lam"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

87 :	"t"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

87 :	"phi"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

87 :	"HUGE_VAL"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

88 :	"return"
		- NEIGH  = { t , return , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { phi , HUGE_VAL , lam , t , }
		- SUCC   = { }

88 :	"t"
		- NEIGH  = { t , return , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { phi , HUGE_VAL , lam , t , }
		- SUCC   = { }

92 :	"if"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

92 :	"del"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

92 :	"lam"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

92 :	"=="
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

92 :	"HUGE_VAL"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

92 :	"&&"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

92 :	"getenv"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

93 :	"fprintf"
		- NEIGH  = { stderr , fprintf , }
		- PARENT = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

93 :	"stderr"
		- NEIGH  = { stderr , fprintf , }
		- PARENT = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

95 :	"in"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

95 :	"lam"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

95 :	"adjlon"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

95 :	"t"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

95 :	"lam"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

95 :	"+"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

95 :	"ct"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

95 :	"ll"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

95 :	"lam"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

96 :	"in"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

96 :	"phi"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

96 :	"t"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

96 :	"phi"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

96 :	"+"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

96 :	"ct"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

96 :	"ll"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

96 :	"phi"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

97 :	"return"
		- NEIGH  = { in , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , ct , t , phi , + , in , }
		- SUCC   = { }

97 :	"in"
		- NEIGH  = { in , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , ct , t , phi , + , in , }
		- SUCC   = { }

