40 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"healpix"
		- NEIGH  = { healpix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"rhealpix"
		- NEIGH  = { rhealpix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

57 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"north_square"
		- NEIGH  = { north_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"south_square"
		- NEIGH  = { south_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

60 :	"qp"
		- NEIGH  = { qp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"apa"
		- NEIGH  = { apa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"cn"
		- NEIGH  = { cn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"Region"
		- NEIGH  = { Region , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"north"
		- NEIGH  = { north , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"south"
		- NEIGH  = { south , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"equatorial"
		- NEIGH  = { equatorial , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"region"
		- NEIGH  = { region , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"CapMap"
		- NEIGH  = { CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"rot"
		- NEIGH  = { rot , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"sign"
		- NEIGH  = { sign , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"v"
		- NEIGH  = { v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"return"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"v"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	">"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"v"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"<"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"-"
		- NEIGH  = { - , < , v , > , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"get_rotate_index"
		- NEIGH  = { get_rotate_index , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"index"
		- NEIGH  = { index , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

88 :	"switch"
		- NEIGH  = { index , switch , }
		- PARENT = { }
		- CHILD  = { - , return , }
		- PRED   = { }
		- SUCC   = { return , }

88 :	"index"
		- NEIGH  = { index , switch , }
		- PARENT = { }
		- CHILD  = { - , return , }
		- PRED   = { }
		- SUCC   = { return , }

90 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

92 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , }

97 :	"-"
		- NEIGH  = { - , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { return , }
		- SUCC   = { return , }

98 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { - , }
		- SUCC   = { - , }

99 :	"-"
		- NEIGH  = { - , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { return , }
		- SUCC   = { return , }

100 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { - , }
		- SUCC   = { - , }

101 :	"-"
		- NEIGH  = { - , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { return , }
		- SUCC   = { return , }

102 :	"return"
		- NEIGH  = { return , }
		- PARENT = { index , switch , }
		- CHILD  = { }
		- PRED   = { - , }
		- SUCC   = { }

104 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { index , switch , }
		- SUCC   = { }

115 :	"pnpoly"
		- NEIGH  = { pnpoly , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

115 :	"nvert"
		- NEIGH  = { nvert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

115 :	"vert"
		- NEIGH  = { vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

115 :	"testx"
		- NEIGH  = { testx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

115 :	"testy"
		- NEIGH  = { testy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { counter , }

117 :	"counter"
		- NEIGH  = { counter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { xinters , }

118 :	"xinters"
		- NEIGH  = { xinters , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { counter , }
		- SUCC   = { p2 , p1 , PJ_XY , }

119 :	"PJ_XY"
		- NEIGH  = { p2 , p1 , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xinters , }
		- SUCC   = { ++ , nvert , < , i , for , }

119 :	"p1"
		- NEIGH  = { p2 , p1 , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xinters , }
		- SUCC   = { ++ , nvert , < , i , for , }

119 :	"p2"
		- NEIGH  = { p2 , p1 , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xinters , }
		- SUCC   = { ++ , nvert , < , i , for , }

122 :	"for"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

122 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

122 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

122 :	"<"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

122 :	"nvert"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

122 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

122 :	"++"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { i , if , vert , testy , && , == , testx , }
		- PRED   = { p2 , p1 , PJ_XY , }
		- SUCC   = { vert , x , p1 , }

123 :	"if"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

123 :	"testx"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

123 :	"=="
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

123 :	"vert"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

123 :	"i"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

123 :	"&&"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

123 :	"testy"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

123 :	"=="
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

123 :	"vert"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

123 :	"i"
		- NEIGH  = { i , if , vert , testy , && , == , testx , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

124 :	"return"
		- NEIGH  = { return , }
		- PARENT = { i , if , vert , testy , && , == , testx , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"p1"
		- NEIGH  = { vert , x , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { vert , y , p1 , }

128 :	"x"
		- NEIGH  = { vert , x , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { vert , y , p1 , }

128 :	"vert"
		- NEIGH  = { vert , x , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { vert , y , p1 , }

129 :	"p1"
		- NEIGH  = { vert , y , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vert , x , p1 , }
		- SUCC   = { ++ , nvert , < , i , for , }

129 :	"y"
		- NEIGH  = { vert , y , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vert , x , p1 , }
		- SUCC   = { ++ , nvert , < , i , for , }

129 :	"vert"
		- NEIGH  = { vert , y , p1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vert , x , p1 , }
		- SUCC   = { ++ , nvert , < , i , for , }

131 :	"for"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

131 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

131 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

131 :	"<"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

131 :	"nvert"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

131 :	"i"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

131 :	"++"
		- NEIGH  = { ++ , nvert , < , i , for , }
		- PARENT = { }
		- CHILD  = { testx , MAX , <= , != , MIN , && , > , y , testy , nvert , i , if , vert , p2 , p1 , % , x , }
		- PRED   = { vert , y , p1 , }
		- SUCC   = { == , % , counter , if , }

132 :	"p2"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

132 :	"x"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

132 :	"vert"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

132 :	"i"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

132 :	"%"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

132 :	"nvert"
		- NEIGH  = { nvert , i , vert , p2 , % , x , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nvert , i , vert , p2 , % , y , }

133 :	"p2"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

133 :	"y"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

133 :	"vert"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

133 :	"i"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

133 :	"%"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

133 :	"nvert"
		- NEIGH  = { nvert , i , vert , p2 , % , y , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { nvert , i , vert , p2 , % , x , }
		- SUCC   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }

134 :	"if"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

134 :	"testy"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

134 :	">"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

134 :	"MIN"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

134 :	"p1"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

134 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

134 :	"p2"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

134 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

134 :	"&&"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

135 :	"testy"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

135 :	"<="
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

135 :	"MAX"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

135 :	"p1"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

135 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

135 :	"p2"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

135 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

135 :	"&&"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

136 :	"testx"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

136 :	"<="
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

136 :	"MAX"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

136 :	"p1"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

136 :	"x"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

136 :	"p2"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

136 :	"x"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

136 :	"&&"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

137 :	"p1"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

137 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

137 :	"!="
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

137 :	"p2"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

137 :	"y"
		- NEIGH  = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { testx , == , testy , / , x , p2 , * , || , - , y , if , <= , + , p1 , xinters , }
		- PRED   = { nvert , i , vert , p2 , % , y , }
		- SUCC   = { p2 , p1 , }

139 :	"xinters"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"testy"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"-"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"p1"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"y"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"*"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"p2"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"x"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"-"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"p1"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"x"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"/"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"p2"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"y"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"-"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"p1"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"y"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"+"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"p1"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

139 :	"x"
		- NEIGH  = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xinters , <= , testx , p2 , == , || , x , p1 , if , }

140 :	"if"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

140 :	"p1"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

140 :	"x"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

140 :	"=="
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

140 :	"p2"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

140 :	"x"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

140 :	"||"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

140 :	"testx"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

140 :	"<="
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

140 :	"xinters"
		- NEIGH  = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- PARENT = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- CHILD  = { ++ , counter , }
		- PRED   = { / , x , p2 , * , y , + , p1 , - , testy , xinters , }
		- SUCC   = { }

141 :	"counter"
		- NEIGH  = { ++ , counter , }
		- PARENT = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"++"
		- NEIGH  = { ++ , counter , }
		- PARENT = { xinters , <= , testx , p2 , == , || , x , p1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

143 :	"p1"
		- NEIGH  = { p2 , p1 , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- SUCC   = { }

143 :	"p2"
		- NEIGH  = { p2 , p1 , }
		- PARENT = { ++ , nvert , < , i , for , }
		- CHILD  = { }
		- PRED   = { x , p2 , y , if , p1 , MAX , != , MIN , testx , <= , > , && , testy , }
		- SUCC   = { }

146 :	"if"
		- NEIGH  = { == , % , counter , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { }

146 :	"counter"
		- NEIGH  = { == , % , counter , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { }

146 :	"%"
		- NEIGH  = { == , % , counter , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { }

146 :	"=="
		- NEIGH  = { == , % , counter , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ++ , nvert , < , i , for , }
		- SUCC   = { }

147 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , % , counter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

149 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , % , counter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

161 :	"in_image"
		- NEIGH  = { in_image , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

161 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

161 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

161 :	"proj"
		- NEIGH  = { proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

161 :	"north_square"
		- NEIGH  = { north_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

162 :	"south_square"
		- NEIGH  = { south_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

163 :	"if"
		- NEIGH  = { == , proj , if , }
		- PARENT = { }
		- CHILD  = { south_square , north_square , rhealpixVertsJit , / , pnpoly , M_HALFPI , + , M_FORTPI , * , x , healpixVertsJit , M_PI , y , return , - , }
		- PRED   = { }
		- SUCC   = { }

163 :	"proj"
		- NEIGH  = { == , proj , if , }
		- PARENT = { }
		- CHILD  = { south_square , north_square , rhealpixVertsJit , / , pnpoly , M_HALFPI , + , M_FORTPI , * , x , healpixVertsJit , M_PI , y , return , - , }
		- PRED   = { }
		- SUCC   = { }

163 :	"=="
		- NEIGH  = { == , proj , if , }
		- PARENT = { }
		- CHILD  = { south_square , north_square , rhealpixVertsJit , / , pnpoly , M_HALFPI , + , M_FORTPI , * , x , healpixVertsJit , M_PI , y , return , - , }
		- PRED   = { }
		- SUCC   = { }

164 :	"healpixVertsJit"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

165 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

165 :	"M_PI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

165 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

165 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

166 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

166 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

166 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

166 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

166 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

167 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

167 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

167 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

167 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

168 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

168 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

168 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

168 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

169 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

169 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

170 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

170 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

170 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

171 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

171 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

171 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

172 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

172 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

172 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

172 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

173 :	"M_PI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

173 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

173 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

174 :	"M_PI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

174 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

174 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

174 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

175 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

175 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

175 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

175 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

175 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

176 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

176 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

176 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

176 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

177 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

177 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

177 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

177 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

178 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

178 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

178 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

179 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

179 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

179 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

179 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

179 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

180 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

180 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

180 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

180 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

180 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

181 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

182 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

182 :	"M_PI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

182 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

182 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

182 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , healpixVertsJit , / , pnpoly , return , }

184 :	"return"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

184 :	"pnpoly"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

184 :	"healpixVertsJit"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

184 :	"/"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

185 :	"healpixVertsJit"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

185 :	"healpixVertsJit"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

185 :	"x"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

185 :	"y"
		- NEIGH  = { y , x , healpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , M_PI , - , healpixVertsJit , }
		- SUCC   = { }

196 :	"rhealpixVertsJit"
		- NEIGH  = { rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_PI , - , rhealpixVertsJit , }

197 :	"rhealpixVertsJit"
		- NEIGH  = { M_PI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

197 :	"-"
		- NEIGH  = { M_PI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

197 :	"M_PI"
		- NEIGH  = { M_PI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

197 :	"-"
		- NEIGH  = { M_PI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

198 :	"rhealpixVertsJit"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_PI , - , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

198 :	"M_FORTPI"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_PI , - , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

198 :	"+"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_PI , - , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

199 :	"rhealpixVertsJit"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

199 :	"-"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

199 :	"M_PI"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

199 :	"+"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

199 :	"north_square"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

199 :	"*"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

199 :	"M_HALFPI"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

199 :	"-"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

200 :	"rhealpixVertsJit"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

200 :	"M_FORTPI"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

200 :	"+"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

201 :	"rhealpixVertsJit"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

201 :	"-"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

201 :	"M_PI"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

201 :	"+"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

201 :	"north_square"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

201 :	"*"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

201 :	"M_HALFPI"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

201 :	"-"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

202 :	"rhealpixVertsJit"
		- NEIGH  = { + , M_FORTPI , * , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

202 :	"*"
		- NEIGH  = { + , M_FORTPI , * , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

202 :	"M_FORTPI"
		- NEIGH  = { + , M_FORTPI , * , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

202 :	"+"
		- NEIGH  = { + , M_FORTPI , * , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

203 :	"rhealpixVertsJit"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

203 :	"-"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

203 :	"M_PI"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

203 :	"+"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

203 :	"north_square"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

203 :	"+"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

203 :	"*"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

203 :	"M_HALFPI"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

203 :	"+"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , * , rhealpixVertsJit , }

204 :	"rhealpixVertsJit"
		- NEIGH  = { + , M_FORTPI , * , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

204 :	"*"
		- NEIGH  = { + , M_FORTPI , * , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

204 :	"M_FORTPI"
		- NEIGH  = { + , M_FORTPI , * , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

204 :	"+"
		- NEIGH  = { + , M_FORTPI , * , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }

205 :	"rhealpixVertsJit"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

205 :	"-"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

205 :	"M_PI"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

205 :	"+"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

205 :	"north_square"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

205 :	"+"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

205 :	"*"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

205 :	"M_HALFPI"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

205 :	"+"
		- NEIGH  = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , * , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

206 :	"rhealpixVertsJit"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { + , M_PI , rhealpixVertsJit , }

206 :	"M_FORTPI"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { + , M_PI , rhealpixVertsJit , }

206 :	"+"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , M_PI , north_square , - , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { + , M_PI , rhealpixVertsJit , }

207 :	"rhealpixVertsJit"
		- NEIGH  = { + , M_PI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

207 :	"M_PI"
		- NEIGH  = { + , M_PI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

207 :	"+"
		- NEIGH  = { + , M_PI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { + , M_FORTPI , rhealpixVertsJit , }

208 :	"rhealpixVertsJit"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_PI , rhealpixVertsJit , }
		- SUCC   = { + , M_PI , rhealpixVertsJit , }

208 :	"M_FORTPI"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_PI , rhealpixVertsJit , }
		- SUCC   = { + , M_PI , rhealpixVertsJit , }

208 :	"+"
		- NEIGH  = { + , M_FORTPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_PI , rhealpixVertsJit , }
		- SUCC   = { + , M_PI , rhealpixVertsJit , }

209 :	"rhealpixVertsJit"
		- NEIGH  = { + , M_PI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

209 :	"M_PI"
		- NEIGH  = { + , M_PI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

209 :	"+"
		- NEIGH  = { + , M_PI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_FORTPI , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

210 :	"rhealpixVertsJit"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_PI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

210 :	"-"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_PI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

210 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_PI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

210 :	"-"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { + , M_PI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

211 :	"rhealpixVertsJit"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

211 :	"-"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

211 :	"M_PI"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

211 :	"+"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

211 :	"south_square"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

211 :	"+"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

211 :	"*"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

211 :	"M_HALFPI"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

211 :	"+"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

212 :	"rhealpixVertsJit"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

212 :	"-"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

212 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

212 :	"-"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

213 :	"rhealpixVertsJit"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

213 :	"-"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

213 :	"M_PI"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

213 :	"+"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

213 :	"south_square"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

213 :	"+"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

213 :	"*"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

213 :	"M_HALFPI"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

213 :	"+"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

214 :	"rhealpixVertsJit"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

214 :	"-"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

214 :	"*"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

214 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

214 :	"-"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

215 :	"rhealpixVertsJit"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

215 :	"-"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

215 :	"M_PI"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

215 :	"+"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

215 :	"south_square"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

215 :	"*"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

215 :	"M_HALFPI"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

215 :	"-"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , * , - , rhealpixVertsJit , }

216 :	"rhealpixVertsJit"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

216 :	"-"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

216 :	"*"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

216 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

216 :	"-"
		- NEIGH  = { M_FORTPI , * , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }

217 :	"rhealpixVertsJit"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

217 :	"-"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

217 :	"M_PI"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

217 :	"+"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

217 :	"south_square"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

217 :	"*"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

217 :	"M_HALFPI"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

217 :	"-"
		- NEIGH  = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

218 :	"rhealpixVertsJit"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { M_PI , - , rhealpixVertsJit , }

218 :	"-"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { M_PI , - , rhealpixVertsJit , }

218 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { M_PI , - , rhealpixVertsJit , }

218 :	"-"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { * , + , - , south_square , M_PI , M_HALFPI , rhealpixVertsJit , }
		- SUCC   = { M_PI , - , rhealpixVertsJit , }

219 :	"rhealpixVertsJit"
		- NEIGH  = { M_PI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

219 :	"-"
		- NEIGH  = { M_PI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

219 :	"M_PI"
		- NEIGH  = { M_PI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

219 :	"-"
		- NEIGH  = { M_PI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { M_FORTPI , - , rhealpixVertsJit , }

220 :	"rhealpixVertsJit"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_PI , - , rhealpixVertsJit , }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

220 :	"-"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_PI , - , rhealpixVertsJit , }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

220 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_PI , - , rhealpixVertsJit , }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

220 :	"-"
		- NEIGH  = { M_FORTPI , - , rhealpixVertsJit , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_PI , - , rhealpixVertsJit , }
		- SUCC   = { y , x , rhealpixVertsJit , / , pnpoly , return , }

222 :	"return"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { }

222 :	"pnpoly"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { }

222 :	"rhealpixVertsJit"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { }

222 :	"/"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { }

223 :	"rhealpixVertsJit"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { }

223 :	"rhealpixVertsJit"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { }

223 :	"x"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { }

223 :	"y"
		- NEIGH  = { y , x , rhealpixVertsJit , / , pnpoly , return , }
		- PARENT = { == , proj , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , rhealpixVertsJit , }
		- SUCC   = { }

233 :	"auth_lat"
		- NEIGH  = { auth_lat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

233 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

233 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

233 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

233 :	"alpha"
		- NEIGH  = { alpha , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

233 :	"inverse"
		- NEIGH  = { inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

234 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

234 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

234 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

234 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

234 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

234 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

234 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

234 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

234 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , inverse , if , }

235 :	"if"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { apa , > , fabs , / , ratio , es , qp , return , - , Q , alpha , asin , P , e , pj_qsfn , if , sin , pj_authlat , q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

235 :	"inverse"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { apa , > , fabs , / , ratio , es , qp , return , - , Q , alpha , asin , P , e , pj_qsfn , if , sin , pj_authlat , q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

235 :	"=="
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { apa , > , fabs , / , ratio , es , qp , return , - , Q , alpha , asin , P , e , pj_qsfn , if , sin , pj_authlat , q , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { }

237 :	"q"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

237 :	"pj_qsfn"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

237 :	"sin"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

237 :	"alpha"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

237 :	"P"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

237 :	"e"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

237 :	"-"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

237 :	"P"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

237 :	"es"
		- NEIGH  = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , qp , }

238 :	"qp"
		- NEIGH  = { Q , qp , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- SUCC   = { / , q , qp , ratio , }

238 :	"Q"
		- NEIGH  = { Q , qp , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- SUCC   = { / , q , qp , ratio , }

238 :	"qp"
		- NEIGH  = { Q , qp , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { es , - , alpha , e , pj_qsfn , sin , P , q , }
		- SUCC   = { / , q , qp , ratio , }

239 :	"ratio"
		- NEIGH  = { / , q , qp , ratio , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { Q , qp , }
		- SUCC   = { > , ratio , fabs , if , }

239 :	"q"
		- NEIGH  = { / , q , qp , ratio , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { Q , qp , }
		- SUCC   = { > , ratio , fabs , if , }

239 :	"/"
		- NEIGH  = { / , q , qp , ratio , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { Q , qp , }
		- SUCC   = { > , ratio , fabs , if , }

239 :	"qp"
		- NEIGH  = { / , q , qp , ratio , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { Q , qp , }
		- SUCC   = { > , ratio , fabs , if , }

241 :	"if"
		- NEIGH  = { > , ratio , fabs , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { sign , ratio , }
		- PRED   = { / , q , qp , ratio , }
		- SUCC   = { ratio , asin , return , }

241 :	"fabs"
		- NEIGH  = { > , ratio , fabs , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { sign , ratio , }
		- PRED   = { / , q , qp , ratio , }
		- SUCC   = { ratio , asin , return , }

241 :	"ratio"
		- NEIGH  = { > , ratio , fabs , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { sign , ratio , }
		- PRED   = { / , q , qp , ratio , }
		- SUCC   = { ratio , asin , return , }

241 :	">"
		- NEIGH  = { > , ratio , fabs , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { sign , ratio , }
		- PRED   = { / , q , qp , ratio , }
		- SUCC   = { ratio , asin , return , }

243 :	"ratio"
		- NEIGH  = { sign , ratio , }
		- PARENT = { > , ratio , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"sign"
		- NEIGH  = { sign , ratio , }
		- PARENT = { > , ratio , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"ratio"
		- NEIGH  = { sign , ratio , }
		- PARENT = { > , ratio , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

245 :	"return"
		- NEIGH  = { ratio , asin , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { > , ratio , fabs , if , }
		- SUCC   = { }

245 :	"asin"
		- NEIGH  = { ratio , asin , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { > , ratio , fabs , if , }
		- SUCC   = { }

245 :	"ratio"
		- NEIGH  = { ratio , asin , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { > , ratio , fabs , if , }
		- SUCC   = { }

248 :	"return"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"pj_authlat"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"alpha"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"Q"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"apa"
		- NEIGH  = { alpha , pj_authlat , apa , Q , return , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

257 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

257 :	"healpix_sphere"
		- NEIGH  = { healpix_sphere , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

257 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

257 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

258 :	"lam"
		- NEIGH  = { lp , lam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , phi , }

258 :	"lp"
		- NEIGH  = { lp , lam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , phi , }

258 :	"lam"
		- NEIGH  = { lp , lam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , phi , }

259 :	"phi"
		- NEIGH  = { lp , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , }
		- SUCC   = { / , asin , phi0 , }

259 :	"lp"
		- NEIGH  = { lp , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , }
		- SUCC   = { / , asin , phi0 , }

259 :	"phi"
		- NEIGH  = { lp , phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , }
		- SUCC   = { / , asin , phi0 , }

260 :	"phi0"
		- NEIGH  = { / , asin , phi0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , phi , }
		- SUCC   = { xy , PJ_XY , }

260 :	"asin"
		- NEIGH  = { / , asin , phi0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , phi , }
		- SUCC   = { xy , PJ_XY , }

260 :	"/"
		- NEIGH  = { / , asin , phi0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , phi , }
		- SUCC   = { xy , PJ_XY , }

261 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , asin , phi0 , }
		- SUCC   = { phi0 , <= , phi , fabs , if , }

261 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , asin , phi0 , }
		- SUCC   = { phi0 , <= , phi , fabs , if , }

264 :	"if"
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

264 :	"fabs"
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

264 :	"phi"
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

264 :	"<="
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

264 :	"phi0"
		- NEIGH  = { phi0 , <= , phi , fabs , if , }
		- PARENT = { }
		- CHILD  = { sign , M_FORTPI , >= , + , floor , cn , M_HALFPI , fabs , x , sigma , lam , lamc , if , M_PI , sin , phi , / , sqrt , * , - , y , xy , }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { xy , return , }

265 :	"xy"
		- NEIGH  = { lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi , / , M_PI , * , y , xy , }

265 :	"x"
		- NEIGH  = { lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi , / , M_PI , * , y , xy , }

265 :	"lam"
		- NEIGH  = { lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi , / , M_PI , * , y , xy , }

266 :	"xy"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

266 :	"y"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

266 :	"*"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

266 :	"M_PI"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

266 :	"/"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

266 :	"*"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

266 :	"sin"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

266 :	"phi"
		- NEIGH  = { sin , phi , / , M_PI , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lam , x , xy , }
		- SUCC   = { }

268 :	"lamc"
		- NEIGH  = { lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , sin , - , * , sqrt , fabs , sigma , }

269 :	"sigma"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

269 :	"sqrt"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

269 :	"*"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

269 :	"-"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

269 :	"fabs"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

269 :	"sin"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

269 :	"phi"
		- NEIGH  = { phi , sin , - , * , sqrt , fabs , sigma , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { lamc , }
		- SUCC   = { + , M_PI , / , lam , * , floor , cn , }

270 :	"cn"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

270 :	"floor"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

270 :	"*"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

270 :	"lam"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

270 :	"/"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

270 :	"M_PI"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

270 :	"+"
		- NEIGH  = { + , M_PI , / , lam , * , floor , cn , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { phi , sin , - , * , sqrt , fabs , sigma , }
		- SUCC   = { >= , cn , if , }

271 :	"if"
		- NEIGH  = { >= , cn , if , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { + , M_PI , / , lam , * , floor , cn , }
		- SUCC   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }

271 :	"cn"
		- NEIGH  = { >= , cn , if , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { + , M_PI , / , lam , * , floor , cn , }
		- SUCC   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }

271 :	">="
		- NEIGH  = { >= , cn , if , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { + , M_PI , / , lam , * , floor , cn , }
		- SUCC   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }

272 :	"cn"
		- NEIGH  = { cn , }
		- PARENT = { >= , cn , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

274 :	"lamc"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

274 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

274 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

274 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

274 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

274 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

274 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

274 :	"cn"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { sigma , * , - , + , lamc , lam , x , xy , }

275 :	"xy"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

275 :	"x"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

275 :	"lamc"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

275 :	"+"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

275 :	"lam"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

275 :	"-"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

275 :	"lamc"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

275 :	"*"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

275 :	"sigma"
		- NEIGH  = { sigma , * , - , + , lamc , lam , x , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , * , cn , - , lamc , }
		- SUCC   = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }

276 :	"xy"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

276 :	"y"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

276 :	"sign"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

276 :	"phi"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

276 :	"*"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

276 :	"M_FORTPI"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

276 :	"*"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

276 :	"-"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

276 :	"sigma"
		- NEIGH  = { sigma , - , phi , M_FORTPI , sign , * , y , xy , }
		- PARENT = { phi0 , <= , phi , fabs , if , }
		- CHILD  = { }
		- PRED   = { sigma , * , - , + , lamc , lam , x , xy , }
		- SUCC   = { }

278 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , <= , phi , fabs , if , }
		- SUCC   = { }

278 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi0 , <= , phi , fabs , if , }
		- SUCC   = { }

285 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

285 :	"healpix_sphere_inverse"
		- NEIGH  = { healpix_sphere_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

285 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

285 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

286 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , x , }

286 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , x , }

287 :	"x"
		- NEIGH  = { xy , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , y , }

287 :	"xy"
		- NEIGH  = { xy , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , y , }

287 :	"x"
		- NEIGH  = { xy , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , y , }

288 :	"y"
		- NEIGH  = { xy , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , }
		- SUCC   = { M_FORTPI , y0 , }

288 :	"xy"
		- NEIGH  = { xy , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , }
		- SUCC   = { M_FORTPI , y0 , }

288 :	"y"
		- NEIGH  = { xy , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , x , }
		- SUCC   = { M_FORTPI , y0 , }

289 :	"y0"
		- NEIGH  = { M_FORTPI , y0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , y , }
		- SUCC   = { y0 , <= , y , fabs , if , }

289 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , y0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , y , }
		- SUCC   = { y0 , <= , y , fabs , if , }

292 :	"if"
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

292 :	"fabs"
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

292 :	"y"
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

292 :	"<="
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

292 :	"y0"
		- NEIGH  = { y0 , <= , y , fabs , if , }
		- PARENT = { }
		- CHILD  = { < , M_PI , if , y , * , asin , x , M_HALFPI , fabs , lp , lam , / , phi , }
		- PRED   = { M_FORTPI , y0 , }
		- SUCC   = { lp , return , }

293 :	"lp"
		- NEIGH  = { x , lam , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_PI , y , * , asin , / , phi , lp , }

293 :	"lam"
		- NEIGH  = { x , lam , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_PI , y , * , asin , / , phi , lp , }

293 :	"x"
		- NEIGH  = { x , lam , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_PI , y , * , asin , / , phi , lp , }

294 :	"lp"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

294 :	"phi"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

294 :	"asin"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

294 :	"*"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

294 :	"y"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

294 :	"/"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

294 :	"*"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

294 :	"M_PI"
		- NEIGH  = { M_PI , y , * , asin , / , phi , lp , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { }
		- PRED   = { x , lam , lp , }
		- SUCC   = { }

295 :	"if"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

295 :	"fabs"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

295 :	"y"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

295 :	"<"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

295 :	"M_HALFPI"
		- NEIGH  = { y , M_HALFPI , < , fabs , if , }
		- PARENT = { y0 , <= , y , fabs , if , }
		- CHILD  = { pow , sign , phi , lam , lp , fabs , M_HALFPI , M_FORTPI , y , - , xc , M_PI , if , asin , tau , + , / , x , * , floor , >= , cn , }
		- PRED   = { }
		- SUCC   = { }

296 :	"cn"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

296 :	"floor"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

296 :	"*"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

296 :	"x"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

296 :	"/"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

296 :	"M_PI"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

296 :	"+"
		- NEIGH  = { + , / , M_PI , x , * , floor , cn , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tau , xc , }

297 :	"xc"
		- NEIGH  = { tau , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , / , M_PI , x , * , floor , cn , }
		- SUCC   = { >= , cn , if , }

297 :	"tau"
		- NEIGH  = { tau , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { + , / , M_PI , x , * , floor , cn , }
		- SUCC   = { >= , cn , if , }

298 :	"if"
		- NEIGH  = { >= , cn , if , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { tau , xc , }
		- SUCC   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }

298 :	"cn"
		- NEIGH  = { >= , cn , if , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { tau , xc , }
		- SUCC   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }

298 :	">="
		- NEIGH  = { >= , cn , if , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { cn , }
		- PRED   = { tau , xc , }
		- SUCC   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }

299 :	"cn"
		- NEIGH  = { cn , }
		- PARENT = { >= , cn , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

301 :	"xc"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

301 :	"-"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

301 :	"*"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

301 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

301 :	"+"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

301 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

301 :	"*"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

301 :	"cn"
		- NEIGH  = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { >= , cn , if , }
		- SUCC   = { M_PI , / , fabs , y , * , - , tau , }

302 :	"tau"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

302 :	"-"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

302 :	"*"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

302 :	"fabs"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

302 :	"y"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

302 :	"/"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

302 :	"M_PI"
		- NEIGH  = { M_PI , / , fabs , y , * , - , tau , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , * , cn , - , + , M_FORTPI , xc , }
		- SUCC   = { / , - , tau , + , xc , x , lam , lp , }

303 :	"lp"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

303 :	"lam"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

303 :	"xc"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

303 :	"+"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

303 :	"x"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

303 :	"-"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

303 :	"xc"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

303 :	"/"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

303 :	"tau"
		- NEIGH  = { / , - , tau , + , xc , x , lam , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , / , fabs , y , * , - , tau , }
		- SUCC   = { pow , - , asin , * , y , tau , sign , / , phi , lp , }

304 :	"lp"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

304 :	"phi"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

304 :	"sign"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

304 :	"y"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

304 :	"*"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

304 :	"asin"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

304 :	"-"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

304 :	"pow"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

304 :	"tau"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

304 :	"/"
		- NEIGH  = { pow , - , asin , * , y , tau , sign , / , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { / , - , tau , + , xc , x , lam , lp , }
		- SUCC   = { }

306 :	"lp"
		- NEIGH  = { M_PI , lam , - , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , * , y , sign , phi , lp , }

306 :	"lam"
		- NEIGH  = { M_PI , lam , - , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , * , y , sign , phi , lp , }

306 :	"-"
		- NEIGH  = { M_PI , lam , - , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , * , y , sign , phi , lp , }

306 :	"M_PI"
		- NEIGH  = { M_PI , lam , - , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , * , y , sign , phi , lp , }

307 :	"lp"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

307 :	"phi"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

307 :	"sign"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

307 :	"y"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

307 :	"*"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

307 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , * , y , sign , phi , lp , }
		- PARENT = { y , M_HALFPI , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { M_PI , lam , - , lp , }
		- SUCC   = { }

309 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y0 , <= , y , fabs , if , }
		- SUCC   = { }

309 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y0 , <= , y , fabs , if , }
		- SUCC   = { }

317 :	"vector_add"
		- NEIGH  = { vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

317 :	"a"
		- NEIGH  = { a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

317 :	"b"
		- NEIGH  = { b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

317 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

317 :	"ret"
		- NEIGH  = { ret , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

318 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

319 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

319 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

319 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

319 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

319 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

319 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , + , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

320 :	"ret"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"i"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"a"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"i"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"+"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"b"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"i"
		- NEIGH  = { b , + , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

329 :	"vector_sub"
		- NEIGH  = { vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

329 :	"a"
		- NEIGH  = { a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

329 :	"b"
		- NEIGH  = { b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

329 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

329 :	"ret"
		- NEIGH  = { ret , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

330 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

331 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

331 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

331 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

331 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

331 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

331 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { b , - , i , a , ret , }
		- PRED   = { i , }
		- SUCC   = { }

332 :	"ret"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"i"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"a"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"i"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"-"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"b"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"i"
		- NEIGH  = { b , - , i , a , ret , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

342 :	"dot_product"
		- NEIGH  = { dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

342 :	"a"
		- NEIGH  = { a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

342 :	"b"
		- NEIGH  = { b , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

342 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

342 :	"ret"
		- NEIGH  = { ret , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

343 :	"i"
		- NEIGH  = { j , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { length , }

343 :	"j"
		- NEIGH  = { j , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { length , }

344 :	"length"
		- NEIGH  = { length , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { j , i , }
		- SUCC   = { ++ , < , length , i , for , }

345 :	"for"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

345 :	"i"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

345 :	"i"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

345 :	"<"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

345 :	"length"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

345 :	"i"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

345 :	"++"
		- NEIGH  = { ++ , < , length , i , for , }
		- PARENT = { }
		- CHILD  = { length , j , ret , for , ++ , i , < , }
		- PRED   = { length , }
		- SUCC   = { }

346 :	"ret"
		- NEIGH  = { i , ret , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , length , < , j , for , }

346 :	"i"
		- NEIGH  = { i , ret , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , length , < , j , for , }

347 :	"for"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

347 :	"j"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

347 :	"j"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

347 :	"<"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

347 :	"length"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

347 :	"j"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

347 :	"++"
		- NEIGH  = { ++ , length , < , j , for , }
		- PARENT = { ++ , < , length , i , for , }
		- CHILD  = { b , * , j , i , a , += , ret , }
		- PRED   = { i , ret , }
		- SUCC   = { }

348 :	"ret"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"i"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"+="
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"a"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"i"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"j"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"*"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"b"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"j"
		- NEIGH  = { b , * , j , i , a , += , ret , }
		- PARENT = { ++ , length , < , j , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

362 :	"CapMap"
		- NEIGH  = { CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

362 :	"get_cap"
		- NEIGH  = { get_cap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

362 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

362 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

362 :	"north_square"
		- NEIGH  = { north_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

362 :	"south_square"
		- NEIGH  = { south_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

363 :	"inverse"
		- NEIGH  = { inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

364 :	"CapMap"
		- NEIGH  = { capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , }

364 :	"capmap"
		- NEIGH  = { capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , }

365 :	"c"
		- NEIGH  = { c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , CapMap , }
		- SUCC   = { x , capmap , }

367 :	"capmap"
		- NEIGH  = { x , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { y , capmap , }

367 :	"x"
		- NEIGH  = { x , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { y , capmap , }

367 :	"x"
		- NEIGH  = { x , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { y , capmap , }

368 :	"capmap"
		- NEIGH  = { y , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , capmap , }
		- SUCC   = { == , inverse , if , }

368 :	"y"
		- NEIGH  = { y , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , capmap , }
		- SUCC   = { == , inverse , if , }

368 :	"y"
		- NEIGH  = { y , capmap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , capmap , }
		- SUCC   = { == , inverse , if , }

369 :	"if"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , CapMap , == , if , region , M_HALFPI , y , - , < , M_FORTPI , capmap , > , x , }
		- PRED   = { y , capmap , }
		- SUCC   = { capmap , return , }

369 :	"inverse"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , CapMap , == , if , region , M_HALFPI , y , - , < , M_FORTPI , capmap , > , x , }
		- PRED   = { y , capmap , }
		- SUCC   = { capmap , return , }

369 :	"=="
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , CapMap , == , if , region , M_HALFPI , y , - , < , M_FORTPI , capmap , > , x , }
		- PRED   = { y , capmap , }
		- SUCC   = { capmap , return , }

370 :	"if"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { - , y , M_FORTPI , if , c , M_HALFPI , north , region , < , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , < , x , if , }

370 :	"y"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { - , y , M_FORTPI , if , c , M_HALFPI , north , region , < , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , < , x , if , }

370 :	">"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { - , y , M_FORTPI , if , c , M_HALFPI , north , region , < , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , < , x , if , }

370 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { - , y , M_FORTPI , if , c , M_HALFPI , north , region , < , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , < , x , if , }

371 :	"capmap"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , c , }

371 :	"region"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , c , }

371 :	"CapMap"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , c , }

371 :	"north"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , c , }

372 :	"c"
		- NEIGH  = { M_HALFPI , c , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { }

372 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , c , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { }

373 :	"if"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

373 :	"y"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

373 :	"<"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

373 :	"-"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

373 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { return , cn , - , M_HALFPI , south , c , region , equatorial , CapMap , capmap , }
		- PRED   = { }
		- SUCC   = { }

374 :	"capmap"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , c , }

374 :	"region"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , c , }

374 :	"CapMap"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , c , }

374 :	"south"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , c , }

375 :	"c"
		- NEIGH  = { - , M_HALFPI , c , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { }

375 :	"-"
		- NEIGH  = { - , M_HALFPI , c , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { }

375 :	"M_HALFPI"
		- NEIGH  = { - , M_HALFPI , c , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { }

377 :	"capmap"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

377 :	"region"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

377 :	"CapMap"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

377 :	"equatorial"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

378 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { region , equatorial , CapMap , capmap , }
		- SUCC   = { capmap , return , }

378 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { region , equatorial , CapMap , capmap , }
		- SUCC   = { capmap , return , }

379 :	"return"
		- NEIGH  = { capmap , return , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { }

379 :	"capmap"
		- NEIGH  = { capmap , return , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { }

382 :	"if"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

382 :	"x"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

382 :	"<"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

382 :	"-"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

382 :	"M_HALFPI"
		- NEIGH  = { - , M_HALFPI , < , x , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , M_HALFPI , c , if , M_FORTPI , && , >= , cn , - , y , capmap , * , x , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

383 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , - , * , x , capmap , }

383 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , - , * , x , capmap , }

384 :	"capmap"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

384 :	"x"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

384 :	"-"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

384 :	"*"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

384 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , * , x , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

385 :	"capmap"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , * , x , capmap , }
		- SUCC   = { }

385 :	"y"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , * , x , capmap , }
		- SUCC   = { }

385 :	"c"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , * , x , capmap , }
		- SUCC   = { }

386 :	"if"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

386 :	"x"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

386 :	">="
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

386 :	"-"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

386 :	"M_HALFPI"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

386 :	"&&"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

386 :	"x"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

386 :	"<"
		- NEIGH  = { < , && , M_HALFPI , - , >= , x , if , }
		- PARENT = { - , M_HALFPI , < , x , if , }
		- CHILD  = { M_HALFPI , < , >= , && , c , - , y , if , M_FORTPI , cn , x , capmap , }
		- PRED   = { }
		- SUCC   = { }

387 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , - , x , capmap , }

387 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , - , x , capmap , }

388 :	"capmap"
		- NEIGH  = { M_FORTPI , - , x , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

388 :	"x"
		- NEIGH  = { M_FORTPI , - , x , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

388 :	"-"
		- NEIGH  = { M_FORTPI , - , x , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

388 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , x , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

389 :	"capmap"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , x , capmap , }
		- SUCC   = { }

389 :	"y"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , x , capmap , }
		- SUCC   = { }

389 :	"c"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , - , x , capmap , }
		- SUCC   = { }

390 :	"if"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

390 :	"x"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

390 :	">="
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

390 :	"&&"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

390 :	"x"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

390 :	"<"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

390 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , < , && , >= , x , if , }
		- PARENT = { < , && , M_HALFPI , - , >= , x , if , }
		- CHILD  = { c , M_FORTPI , * , y , x , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

391 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , x , capmap , }

391 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , x , capmap , }

392 :	"capmap"
		- NEIGH  = { M_FORTPI , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

392 :	"x"
		- NEIGH  = { M_FORTPI , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

392 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

393 :	"capmap"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , x , capmap , }
		- SUCC   = { }

393 :	"y"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , x , capmap , }
		- SUCC   = { }

393 :	"c"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , x , capmap , }
		- SUCC   = { }

395 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , * , x , capmap , }

395 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_FORTPI , * , x , capmap , }

396 :	"capmap"
		- NEIGH  = { M_FORTPI , * , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

396 :	"x"
		- NEIGH  = { M_FORTPI , * , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

396 :	"*"
		- NEIGH  = { M_FORTPI , * , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

396 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , * , x , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { c , y , capmap , }

397 :	"capmap"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , x , capmap , }
		- SUCC   = { }

397 :	"y"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , x , capmap , }
		- SUCC   = { }

397 :	"c"
		- NEIGH  = { c , y , capmap , }
		- PARENT = { M_HALFPI , < , && , >= , x , if , }
		- CHILD  = { }
		- PRED   = { M_FORTPI , * , x , capmap , }
		- SUCC   = { }

400 :	"if"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , north_square , + , M_FORTPI , capmap , * , y , - , x , M_HALFPI , north , if , region , CapMap , }
		- PRED   = { }
		- SUCC   = { north , == , region , CapMap , capmap , if , }

400 :	"y"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , north_square , + , M_FORTPI , capmap , * , y , - , x , M_HALFPI , north , if , region , CapMap , }
		- PRED   = { }
		- SUCC   = { north , == , region , CapMap , capmap , if , }

400 :	">"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , north_square , + , M_FORTPI , capmap , * , y , - , x , M_HALFPI , north , if , region , CapMap , }
		- PRED   = { }
		- SUCC   = { north , == , region , CapMap , capmap , if , }

400 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , > , y , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { < , north_square , + , M_FORTPI , capmap , * , y , - , x , M_HALFPI , north , if , region , CapMap , }
		- PRED   = { }
		- SUCC   = { north , == , region , CapMap , capmap , if , }

401 :	"capmap"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }

401 :	"region"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }

401 :	"CapMap"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }

401 :	"north"
		- NEIGH  = { north , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }

402 :	"capmap"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

402 :	"x"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

402 :	"-"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

402 :	"*"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

402 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

402 :	"+"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

402 :	"north_square"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

402 :	"*"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

402 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { north , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , y , capmap , }

403 :	"capmap"
		- NEIGH  = { M_HALFPI , y , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , north_square , - , * , x , }

403 :	"y"
		- NEIGH  = { M_HALFPI , y , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , north_square , - , * , x , }

403 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , y , capmap , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , north_square , + , M_FORTPI , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , north_square , - , * , x , }

404 :	"x"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

404 :	"x"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

404 :	"-"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

404 :	"north_square"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

404 :	"*"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

404 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , north_square , - , * , x , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , y , capmap , }
		- SUCC   = { }

405 :	"if"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

405 :	"y"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

405 :	"<"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

405 :	"-"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

405 :	"M_FORTPI"
		- NEIGH  = { M_FORTPI , - , < , y , if , }
		- PARENT = { M_FORTPI , > , y , if , }
		- CHILD  = { cn , + , M_FORTPI , equatorial , capmap , * , south_square , return , y , - , x , M_HALFPI , south , region , CapMap , }
		- PRED   = { }
		- SUCC   = { }

406 :	"capmap"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }

406 :	"region"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }

406 :	"CapMap"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }

406 :	"south"
		- NEIGH  = { south , region , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }

407 :	"capmap"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

407 :	"x"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

407 :	"-"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

407 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

407 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

407 :	"+"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

407 :	"south_square"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

407 :	"*"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

407 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { south , region , CapMap , capmap , }
		- SUCC   = { M_HALFPI , - , y , capmap , }

408 :	"capmap"
		- NEIGH  = { M_HALFPI , - , y , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , - , * , south_square , x , }

408 :	"y"
		- NEIGH  = { M_HALFPI , - , y , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , - , * , south_square , x , }

408 :	"-"
		- NEIGH  = { M_HALFPI , - , y , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , - , * , south_square , x , }

408 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , y , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , + , M_FORTPI , south_square , - , * , x , capmap , }
		- SUCC   = { M_HALFPI , - , * , south_square , x , }

409 :	"x"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

409 :	"x"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

409 :	"-"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

409 :	"south_square"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

409 :	"*"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

409 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , * , south_square , x , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , - , y , capmap , }
		- SUCC   = { }

411 :	"capmap"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

411 :	"region"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

411 :	"CapMap"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

411 :	"equatorial"
		- NEIGH  = { region , equatorial , CapMap , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cn , capmap , }

412 :	"capmap"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { region , equatorial , CapMap , capmap , }
		- SUCC   = { capmap , return , }

412 :	"cn"
		- NEIGH  = { cn , capmap , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { region , equatorial , CapMap , capmap , }
		- SUCC   = { capmap , return , }

413 :	"return"
		- NEIGH  = { capmap , return , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { }

413 :	"capmap"
		- NEIGH  = { capmap , return , }
		- PARENT = { M_FORTPI , - , < , y , if , }
		- CHILD  = { }
		- PRED   = { cn , capmap , }
		- SUCC   = { }

417 :	"if"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

417 :	"capmap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

417 :	"region"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

417 :	"=="
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

417 :	"CapMap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

417 :	"north"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { south , CapMap , == , * , capmap , < , >= , && , y , - , x , + , M_FORTPI , region , if , }
		- PRED   = { M_FORTPI , > , y , if , }
		- SUCC   = { }

418 :	"if"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"y"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	">="
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"-"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"x"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"-"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"M_FORTPI"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"-"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"&&"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"y"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"<"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"x"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"+"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"*"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"M_FORTPI"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

418 :	"-"
		- NEIGH  = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { x , - , y , north_square , % , M_FORTPI , if , + , cn , >= , && , > , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

419 :	"capmap"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

419 :	"cn"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

419 :	"north_square"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

419 :	"+"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

419 :	"%"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

420 :	"if"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"y"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	">"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"-"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"x"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"-"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"M_FORTPI"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"+"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"&&"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"y"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	">="
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"x"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"+"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"*"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"M_FORTPI"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

420 :	"-"
		- NEIGH  = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- PARENT = { < , && , - , >= , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { > , && , x , - , y , north_square , % , M_FORTPI , if , <= , + , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

421 :	"capmap"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

421 :	"cn"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

421 :	"north_square"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

421 :	"+"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

421 :	"%"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

422 :	"if"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"y"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"<="
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"-"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"x"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"-"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"M_FORTPI"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"+"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"&&"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"y"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	">"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"x"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"+"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"*"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"M_FORTPI"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

422 :	"+"
		- NEIGH  = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- PARENT = { && , >= , - , > , x , * , y , + , M_FORTPI , if , }
		- CHILD  = { % , + , north_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

423 :	"capmap"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"cn"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"north_square"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"+"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

423 :	"%"
		- NEIGH  = { % , + , north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

425 :	"capmap"
		- NEIGH  = { north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

425 :	"cn"
		- NEIGH  = { north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

425 :	"north_square"
		- NEIGH  = { north_square , cn , capmap , }
		- PARENT = { && , - , x , > , <= , * , y , + , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

427 :	"if"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

427 :	"capmap"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

427 :	"region"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

427 :	"=="
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

427 :	"CapMap"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

427 :	"south"
		- NEIGH  = { south , == , region , CapMap , capmap , if , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PRED   = { }
		- SUCC   = { }

428 :	"if"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"y"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"<="
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"x"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"+"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"M_FORTPI"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"+"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"&&"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"y"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	">"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"-"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"x"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"-"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"*"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"M_FORTPI"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

428 :	"+"
		- NEIGH  = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- PARENT = { south , == , region , CapMap , capmap , if , }
		- CHILD  = { x , < , - , y , M_FORTPI , if , <= , + , % , && , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

429 :	"capmap"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

429 :	"cn"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

429 :	"south_square"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

429 :	"+"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

429 :	"%"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

430 :	"if"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"y"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"<"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"x"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"+"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"M_FORTPI"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"-"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"&&"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"y"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"<="
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"-"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"x"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"-"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"*"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"M_FORTPI"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

430 :	"+"
		- NEIGH  = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- PARENT = { - , && , M_FORTPI , if , + , x , > , <= , * , y , }
		- CHILD  = { < , x , - , y , M_FORTPI , if , + , % , && , >= , south_square , cn , * , capmap , }
		- PRED   = { }
		- SUCC   = { }

431 :	"capmap"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

431 :	"cn"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

431 :	"south_square"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

431 :	"+"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

431 :	"%"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	"if"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"y"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	">="
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"x"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"+"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"M_FORTPI"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"-"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"&&"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"y"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"<"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"-"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"x"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"-"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"*"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"M_FORTPI"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

432 :	"-"
		- NEIGH  = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- PARENT = { <= , && , - , M_FORTPI , if , + , < , x , * , y , }
		- CHILD  = { + , % , south_square , cn , capmap , }
		- PRED   = { }
		- SUCC   = { }

433 :	"capmap"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

433 :	"cn"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

433 :	"south_square"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

433 :	"+"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

433 :	"%"
		- NEIGH  = { + , % , south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

435 :	"capmap"
		- NEIGH  = { south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

435 :	"cn"
		- NEIGH  = { south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

435 :	"south_square"
		- NEIGH  = { south_square , cn , capmap , }
		- PARENT = { < , && , M_FORTPI , if , + , - , >= , x , * , y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

439 :	"return"
		- NEIGH  = { capmap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { }

439 :	"capmap"
		- NEIGH  = { capmap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { }

452 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

452 :	"combine_caps"
		- NEIGH  = { combine_caps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

452 :	"x"
		- NEIGH  = { x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

452 :	"y"
		- NEIGH  = { y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

452 :	"north_square"
		- NEIGH  = { north_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

452 :	"south_square"
		- NEIGH  = { south_square , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

453 :	"inverse"
		- NEIGH  = { inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

454 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { v , }

454 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { v , }

455 :	"v"
		- NEIGH  = { v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { c , }

456 :	"c"
		- NEIGH  = { c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , }
		- SUCC   = { vector , }

457 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { v_min_c , }

458 :	"v_min_c"
		- NEIGH  = { v_min_c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , }
		- SUCC   = { ret_dot , }

459 :	"ret_dot"
		- NEIGH  = { ret_dot , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , }
		- SUCC   = { tmpRot , * , }

460 :	"*"
		- NEIGH  = { tmpRot , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , }
		- SUCC   = { pole , }

460 :	"tmpRot"
		- NEIGH  = { tmpRot , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , }
		- SUCC   = { pole , }

461 :	"pole"
		- NEIGH  = { pole , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tmpRot , * , }
		- SUCC   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }

463 :	"CapMap"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

463 :	"capmap"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

463 :	"get_cap"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

463 :	"x"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

463 :	"y"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

463 :	"north_square"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

463 :	"south_square"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

463 :	"inverse"
		- NEIGH  = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pole , }
		- SUCC   = { == , region , equatorial , CapMap , capmap , if , }

464 :	"if"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { x , v , }

464 :	"capmap"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { x , v , }

464 :	"region"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { x , v , }

464 :	"=="
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { x , v , }

464 :	"CapMap"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { x , v , }

464 :	"equatorial"
		- NEIGH  = { == , region , equatorial , CapMap , capmap , if , }
		- PARENT = { }
		- CHILD  = { return , capmap , y , x , xy , }
		- PRED   = { inverse , south_square , north_square , y , x , get_cap , capmap , CapMap , }
		- SUCC   = { x , v , }

465 :	"xy"
		- NEIGH  = { capmap , x , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { capmap , y , xy , }

465 :	"x"
		- NEIGH  = { capmap , x , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { capmap , y , xy , }

465 :	"capmap"
		- NEIGH  = { capmap , x , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { capmap , y , xy , }

465 :	"x"
		- NEIGH  = { capmap , x , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { capmap , y , xy , }

466 :	"xy"
		- NEIGH  = { capmap , y , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , x , xy , }
		- SUCC   = { xy , return , }

466 :	"y"
		- NEIGH  = { capmap , y , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , x , xy , }
		- SUCC   = { xy , return , }

466 :	"capmap"
		- NEIGH  = { capmap , y , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , x , xy , }
		- SUCC   = { xy , return , }

466 :	"y"
		- NEIGH  = { capmap , y , xy , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , x , xy , }
		- SUCC   = { xy , return , }

467 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , y , xy , }
		- SUCC   = { }

467 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { == , region , equatorial , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { capmap , y , xy , }
		- SUCC   = { }

470 :	"v"
		- NEIGH  = { x , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , region , equatorial , CapMap , capmap , if , }
		- SUCC   = { y , v , }

470 :	"x"
		- NEIGH  = { x , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , region , equatorial , CapMap , capmap , if , }
		- SUCC   = { y , v , }

470 :	"v"
		- NEIGH  = { y , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , v , }
		- SUCC   = { x , capmap , c , }

470 :	"y"
		- NEIGH  = { y , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , v , }
		- SUCC   = { x , capmap , c , }

471 :	"c"
		- NEIGH  = { x , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , v , }
		- SUCC   = { y , capmap , c , }

471 :	"capmap"
		- NEIGH  = { x , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , v , }
		- SUCC   = { y , capmap , c , }

471 :	"x"
		- NEIGH  = { x , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , v , }
		- SUCC   = { y , capmap , c , }

471 :	"c"
		- NEIGH  = { y , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , capmap , c , }
		- SUCC   = { == , inverse , if , }

471 :	"capmap"
		- NEIGH  = { y , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , capmap , c , }
		- SUCC   = { == , inverse , if , }

471 :	"y"
		- NEIGH  = { y , capmap , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , capmap , c , }
		- SUCC   = { == , inverse , if , }

473 :	"if"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , == , region , CapMap , capmap , if , }
		- PRED   = { y , capmap , c , }
		- SUCC   = { v_min_c , c , v , vector_sub , }

473 :	"inverse"
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , == , region , CapMap , capmap , if , }
		- PRED   = { y , capmap , c , }
		- SUCC   = { v_min_c , c , v , vector_sub , }

473 :	"=="
		- NEIGH  = { == , inverse , if , }
		- PARENT = { }
		- CHILD  = { north , == , region , CapMap , capmap , if , }
		- PRED   = { y , capmap , c , }
		- SUCC   = { v_min_c , c , v , vector_sub , }

477 :	"if"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

477 :	"capmap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

477 :	"region"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

477 :	"=="
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

477 :	"CapMap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

477 :	"north"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { * , south_square , - , cn , capmap , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

478 :	"pole"
		- NEIGH  = { north_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }

478 :	"north_square"
		- NEIGH  = { north_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }

479 :	"tmpRot"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

479 :	"rot"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

479 :	"get_rotate_index"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

479 :	"capmap"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

479 :	"cn"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

479 :	"-"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

479 :	"pole"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

481 :	"pole"
		- NEIGH  = { south_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }

481 :	"south_square"
		- NEIGH  = { south_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }

482 :	"tmpRot"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

482 :	"rot"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

482 :	"get_rotate_index"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

482 :	"-"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

482 :	"*"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

482 :	"capmap"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

482 :	"cn"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

482 :	"-"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

482 :	"pole"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

489 :	"if"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

489 :	"capmap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

489 :	"region"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

489 :	"=="
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

489 :	"CapMap"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

489 :	"north"
		- NEIGH  = { north , == , region , CapMap , capmap , if , }
		- PARENT = { == , inverse , if , }
		- CHILD  = { capmap , * , south_square , cn , - , get_rotate_index , tmpRot , rot , north_square , pole , }
		- PRED   = { }
		- SUCC   = { }

490 :	"pole"
		- NEIGH  = { north_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }

490 :	"north_square"
		- NEIGH  = { north_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }

491 :	"tmpRot"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

491 :	"rot"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

491 :	"get_rotate_index"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

491 :	"-"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

491 :	"*"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

491 :	"capmap"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

491 :	"cn"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

491 :	"-"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

491 :	"pole"
		- NEIGH  = { pole , capmap , * , get_rotate_index , cn , - , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { north_square , pole , }
		- SUCC   = { }

493 :	"pole"
		- NEIGH  = { south_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }

493 :	"south_square"
		- NEIGH  = { south_square , pole , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }

494 :	"tmpRot"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

494 :	"rot"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

494 :	"get_rotate_index"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

494 :	"capmap"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

494 :	"cn"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

494 :	"-"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

494 :	"pole"
		- NEIGH  = { pole , - , cn , capmap , get_rotate_index , rot , tmpRot , }
		- PARENT = { north , == , region , CapMap , capmap , if , }
		- CHILD  = { }
		- PRED   = { south_square , pole , }
		- SUCC   = { }

498 :	"vector_sub"
		- NEIGH  = { v_min_c , c , v , vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { v_min_c , tmpRot , ret_dot , dot_product , }

498 :	"v"
		- NEIGH  = { v_min_c , c , v , vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { v_min_c , tmpRot , ret_dot , dot_product , }

498 :	"c"
		- NEIGH  = { v_min_c , c , v , vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { v_min_c , tmpRot , ret_dot , dot_product , }

498 :	"v_min_c"
		- NEIGH  = { v_min_c , c , v , vector_sub , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , inverse , if , }
		- SUCC   = { v_min_c , tmpRot , ret_dot , dot_product , }

499 :	"dot_product"
		- NEIGH  = { v_min_c , tmpRot , ret_dot , dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , c , v , vector_sub , }
		- SUCC   = { a , }

499 :	"tmpRot"
		- NEIGH  = { v_min_c , tmpRot , ret_dot , dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , c , v , vector_sub , }
		- SUCC   = { a , }

499 :	"v_min_c"
		- NEIGH  = { v_min_c , tmpRot , ret_dot , dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , c , v , vector_sub , }
		- SUCC   = { a , }

499 :	"ret_dot"
		- NEIGH  = { v_min_c , tmpRot , ret_dot , dot_product , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , c , v , vector_sub , }
		- SUCC   = { a , }

501 :	"a"
		- NEIGH  = { a , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v_min_c , tmpRot , ret_dot , dot_product , }
		- SUCC   = { a , pa , * , }

503 :	"*"
		- NEIGH  = { a , pa , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , }
		- SUCC   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }

503 :	"pa"
		- NEIGH  = { a , pa , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , }
		- SUCC   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }

503 :	"a"
		- NEIGH  = { a , pa , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , }
		- SUCC   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }

504 :	"pa"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"-"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"*"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"M_FORTPI"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"+"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"inverse"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"=="
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"pole"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"capmap"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"cn"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"*"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

504 :	"M_HALFPI"
		- NEIGH  = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , pa , * , }
		- SUCC   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }

505 :	"pa"
		- NEIGH  = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

505 :	"capmap"
		- NEIGH  = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

505 :	"region"
		- NEIGH  = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

505 :	"=="
		- NEIGH  = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

505 :	"CapMap"
		- NEIGH  = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

505 :	"north"
		- NEIGH  = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

505 :	"-"
		- NEIGH  = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

505 :	"*"
		- NEIGH  = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

505 :	"M_HALFPI"
		- NEIGH  = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { capmap , M_HALFPI , pole , == , + , M_FORTPI , cn , inverse , - , * , pa , }
		- SUCC   = { ret_dot , vector , a , vector_add , }

506 :	"vector_add"
		- NEIGH  = { ret_dot , vector , a , vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- SUCC   = { vector , x , xy , }

506 :	"ret_dot"
		- NEIGH  = { ret_dot , vector , a , vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- SUCC   = { vector , x , xy , }

506 :	"a"
		- NEIGH  = { ret_dot , vector , a , vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- SUCC   = { vector , x , xy , }

506 :	"vector"
		- NEIGH  = { ret_dot , vector , a , vector_add , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , - , M_HALFPI , north , == , region , CapMap , capmap , pa , }
		- SUCC   = { vector , x , xy , }

509 :	"xy"
		- NEIGH  = { vector , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , vector , a , vector_add , }
		- SUCC   = { vector , y , xy , }

509 :	"x"
		- NEIGH  = { vector , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , vector , a , vector_add , }
		- SUCC   = { vector , y , xy , }

509 :	"vector"
		- NEIGH  = { vector , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ret_dot , vector , a , vector_add , }
		- SUCC   = { vector , y , xy , }

510 :	"xy"
		- NEIGH  = { vector , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , x , xy , }
		- SUCC   = { xy , return , }

510 :	"y"
		- NEIGH  = { vector , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , x , xy , }
		- SUCC   = { xy , return , }

510 :	"vector"
		- NEIGH  = { vector , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , x , xy , }
		- SUCC   = { xy , return , }

511 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , y , xy , }
		- SUCC   = { }

511 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vector , y , xy , }
		- SUCC   = { }

515 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

515 :	"s_healpix_forward"
		- NEIGH  = { s_healpix_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

515 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

515 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

515 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

515 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

515 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

516 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , healpix_sphere , return , }

517 :	"return"
		- NEIGH  = { lp , healpix_sphere , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { }

517 :	"healpix_sphere"
		- NEIGH  = { lp , healpix_sphere , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { }

517 :	"lp"
		- NEIGH  = { lp , healpix_sphere , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { }

521 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

521 :	"e_healpix_forward"
		- NEIGH  = { e_healpix_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

521 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

521 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

521 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

521 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

521 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

522 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , healpix_sphere , return , }

522 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , healpix_sphere , return , }

522 :	"auth_lat"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , healpix_sphere , return , }

522 :	"P"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , healpix_sphere , return , }

522 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , healpix_sphere , return , }

522 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , healpix_sphere , return , }

523 :	"return"
		- NEIGH  = { lp , healpix_sphere , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

523 :	"healpix_sphere"
		- NEIGH  = { lp , healpix_sphere , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

523 :	"lp"
		- NEIGH  = { lp , healpix_sphere , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

527 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

527 :	"s_healpix_inverse"
		- NEIGH  = { s_healpix_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

527 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

527 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

527 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

527 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

527 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

529 :	"if"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

529 :	"in_image"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

529 :	"xy"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

529 :	"x"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

529 :	"xy"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

529 :	"y"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

529 :	"=="
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

530 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , lam , lp , }

530 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , lam , lp , }

531 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

531 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

531 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

532 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

532 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

532 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

533 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

533 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

533 :	"ctx"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

533 :	"PJD_ERR_INVALID_X_OR_Y"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

534 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

534 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

536 :	"return"
		- NEIGH  = { xy , healpix_sphere_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { }

536 :	"healpix_sphere_inverse"
		- NEIGH  = { xy , healpix_sphere_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { }

536 :	"xy"
		- NEIGH  = { xy , healpix_sphere_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { }

540 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

540 :	"e_healpix_inverse"
		- NEIGH  = { e_healpix_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

540 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

540 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

540 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

540 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

540 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

541 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , == , in_image , if , }

541 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , == , in_image , if , }

544 :	"if"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

544 :	"in_image"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

544 :	"xy"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

544 :	"x"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

544 :	"xy"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

544 :	"y"
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

544 :	"=="
		- NEIGH  = { y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

545 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

545 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

545 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

546 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

546 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

546 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

547 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

547 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

547 :	"ctx"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

547 :	"PJD_ERR_INVALID_X_OR_Y"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

548 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

548 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

550 :	"lp"
		- NEIGH  = { xy , healpix_sphere_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { P , auth_lat , phi , lp , }

550 :	"healpix_sphere_inverse"
		- NEIGH  = { xy , healpix_sphere_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { P , auth_lat , phi , lp , }

550 :	"xy"
		- NEIGH  = { xy , healpix_sphere_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , xy , == , in_image , if , }
		- SUCC   = { P , auth_lat , phi , lp , }

551 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

551 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

551 :	"auth_lat"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

551 :	"P"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

551 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

551 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

552 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

552 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

556 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

556 :	"s_rhealpix_forward"
		- NEIGH  = { s_rhealpix_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

556 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

556 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

556 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

556 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

556 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

557 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

557 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

557 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

557 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

557 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

557 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

557 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

557 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

557 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

557 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , xy , healpix_sphere , PJ_XY , }

559 :	"PJ_XY"
		- NEIGH  = { lp , xy , healpix_sphere , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

559 :	"xy"
		- NEIGH  = { lp , xy , healpix_sphere , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

559 :	"healpix_sphere"
		- NEIGH  = { lp , xy , healpix_sphere , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

559 :	"lp"
		- NEIGH  = { lp , xy , healpix_sphere , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

560 :	"return"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"combine_caps"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"xy"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"x"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"xy"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"y"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"Q"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"north_square"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"Q"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

560 :	"south_square"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , xy , healpix_sphere , PJ_XY , }
		- SUCC   = { }

564 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

564 :	"e_rhealpix_forward"
		- NEIGH  = { e_rhealpix_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

564 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

564 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

564 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

564 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

564 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

565 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

565 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

565 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

565 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

565 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

565 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

565 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

565 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

565 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

565 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , PJ_XY , }

566 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { P , auth_lat , phi , lp , }

566 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { P , auth_lat , phi , lp , }

567 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

567 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

567 :	"auth_lat"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

567 :	"P"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

567 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

567 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { lp , healpix_sphere , xy , }

568 :	"xy"
		- NEIGH  = { lp , healpix_sphere , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

568 :	"healpix_sphere"
		- NEIGH  = { lp , healpix_sphere , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

568 :	"lp"
		- NEIGH  = { lp , healpix_sphere , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { north_square , Q , y , x , xy , combine_caps , south_square , return , }

569 :	"return"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"combine_caps"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"xy"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"x"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"xy"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"y"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"Q"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"north_square"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"Q"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

569 :	"south_square"
		- NEIGH  = { north_square , Q , y , x , xy , combine_caps , south_square , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , healpix_sphere , xy , }
		- SUCC   = { }

573 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"s_rhealpix_inverse"
		- NEIGH  = { s_rhealpix_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

573 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

574 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

574 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

574 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

574 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

574 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

574 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

574 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

574 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

574 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

574 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

577 :	"if"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"in_image"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"xy"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"x"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"xy"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"y"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"Q"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"north_square"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"Q"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"south_square"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

577 :	"=="
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , PJD_ERR_INVALID_X_OR_Y , PJ_LP , }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

578 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , lam , lp , }

578 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , lam , lp , }

579 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

579 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

579 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { HUGE_VAL , phi , lp , }

580 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

580 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

580 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

581 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

581 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

581 :	"ctx"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

581 :	"PJD_ERR_INVALID_X_OR_Y"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

582 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

582 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

584 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

584 :	"combine_caps"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

584 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

584 :	"x"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

584 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

584 :	"y"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

584 :	"Q"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

584 :	"north_square"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

584 :	"Q"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

584 :	"south_square"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , return , }

585 :	"return"
		- NEIGH  = { xy , healpix_sphere_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { }

585 :	"healpix_sphere_inverse"
		- NEIGH  = { xy , healpix_sphere_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { }

585 :	"xy"
		- NEIGH  = { xy , healpix_sphere_inverse , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { }

589 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

589 :	"e_rhealpix_inverse"
		- NEIGH  = { e_rhealpix_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

589 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

589 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

589 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

589 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

589 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

590 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

590 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

590 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

590 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

590 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

590 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

590 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

590 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

590 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

590 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , PJ_LP , }

591 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

591 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }

594 :	"if"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"in_image"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"xy"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"x"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"xy"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"y"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"Q"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"north_square"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"Q"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"south_square"
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

594 :	"=="
		- NEIGH  = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- PARENT = { }
		- CHILD  = { return , PJD_ERR_INVALID_X_OR_Y , ctx , pj_ctx_set_errno , HUGE_VAL , P , lam , phi , lp , }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { south_square , north_square , Q , combine_caps , y , x , xy , }

595 :	"lp"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

595 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

595 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , phi , lp , }

596 :	"lp"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

596 :	"phi"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

596 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , phi , lp , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , lam , lp , }
		- SUCC   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }

597 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

597 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

597 :	"ctx"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

597 :	"PJD_ERR_INVALID_X_OR_Y"
		- NEIGH  = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { HUGE_VAL , phi , lp , }
		- SUCC   = { lp , return , }

598 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

598 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_INVALID_X_OR_Y , ctx , P , pj_ctx_set_errno , }
		- SUCC   = { }

600 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

600 :	"combine_caps"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

600 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

600 :	"x"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

600 :	"xy"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

600 :	"y"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

600 :	"Q"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

600 :	"north_square"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

600 :	"Q"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

600 :	"south_square"
		- NEIGH  = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , y , x , xy , == , in_image , if , }
		- SUCC   = { xy , healpix_sphere_inverse , lp , }

601 :	"lp"
		- NEIGH  = { xy , healpix_sphere_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { P , auth_lat , phi , lp , }

601 :	"healpix_sphere_inverse"
		- NEIGH  = { xy , healpix_sphere_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { P , auth_lat , phi , lp , }

601 :	"xy"
		- NEIGH  = { xy , healpix_sphere_inverse , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { south_square , north_square , Q , combine_caps , y , x , xy , }
		- SUCC   = { P , auth_lat , phi , lp , }

602 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

602 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

602 :	"auth_lat"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

602 :	"P"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

602 :	"lp"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

602 :	"phi"
		- NEIGH  = { P , auth_lat , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , healpix_sphere_inverse , lp , }
		- SUCC   = { lp , return , }

603 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

603 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , auth_lat , phi , lp , }
		- SUCC   = { }

607 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

607 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

607 :	"destructor"
		- NEIGH  = { destructor , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

607 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

607 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

607 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

607 :	"errlev"
		- NEIGH  = { errlev , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

608 :	"if"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

608 :	"=="
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

608 :	"P"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

609 :	"return"
		- NEIGH  = { return , }
		- PARENT = { P , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

611 :	"if"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

611 :	"=="
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

611 :	"P"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

611 :	"opaque"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

612 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

612 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

612 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

612 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

614 :	"pj_dealloc"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

614 :	"static_cast"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

614 :	"<"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

614 :	"pj_opaque"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

614 :	"*"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

614 :	">"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

614 :	"P"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

614 :	"opaque"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

614 :	"apa"
		- NEIGH  = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

615 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

615 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

615 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

615 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , apa , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

619 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

619 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

619 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

619 :	"healpix"
		- NEIGH  = { healpix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

620 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

620 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

620 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

620 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

620 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

620 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

620 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

620 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

620 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

620 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

621 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

621 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

621 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

622 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

622 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

622 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

622 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

623 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

623 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

623 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

624 :	"P"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , es , P , if , }

624 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , es , P , if , }

624 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { != , es , P , if , }

626 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_healpix_forward , inv , fwd , e_healpix_forward , pj_calc_ellipsoid_params , e_healpix_inverse , one_es , qp , P , e , s_healpix_inverse , pj_qsfn , == , if , pj_authset , sqrt , * , a , es , apa , Q , }
		- PRED   = { destructor , P , }
		- SUCC   = { P , return , }

626 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_healpix_forward , inv , fwd , e_healpix_forward , pj_calc_ellipsoid_params , e_healpix_inverse , one_es , qp , P , e , s_healpix_inverse , pj_qsfn , == , if , pj_authset , sqrt , * , a , es , apa , Q , }
		- PRED   = { destructor , P , }
		- SUCC   = { P , return , }

626 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_healpix_forward , inv , fwd , e_healpix_forward , pj_calc_ellipsoid_params , e_healpix_inverse , one_es , qp , P , e , s_healpix_inverse , pj_qsfn , == , if , pj_authset , sqrt , * , a , es , apa , Q , }
		- PRED   = { destructor , P , }
		- SUCC   = { P , return , }

626 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_healpix_forward , inv , fwd , e_healpix_forward , pj_calc_ellipsoid_params , e_healpix_inverse , one_es , qp , P , e , s_healpix_inverse , pj_qsfn , == , if , pj_authset , sqrt , * , a , es , apa , Q , }
		- PRED   = { destructor , P , }
		- SUCC   = { P , return , }

627 :	"Q"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

627 :	"apa"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

627 :	"pj_authset"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

627 :	"P"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

627 :	"es"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

628 :	"if"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

628 :	"=="
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

628 :	"Q"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

628 :	"apa"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

629 :	"return"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

629 :	"destructor"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

629 :	"P"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

629 :	"ENOMEM"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

630 :	"Q"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

630 :	"qp"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

630 :	"pj_qsfn"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

630 :	"P"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

630 :	"e"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

630 :	"P"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

630 :	"one_es"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

631 :	"P"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

631 :	"a"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

631 :	"P"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

631 :	"a"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

631 :	"*"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

631 :	"sqrt"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

631 :	"*"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

631 :	"Q"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

631 :	"qp"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { es , P , a , pj_calc_ellipsoid_params , }

632 :	"pj_calc_ellipsoid_params"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

632 :	"P"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

632 :	"P"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

632 :	"a"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

632 :	"P"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

632 :	"es"
		- NEIGH  = { es , P , a , pj_calc_ellipsoid_params , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_healpix_forward , fwd , P , }

633 :	"P"
		- NEIGH  = { e_healpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , a , pj_calc_ellipsoid_params , }
		- SUCC   = { inv , e_healpix_inverse , P , }

633 :	"fwd"
		- NEIGH  = { e_healpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , a , pj_calc_ellipsoid_params , }
		- SUCC   = { inv , e_healpix_inverse , P , }

633 :	"e_healpix_forward"
		- NEIGH  = { e_healpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , a , pj_calc_ellipsoid_params , }
		- SUCC   = { inv , e_healpix_inverse , P , }

634 :	"P"
		- NEIGH  = { inv , e_healpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_healpix_forward , fwd , P , }
		- SUCC   = { }

634 :	"inv"
		- NEIGH  = { inv , e_healpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_healpix_forward , fwd , P , }
		- SUCC   = { }

634 :	"e_healpix_inverse"
		- NEIGH  = { inv , e_healpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_healpix_forward , fwd , P , }
		- SUCC   = { }

636 :	"P"
		- NEIGH  = { fwd , s_healpix_forward , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_healpix_inverse , inv , P , }

636 :	"fwd"
		- NEIGH  = { fwd , s_healpix_forward , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_healpix_inverse , inv , P , }

636 :	"s_healpix_forward"
		- NEIGH  = { fwd , s_healpix_forward , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_healpix_inverse , inv , P , }

637 :	"P"
		- NEIGH  = { s_healpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { fwd , s_healpix_forward , P , }
		- SUCC   = { }

637 :	"inv"
		- NEIGH  = { s_healpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { fwd , s_healpix_forward , P , }
		- SUCC   = { }

637 :	"s_healpix_inverse"
		- NEIGH  = { s_healpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { fwd , s_healpix_forward , P , }
		- SUCC   = { }

640 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

640 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

644 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

644 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

644 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

644 :	"rhealpix"
		- NEIGH  = { rhealpix , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

645 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

645 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

646 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

646 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

646 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

647 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

647 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

647 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

647 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

648 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

648 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

648 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

649 :	"P"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , pj_param , Q , ctx , north_square , P , }

649 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , pj_param , Q , ctx , north_square , P , }

649 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , pj_param , Q , ctx , north_square , P , }

651 :	"Q"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

651 :	"north_square"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

651 :	"pj_param"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

651 :	"P"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

651 :	"ctx"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

651 :	"P"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

651 :	"params"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

651 :	"i"
		- NEIGH  = { i , params , pj_param , Q , ctx , north_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { Q , ctx , pj_param , i , params , south_square , P , }

652 :	"Q"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

652 :	"south_square"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

652 :	"pj_param"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

652 :	"P"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

652 :	"ctx"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

652 :	"P"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

652 :	"params"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

652 :	"i"
		- NEIGH  = { Q , ctx , pj_param , i , params , south_square , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , params , pj_param , Q , ctx , north_square , P , }
		- SUCC   = { > , < , north_square , || , Q , if , }

655 :	"if"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

655 :	"Q"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

655 :	"north_square"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

655 :	"<"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

655 :	"||"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

655 :	"Q"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

655 :	"north_square"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

655 :	">"
		- NEIGH  = { > , < , north_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { Q , ctx , pj_param , i , params , south_square , P , }
		- SUCC   = { > , < , south_square , || , Q , if , }

656 :	"return"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , north_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

656 :	"destructor"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , north_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

656 :	"P"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , north_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

656 :	"PJD_ERR_AXIS"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , north_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

657 :	"if"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

657 :	"Q"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

657 :	"south_square"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

657 :	"<"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

657 :	"||"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

657 :	"Q"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

657 :	"south_square"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

657 :	">"
		- NEIGH  = { > , < , south_square , || , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_AXIS , destructor , P , return , }
		- PRED   = { > , < , north_square , || , Q , if , }
		- SUCC   = { != , es , P , if , }

658 :	"return"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , south_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

658 :	"destructor"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , south_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

658 :	"P"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , south_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

658 :	"PJD_ERR_AXIS"
		- NEIGH  = { PJD_ERR_AXIS , destructor , P , return , }
		- PARENT = { > , < , south_square , || , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

659 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_rhealpix_forward , inv , fwd , / , e_rhealpix_inverse , one_es , qp , P , e , pj_qsfn , == , if , e_rhealpix_forward , pj_authset , s_rhealpix_inverse , sqrt , * , a , es , ra , apa , Q , }
		- PRED   = { > , < , south_square , || , Q , if , }
		- SUCC   = { P , return , }

659 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_rhealpix_forward , inv , fwd , / , e_rhealpix_inverse , one_es , qp , P , e , pj_qsfn , == , if , e_rhealpix_forward , pj_authset , s_rhealpix_inverse , sqrt , * , a , es , ra , apa , Q , }
		- PRED   = { > , < , south_square , || , Q , if , }
		- SUCC   = { P , return , }

659 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_rhealpix_forward , inv , fwd , / , e_rhealpix_inverse , one_es , qp , P , e , pj_qsfn , == , if , e_rhealpix_forward , pj_authset , s_rhealpix_inverse , sqrt , * , a , es , ra , apa , Q , }
		- PRED   = { > , < , south_square , || , Q , if , }
		- SUCC   = { P , return , }

659 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { s_rhealpix_forward , inv , fwd , / , e_rhealpix_inverse , one_es , qp , P , e , pj_qsfn , == , if , e_rhealpix_forward , pj_authset , s_rhealpix_inverse , sqrt , * , a , es , ra , apa , Q , }
		- PRED   = { > , < , south_square , || , Q , if , }
		- SUCC   = { P , return , }

660 :	"Q"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

660 :	"apa"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

660 :	"pj_authset"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

660 :	"P"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

660 :	"es"
		- NEIGH  = { pj_authset , es , P , apa , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { apa , Q , == , if , }

661 :	"if"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

661 :	"=="
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

661 :	"Q"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

661 :	"apa"
		- NEIGH  = { apa , Q , == , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { ENOMEM , destructor , P , return , }
		- PRED   = { pj_authset , es , P , apa , Q , }
		- SUCC   = { one_es , pj_qsfn , e , qp , P , Q , }

662 :	"return"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

662 :	"destructor"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

662 :	"P"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

662 :	"ENOMEM"
		- NEIGH  = { ENOMEM , destructor , P , return , }
		- PARENT = { apa , Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

663 :	"Q"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

663 :	"qp"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

663 :	"pj_qsfn"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

663 :	"P"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

663 :	"e"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

663 :	"P"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

663 :	"one_es"
		- NEIGH  = { one_es , pj_qsfn , e , qp , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { apa , Q , == , if , }
		- SUCC   = { Q , sqrt , * , qp , a , P , }

664 :	"P"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

664 :	"a"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

664 :	"P"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

664 :	"a"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

664 :	"*"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

664 :	"sqrt"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

664 :	"*"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

664 :	"Q"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

664 :	"qp"
		- NEIGH  = { Q , sqrt , * , qp , a , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { one_es , pj_qsfn , e , qp , P , Q , }
		- SUCC   = { a , / , ra , P , }

665 :	"P"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

665 :	"ra"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

665 :	"/"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

665 :	"P"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

665 :	"a"
		- NEIGH  = { a , / , ra , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { Q , sqrt , * , qp , a , P , }
		- SUCC   = { e_rhealpix_forward , fwd , P , }

666 :	"P"
		- NEIGH  = { e_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { a , / , ra , P , }
		- SUCC   = { inv , e_rhealpix_inverse , P , }

666 :	"fwd"
		- NEIGH  = { e_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { a , / , ra , P , }
		- SUCC   = { inv , e_rhealpix_inverse , P , }

666 :	"e_rhealpix_forward"
		- NEIGH  = { e_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { a , / , ra , P , }
		- SUCC   = { inv , e_rhealpix_inverse , P , }

667 :	"P"
		- NEIGH  = { inv , e_rhealpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_rhealpix_forward , fwd , P , }
		- SUCC   = { }

667 :	"inv"
		- NEIGH  = { inv , e_rhealpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_rhealpix_forward , fwd , P , }
		- SUCC   = { }

667 :	"e_rhealpix_inverse"
		- NEIGH  = { inv , e_rhealpix_inverse , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { e_rhealpix_forward , fwd , P , }
		- SUCC   = { }

669 :	"P"
		- NEIGH  = { s_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_rhealpix_inverse , inv , P , }

669 :	"fwd"
		- NEIGH  = { s_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_rhealpix_inverse , inv , P , }

669 :	"s_rhealpix_forward"
		- NEIGH  = { s_rhealpix_forward , fwd , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_rhealpix_inverse , inv , P , }

670 :	"P"
		- NEIGH  = { s_rhealpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_rhealpix_forward , fwd , P , }
		- SUCC   = { }

670 :	"inv"
		- NEIGH  = { s_rhealpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_rhealpix_forward , fwd , P , }
		- SUCC   = { }

670 :	"s_rhealpix_inverse"
		- NEIGH  = { s_rhealpix_inverse , inv , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { s_rhealpix_forward , fwd , P , }
		- SUCC   = { }

673 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

673 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

