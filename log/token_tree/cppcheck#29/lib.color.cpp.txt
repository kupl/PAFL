11 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"ostream"
		- NEIGH  = { ostream , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"<<"
		- NEIGH  = { << , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"ostream"
		- NEIGH  = { ostream , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"os"
		- NEIGH  = { os , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"Color"
		- NEIGH  = { Color , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

11 :	"c"
		- NEIGH  = { c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"use_color"
		- NEIGH  = { STDOUT_FILENO , isatty , use_color , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use_color , if , }

13 :	"isatty"
		- NEIGH  = { STDOUT_FILENO , isatty , use_color , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use_color , if , }

13 :	"STDOUT_FILENO"
		- NEIGH  = { STDOUT_FILENO , isatty , use_color , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use_color , if , }

14 :	"if"
		- NEIGH  = { use_color , if , }
		- PARENT = { }
		- CHILD  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PRED   = { STDOUT_FILENO , isatty , use_color , }
		- SUCC   = { os , return , }

14 :	"use_color"
		- NEIGH  = { use_color , if , }
		- PARENT = { }
		- CHILD  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PRED   = { STDOUT_FILENO , isatty , use_color , }
		- SUCC   = { os , return , }

15 :	"return"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"os"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"<<"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"<<"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"static_cast"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"<"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"std"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"size_t"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	">"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"c"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"<<"
		- NEIGH  = { c , > , < , static_cast , size_t , std , return , os , << , }
		- PARENT = { use_color , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

17 :	"return"
		- NEIGH  = { os , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use_color , if , }
		- SUCC   = { }

17 :	"os"
		- NEIGH  = { os , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use_color , if , }
		- SUCC   = { }

20 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"toString"
		- NEIGH  = { toString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"Color"
		- NEIGH  = { Color , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"c"
		- NEIGH  = { c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"std"
		- NEIGH  = { ss , stringstream , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , << , ss , }

22 :	"stringstream"
		- NEIGH  = { ss , stringstream , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , << , ss , }

22 :	"ss"
		- NEIGH  = { ss , stringstream , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , << , ss , }

23 :	"ss"
		- NEIGH  = { c , << , ss , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ss , stringstream , std , }
		- SUCC   = { str , ss , return , }

23 :	"<<"
		- NEIGH  = { c , << , ss , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ss , stringstream , std , }
		- SUCC   = { str , ss , return , }

23 :	"c"
		- NEIGH  = { c , << , ss , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ss , stringstream , std , }
		- SUCC   = { str , ss , return , }

24 :	"return"
		- NEIGH  = { str , ss , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , << , ss , }
		- SUCC   = { }

24 :	"ss"
		- NEIGH  = { str , ss , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , << , ss , }
		- SUCC   = { }

24 :	"str"
		- NEIGH  = { str , ss , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , << , ss , }
		- SUCC   = { }

