39 :	"NS_PROJ_START"
		- NEIGH  = { NS_PROJ_START , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"UnitOfMeasurePtr"
		- NEIGH  = { UnitOfMeasurePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"shared_ptr"
		- NEIGH  = { shared_ptr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	"UnitOfMeasureNNPtr"
		- NEIGH  = { UnitOfMeasureNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	"UnitOfMeasurePtr"
		- NEIGH  = { UnitOfMeasurePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"metadata"
		- NEIGH  = { metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"PROJ_GCC_DLL"
		- NEIGH  = { PROJ_GCC_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"Citation"
		- NEIGH  = { Citation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"BaseObject"
		- NEIGH  = { BaseObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"PROJ_DLL"
		- NEIGH  = { titleIn , std , string , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Citation , PROJ_DLL , }

67 :	"Citation"
		- NEIGH  = { titleIn , std , string , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Citation , PROJ_DLL , }

67 :	"std"
		- NEIGH  = { titleIn , std , string , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Citation , PROJ_DLL , }

67 :	"string"
		- NEIGH  = { titleIn , std , string , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Citation , PROJ_DLL , }

67 :	"&"
		- NEIGH  = { titleIn , std , string , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Citation , PROJ_DLL , }

67 :	"titleIn"
		- NEIGH  = { titleIn , std , string , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Citation , PROJ_DLL , }

69 :	"PROJ_DLL"
		- NEIGH  = { Citation , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { titleIn , std , string , Citation , & , PROJ_DLL , }
		- SUCC   = { other , Citation , & , PROJ_DLL , }

69 :	"Citation"
		- NEIGH  = { Citation , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { titleIn , std , string , Citation , & , PROJ_DLL , }
		- SUCC   = { other , Citation , & , PROJ_DLL , }

70 :	"PROJ_DLL"
		- NEIGH  = { other , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_DLL , }

70 :	"Citation"
		- NEIGH  = { other , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_DLL , }

70 :	"Citation"
		- NEIGH  = { other , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_DLL , }

70 :	"&"
		- NEIGH  = { other , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_DLL , }

70 :	"other"
		- NEIGH  = { other , Citation , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_DLL , }

71 :	"PROJ_DLL"
		- NEIGH  = { Citation , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , Citation , & , PROJ_DLL , }
		- SUCC   = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

71 :	"Citation"
		- NEIGH  = { Citation , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , Citation , & , PROJ_DLL , }
		- SUCC   = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

74 :	"PROJ_DLL"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

74 :	"util"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

74 :	"optional"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

74 :	"<"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

74 :	"std"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

74 :	"string"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

74 :	">"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

74 :	"&"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

74 :	"title"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

74 :	"PROJ_PURE_DECL"
		- NEIGH  = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_DLL , }
		- SUCC   = { Citation , PROJ_FRIEND_OPTIONAL , }

77 :	"PROJ_FRIEND_OPTIONAL"
		- NEIGH  = { Citation , PROJ_FRIEND_OPTIONAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { other , Citation , & , PROJ_INTERNAL , }

77 :	"Citation"
		- NEIGH  = { Citation , PROJ_FRIEND_OPTIONAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { title , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { other , Citation , & , PROJ_INTERNAL , }

78 :	"PROJ_INTERNAL"
		- NEIGH  = { other , Citation , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

78 :	"Citation"
		- NEIGH  = { other , Citation , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

78 :	"&"
		- NEIGH  = { other , Citation , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

78 :	"Citation"
		- NEIGH  = { other , Citation , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

78 :	"&"
		- NEIGH  = { other , Citation , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

78 :	"other"
		- NEIGH  = { other , Citation , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Citation , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

81 :	"PROJ_OPAQUE_PRIVATE_DATA"
		- NEIGH  = { PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , Citation , & , PROJ_INTERNAL , }
		- SUCC   = { }

86 :	"GeographicExtent"
		- NEIGH  = { GeographicExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

88 :	"GeographicExtentPtr"
		- NEIGH  = { GeographicExtentPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

88 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

88 :	"shared_ptr"
		- NEIGH  = { shared_ptr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

88 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

88 :	"GeographicExtent"
		- NEIGH  = { GeographicExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

88 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

90 :	"GeographicExtentNNPtr"
		- NEIGH  = { GeographicExtentNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

90 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

90 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

90 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

90 :	"GeographicExtentPtr"
		- NEIGH  = { GeographicExtentPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

90 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"PROJ_GCC_DLL"
		- NEIGH  = { PROJ_GCC_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"GeographicExtent"
		- NEIGH  = { GeographicExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"BaseObject"
		- NEIGH  = { BaseObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

102 :	"PROJ_DLL"
		- NEIGH  = { override , GeographicExtent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

102 :	"GeographicExtent"
		- NEIGH  = { override , GeographicExtent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

102 :	"override"
		- NEIGH  = { override , GeographicExtent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

109 :	"PROJ_INTERNAL"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

109 :	"_isEquivalentTo"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

110 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

110 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

110 :	"*"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

110 :	"other"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

111 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

111 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

111 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

111 :	"criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

112 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

112 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

112 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

112 :	"STRICT"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

112 :	"override"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicExtent , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }

116 :	"PROJ_DLL"
		- NEIGH  = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }

117 :	"contains"
		- NEIGH  = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }

117 :	"GeographicExtentNNPtr"
		- NEIGH  = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }

117 :	"&"
		- NEIGH  = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }

117 :	"other"
		- NEIGH  = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }

120 :	"PROJ_DLL"
		- NEIGH  = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }

121 :	"intersects"
		- NEIGH  = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }

121 :	"GeographicExtentNNPtr"
		- NEIGH  = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }

121 :	"&"
		- NEIGH  = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }

121 :	"other"
		- NEIGH  = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , contains , & , PROJ_DLL , }
		- SUCC   = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }

124 :	"PROJ_DLL"
		- NEIGH  = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- SUCC   = { GeographicExtent , PROJ_INTERNAL , }

124 :	"GeographicExtentPtr"
		- NEIGH  = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- SUCC   = { GeographicExtent , PROJ_INTERNAL , }

125 :	"intersection"
		- NEIGH  = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- SUCC   = { GeographicExtent , PROJ_INTERNAL , }

125 :	"GeographicExtentNNPtr"
		- NEIGH  = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- SUCC   = { GeographicExtent , PROJ_INTERNAL , }

125 :	"&"
		- NEIGH  = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- SUCC   = { GeographicExtent , PROJ_INTERNAL , }

125 :	"other"
		- NEIGH  = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , intersects , & , PROJ_DLL , }
		- SUCC   = { GeographicExtent , PROJ_INTERNAL , }

128 :	"PROJ_INTERNAL"
		- NEIGH  = { GeographicExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

128 :	"GeographicExtent"
		- NEIGH  = { GeographicExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

131 :	"PROJ_OPAQUE_PRIVATE_DATA"
		- NEIGH  = { PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicExtent , PROJ_INTERNAL , }
		- SUCC   = { }

136 :	"GeographicBoundingBox"
		- NEIGH  = { GeographicBoundingBox , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"GeographicBoundingBoxPtr"
		- NEIGH  = { GeographicBoundingBoxPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"shared_ptr"
		- NEIGH  = { shared_ptr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"GeographicBoundingBox"
		- NEIGH  = { GeographicBoundingBox , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"GeographicBoundingBoxNNPtr"
		- NEIGH  = { GeographicBoundingBoxNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"GeographicBoundingBoxPtr"
		- NEIGH  = { GeographicBoundingBoxPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"PROJ_GCC_DLL"
		- NEIGH  = { PROJ_GCC_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"GeographicBoundingBox"
		- NEIGH  = { GeographicBoundingBox , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"GeographicExtent"
		- NEIGH  = { GeographicExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

154 :	"PROJ_DLL"
		- NEIGH  = { override , GeographicBoundingBox , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_PURE_DECL , westBoundLongitude , PROJ_DLL , }

154 :	"GeographicBoundingBox"
		- NEIGH  = { override , GeographicBoundingBox , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_PURE_DECL , westBoundLongitude , PROJ_DLL , }

154 :	"override"
		- NEIGH  = { override , GeographicBoundingBox , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_PURE_DECL , westBoundLongitude , PROJ_DLL , }

157 :	"PROJ_DLL"
		- NEIGH  = { PROJ_PURE_DECL , westBoundLongitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicBoundingBox , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , southBoundLatitude , PROJ_DLL , }

157 :	"westBoundLongitude"
		- NEIGH  = { PROJ_PURE_DECL , westBoundLongitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicBoundingBox , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , southBoundLatitude , PROJ_DLL , }

157 :	"PROJ_PURE_DECL"
		- NEIGH  = { PROJ_PURE_DECL , westBoundLongitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , GeographicBoundingBox , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , southBoundLatitude , PROJ_DLL , }

158 :	"PROJ_DLL"
		- NEIGH  = { PROJ_PURE_DECL , southBoundLatitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , westBoundLongitude , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , eastBoundLongitude , PROJ_DLL , }

158 :	"southBoundLatitude"
		- NEIGH  = { PROJ_PURE_DECL , southBoundLatitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , westBoundLongitude , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , eastBoundLongitude , PROJ_DLL , }

158 :	"PROJ_PURE_DECL"
		- NEIGH  = { PROJ_PURE_DECL , southBoundLatitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , westBoundLongitude , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , eastBoundLongitude , PROJ_DLL , }

159 :	"PROJ_DLL"
		- NEIGH  = { PROJ_PURE_DECL , eastBoundLongitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , southBoundLatitude , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }

159 :	"eastBoundLongitude"
		- NEIGH  = { PROJ_PURE_DECL , eastBoundLongitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , southBoundLatitude , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }

159 :	"PROJ_PURE_DECL"
		- NEIGH  = { PROJ_PURE_DECL , eastBoundLongitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , southBoundLatitude , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }

160 :	"PROJ_DLL"
		- NEIGH  = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , eastBoundLongitude , PROJ_DLL , }
		- SUCC   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }

160 :	"northBoundLatitude"
		- NEIGH  = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , eastBoundLongitude , PROJ_DLL , }
		- SUCC   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }

160 :	"PROJ_PURE_DECL"
		- NEIGH  = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , eastBoundLongitude , PROJ_DLL , }
		- SUCC   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }

162 :	"PROJ_DLL"
		- NEIGH  = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

162 :	"GeographicBoundingBoxNNPtr"
		- NEIGH  = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

163 :	"create"
		- NEIGH  = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

163 :	"west"
		- NEIGH  = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

163 :	"south"
		- NEIGH  = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

163 :	"east"
		- NEIGH  = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

163 :	"north"
		- NEIGH  = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , northBoundLatitude , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

166 :	"PROJ_INTERNAL"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

167 :	"_isEquivalentTo"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

167 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

167 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

167 :	"*"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

167 :	"other"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

168 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

168 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

168 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

168 :	"criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

169 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

169 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

169 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

169 :	"STRICT"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

169 :	"override"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { east , create , north , south , GeographicBoundingBoxNNPtr , west , PROJ_DLL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }

172 :	"PROJ_INTERNAL"
		- NEIGH  = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }

173 :	"contains"
		- NEIGH  = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }

173 :	"GeographicExtentNNPtr"
		- NEIGH  = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }

173 :	"&"
		- NEIGH  = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }

173 :	"other"
		- NEIGH  = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }

173 :	"override"
		- NEIGH  = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }

175 :	"PROJ_INTERNAL"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }

176 :	"intersects"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }

176 :	"GeographicExtentNNPtr"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }

176 :	"&"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }

176 :	"other"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }

176 :	"override"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , PROJ_INTERNAL , contains , & , }
		- SUCC   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }

178 :	"PROJ_INTERNAL"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- SUCC   = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }

178 :	"GeographicExtentPtr"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- SUCC   = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }

179 :	"intersection"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- SUCC   = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }

179 :	"GeographicExtentNNPtr"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- SUCC   = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }

179 :	"&"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- SUCC   = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }

179 :	"other"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- SUCC   = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }

179 :	"override"
		- NEIGH  = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersects , & , PROJ_INTERNAL , }
		- SUCC   = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }

182 :	"PROJ_INTERNAL"
		- NEIGH  = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

182 :	"GeographicBoundingBox"
		- NEIGH  = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

182 :	"west"
		- NEIGH  = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

182 :	"south"
		- NEIGH  = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

182 :	"east"
		- NEIGH  = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

183 :	"north"
		- NEIGH  = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , other , GeographicExtentNNPtr , intersection , GeographicExtentPtr , & , PROJ_INTERNAL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

184 :	"INLINED_MAKE_SHARED"
		- NEIGH  = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }
		- SUCC   = { }

187 :	"PROJ_OPAQUE_PRIVATE_DATA"
		- NEIGH  = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , south , PROJ_INTERNAL , GeographicBoundingBox , east , west , }
		- SUCC   = { }

192 :	"TemporalExtent"
		- NEIGH  = { TemporalExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

194 :	"TemporalExtentPtr"
		- NEIGH  = { TemporalExtentPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

194 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

194 :	"shared_ptr"
		- NEIGH  = { shared_ptr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

194 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

194 :	"TemporalExtent"
		- NEIGH  = { TemporalExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

194 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

196 :	"TemporalExtentNNPtr"
		- NEIGH  = { TemporalExtentNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

196 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

196 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

196 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

196 :	"TemporalExtentPtr"
		- NEIGH  = { TemporalExtentPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

196 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"PROJ_GCC_DLL"
		- NEIGH  = { PROJ_GCC_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"TemporalExtent"
		- NEIGH  = { TemporalExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"BaseObject"
		- NEIGH  = { BaseObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

205 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

205 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

208 :	"PROJ_DLL"
		- NEIGH  = { override , TemporalExtent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }

208 :	"TemporalExtent"
		- NEIGH  = { override , TemporalExtent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }

208 :	"override"
		- NEIGH  = { override , TemporalExtent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }

211 :	"PROJ_DLL"
		- NEIGH  = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , TemporalExtent , PROJ_DLL , }
		- SUCC   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

211 :	"std"
		- NEIGH  = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , TemporalExtent , PROJ_DLL , }
		- SUCC   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

211 :	"string"
		- NEIGH  = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , TemporalExtent , PROJ_DLL , }
		- SUCC   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

211 :	"&"
		- NEIGH  = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , TemporalExtent , PROJ_DLL , }
		- SUCC   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

211 :	"start"
		- NEIGH  = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , TemporalExtent , PROJ_DLL , }
		- SUCC   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

211 :	"PROJ_PURE_DECL"
		- NEIGH  = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , TemporalExtent , PROJ_DLL , }
		- SUCC   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

212 :	"PROJ_DLL"
		- NEIGH  = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }

212 :	"std"
		- NEIGH  = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }

212 :	"string"
		- NEIGH  = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }

212 :	"&"
		- NEIGH  = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }

212 :	"stop"
		- NEIGH  = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }

212 :	"PROJ_PURE_DECL"
		- NEIGH  = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , start , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }

214 :	"PROJ_DLL"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

214 :	"TemporalExtentNNPtr"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

214 :	"create"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

214 :	"std"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

214 :	"string"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

214 :	"&"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

214 :	"start"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

215 :	"std"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

215 :	"string"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

215 :	"&"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

215 :	"stop"
		- NEIGH  = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

218 :	"PROJ_INTERNAL"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

219 :	"_isEquivalentTo"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

219 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

219 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

219 :	"*"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

219 :	"other"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

220 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

220 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

220 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

220 :	"criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

221 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

221 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

221 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

221 :	"STRICT"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

221 :	"override"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , stop , start , TemporalExtentNNPtr , std , create , string , PROJ_DLL , }
		- SUCC   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }

224 :	"PROJ_DLL"
		- NEIGH  = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }

224 :	"contains"
		- NEIGH  = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }

224 :	"TemporalExtentNNPtr"
		- NEIGH  = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }

224 :	"&"
		- NEIGH  = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }

224 :	"other"
		- NEIGH  = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }

226 :	"PROJ_DLL"
		- NEIGH  = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }

226 :	"intersects"
		- NEIGH  = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }

226 :	"TemporalExtentNNPtr"
		- NEIGH  = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }

226 :	"&"
		- NEIGH  = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }

226 :	"other"
		- NEIGH  = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }

229 :	"PROJ_INTERNAL"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

229 :	"TemporalExtent"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

229 :	"std"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

229 :	"string"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

229 :	"&"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

229 :	"start"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

230 :	"std"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

230 :	"string"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

230 :	"&"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

230 :	"stop"
		- NEIGH  = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , TemporalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

231 :	"INLINED_MAKE_SHARED"
		- NEIGH  = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- SUCC   = { }

234 :	"PROJ_OPAQUE_PRIVATE_DATA"
		- NEIGH  = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { stop , start , std , TemporalExtent , & , string , PROJ_INTERNAL , }
		- SUCC   = { }

239 :	"VerticalExtent"
		- NEIGH  = { VerticalExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"VerticalExtentPtr"
		- NEIGH  = { VerticalExtentPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"shared_ptr"
		- NEIGH  = { shared_ptr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"VerticalExtent"
		- NEIGH  = { VerticalExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"VerticalExtentNNPtr"
		- NEIGH  = { VerticalExtentNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"VerticalExtentPtr"
		- NEIGH  = { VerticalExtentPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

251 :	"PROJ_GCC_DLL"
		- NEIGH  = { PROJ_GCC_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

251 :	"VerticalExtent"
		- NEIGH  = { VerticalExtent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

251 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

251 :	"BaseObject"
		- NEIGH  = { BaseObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

252 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

252 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

255 :	"PROJ_DLL"
		- NEIGH  = { override , VerticalExtent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_PURE_DECL , minimumValue , PROJ_DLL , }

255 :	"VerticalExtent"
		- NEIGH  = { override , VerticalExtent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_PURE_DECL , minimumValue , PROJ_DLL , }

255 :	"override"
		- NEIGH  = { override , VerticalExtent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_PURE_DECL , minimumValue , PROJ_DLL , }

258 :	"PROJ_DLL"
		- NEIGH  = { PROJ_PURE_DECL , minimumValue , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , VerticalExtent , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }

258 :	"minimumValue"
		- NEIGH  = { PROJ_PURE_DECL , minimumValue , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , VerticalExtent , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }

258 :	"PROJ_PURE_DECL"
		- NEIGH  = { PROJ_PURE_DECL , minimumValue , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , VerticalExtent , PROJ_DLL , }
		- SUCC   = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }

259 :	"PROJ_DLL"
		- NEIGH  = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , minimumValue , PROJ_DLL , }
		- SUCC   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }

259 :	"maximumValue"
		- NEIGH  = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , minimumValue , PROJ_DLL , }
		- SUCC   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }

259 :	"PROJ_PURE_DECL"
		- NEIGH  = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , minimumValue , PROJ_DLL , }
		- SUCC   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }

260 :	"PROJ_DLL"
		- NEIGH  = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }
		- SUCC   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }

260 :	"common"
		- NEIGH  = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }
		- SUCC   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }

260 :	"UnitOfMeasureNNPtr"
		- NEIGH  = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }
		- SUCC   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }

260 :	"&"
		- NEIGH  = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }
		- SUCC   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }

260 :	"unit"
		- NEIGH  = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }
		- SUCC   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }

260 :	"PROJ_PURE_DECL"
		- NEIGH  = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_PURE_DECL , maximumValue , PROJ_DLL , }
		- SUCC   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }

262 :	"PROJ_DLL"
		- NEIGH  = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

262 :	"VerticalExtentNNPtr"
		- NEIGH  = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

263 :	"create"
		- NEIGH  = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

263 :	"minimumValue"
		- NEIGH  = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

263 :	"maximumValue"
		- NEIGH  = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

264 :	"common"
		- NEIGH  = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

264 :	"UnitOfMeasureNNPtr"
		- NEIGH  = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

264 :	"&"
		- NEIGH  = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

264 :	"unitIn"
		- NEIGH  = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasureNNPtr , common , unit , & , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

267 :	"PROJ_INTERNAL"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

268 :	"_isEquivalentTo"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

268 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

268 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

268 :	"*"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

268 :	"other"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

269 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

269 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

269 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

269 :	"criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

270 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

270 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

270 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

270 :	"STRICT"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

270 :	"override"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , UnitOfMeasureNNPtr , common , maximumValue , unitIn , minimumValue , create , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }

273 :	"PROJ_DLL"
		- NEIGH  = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }

273 :	"contains"
		- NEIGH  = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }

273 :	"VerticalExtentNNPtr"
		- NEIGH  = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }

273 :	"&"
		- NEIGH  = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }

273 :	"other"
		- NEIGH  = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }

275 :	"PROJ_DLL"
		- NEIGH  = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }

275 :	"intersects"
		- NEIGH  = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }

275 :	"VerticalExtentNNPtr"
		- NEIGH  = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }

275 :	"&"
		- NEIGH  = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }

275 :	"other"
		- NEIGH  = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }

278 :	"PROJ_INTERNAL"
		- NEIGH  = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

278 :	"VerticalExtent"
		- NEIGH  = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

278 :	"minimumValue"
		- NEIGH  = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

278 :	"maximumValue"
		- NEIGH  = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

279 :	"common"
		- NEIGH  = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

279 :	"UnitOfMeasureNNPtr"
		- NEIGH  = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

279 :	"&"
		- NEIGH  = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

279 :	"unitIn"
		- NEIGH  = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , VerticalExtentNNPtr , PROJ_DLL , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }

280 :	"INLINED_MAKE_SHARED"
		- NEIGH  = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- SUCC   = { }

283 :	"PROJ_OPAQUE_PRIVATE_DATA"
		- NEIGH  = { PROJ_OPAQUE_PRIVATE_DATA , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , maximumValue , UnitOfMeasureNNPtr , common , unitIn , minimumValue , VerticalExtent , PROJ_INTERNAL , }
		- SUCC   = { }

288 :	"Extent"
		- NEIGH  = { Extent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"ExtentPtr"
		- NEIGH  = { ExtentPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"shared_ptr"
		- NEIGH  = { shared_ptr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"Extent"
		- NEIGH  = { Extent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"ExtentNNPtr"
		- NEIGH  = { ExtentNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	"ExtentPtr"
		- NEIGH  = { ExtentPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

292 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"PROJ_GCC_DLL"
		- NEIGH  = { PROJ_GCC_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"Extent"
		- NEIGH  = { Extent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"BaseObject"
		- NEIGH  = { BaseObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"PROJ_DLL"
		- NEIGH  = { other , Extent , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Extent , PROJ_DLL , }

303 :	"Extent"
		- NEIGH  = { other , Extent , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Extent , PROJ_DLL , }

303 :	"Extent"
		- NEIGH  = { other , Extent , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Extent , PROJ_DLL , }

303 :	"&"
		- NEIGH  = { other , Extent , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Extent , PROJ_DLL , }

303 :	"other"
		- NEIGH  = { other , Extent , & , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Extent , PROJ_DLL , }

304 :	"PROJ_DLL"
		- NEIGH  = { override , Extent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , Extent , & , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

304 :	"Extent"
		- NEIGH  = { override , Extent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , Extent , & , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

304 :	"override"
		- NEIGH  = { override , Extent , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , Extent , & , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

307 :	"PROJ_DLL"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

307 :	"util"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

307 :	"optional"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

307 :	"<"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

307 :	"std"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

307 :	"string"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

307 :	">"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

307 :	"&"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

307 :	"description"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

307 :	"PROJ_PURE_DECL"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Extent , PROJ_DLL , }
		- SUCC   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }

308 :	"PROJ_DLL"
		- NEIGH  = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }

308 :	"std"
		- NEIGH  = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }

308 :	"vector"
		- NEIGH  = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }

308 :	"<"
		- NEIGH  = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }

308 :	"GeographicExtentNNPtr"
		- NEIGH  = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }

308 :	">"
		- NEIGH  = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }

308 :	"&"
		- NEIGH  = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }

309 :	"geographicElements"
		- NEIGH  = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }

309 :	"PROJ_PURE_DECL"
		- NEIGH  = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }

310 :	"PROJ_DLL"
		- NEIGH  = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- SUCC   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }

310 :	"std"
		- NEIGH  = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- SUCC   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }

310 :	"vector"
		- NEIGH  = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- SUCC   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }

310 :	"<"
		- NEIGH  = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- SUCC   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }

310 :	"TemporalExtentNNPtr"
		- NEIGH  = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- SUCC   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }

310 :	">"
		- NEIGH  = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- SUCC   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }

310 :	"&"
		- NEIGH  = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- SUCC   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }

311 :	"temporalElements"
		- NEIGH  = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- SUCC   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }

311 :	"PROJ_PURE_DECL"
		- NEIGH  = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , GeographicExtentNNPtr , < , vector , std , PROJ_PURE_DECL , geographicElements , PROJ_DLL , }
		- SUCC   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }

312 :	"PROJ_DLL"
		- NEIGH  = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }

312 :	"std"
		- NEIGH  = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }

312 :	"vector"
		- NEIGH  = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }

312 :	"<"
		- NEIGH  = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }

312 :	"VerticalExtentNNPtr"
		- NEIGH  = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }

312 :	">"
		- NEIGH  = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }

312 :	"&"
		- NEIGH  = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }

313 :	"verticalElements"
		- NEIGH  = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }

313 :	"PROJ_PURE_DECL"
		- NEIGH  = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElements , & , > , < , vector , std , TemporalExtentNNPtr , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }

315 :	"PROJ_DLL"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

315 :	"ExtentNNPtr"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

316 :	"create"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

316 :	"util"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

316 :	"optional"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

316 :	"<"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

316 :	"std"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

316 :	"string"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

316 :	">"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

316 :	"&"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

316 :	"descriptionIn"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

317 :	"std"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

317 :	"vector"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

317 :	"<"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

317 :	"GeographicExtentNNPtr"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

317 :	">"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

317 :	"&"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

317 :	"geographicElementsIn"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

318 :	"std"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

318 :	"vector"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

318 :	"<"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

318 :	"VerticalExtentNNPtr"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

318 :	">"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

318 :	"&"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

318 :	"verticalElementsIn"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

319 :	"std"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

319 :	"vector"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

319 :	"<"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

319 :	"TemporalExtentNNPtr"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

319 :	">"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

319 :	"&"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

319 :	"temporalElementsIn"
		- NEIGH  = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalElements , & , > , VerticalExtentNNPtr , < , vector , std , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }

321 :	"PROJ_DLL"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

321 :	"ExtentNNPtr"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

322 :	"createFromBBOX"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

322 :	"west"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

322 :	"south"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

322 :	"east"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

322 :	"north"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

323 :	"util"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

323 :	"optional"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

323 :	"<"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

323 :	"std"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

323 :	"string"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

323 :	">"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

323 :	"&"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

323 :	"descriptionIn"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

324 :	"util"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

324 :	"optional"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

324 :	"<"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

324 :	"std"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

324 :	"string"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

324 :	">"
		- NEIGH  = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { temporalElementsIn , verticalElementsIn , geographicElementsIn , TemporalExtentNNPtr , GeographicExtentNNPtr , descriptionIn , & , VerticalExtentNNPtr , vector , > , string , std , < , util , ExtentNNPtr , create , optional , PROJ_DLL , }
		- SUCC   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }

327 :	"PROJ_INTERNAL"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

328 :	"_isEquivalentTo"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

328 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

328 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

328 :	"*"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

328 :	"other"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

329 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

329 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

329 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

329 :	"criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

330 :	"util"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

330 :	"IComparable"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

330 :	"Criterion"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

330 :	"STRICT"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

330 :	"override"
		- NEIGH  = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , string , std , < , util , & , east , optional , north , south , createFromBBOX , > , west , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }

333 :	"PROJ_DLL"
		- NEIGH  = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }

333 :	"contains"
		- NEIGH  = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }

333 :	"ExtentNNPtr"
		- NEIGH  = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }

333 :	"&"
		- NEIGH  = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }

333 :	"other"
		- NEIGH  = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { STRICT , criterion , override , other , IComparable , Criterion , util , * , _isEquivalentTo , PROJ_INTERNAL , }
		- SUCC   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }

335 :	"PROJ_DLL"
		- NEIGH  = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }

335 :	"intersects"
		- NEIGH  = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }

335 :	"ExtentNNPtr"
		- NEIGH  = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }

335 :	"&"
		- NEIGH  = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }

335 :	"other"
		- NEIGH  = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , contains , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }

337 :	"PROJ_DLL"
		- NEIGH  = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { WORLD , ExtentNNPtr , PROJ_DLL , }

337 :	"ExtentPtr"
		- NEIGH  = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { WORLD , ExtentNNPtr , PROJ_DLL , }

337 :	"intersection"
		- NEIGH  = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { WORLD , ExtentNNPtr , PROJ_DLL , }

337 :	"ExtentNNPtr"
		- NEIGH  = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { WORLD , ExtentNNPtr , PROJ_DLL , }

337 :	"&"
		- NEIGH  = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { WORLD , ExtentNNPtr , PROJ_DLL , }

337 :	"other"
		- NEIGH  = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersects , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { WORLD , ExtentNNPtr , PROJ_DLL , }

339 :	"PROJ_DLL"
		- NEIGH  = { WORLD , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { Extent , PROJ_INTERNAL , }

339 :	"ExtentNNPtr"
		- NEIGH  = { WORLD , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { Extent , PROJ_INTERNAL , }

339 :	"WORLD"
		- NEIGH  = { WORLD , ExtentNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , intersection , ExtentPtr , & , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { Extent , PROJ_INTERNAL , }

342 :	"PROJ_INTERNAL"
		- NEIGH  = { Extent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WORLD , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }

342 :	"Extent"
		- NEIGH  = { Extent , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WORLD , ExtentNNPtr , PROJ_DLL , }
		- SUCC   = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }

343 :	"INLINED_MAKE_SHARED"
		- NEIGH  = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Extent , PROJ_INTERNAL , }
		- SUCC   = { }

346 :	"PROJ_OPAQUE_PRIVATE_DATA"
		- NEIGH  = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Extent , PROJ_INTERNAL , }
		- SUCC   = { }

347 :	"Extent"
		- NEIGH  = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Extent , PROJ_INTERNAL , }
		- SUCC   = { }

347 :	"&"
		- NEIGH  = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Extent , PROJ_INTERNAL , }
		- SUCC   = { }

347 :	"Extent"
		- NEIGH  = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Extent , PROJ_INTERNAL , }
		- SUCC   = { }

347 :	"&"
		- NEIGH  = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Extent , PROJ_INTERNAL , }
		- SUCC   = { }

347 :	"other"
		- NEIGH  = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Extent , PROJ_INTERNAL , }
		- SUCC   = { }

347 :	"delete"
		- NEIGH  = { other , delete , INLINED_MAKE_SHARED , & , Extent , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Extent , PROJ_INTERNAL , }
		- SUCC   = { }

352 :	"Identifier"
		- NEIGH  = { Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"IdentifierPtr"
		- NEIGH  = { IdentifierPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"shared_ptr"
		- NEIGH  = { shared_ptr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	"Identifier"
		- NEIGH  = { Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

354 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

356 :	"IdentifierNNPtr"
		- NEIGH  = { IdentifierNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

356 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

356 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

356 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

356 :	"IdentifierPtr"
		- NEIGH  = { IdentifierPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

356 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

363 :	"PROJ_GCC_DLL"
		- NEIGH  = { PROJ_GCC_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

363 :	"Identifier"
		- NEIGH  = { Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

363 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

363 :	"BaseObject"
		- NEIGH  = { BaseObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

364 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

364 :	"IWKTExportable"
		- NEIGH  = { IWKTExportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

365 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

365 :	"IJSONExportable"
		- NEIGH  = { IJSONExportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

368 :	"PROJ_DLL"
		- NEIGH  = { other , & , Identifier , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Identifier , PROJ_DLL , }

368 :	"Identifier"
		- NEIGH  = { other , & , Identifier , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Identifier , PROJ_DLL , }

368 :	"Identifier"
		- NEIGH  = { other , & , Identifier , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Identifier , PROJ_DLL , }

368 :	"&"
		- NEIGH  = { other , & , Identifier , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Identifier , PROJ_DLL , }

368 :	"other"
		- NEIGH  = { other , & , Identifier , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { override , Identifier , PROJ_DLL , }

369 :	"PROJ_DLL"
		- NEIGH  = { override , Identifier , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , & , Identifier , PROJ_DLL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }

369 :	"Identifier"
		- NEIGH  = { override , Identifier , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , & , Identifier , PROJ_DLL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }

369 :	"override"
		- NEIGH  = { override , Identifier , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , & , Identifier , PROJ_DLL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }

372 :	"PROJ_DLL"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

372 :	"IdentifierNNPtr"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

373 :	"create"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

373 :	"std"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

373 :	"string"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

373 :	"&"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

373 :	"codeIn"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

373 :	"std"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

373 :	"string"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

374 :	"util"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

374 :	"PropertyMap"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

374 :	"&"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

374 :	"properties"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

375 :	"util"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

375 :	"PropertyMap"
		- NEIGH  = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , Identifier , PROJ_DLL , }
		- SUCC   = { AUTHORITY_KEY , std , string , PROJ_DLL , }

377 :	"PROJ_DLL"
		- NEIGH  = { AUTHORITY_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- SUCC   = { CODE_KEY , std , string , PROJ_DLL , }

377 :	"std"
		- NEIGH  = { AUTHORITY_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- SUCC   = { CODE_KEY , std , string , PROJ_DLL , }

377 :	"string"
		- NEIGH  = { AUTHORITY_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- SUCC   = { CODE_KEY , std , string , PROJ_DLL , }

377 :	"AUTHORITY_KEY"
		- NEIGH  = { AUTHORITY_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , properties , util , codeIn , & , std , create , string , IdentifierNNPtr , PROJ_DLL , }
		- SUCC   = { CODE_KEY , std , string , PROJ_DLL , }

378 :	"PROJ_DLL"
		- NEIGH  = { CODE_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AUTHORITY_KEY , std , string , PROJ_DLL , }
		- SUCC   = { std , CODESPACE_KEY , string , PROJ_DLL , }

378 :	"std"
		- NEIGH  = { CODE_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AUTHORITY_KEY , std , string , PROJ_DLL , }
		- SUCC   = { std , CODESPACE_KEY , string , PROJ_DLL , }

378 :	"string"
		- NEIGH  = { CODE_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AUTHORITY_KEY , std , string , PROJ_DLL , }
		- SUCC   = { std , CODESPACE_KEY , string , PROJ_DLL , }

378 :	"CODE_KEY"
		- NEIGH  = { CODE_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AUTHORITY_KEY , std , string , PROJ_DLL , }
		- SUCC   = { std , CODESPACE_KEY , string , PROJ_DLL , }

379 :	"PROJ_DLL"
		- NEIGH  = { std , CODESPACE_KEY , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CODE_KEY , std , string , PROJ_DLL , }
		- SUCC   = { VERSION_KEY , std , string , PROJ_DLL , }

379 :	"std"
		- NEIGH  = { std , CODESPACE_KEY , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CODE_KEY , std , string , PROJ_DLL , }
		- SUCC   = { VERSION_KEY , std , string , PROJ_DLL , }

379 :	"string"
		- NEIGH  = { std , CODESPACE_KEY , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CODE_KEY , std , string , PROJ_DLL , }
		- SUCC   = { VERSION_KEY , std , string , PROJ_DLL , }

379 :	"CODESPACE_KEY"
		- NEIGH  = { std , CODESPACE_KEY , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CODE_KEY , std , string , PROJ_DLL , }
		- SUCC   = { VERSION_KEY , std , string , PROJ_DLL , }

380 :	"PROJ_DLL"
		- NEIGH  = { VERSION_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , CODESPACE_KEY , string , PROJ_DLL , }
		- SUCC   = { DESCRIPTION_KEY , std , string , PROJ_DLL , }

380 :	"std"
		- NEIGH  = { VERSION_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , CODESPACE_KEY , string , PROJ_DLL , }
		- SUCC   = { DESCRIPTION_KEY , std , string , PROJ_DLL , }

380 :	"string"
		- NEIGH  = { VERSION_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , CODESPACE_KEY , string , PROJ_DLL , }
		- SUCC   = { DESCRIPTION_KEY , std , string , PROJ_DLL , }

380 :	"VERSION_KEY"
		- NEIGH  = { VERSION_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , CODESPACE_KEY , string , PROJ_DLL , }
		- SUCC   = { DESCRIPTION_KEY , std , string , PROJ_DLL , }

381 :	"PROJ_DLL"
		- NEIGH  = { DESCRIPTION_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { VERSION_KEY , std , string , PROJ_DLL , }
		- SUCC   = { URI_KEY , std , string , PROJ_DLL , }

381 :	"std"
		- NEIGH  = { DESCRIPTION_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { VERSION_KEY , std , string , PROJ_DLL , }
		- SUCC   = { URI_KEY , std , string , PROJ_DLL , }

381 :	"string"
		- NEIGH  = { DESCRIPTION_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { VERSION_KEY , std , string , PROJ_DLL , }
		- SUCC   = { URI_KEY , std , string , PROJ_DLL , }

381 :	"DESCRIPTION_KEY"
		- NEIGH  = { DESCRIPTION_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { VERSION_KEY , std , string , PROJ_DLL , }
		- SUCC   = { URI_KEY , std , string , PROJ_DLL , }

382 :	"PROJ_DLL"
		- NEIGH  = { URI_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DESCRIPTION_KEY , std , string , PROJ_DLL , }
		- SUCC   = { EPSG , std , string , PROJ_DLL , }

382 :	"std"
		- NEIGH  = { URI_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DESCRIPTION_KEY , std , string , PROJ_DLL , }
		- SUCC   = { EPSG , std , string , PROJ_DLL , }

382 :	"string"
		- NEIGH  = { URI_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DESCRIPTION_KEY , std , string , PROJ_DLL , }
		- SUCC   = { EPSG , std , string , PROJ_DLL , }

382 :	"URI_KEY"
		- NEIGH  = { URI_KEY , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DESCRIPTION_KEY , std , string , PROJ_DLL , }
		- SUCC   = { EPSG , std , string , PROJ_DLL , }

384 :	"PROJ_DLL"
		- NEIGH  = { EPSG , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { URI_KEY , std , string , PROJ_DLL , }
		- SUCC   = { OGC , std , string , PROJ_DLL , }

384 :	"std"
		- NEIGH  = { EPSG , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { URI_KEY , std , string , PROJ_DLL , }
		- SUCC   = { OGC , std , string , PROJ_DLL , }

384 :	"string"
		- NEIGH  = { EPSG , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { URI_KEY , std , string , PROJ_DLL , }
		- SUCC   = { OGC , std , string , PROJ_DLL , }

384 :	"EPSG"
		- NEIGH  = { EPSG , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { URI_KEY , std , string , PROJ_DLL , }
		- SUCC   = { OGC , std , string , PROJ_DLL , }

385 :	"PROJ_DLL"
		- NEIGH  = { OGC , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG , std , string , PROJ_DLL , }
		- SUCC   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

385 :	"std"
		- NEIGH  = { OGC , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG , std , string , PROJ_DLL , }
		- SUCC   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

385 :	"string"
		- NEIGH  = { OGC , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG , std , string , PROJ_DLL , }
		- SUCC   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

385 :	"OGC"
		- NEIGH  = { OGC , std , string , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG , std , string , PROJ_DLL , }
		- SUCC   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

387 :	"PROJ_DLL"
		- NEIGH  = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OGC , std , string , PROJ_DLL , }
		- SUCC   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

387 :	"util"
		- NEIGH  = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OGC , std , string , PROJ_DLL , }
		- SUCC   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

387 :	"optional"
		- NEIGH  = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OGC , std , string , PROJ_DLL , }
		- SUCC   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

387 :	"<"
		- NEIGH  = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OGC , std , string , PROJ_DLL , }
		- SUCC   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

387 :	"Citation"
		- NEIGH  = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OGC , std , string , PROJ_DLL , }
		- SUCC   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

387 :	">"
		- NEIGH  = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OGC , std , string , PROJ_DLL , }
		- SUCC   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

387 :	"&"
		- NEIGH  = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OGC , std , string , PROJ_DLL , }
		- SUCC   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

387 :	"authority"
		- NEIGH  = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OGC , std , string , PROJ_DLL , }
		- SUCC   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

387 :	"PROJ_PURE_DECL"
		- NEIGH  = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OGC , std , string , PROJ_DLL , }
		- SUCC   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

388 :	"PROJ_DLL"
		- NEIGH  = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

388 :	"std"
		- NEIGH  = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

388 :	"string"
		- NEIGH  = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

388 :	"&"
		- NEIGH  = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

388 :	"code"
		- NEIGH  = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

388 :	"PROJ_PURE_DECL"
		- NEIGH  = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authority , & , > , Citation , < , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	"PROJ_DLL"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	"util"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	"optional"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	"<"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	"std"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	"string"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	">"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	"&"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	"codeSpace"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

389 :	"PROJ_PURE_DECL"
		- NEIGH  = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	"PROJ_DLL"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	"util"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	"optional"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	"<"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	"std"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	"string"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	">"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	"&"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	"version"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

390 :	"PROJ_PURE_DECL"
		- NEIGH  = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , codeSpace , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	"PROJ_DLL"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	"util"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	"optional"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	"<"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	"std"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	"string"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	">"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	"&"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	"description"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

391 :	"PROJ_PURE_DECL"
		- NEIGH  = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { version , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }

392 :	"PROJ_DLL"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

392 :	"util"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

392 :	"optional"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

392 :	"<"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

392 :	"std"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

392 :	"string"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

392 :	">"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

392 :	"&"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

392 :	"uri"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

392 :	"PROJ_PURE_DECL"
		- NEIGH  = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , > , description , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { b , a , * , isEquivalentName , PROJ_DLL , }

394 :	"PROJ_DLL"
		- NEIGH  = { b , a , * , isEquivalentName , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }

394 :	"isEquivalentName"
		- NEIGH  = { b , a , * , isEquivalentName , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }

394 :	"*"
		- NEIGH  = { b , a , * , isEquivalentName , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }

394 :	"a"
		- NEIGH  = { b , a , * , isEquivalentName , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }

395 :	"*"
		- NEIGH  = { b , a , * , isEquivalentName , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }

395 :	"b"
		- NEIGH  = { b , a , * , isEquivalentName , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uri , & , > , string , < , std , util , optional , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }

397 :	"PROJ_PRIVATE"
		- NEIGH  = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , a , * , isEquivalentName , PROJ_DLL , }
		- SUCC   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }

399 :	"PROJ_INTERNAL"
		- NEIGH  = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , a , * , isEquivalentName , PROJ_DLL , }
		- SUCC   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }

399 :	"std"
		- NEIGH  = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , a , * , isEquivalentName , PROJ_DLL , }
		- SUCC   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }

399 :	"string"
		- NEIGH  = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , a , * , isEquivalentName , PROJ_DLL , }
		- SUCC   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }

400 :	"canonicalizeName"
		- NEIGH  = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , a , * , isEquivalentName , PROJ_DLL , }
		- SUCC   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }

400 :	"std"
		- NEIGH  = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , a , * , isEquivalentName , PROJ_DLL , }
		- SUCC   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }

400 :	"string"
		- NEIGH  = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , a , * , isEquivalentName , PROJ_DLL , }
		- SUCC   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }

400 :	"&"
		- NEIGH  = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , a , * , isEquivalentName , PROJ_DLL , }
		- SUCC   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }

400 :	"str"
		- NEIGH  = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { b , a , * , isEquivalentName , PROJ_DLL , }
		- SUCC   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }

402 :	"PROJ_INTERNAL"
		- NEIGH  = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- SUCC   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }

402 :	"_exportToWKT"
		- NEIGH  = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- SUCC   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }

402 :	"io"
		- NEIGH  = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- SUCC   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }

402 :	"WKTFormatter"
		- NEIGH  = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- SUCC   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }

402 :	"*"
		- NEIGH  = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- SUCC   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }

402 :	"formatter"
		- NEIGH  = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- SUCC   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }

403 :	"override"
		- NEIGH  = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , canonicalizeName , std , string , str , PROJ_INTERNAL , PROJ_PRIVATE , }
		- SUCC   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }

405 :	"PROJ_INTERNAL"
		- NEIGH  = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }

405 :	"_exportToJSON"
		- NEIGH  = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }

405 :	"io"
		- NEIGH  = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }

405 :	"JSONFormatter"
		- NEIGH  = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }

405 :	"*"
		- NEIGH  = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }

405 :	"formatter"
		- NEIGH  = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }

406 :	"override"
		- NEIGH  = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , formatter , io , WKTFormatter , * , _exportToWKT , PROJ_INTERNAL , }
		- SUCC   = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }

411 :	"PROJ_INTERNAL"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

411 :	"Identifier"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

411 :	"std"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

411 :	"string"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

411 :	"&"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

411 :	"codeIn"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

412 :	"util"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

412 :	"PropertyMap"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

412 :	"&"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

412 :	"properties"
		- NEIGH  = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , JSONFormatter , * , io , override , _exportToJSON , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_INTERNAL , }

413 :	"PROJ_INTERNAL"
		- NEIGH  = { Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_FRIEND_OPTIONAL , }

413 :	"Identifier"
		- NEIGH  = { Identifier , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , properties , util , codeIn , std , & , string , Identifier , PROJ_INTERNAL , }
		- SUCC   = { Identifier , PROJ_FRIEND_OPTIONAL , }

415 :	"PROJ_FRIEND_OPTIONAL"
		- NEIGH  = { Identifier , PROJ_FRIEND_OPTIONAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Identifier , PROJ_INTERNAL , }
		- SUCC   = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }

415 :	"Identifier"
		- NEIGH  = { Identifier , PROJ_FRIEND_OPTIONAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Identifier , PROJ_INTERNAL , }
		- SUCC   = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }

416 :	"INLINED_MAKE_SHARED"
		- NEIGH  = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Identifier , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { IdentifiedObject , common , PROJ_FRIEND , }

417 :	"Identifier"
		- NEIGH  = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Identifier , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { IdentifiedObject , common , PROJ_FRIEND , }

417 :	"&"
		- NEIGH  = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Identifier , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { IdentifiedObject , common , PROJ_FRIEND , }

417 :	"Identifier"
		- NEIGH  = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Identifier , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { IdentifiedObject , common , PROJ_FRIEND , }

417 :	"&"
		- NEIGH  = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Identifier , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { IdentifiedObject , common , PROJ_FRIEND , }

417 :	"other"
		- NEIGH  = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Identifier , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { IdentifiedObject , common , PROJ_FRIEND , }

417 :	"delete"
		- NEIGH  = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Identifier , PROJ_FRIEND_OPTIONAL , }
		- SUCC   = { IdentifiedObject , common , PROJ_FRIEND , }

419 :	"PROJ_FRIEND"
		- NEIGH  = { IdentifiedObject , common , PROJ_FRIEND , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- SUCC   = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }

419 :	"common"
		- NEIGH  = { IdentifiedObject , common , PROJ_FRIEND , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- SUCC   = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }

419 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , common , PROJ_FRIEND , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , delete , & , Identifier , INLINED_MAKE_SHARED , }
		- SUCC   = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }

421 :	"PROJ_INTERNAL"
		- NEIGH  = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IdentifiedObject , common , PROJ_FRIEND , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

421 :	"IdentifierNNPtr"
		- NEIGH  = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IdentifiedObject , common , PROJ_FRIEND , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

422 :	"createFromDescription"
		- NEIGH  = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IdentifiedObject , common , PROJ_FRIEND , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

422 :	"std"
		- NEIGH  = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IdentifiedObject , common , PROJ_FRIEND , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

422 :	"string"
		- NEIGH  = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IdentifiedObject , common , PROJ_FRIEND , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

422 :	"&"
		- NEIGH  = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IdentifiedObject , common , PROJ_FRIEND , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

422 :	"descriptionIn"
		- NEIGH  = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IdentifiedObject , common , PROJ_FRIEND , }
		- SUCC   = { PROJ_OPAQUE_PRIVATE_DATA , }

425 :	"PROJ_OPAQUE_PRIVATE_DATA"
		- NEIGH  = { PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { descriptionIn , & , std , createFromDescription , string , IdentifierNNPtr , PROJ_INTERNAL , }
		- SUCC   = { }

430 :	"PositionalAccuracy"
		- NEIGH  = { PositionalAccuracy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	"PositionalAccuracyPtr"
		- NEIGH  = { PositionalAccuracyPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	"shared_ptr"
		- NEIGH  = { shared_ptr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	"PositionalAccuracy"
		- NEIGH  = { PositionalAccuracy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

432 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

434 :	"PositionalAccuracyNNPtr"
		- NEIGH  = { PositionalAccuracyNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

434 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

434 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

434 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

434 :	"PositionalAccuracyPtr"
		- NEIGH  = { PositionalAccuracyPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

434 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

442 :	"PROJ_GCC_DLL"
		- NEIGH  = { PROJ_GCC_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

442 :	"PositionalAccuracy"
		- NEIGH  = { PositionalAccuracy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

442 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

442 :	"BaseObject"
		- NEIGH  = { BaseObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

445 :	"PROJ_DLL"
		- NEIGH  = { override , PositionalAccuracy , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

445 :	"PositionalAccuracy"
		- NEIGH  = { override , PositionalAccuracy , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

445 :	"override"
		- NEIGH  = { override , PositionalAccuracy , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }

448 :	"PROJ_DLL"
		- NEIGH  = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , PositionalAccuracy , PROJ_DLL , }
		- SUCC   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }

448 :	"std"
		- NEIGH  = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , PositionalAccuracy , PROJ_DLL , }
		- SUCC   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }

448 :	"string"
		- NEIGH  = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , PositionalAccuracy , PROJ_DLL , }
		- SUCC   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }

448 :	"&"
		- NEIGH  = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , PositionalAccuracy , PROJ_DLL , }
		- SUCC   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }

448 :	"value"
		- NEIGH  = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , PositionalAccuracy , PROJ_DLL , }
		- SUCC   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }

448 :	"PROJ_PURE_DECL"
		- NEIGH  = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { override , PositionalAccuracy , PROJ_DLL , }
		- SUCC   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }

450 :	"PROJ_DLL"
		- NEIGH  = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }

450 :	"PositionalAccuracyNNPtr"
		- NEIGH  = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }

450 :	"create"
		- NEIGH  = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }

450 :	"std"
		- NEIGH  = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }

450 :	"string"
		- NEIGH  = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }

450 :	"&"
		- NEIGH  = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }

450 :	"valueIn"
		- NEIGH  = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { value , std , & , string , PROJ_PURE_DECL , PROJ_DLL , }
		- SUCC   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }

453 :	"PROJ_INTERNAL"
		- NEIGH  = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- SUCC   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }

453 :	"PositionalAccuracy"
		- NEIGH  = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- SUCC   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }

453 :	"std"
		- NEIGH  = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- SUCC   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }

453 :	"string"
		- NEIGH  = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- SUCC   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }

453 :	"&"
		- NEIGH  = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- SUCC   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }

453 :	"valueIn"
		- NEIGH  = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , & , std , create , PROJ_DLL , PositionalAccuracyNNPtr , string , }
		- SUCC   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }

454 :	"INLINED_MAKE_SHARED"
		- NEIGH  = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- SUCC   = { delete , & , other , PositionalAccuracy , }

457 :	"PROJ_OPAQUE_PRIVATE_DATA"
		- NEIGH  = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- SUCC   = { delete , & , other , PositionalAccuracy , }

458 :	"PositionalAccuracy"
		- NEIGH  = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- SUCC   = { delete , & , other , PositionalAccuracy , }

458 :	"PositionalAccuracy"
		- NEIGH  = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- SUCC   = { delete , & , other , PositionalAccuracy , }

458 :	"&"
		- NEIGH  = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- SUCC   = { delete , & , other , PositionalAccuracy , }

458 :	"other"
		- NEIGH  = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- SUCC   = { delete , & , other , PositionalAccuracy , }

458 :	"delete"
		- NEIGH  = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { valueIn , std , PositionalAccuracy , & , string , PROJ_INTERNAL , }
		- SUCC   = { delete , & , other , PositionalAccuracy , }

459 :	"PositionalAccuracy"
		- NEIGH  = { delete , & , other , PositionalAccuracy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- SUCC   = { }

459 :	"&"
		- NEIGH  = { delete , & , other , PositionalAccuracy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- SUCC   = { }

459 :	"PositionalAccuracy"
		- NEIGH  = { delete , & , other , PositionalAccuracy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- SUCC   = { }

459 :	"&"
		- NEIGH  = { delete , & , other , PositionalAccuracy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- SUCC   = { }

459 :	"other"
		- NEIGH  = { delete , & , other , PositionalAccuracy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- SUCC   = { }

459 :	"delete"
		- NEIGH  = { delete , & , other , PositionalAccuracy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { delete , INLINED_MAKE_SHARED , & , other , PositionalAccuracy , PROJ_OPAQUE_PRIVATE_DATA , }
		- SUCC   = { }

464 :	"NS_PROJ_END"
		- NEIGH  = { NS_PROJ_END , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

