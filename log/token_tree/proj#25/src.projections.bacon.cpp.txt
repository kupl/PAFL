12 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"bacn"
		- NEIGH  = { bacn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

14 :	"ortl"
		- NEIGH  = { ortl , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

18 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

18 :	"apian"
		- NEIGH  = { apian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"ortel"
		- NEIGH  = { ortel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"bacon"
		- NEIGH  = { bacon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"bacon_s_forward"
		- NEIGH  = { bacon_s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

24 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

25 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

25 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

25 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

25 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

25 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

25 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

25 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

25 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

25 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

25 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { f , ax , }

26 :	"ax"
		- NEIGH  = { f , ax , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }

26 :	"f"
		- NEIGH  = { f , ax , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }

28 :	"xy"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"y"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"Q"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"bacn"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"M_HALFPI"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"*"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"sin"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"lp"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"phi"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"lp"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

28 :	"phi"
		- NEIGH  = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { f , ax , }
		- SUCC   = { lam , lp , fabs , ax , }

29 :	"ax"
		- NEIGH  = { lam , lp , fabs , ax , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- SUCC   = { >= , ax , if , }

29 :	"fabs"
		- NEIGH  = { lam , lp , fabs , ax , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- SUCC   = { >= , ax , if , }

29 :	"lp"
		- NEIGH  = { lam , lp , fabs , ax , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- SUCC   = { >= , ax , if , }

29 :	"lam"
		- NEIGH  = { lam , lp , fabs , ax , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , xy , M_HALFPI , bacn , Q , * , y , }
		- SUCC   = { >= , ax , if , }

30 :	"if"
		- NEIGH  = { >= , ax , if , }
		- PARENT = { }
		- CHILD  = { x , xy , < , lam , lp , M_HALFPI , && , >= , ortl , ax , Q , if , }
		- PRED   = { lam , lp , fabs , ax , }
		- SUCC   = { xy , return , }

30 :	"ax"
		- NEIGH  = { >= , ax , if , }
		- PARENT = { }
		- CHILD  = { x , xy , < , lam , lp , M_HALFPI , && , >= , ortl , ax , Q , if , }
		- PRED   = { lam , lp , fabs , ax , }
		- SUCC   = { xy , return , }

30 :	">="
		- NEIGH  = { >= , ax , if , }
		- PARENT = { }
		- CHILD  = { x , xy , < , lam , lp , M_HALFPI , && , >= , ortl , ax , Q , if , }
		- PRED   = { lam , lp , fabs , ax , }
		- SUCC   = { xy , return , }

31 :	"if"
		- NEIGH  = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { / , f , + , sqrt , * , phi , lp , ax , y , - , x , M_HALFPI , xy , }
		- PRED   = { }
		- SUCC   = { < , lam , lp , if , }

31 :	"Q"
		- NEIGH  = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { / , f , + , sqrt , * , phi , lp , ax , y , - , x , M_HALFPI , xy , }
		- PRED   = { }
		- SUCC   = { < , lam , lp , if , }

31 :	"ortl"
		- NEIGH  = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { / , f , + , sqrt , * , phi , lp , ax , y , - , x , M_HALFPI , xy , }
		- PRED   = { }
		- SUCC   = { < , lam , lp , if , }

31 :	"&&"
		- NEIGH  = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { / , f , + , sqrt , * , phi , lp , ax , y , - , x , M_HALFPI , xy , }
		- PRED   = { }
		- SUCC   = { < , lam , lp , if , }

31 :	"ax"
		- NEIGH  = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { / , f , + , sqrt , * , phi , lp , ax , y , - , x , M_HALFPI , xy , }
		- PRED   = { }
		- SUCC   = { < , lam , lp , if , }

31 :	">="
		- NEIGH  = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { / , f , + , sqrt , * , phi , lp , ax , y , - , x , M_HALFPI , xy , }
		- PRED   = { }
		- SUCC   = { < , lam , lp , if , }

31 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { / , f , + , sqrt , * , phi , lp , ax , y , - , x , M_HALFPI , xy , }
		- PRED   = { }
		- SUCC   = { < , lam , lp , if , }

32 :	"xy"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"x"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"sqrt"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"-"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"lp"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"phi"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"*"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"lp"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"phi"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"+"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"+"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"ax"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"-"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"M_HALFPI"
		- NEIGH  = { + , * , phi , lp , ax , - , sqrt , x , M_HALFPI , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"f"
		- NEIGH  = { + , / , * , ax , f , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , * , sqrt , + , ax , - , f , x , xy , }

34 :	"*"
		- NEIGH  = { + , / , * , ax , f , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , * , sqrt , + , ax , - , f , x , xy , }

34 :	"/"
		- NEIGH  = { + , / , * , ax , f , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , * , sqrt , + , ax , - , f , x , xy , }

34 :	"ax"
		- NEIGH  = { + , / , * , ax , f , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , * , sqrt , + , ax , - , f , x , xy , }

34 :	"+"
		- NEIGH  = { + , / , * , ax , f , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , * , sqrt , + , ax , - , f , x , xy , }

34 :	"ax"
		- NEIGH  = { + , / , * , ax , f , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , * , sqrt , + , ax , - , f , x , xy , }

35 :	"xy"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"x"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"ax"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"-"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"f"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"+"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"sqrt"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"f"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"*"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"f"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"-"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"xy"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"y"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"*"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"xy"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

35 :	"y"
		- NEIGH  = { y , * , sqrt , + , ax , - , f , x , xy , }
		- PARENT = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- CHILD  = { }
		- PRED   = { + , / , * , ax , f , }
		- SUCC   = { }

37 :	"if"
		- NEIGH  = { < , lam , lp , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { - , x , xy , }
		- PRED   = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- SUCC   = { }

37 :	"lp"
		- NEIGH  = { < , lam , lp , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { - , x , xy , }
		- PRED   = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- SUCC   = { }

37 :	"lam"
		- NEIGH  = { < , lam , lp , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { - , x , xy , }
		- PRED   = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- SUCC   = { }

37 :	"<"
		- NEIGH  = { < , lam , lp , if , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { - , x , xy , }
		- PRED   = { M_HALFPI , >= , ortl , ax , && , Q , if , }
		- SUCC   = { }

37 :	"xy"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , lam , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"x"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , lam , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"-"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , lam , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"xy"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , lam , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"x"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , lam , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"xy"
		- NEIGH  = { x , xy , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"x"
		- NEIGH  = { x , xy , }
		- PARENT = { >= , ax , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , ax , if , }
		- SUCC   = { }

40 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , ax , if , }
		- SUCC   = { }

45 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"bacon"
		- NEIGH  = { bacon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

46 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

46 :	"Q"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

46 :	"static_cast"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

46 :	"<"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

46 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

46 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

46 :	">"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

46 :	"calloc"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

46 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

47 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

47 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

47 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

48 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

49 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { bacn , Q , }

49 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { bacn , Q , }

49 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { bacn , Q , }

51 :	"Q"
		- NEIGH  = { bacn , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { ortl , Q , }

51 :	"bacn"
		- NEIGH  = { bacn , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { ortl , Q , }

52 :	"Q"
		- NEIGH  = { ortl , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { bacn , Q , }
		- SUCC   = { es , P , }

52 :	"ortl"
		- NEIGH  = { ortl , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { bacn , Q , }
		- SUCC   = { es , P , }

53 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ortl , Q , }
		- SUCC   = { fwd , bacon_s_forward , P , }

53 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ortl , Q , }
		- SUCC   = { fwd , bacon_s_forward , P , }

54 :	"P"
		- NEIGH  = { fwd , bacon_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { P , return , }

54 :	"fwd"
		- NEIGH  = { fwd , bacon_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { P , return , }

54 :	"bacon_s_forward"
		- NEIGH  = { fwd , bacon_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { P , return , }

55 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , bacon_s_forward , P , }
		- SUCC   = { }

55 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , bacon_s_forward , P , }
		- SUCC   = { }

59 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"apian"
		- NEIGH  = { apian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

60 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	"Q"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	"static_cast"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	"<"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	">"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	"calloc"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

61 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

61 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

61 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

62 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { ortl , bacn , Q , }

63 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { ortl , bacn , Q , }

63 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { ortl , bacn , Q , }

65 :	"Q"
		- NEIGH  = { ortl , bacn , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { es , P , }

65 :	"bacn"
		- NEIGH  = { ortl , bacn , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { es , P , }

65 :	"Q"
		- NEIGH  = { ortl , bacn , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { es , P , }

65 :	"ortl"
		- NEIGH  = { ortl , bacn , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { es , P , }

66 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ortl , bacn , Q , }
		- SUCC   = { fwd , bacon_s_forward , P , }

66 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ortl , bacn , Q , }
		- SUCC   = { fwd , bacon_s_forward , P , }

67 :	"P"
		- NEIGH  = { fwd , bacon_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { P , return , }

67 :	"fwd"
		- NEIGH  = { fwd , bacon_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { P , return , }

67 :	"bacon_s_forward"
		- NEIGH  = { fwd , bacon_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { P , return , }

68 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , bacon_s_forward , P , }
		- SUCC   = { }

68 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , bacon_s_forward , P , }
		- SUCC   = { }

72 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"ortel"
		- NEIGH  = { ortel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

73 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

73 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

73 :	"Q"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

73 :	"static_cast"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

73 :	"<"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

73 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

73 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

73 :	">"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

73 :	"calloc"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

73 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

74 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

74 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

74 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

75 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

75 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

75 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

75 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { bacn , Q , }

76 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { bacn , Q , }

76 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { bacn , Q , }

78 :	"Q"
		- NEIGH  = { bacn , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { ortl , Q , }

78 :	"bacn"
		- NEIGH  = { bacn , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { ortl , Q , }

79 :	"Q"
		- NEIGH  = { ortl , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { bacn , Q , }
		- SUCC   = { es , P , }

79 :	"ortl"
		- NEIGH  = { ortl , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { bacn , Q , }
		- SUCC   = { es , P , }

80 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ortl , Q , }
		- SUCC   = { fwd , bacon_s_forward , P , }

80 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ortl , Q , }
		- SUCC   = { fwd , bacon_s_forward , P , }

81 :	"P"
		- NEIGH  = { fwd , bacon_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { P , return , }

81 :	"fwd"
		- NEIGH  = { fwd , bacon_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { P , return , }

81 :	"bacon_s_forward"
		- NEIGH  = { fwd , bacon_s_forward , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { P , return , }

82 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , bacon_s_forward , P , }
		- SUCC   = { }

82 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fwd , bacon_s_forward , P , }
		- SUCC   = { }

