8 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

8 :	"eck4"
		- NEIGH  = { eck4 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"eck4_s_forward"
		- NEIGH  = { eck4_s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

20 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , s , V , p , }

20 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c , s , V , p , }

21 :	"p"
		- NEIGH  = { c , s , V , p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { i , }

21 :	"V"
		- NEIGH  = { c , s , V , p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { i , }

21 :	"s"
		- NEIGH  = { c , s , V , p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { i , }

21 :	"c"
		- NEIGH  = { c , s , V , p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { i , }

22 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , s , V , p , }
		- SUCC   = { P , }

23 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { phi , lp , sin , * , p , }

25 :	"p"
		- NEIGH  = { phi , lp , sin , * , p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , lp , V , }

25 :	"*"
		- NEIGH  = { phi , lp , sin , * , p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , lp , V , }

25 :	"sin"
		- NEIGH  = { phi , lp , sin , * , p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , lp , V , }

25 :	"lp"
		- NEIGH  = { phi , lp , sin , * , p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , lp , V , }

25 :	"phi"
		- NEIGH  = { phi , lp , sin , * , p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { * , phi , lp , V , }

26 :	"V"
		- NEIGH  = { * , phi , lp , V , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , * , p , }
		- SUCC   = { + , * , *= , V , phi , lp , }

26 :	"lp"
		- NEIGH  = { * , phi , lp , V , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , * , p , }
		- SUCC   = { + , * , *= , V , phi , lp , }

26 :	"phi"
		- NEIGH  = { * , phi , lp , V , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , * , p , }
		- SUCC   = { + , * , *= , V , phi , lp , }

26 :	"*"
		- NEIGH  = { * , phi , lp , V , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , * , p , }
		- SUCC   = { + , * , *= , V , phi , lp , }

26 :	"lp"
		- NEIGH  = { * , phi , lp , V , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , * , p , }
		- SUCC   = { + , * , *= , V , phi , lp , }

26 :	"phi"
		- NEIGH  = { * , phi , lp , V , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , * , p , }
		- SUCC   = { + , * , *= , V , phi , lp , }

27 :	"lp"
		- NEIGH  = { + , * , *= , V , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , V , }
		- SUCC   = { -- , i , for , }

27 :	"phi"
		- NEIGH  = { + , * , *= , V , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , V , }
		- SUCC   = { -- , i , for , }

27 :	"*="
		- NEIGH  = { + , * , *= , V , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , V , }
		- SUCC   = { -- , i , for , }

27 :	"+"
		- NEIGH  = { + , * , *= , V , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , V , }
		- SUCC   = { -- , i , for , }

27 :	"V"
		- NEIGH  = { + , * , *= , V , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , V , }
		- SUCC   = { -- , i , for , }

27 :	"*"
		- NEIGH  = { + , * , *= , V , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , V , }
		- SUCC   = { -- , i , for , }

27 :	"+"
		- NEIGH  = { + , * , *= , V , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , V , }
		- SUCC   = { -- , i , for , }

27 :	"V"
		- NEIGH  = { + , * , *= , V , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , V , }
		- SUCC   = { -- , i , for , }

27 :	"*"
		- NEIGH  = { + , * , *= , V , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , V , }
		- SUCC   = { -- , i , for , }

28 :	"for"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , -= , / , p , - , * , + , V , cos , s , phi , lp , if , sin , c , }
		- PRED   = { + , * , *= , V , phi , lp , }
		- SUCC   = { i , ! , if , }

28 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , -= , / , p , - , * , + , V , cos , s , phi , lp , if , sin , c , }
		- PRED   = { + , * , *= , V , phi , lp , }
		- SUCC   = { i , ! , if , }

28 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , -= , / , p , - , * , + , V , cos , s , phi , lp , if , sin , c , }
		- PRED   = { + , * , *= , V , phi , lp , }
		- SUCC   = { i , ! , if , }

28 :	"--"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , -= , / , p , - , * , + , V , cos , s , phi , lp , if , sin , c , }
		- PRED   = { + , * , *= , V , phi , lp , }
		- SUCC   = { i , ! , if , }

28 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { < , fabs , -= , / , p , - , * , + , V , cos , s , phi , lp , if , sin , c , }
		- PRED   = { + , * , *= , V , phi , lp , }
		- SUCC   = { i , ! , if , }

29 :	"c"
		- NEIGH  = { phi , lp , cos , c , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , s , }

29 :	"cos"
		- NEIGH  = { phi , lp , cos , c , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , s , }

29 :	"lp"
		- NEIGH  = { phi , lp , cos , c , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , s , }

29 :	"phi"
		- NEIGH  = { phi , lp , cos , c , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , s , }

30 :	"s"
		- NEIGH  = { phi , lp , sin , s , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { p , - , c , * , / , phi , s , + , lp , V , }

30 :	"sin"
		- NEIGH  = { phi , lp , sin , s , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { p , - , c , * , / , phi , s , + , lp , V , }

30 :	"lp"
		- NEIGH  = { phi , lp , sin , s , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { p , - , c , * , / , phi , s , + , lp , V , }

30 :	"phi"
		- NEIGH  = { phi , lp , sin , s , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { p , - , c , * , / , phi , s , + , lp , V , }

31 :	"V"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"lp"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"phi"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"+"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"s"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"*"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"c"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"+"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"-"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"p"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"/"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"+"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"c"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"*"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"c"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"+"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"-"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"s"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"*"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

31 :	"s"
		- NEIGH  = { p , - , c , * , / , phi , s , + , lp , V , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , s , }
		- SUCC   = { -= , V , phi , lp , }

32 :	"lp"
		- NEIGH  = { -= , V , phi , lp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { p , - , c , * , / , phi , s , + , lp , V , }
		- SUCC   = { V , < , fabs , if , }

32 :	"phi"
		- NEIGH  = { -= , V , phi , lp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { p , - , c , * , / , phi , s , + , lp , V , }
		- SUCC   = { V , < , fabs , if , }

32 :	"-="
		- NEIGH  = { -= , V , phi , lp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { p , - , c , * , / , phi , s , + , lp , V , }
		- SUCC   = { V , < , fabs , if , }

32 :	"V"
		- NEIGH  = { -= , V , phi , lp , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { p , - , c , * , / , phi , s , + , lp , V , }
		- SUCC   = { V , < , fabs , if , }

33 :	"if"
		- NEIGH  = { V , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { -= , V , phi , lp , }
		- SUCC   = { }

33 :	"fabs"
		- NEIGH  = { V , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { -= , V , phi , lp , }
		- SUCC   = { }

33 :	"V"
		- NEIGH  = { V , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { -= , V , phi , lp , }
		- SUCC   = { }

33 :	"<"
		- NEIGH  = { V , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { -= , V , phi , lp , }
		- SUCC   = { }

34 :	"break"
		- NEIGH  = { break , }
		- PARENT = { V , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"if"
		- NEIGH  = { i , ! , if , }
		- PARENT = { }
		- CHILD  = { sin , + , y , - , xy , < , cos , phi , lp , lam , * , x , }
		- PRED   = { -- , i , for , }
		- SUCC   = { xy , return , }

36 :	"!"
		- NEIGH  = { i , ! , if , }
		- PARENT = { }
		- CHILD  = { sin , + , y , - , xy , < , cos , phi , lp , lam , * , x , }
		- PRED   = { -- , i , for , }
		- SUCC   = { xy , return , }

36 :	"i"
		- NEIGH  = { i , ! , if , }
		- PARENT = { }
		- CHILD  = { sin , + , y , - , xy , < , cos , phi , lp , lam , * , x , }
		- PRED   = { -- , i , for , }
		- SUCC   = { xy , return , }

37 :	"xy"
		- NEIGH  = { lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi , lp , y , xy , }

37 :	"x"
		- NEIGH  = { lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi , lp , y , xy , }

37 :	"*"
		- NEIGH  = { lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi , lp , y , xy , }

37 :	"lp"
		- NEIGH  = { lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi , lp , y , xy , }

37 :	"lam"
		- NEIGH  = { lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi , lp , y , xy , }

38 :	"xy"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { lp , lam , * , x , xy , }
		- SUCC   = { }

38 :	"y"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { lp , lam , * , x , xy , }
		- SUCC   = { }

38 :	"lp"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { lp , lam , * , x , xy , }
		- SUCC   = { }

38 :	"phi"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { lp , lam , * , x , xy , }
		- SUCC   = { }

38 :	"<"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { lp , lam , * , x , xy , }
		- SUCC   = { }

38 :	"-"
		- NEIGH  = { - , < , phi , lp , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { lp , lam , * , x , xy , }
		- SUCC   = { }

40 :	"xy"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

40 :	"x"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

40 :	"*"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

40 :	"lp"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

40 :	"lam"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

40 :	"*"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

40 :	"+"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

40 :	"cos"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

40 :	"lp"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

40 :	"phi"
		- NEIGH  = { phi , cos , + , lp , lam , * , x , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , * , y , xy , }

41 :	"xy"
		- NEIGH  = { phi , lp , sin , * , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { phi , cos , + , lp , lam , * , x , xy , }
		- SUCC   = { }

41 :	"y"
		- NEIGH  = { phi , lp , sin , * , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { phi , cos , + , lp , lam , * , x , xy , }
		- SUCC   = { }

41 :	"*"
		- NEIGH  = { phi , lp , sin , * , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { phi , cos , + , lp , lam , * , x , xy , }
		- SUCC   = { }

41 :	"sin"
		- NEIGH  = { phi , lp , sin , * , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { phi , cos , + , lp , lam , * , x , xy , }
		- SUCC   = { }

41 :	"lp"
		- NEIGH  = { phi , lp , sin , * , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { phi , cos , + , lp , lam , * , x , xy , }
		- SUCC   = { }

41 :	"phi"
		- NEIGH  = { phi , lp , sin , * , y , xy , }
		- PARENT = { i , ! , if , }
		- CHILD  = { }
		- PRED   = { phi , cos , + , lp , lam , * , x , xy , }
		- SUCC   = { }

43 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , ! , if , }
		- SUCC   = { }

43 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , ! , if , }
		- SUCC   = { }

47 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"eck4_s_inverse"
		- NEIGH  = { eck4_s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { * , y , xy , P , aasin , ctx , phi , lp , }

48 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { * , y , xy , P , aasin , ctx , phi , lp , }

50 :	"lp"
		- NEIGH  = { * , y , xy , P , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi , lp , cos , c , }

50 :	"phi"
		- NEIGH  = { * , y , xy , P , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi , lp , cos , c , }

50 :	"aasin"
		- NEIGH  = { * , y , xy , P , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi , lp , cos , c , }

50 :	"P"
		- NEIGH  = { * , y , xy , P , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi , lp , cos , c , }

50 :	"ctx"
		- NEIGH  = { * , y , xy , P , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi , lp , cos , c , }

50 :	"xy"
		- NEIGH  = { * , y , xy , P , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi , lp , cos , c , }

50 :	"y"
		- NEIGH  = { * , y , xy , P , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi , lp , cos , c , }

50 :	"*"
		- NEIGH  = { * , y , xy , P , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi , lp , cos , c , }

51 :	"c"
		- NEIGH  = { phi , lp , cos , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , y , xy , P , aasin , ctx , phi , lp , }
		- SUCC   = { c , + , * , / , x , xy , lam , lp , }

51 :	"cos"
		- NEIGH  = { phi , lp , cos , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , y , xy , P , aasin , ctx , phi , lp , }
		- SUCC   = { c , + , * , / , x , xy , lam , lp , }

51 :	"lp"
		- NEIGH  = { phi , lp , cos , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , y , xy , P , aasin , ctx , phi , lp , }
		- SUCC   = { c , + , * , / , x , xy , lam , lp , }

51 :	"phi"
		- NEIGH  = { phi , lp , cos , c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , y , xy , P , aasin , ctx , phi , lp , }
		- SUCC   = { c , + , * , / , x , xy , lam , lp , }

52 :	"lp"
		- NEIGH  = { c , + , * , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { * , + , P , c , sin , aasin , ctx , phi , lp , }

52 :	"lam"
		- NEIGH  = { c , + , * , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { * , + , P , c , sin , aasin , ctx , phi , lp , }

52 :	"xy"
		- NEIGH  = { c , + , * , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { * , + , P , c , sin , aasin , ctx , phi , lp , }

52 :	"x"
		- NEIGH  = { c , + , * , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { * , + , P , c , sin , aasin , ctx , phi , lp , }

52 :	"/"
		- NEIGH  = { c , + , * , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { * , + , P , c , sin , aasin , ctx , phi , lp , }

52 :	"*"
		- NEIGH  = { c , + , * , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { * , + , P , c , sin , aasin , ctx , phi , lp , }

52 :	"+"
		- NEIGH  = { c , + , * , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { * , + , P , c , sin , aasin , ctx , phi , lp , }

52 :	"c"
		- NEIGH  = { c , + , * , / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , c , }
		- SUCC   = { * , + , P , c , sin , aasin , ctx , phi , lp , }

53 :	"lp"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"phi"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"aasin"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"P"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"ctx"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"lp"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"phi"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"+"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"sin"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"lp"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"phi"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"*"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"c"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"+"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

53 :	"*"
		- NEIGH  = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , + , * , / , x , xy , lam , lp , }
		- SUCC   = { lp , return , }

54 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- SUCC   = { }

54 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , + , P , c , sin , aasin , ctx , phi , lp , }
		- SUCC   = { }

58 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"eck4"
		- NEIGH  = { eck4 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { eck4_s_inverse , inv , P , }

59 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { eck4_s_inverse , inv , P , }

60 :	"P"
		- NEIGH  = { eck4_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { eck4_s_forward , fwd , P , }

60 :	"inv"
		- NEIGH  = { eck4_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { eck4_s_forward , fwd , P , }

60 :	"eck4_s_inverse"
		- NEIGH  = { eck4_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { eck4_s_forward , fwd , P , }

61 :	"P"
		- NEIGH  = { eck4_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck4_s_inverse , inv , P , }
		- SUCC   = { P , return , }

61 :	"fwd"
		- NEIGH  = { eck4_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck4_s_inverse , inv , P , }
		- SUCC   = { P , return , }

61 :	"eck4_s_forward"
		- NEIGH  = { eck4_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck4_s_inverse , inv , P , }
		- SUCC   = { P , return , }

63 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck4_s_forward , fwd , P , }
		- SUCC   = { }

63 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { eck4_s_forward , fwd , P , }
		- SUCC   = { }

