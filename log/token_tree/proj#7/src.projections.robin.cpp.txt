7 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

7 :	"robin"
		- NEIGH  = { robin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"COEFS"
		- NEIGH  = { COEFS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"c0"
		- NEIGH  = { c0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"c1"
		- NEIGH  = { c1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"c2"
		- NEIGH  = { c2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"c3"
		- NEIGH  = { c3 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

27 :	"COEFS"
		- NEIGH  = { COEFS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

27 :	"X"
		- NEIGH  = { X , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

29 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

29 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

29 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

30 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

30 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

30 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

33 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

33 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

44 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

49 :	"COEFS"
		- NEIGH  = { COEFS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

49 :	"Y"
		- NEIGH  = { Y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

53 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

54 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

55 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

56 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

57 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

57 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

60 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

60 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

68 :	"-"
		- NEIGH  = { - , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"s_forward"
		- NEIGH  = { s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

82 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

83 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { dphi , }

84 :	"dphi"
		- NEIGH  = { dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { P , }

85 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dphi , }
		- SUCC   = { fabs , phi , lp , dphi , }

87 :	"dphi"
		- NEIGH  = { fabs , phi , lp , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { floor , * , lround , i , - , dphi , phi , lp , isnan , }

87 :	"fabs"
		- NEIGH  = { fabs , phi , lp , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { floor , * , lround , i , - , dphi , phi , lp , isnan , }

87 :	"lp"
		- NEIGH  = { fabs , phi , lp , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { floor , * , lround , i , - , dphi , phi , lp , isnan , }

87 :	"phi"
		- NEIGH  = { fabs , phi , lp , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { floor , * , lround , i , - , dphi , phi , lp , isnan , }

88 :	"i"
		- NEIGH  = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fabs , phi , lp , dphi , }
		- SUCC   = { < , i , if , }

88 :	"isnan"
		- NEIGH  = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fabs , phi , lp , dphi , }
		- SUCC   = { < , i , if , }

88 :	"lp"
		- NEIGH  = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fabs , phi , lp , dphi , }
		- SUCC   = { < , i , if , }

88 :	"phi"
		- NEIGH  = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fabs , phi , lp , dphi , }
		- SUCC   = { < , i , if , }

88 :	"-"
		- NEIGH  = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fabs , phi , lp , dphi , }
		- SUCC   = { < , i , if , }

88 :	"lround"
		- NEIGH  = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fabs , phi , lp , dphi , }
		- SUCC   = { < , i , if , }

88 :	"floor"
		- NEIGH  = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fabs , phi , lp , dphi , }
		- SUCC   = { < , i , if , }

88 :	"dphi"
		- NEIGH  = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fabs , phi , lp , dphi , }
		- SUCC   = { < , i , if , }

88 :	"*"
		- NEIGH  = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { fabs , phi , lp , dphi , }
		- SUCC   = { < , i , if , }

89 :	"if"
		- NEIGH  = { < , i , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- SUCC   = { >= , i , if , }

89 :	"i"
		- NEIGH  = { < , i , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- SUCC   = { >= , i , if , }

89 :	"<"
		- NEIGH  = { < , i , if , }
		- PARENT = { }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { floor , * , lround , i , - , dphi , phi , lp , isnan , }
		- SUCC   = { >= , i , if , }

90 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

90 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

90 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

91 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { < , i , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

91 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { < , i , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

93 :	"if"
		- NEIGH  = { >= , i , if , }
		- PARENT = { }
		- CHILD  = { i , }
		- PRED   = { < , i , if , }
		- SUCC   = { * , RAD_TO_DEG , i , - , dphi , }

93 :	"i"
		- NEIGH  = { >= , i , if , }
		- PARENT = { }
		- CHILD  = { i , }
		- PRED   = { < , i , if , }
		- SUCC   = { * , RAD_TO_DEG , i , - , dphi , }

93 :	">="
		- NEIGH  = { >= , i , if , }
		- PARENT = { }
		- CHILD  = { i , }
		- PRED   = { < , i , if , }
		- SUCC   = { * , RAD_TO_DEG , i , - , dphi , }

93 :	"i"
		- NEIGH  = { i , }
		- PARENT = { >= , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"dphi"
		- NEIGH  = { * , RAD_TO_DEG , i , - , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , i , if , }
		- SUCC   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }

94 :	"RAD_TO_DEG"
		- NEIGH  = { * , RAD_TO_DEG , i , - , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , i , if , }
		- SUCC   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }

94 :	"*"
		- NEIGH  = { * , RAD_TO_DEG , i , - , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , i , if , }
		- SUCC   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }

94 :	"dphi"
		- NEIGH  = { * , RAD_TO_DEG , i , - , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , i , if , }
		- SUCC   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }

94 :	"-"
		- NEIGH  = { * , RAD_TO_DEG , i , - , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , i , if , }
		- SUCC   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }

94 :	"*"
		- NEIGH  = { * , RAD_TO_DEG , i , - , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , i , if , }
		- SUCC   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }

94 :	"i"
		- NEIGH  = { * , RAD_TO_DEG , i , - , dphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , i , if , }
		- SUCC   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }

95 :	"xy"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"x"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"X"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"i"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"c0"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"+"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"dphi"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"*"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"X"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"i"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"c1"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"+"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"dphi"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"*"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"X"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"i"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"c2"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"+"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"dphi"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"*"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"X"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"i"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"c3"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"*"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"*"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"lp"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

95 :	"lam"
		- NEIGH  = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , RAD_TO_DEG , i , - , dphi , }
		- SUCC   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }

96 :	"xy"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"y"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"Y"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"i"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"c0"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"+"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"dphi"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"*"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"Y"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"i"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"c1"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"+"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"dphi"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"*"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"Y"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"i"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"c2"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"+"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"dphi"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"*"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"Y"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"i"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"c3"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

96 :	"*"
		- NEIGH  = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , c2 , * , dphi , c3 , c1 , + , i , X , c0 , x , xy , }
		- SUCC   = { < , phi , lp , if , }

97 :	"if"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- SUCC   = { xy , return , }

97 :	"lp"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- SUCC   = { xy , return , }

97 :	"phi"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- SUCC   = { xy , return , }

97 :	"<"
		- NEIGH  = { < , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { - , y , xy , }
		- PRED   = { c2 , dphi , c3 , c1 , + , i , xy , Y , c0 , * , y , }
		- SUCC   = { xy , return , }

97 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"-"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { }

99 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , phi , lp , if , }
		- SUCC   = { }

103 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"s_inverse"
		- NEIGH  = { s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

104 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

105 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t1 , t , }

106 :	"t"
		- NEIGH  = { t1 , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { T , COEFS , }

106 :	"t1"
		- NEIGH  = { t1 , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { T , COEFS , }

107 :	"COEFS"
		- NEIGH  = { T , COEFS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t1 , t , }
		- SUCC   = { iters , }

107 :	"T"
		- NEIGH  = { T , COEFS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t1 , t , }
		- SUCC   = { iters , }

108 :	"iters"
		- NEIGH  = { iters , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { T , COEFS , }
		- SUCC   = { / , x , xy , lam , lp , }

110 :	"lp"
		- NEIGH  = { / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iters , }
		- SUCC   = { y , xy , fabs , / , phi , lp , }

110 :	"lam"
		- NEIGH  = { / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iters , }
		- SUCC   = { y , xy , fabs , / , phi , lp , }

110 :	"xy"
		- NEIGH  = { / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iters , }
		- SUCC   = { y , xy , fabs , / , phi , lp , }

110 :	"x"
		- NEIGH  = { / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iters , }
		- SUCC   = { y , xy , fabs , / , phi , lp , }

110 :	"/"
		- NEIGH  = { / , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { iters , }
		- SUCC   = { y , xy , fabs , / , phi , lp , }

111 :	"lp"
		- NEIGH  = { y , xy , fabs , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , if , }

111 :	"phi"
		- NEIGH  = { y , xy , fabs , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , if , }

111 :	"fabs"
		- NEIGH  = { y , xy , fabs , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , if , }

111 :	"xy"
		- NEIGH  = { y , xy , fabs , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , if , }

111 :	"y"
		- NEIGH  = { y , xy , fabs , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , if , }

111 :	"/"
		- NEIGH  = { y , xy , fabs , / , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { / , x , xy , lam , lp , }
		- SUCC   = { >= , phi , lp , if , }

112 :	"if"
		- NEIGH  = { >= , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { c3 , c2 , c1 , X , DEG_TO_RAD , -- , isnan , + , iters , / , < , c0 , Y , T , for , floor , * , /= , lp , lround , == , >= , phi , y , t , > , || , xy , - , i , lam , if , }
		- PRED   = { y , xy , fabs , / , phi , lp , }
		- SUCC   = { lp , return , }

112 :	"lp"
		- NEIGH  = { >= , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { c3 , c2 , c1 , X , DEG_TO_RAD , -- , isnan , + , iters , / , < , c0 , Y , T , for , floor , * , /= , lp , lround , == , >= , phi , y , t , > , || , xy , - , i , lam , if , }
		- PRED   = { y , xy , fabs , / , phi , lp , }
		- SUCC   = { lp , return , }

112 :	"phi"
		- NEIGH  = { >= , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { c3 , c2 , c1 , X , DEG_TO_RAD , -- , isnan , + , iters , / , < , c0 , Y , T , for , floor , * , /= , lp , lround , == , >= , phi , y , t , > , || , xy , - , i , lam , if , }
		- PRED   = { y , xy , fabs , / , phi , lp , }
		- SUCC   = { lp , return , }

112 :	">="
		- NEIGH  = { >= , phi , lp , if , }
		- PARENT = { }
		- CHILD  = { c3 , c2 , c1 , X , DEG_TO_RAD , -- , isnan , + , iters , / , < , c0 , Y , T , for , floor , * , /= , lp , lround , == , >= , phi , y , t , > , || , xy , - , i , lam , if , }
		- PRED   = { y , xy , fabs , / , phi , lp , }
		- SUCC   = { lp , return , }

113 :	"if"
		- NEIGH  = { > , phi , lp , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { c0 , X , /= , xy , < , return , - , y , M_HALFPI , phi , proj_errno_set , PJD_ERR_TOLERANCE_CONDITION , P , lam , lp , }
		- PRED   = { }
		- SUCC   = { }

113 :	"lp"
		- NEIGH  = { > , phi , lp , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { c0 , X , /= , xy , < , return , - , y , M_HALFPI , phi , proj_errno_set , PJD_ERR_TOLERANCE_CONDITION , P , lam , lp , }
		- PRED   = { }
		- SUCC   = { }

113 :	"phi"
		- NEIGH  = { > , phi , lp , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { c0 , X , /= , xy , < , return , - , y , M_HALFPI , phi , proj_errno_set , PJD_ERR_TOLERANCE_CONDITION , P , lam , lp , }
		- PRED   = { }
		- SUCC   = { }

113 :	">"
		- NEIGH  = { > , phi , lp , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { c0 , X , /= , xy , < , return , - , y , M_HALFPI , phi , proj_errno_set , PJD_ERR_TOLERANCE_CONDITION , P , lam , lp , }
		- PRED   = { }
		- SUCC   = { }

114 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

114 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

114 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

115 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

115 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

118 :	"lp"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { X , /= , c0 , lam , lp , }

118 :	"phi"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { X , /= , c0 , lam , lp , }

118 :	"xy"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { X , /= , c0 , lam , lp , }

118 :	"y"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { X , /= , c0 , lam , lp , }

118 :	"<"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { X , /= , c0 , lam , lp , }

118 :	"-"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { X , /= , c0 , lam , lp , }

118 :	"M_HALFPI"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { X , /= , c0 , lam , lp , }

118 :	"M_HALFPI"
		- NEIGH  = { - , < , y , M_HALFPI , xy , phi , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { X , /= , c0 , lam , lp , }

119 :	"lp"
		- NEIGH  = { X , /= , c0 , lam , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { - , < , y , M_HALFPI , xy , phi , lp , }
		- SUCC   = { }

119 :	"lam"
		- NEIGH  = { X , /= , c0 , lam , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { - , < , y , M_HALFPI , xy , phi , lp , }
		- SUCC   = { }

119 :	"/="
		- NEIGH  = { X , /= , c0 , lam , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { - , < , y , M_HALFPI , xy , phi , lp , }
		- SUCC   = { }

119 :	"X"
		- NEIGH  = { X , /= , c0 , lam , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { - , < , y , M_HALFPI , xy , phi , lp , }
		- SUCC   = { }

119 :	"c0"
		- NEIGH  = { X , /= , c0 , lam , lp , }
		- PARENT = { > , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { - , < , y , M_HALFPI , xy , phi , lp , }
		- SUCC   = { }

123 :	"i"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

123 :	"isnan"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

123 :	"lp"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

123 :	"phi"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

123 :	"-"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

123 :	"lround"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

123 :	"floor"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

123 :	"lp"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

123 :	"phi"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

123 :	"*"
		- NEIGH  = { floor , * , lround , i , - , phi , lp , isnan , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , || , < , i , if , }

124 :	"if"
		- NEIGH  = { >= , || , < , i , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { floor , * , lround , i , - , phi , lp , isnan , }
		- SUCC   = { for , }

124 :	"i"
		- NEIGH  = { >= , || , < , i , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { floor , * , lround , i , - , phi , lp , isnan , }
		- SUCC   = { for , }

124 :	"<"
		- NEIGH  = { >= , || , < , i , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { floor , * , lround , i , - , phi , lp , isnan , }
		- SUCC   = { for , }

124 :	"||"
		- NEIGH  = { >= , || , < , i , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { floor , * , lround , i , - , phi , lp , isnan , }
		- SUCC   = { for , }

124 :	"i"
		- NEIGH  = { >= , || , < , i , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { floor , * , lround , i , - , phi , lp , isnan , }
		- SUCC   = { for , }

124 :	">="
		- NEIGH  = { >= , || , < , i , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { floor , * , lround , i , - , phi , lp , isnan , }
		- SUCC   = { for , }

125 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { >= , || , < , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

125 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { >= , || , < , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

125 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { >= , || , < , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

126 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { >= , || , < , i , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

126 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { >= , || , < , i , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

128 :	"for"
		- NEIGH  = { for , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { lp , phi , > , c0 , i , Y , if , }
		- PRED   = { >= , || , < , i , if , }
		- SUCC   = { i , Y , T , }

129 :	"if"
		- NEIGH  = { lp , phi , > , c0 , i , Y , if , }
		- PARENT = { for , }
		- CHILD  = { phi , <= , c0 , if , + , Y , i , lp , -- , }
		- PRED   = { }
		- SUCC   = { }

129 :	"Y"
		- NEIGH  = { lp , phi , > , c0 , i , Y , if , }
		- PARENT = { for , }
		- CHILD  = { phi , <= , c0 , if , + , Y , i , lp , -- , }
		- PRED   = { }
		- SUCC   = { }

129 :	"i"
		- NEIGH  = { lp , phi , > , c0 , i , Y , if , }
		- PARENT = { for , }
		- CHILD  = { phi , <= , c0 , if , + , Y , i , lp , -- , }
		- PRED   = { }
		- SUCC   = { }

129 :	"c0"
		- NEIGH  = { lp , phi , > , c0 , i , Y , if , }
		- PARENT = { for , }
		- CHILD  = { phi , <= , c0 , if , + , Y , i , lp , -- , }
		- PRED   = { }
		- SUCC   = { }

129 :	">"
		- NEIGH  = { lp , phi , > , c0 , i , Y , if , }
		- PARENT = { for , }
		- CHILD  = { phi , <= , c0 , if , + , Y , i , lp , -- , }
		- PRED   = { }
		- SUCC   = { }

129 :	"lp"
		- NEIGH  = { lp , phi , > , c0 , i , Y , if , }
		- PARENT = { for , }
		- CHILD  = { phi , <= , c0 , if , + , Y , i , lp , -- , }
		- PRED   = { }
		- SUCC   = { }

129 :	"phi"
		- NEIGH  = { lp , phi , > , c0 , i , Y , if , }
		- PARENT = { for , }
		- CHILD  = { phi , <= , c0 , if , + , Y , i , lp , -- , }
		- PRED   = { }
		- SUCC   = { }

129 :	"--"
		- NEIGH  = { i , -- , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

129 :	"i"
		- NEIGH  = { i , -- , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

130 :	"if"
		- NEIGH  = { lp , phi , <= , c0 , if , + , i , Y , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { i , break , ++ , }
		- PRED   = { }
		- SUCC   = { }

130 :	"Y"
		- NEIGH  = { lp , phi , <= , c0 , if , + , i , Y , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { i , break , ++ , }
		- PRED   = { }
		- SUCC   = { }

130 :	"i"
		- NEIGH  = { lp , phi , <= , c0 , if , + , i , Y , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { i , break , ++ , }
		- PRED   = { }
		- SUCC   = { }

130 :	"+"
		- NEIGH  = { lp , phi , <= , c0 , if , + , i , Y , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { i , break , ++ , }
		- PRED   = { }
		- SUCC   = { }

130 :	"c0"
		- NEIGH  = { lp , phi , <= , c0 , if , + , i , Y , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { i , break , ++ , }
		- PRED   = { }
		- SUCC   = { }

130 :	"<="
		- NEIGH  = { lp , phi , <= , c0 , if , + , i , Y , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { i , break , ++ , }
		- PRED   = { }
		- SUCC   = { }

130 :	"lp"
		- NEIGH  = { lp , phi , <= , c0 , if , + , i , Y , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { i , break , ++ , }
		- PRED   = { }
		- SUCC   = { }

130 :	"phi"
		- NEIGH  = { lp , phi , <= , c0 , if , + , i , Y , }
		- PARENT = { lp , phi , > , c0 , i , Y , if , }
		- CHILD  = { i , break , ++ , }
		- PRED   = { }
		- SUCC   = { }

130 :	"++"
		- NEIGH  = { i , ++ , }
		- PARENT = { lp , phi , <= , c0 , if , + , i , Y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

130 :	"i"
		- NEIGH  = { i , ++ , }
		- PARENT = { lp , phi , <= , c0 , if , + , i , Y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

131 :	"break"
		- NEIGH  = { break , }
		- PARENT = { lp , phi , <= , c0 , if , + , i , Y , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"T"
		- NEIGH  = { i , Y , T , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { for , }
		- SUCC   = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }

133 :	"Y"
		- NEIGH  = { i , Y , T , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { for , }
		- SUCC   = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }

133 :	"i"
		- NEIGH  = { i , Y , T , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { for , }
		- SUCC   = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }

135 :	"t"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"*"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"lp"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"phi"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"-"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"T"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"c0"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"/"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"Y"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"i"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"+"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"c0"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"-"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"T"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

135 :	"c0"
		- NEIGH  = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { i , Y , T , }
		- SUCC   = { -- , iters , for , }

136 :	"for"
		- NEIGH  = { -- , iters , for , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { < , fabs , if , phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PRED   = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- SUCC   = { == , iters , if , }

136 :	"iters"
		- NEIGH  = { -- , iters , for , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { < , fabs , if , phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PRED   = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- SUCC   = { == , iters , if , }

136 :	"iters"
		- NEIGH  = { -- , iters , for , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { < , fabs , if , phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PRED   = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- SUCC   = { == , iters , if , }

136 :	"--"
		- NEIGH  = { -- , iters , for , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { < , fabs , if , phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PRED   = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- SUCC   = { == , iters , if , }

136 :	"iters"
		- NEIGH  = { -- , iters , for , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { < , fabs , if , phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PRED   = { + , Y , c0 , T , i , - , / , t , phi , lp , * , }
		- SUCC   = { == , iters , if , }

137 :	"t"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"-="
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"t1"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"T"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"c0"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"+"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"t"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"*"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"T"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"c1"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"+"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"t"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"*"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"T"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"c2"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"+"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"t"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"*"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"T"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"c3"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"-"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"lp"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"phi"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"/"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"T"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"c1"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"+"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"*"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"t"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"*"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"T"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"c2"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"+"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"t"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"*"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"t"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"*"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"*"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"T"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

137 :	"c3"
		- NEIGH  = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t1 , < , fabs , if , }

138 :	"if"
		- NEIGH  = { t1 , < , fabs , if , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { break , }
		- PRED   = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- SUCC   = { }

138 :	"fabs"
		- NEIGH  = { t1 , < , fabs , if , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { break , }
		- PRED   = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- SUCC   = { }

138 :	"t1"
		- NEIGH  = { t1 , < , fabs , if , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { break , }
		- PRED   = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- SUCC   = { }

138 :	"<"
		- NEIGH  = { t1 , < , fabs , if , }
		- PARENT = { -- , iters , for , }
		- CHILD  = { break , }
		- PRED   = { phi , lp , T , c2 , * , / , -= , c0 , - , t1 , c3 , t , c1 , + , }
		- SUCC   = { }

139 :	"break"
		- NEIGH  = { break , }
		- PARENT = { t1 , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"if"
		- NEIGH  = { == , iters , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PRED   = { -- , iters , for , }
		- SUCC   = { + , DEG_TO_RAD , * , i , t , phi , lp , }

141 :	"iters"
		- NEIGH  = { == , iters , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PRED   = { -- , iters , for , }
		- SUCC   = { + , DEG_TO_RAD , * , i , t , phi , lp , }

141 :	"=="
		- NEIGH  = { == , iters , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PRED   = { -- , iters , for , }
		- SUCC   = { + , DEG_TO_RAD , * , i , t , phi , lp , }

142 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PARENT = { == , iters , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"P"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PARENT = { == , iters , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"ctx"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PARENT = { == , iters , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"PJD_ERR_NON_CONVERGENT"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PARENT = { == , iters , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

143 :	"lp"
		- NEIGH  = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { == , iters , if , }
		- SUCC   = { < , y , xy , if , }

143 :	"phi"
		- NEIGH  = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { == , iters , if , }
		- SUCC   = { < , y , xy , if , }

143 :	"*"
		- NEIGH  = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { == , iters , if , }
		- SUCC   = { < , y , xy , if , }

143 :	"i"
		- NEIGH  = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { == , iters , if , }
		- SUCC   = { < , y , xy , if , }

143 :	"+"
		- NEIGH  = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { == , iters , if , }
		- SUCC   = { < , y , xy , if , }

143 :	"t"
		- NEIGH  = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { == , iters , if , }
		- SUCC   = { < , y , xy , if , }

143 :	"*"
		- NEIGH  = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { == , iters , if , }
		- SUCC   = { < , y , xy , if , }

143 :	"DEG_TO_RAD"
		- NEIGH  = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { == , iters , if , }
		- SUCC   = { < , y , xy , if , }

144 :	"if"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- SUCC   = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }

144 :	"xy"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- SUCC   = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }

144 :	"y"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- SUCC   = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }

144 :	"<"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { - , phi , lp , }
		- PRED   = { + , DEG_TO_RAD , * , i , t , phi , lp , }
		- SUCC   = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }

144 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

144 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

144 :	"-"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

144 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

144 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

145 :	"lp"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"lam"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"/="
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"X"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"i"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"c0"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"+"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"t"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"*"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"X"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"i"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"c1"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"+"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"t"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"*"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"X"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"i"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"c2"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"+"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"t"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"*"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"X"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"i"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

145 :	"c3"
		- NEIGH  = { c3 , c2 , * , t , c1 , + , c0 , i , X , /= , lam , lp , }
		- PARENT = { >= , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { < , y , xy , if , }
		- SUCC   = { }

147 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , if , }
		- SUCC   = { }

147 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { >= , phi , lp , if , }
		- SUCC   = { }

151 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"robin"
		- NEIGH  = { robin , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_inverse , inv , P , }

152 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { s_inverse , inv , P , }

153 :	"P"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { s_forward , fwd , P , }

153 :	"inv"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { s_forward , fwd , P , }

153 :	"s_inverse"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { s_forward , fwd , P , }

154 :	"P"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { P , return , }

154 :	"fwd"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { P , return , }

154 :	"s_forward"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { P , return , }

156 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { }

156 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { }

