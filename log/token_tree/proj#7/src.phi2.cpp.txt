8 :	"TOL"
		- NEIGH  = { TOL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

9 :	"N_ITER"
		- NEIGH  = { N_ITER , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"pj_phi2"
		- NEIGH  = { pj_phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"projCtx"
		- NEIGH  = { projCtx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"ctx"
		- NEIGH  = { ctx , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"ts"
		- NEIGH  = { ts , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

12 :	"e"
		- NEIGH  = { e , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

27 :	"eccnth"
		- NEIGH  = { e , * , eccnth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ts , atan , * , M_HALFPI , - , Phi , }

27 :	"*"
		- NEIGH  = { e , * , eccnth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ts , atan , * , M_HALFPI , - , Phi , }

27 :	"e"
		- NEIGH  = { e , * , eccnth , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ts , atan , * , M_HALFPI , - , Phi , }

28 :	"Phi"
		- NEIGH  = { ts , atan , * , M_HALFPI , - , Phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , eccnth , }
		- SUCC   = { con , }

28 :	"M_HALFPI"
		- NEIGH  = { ts , atan , * , M_HALFPI , - , Phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , eccnth , }
		- SUCC   = { con , }

28 :	"-"
		- NEIGH  = { ts , atan , * , M_HALFPI , - , Phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , eccnth , }
		- SUCC   = { con , }

28 :	"*"
		- NEIGH  = { ts , atan , * , M_HALFPI , - , Phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , eccnth , }
		- SUCC   = { con , }

28 :	"atan"
		- NEIGH  = { ts , atan , * , M_HALFPI , - , Phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , eccnth , }
		- SUCC   = { con , }

28 :	"ts"
		- NEIGH  = { ts , atan , * , M_HALFPI , - , Phi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e , * , eccnth , }
		- SUCC   = { con , }

29 :	"con"
		- NEIGH  = { con , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ts , atan , * , M_HALFPI , - , Phi , }
		- SUCC   = { N_ITER , i , }

30 :	"i"
		- NEIGH  = { N_ITER , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { con , }
		- SUCC   = { for , }

30 :	"N_ITER"
		- NEIGH  = { N_ITER , i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { con , }
		- SUCC   = { for , }

32 :	"for"
		- NEIGH  = { for , }
		- PARENT = { }
		- CHILD  = { break , i , && , > , eccnth , + , pow , dphi , - , TOL , fabs , += , M_HALFPI , Phi , -- , e , if , sin , * , atan , / , con , ts , }
		- PRED   = { N_ITER , i , }
		- SUCC   = { <= , i , if , }

33 :	"dphi"
		- NEIGH  = { dphi , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , * , Phi , e , con , }

34 :	"con"
		- NEIGH  = { sin , * , Phi , e , con , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { dphi , }
		- SUCC   = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }

34 :	"e"
		- NEIGH  = { sin , * , Phi , e , con , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { dphi , }
		- SUCC   = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }

34 :	"*"
		- NEIGH  = { sin , * , Phi , e , con , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { dphi , }
		- SUCC   = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }

34 :	"sin"
		- NEIGH  = { sin , * , Phi , e , con , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { dphi , }
		- SUCC   = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }

34 :	"Phi"
		- NEIGH  = { sin , * , Phi , e , con , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { dphi , }
		- SUCC   = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }

35 :	"dphi"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"M_HALFPI"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"-"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"*"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"atan"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"ts"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"*"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"pow"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"-"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"con"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

35 :	"/"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

36 :	"+"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

36 :	"con"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

36 :	"eccnth"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

36 :	"-"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

36 :	"Phi"
		- NEIGH  = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { sin , * , Phi , e , con , }
		- SUCC   = { += , dphi , Phi , }

38 :	"Phi"
		- NEIGH  = { += , dphi , Phi , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- SUCC   = { i , -- , && , TOL , > , dphi , fabs , if , }

38 :	"+="
		- NEIGH  = { += , dphi , Phi , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- SUCC   = { i , -- , && , TOL , > , dphi , fabs , if , }

38 :	"dphi"
		- NEIGH  = { += , dphi , Phi , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { Phi , + , / , con , atan , eccnth , * , M_HALFPI , pow , dphi , - , ts , }
		- SUCC   = { i , -- , && , TOL , > , dphi , fabs , if , }

40 :	"if"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { += , dphi , Phi , }
		- SUCC   = { break , }

40 :	"fabs"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { += , dphi , Phi , }
		- SUCC   = { break , }

40 :	"dphi"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { += , dphi , Phi , }
		- SUCC   = { break , }

40 :	">"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { += , dphi , Phi , }
		- SUCC   = { break , }

40 :	"TOL"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { += , dphi , Phi , }
		- SUCC   = { break , }

40 :	"&&"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { += , dphi , Phi , }
		- SUCC   = { break , }

40 :	"--"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { += , dphi , Phi , }
		- SUCC   = { break , }

40 :	"i"
		- NEIGH  = { i , -- , && , TOL , > , dphi , fabs , if , }
		- PARENT = { for , }
		- CHILD  = { continue , }
		- PRED   = { += , dphi , Phi , }
		- SUCC   = { break , }

41 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { i , -- , && , TOL , > , dphi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

42 :	"break"
		- NEIGH  = { break , }
		- PARENT = { for , }
		- CHILD  = { }
		- PRED   = { i , -- , && , TOL , > , dphi , fabs , if , }
		- SUCC   = { }

44 :	"if"
		- NEIGH  = { <= , i , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PRED   = { for , }
		- SUCC   = { Phi , return , }

44 :	"i"
		- NEIGH  = { <= , i , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PRED   = { for , }
		- SUCC   = { Phi , return , }

44 :	"<="
		- NEIGH  = { <= , i , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PRED   = { for , }
		- SUCC   = { Phi , return , }

45 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PARENT = { <= , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"ctx"
		- NEIGH  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PARENT = { <= , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"PJD_ERR_NON_CON_INV_PHI2"
		- NEIGH  = { PJD_ERR_NON_CON_INV_PHI2 , ctx , pj_ctx_set_errno , }
		- PARENT = { <= , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"return"
		- NEIGH  = { Phi , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , i , if , }
		- SUCC   = { }

46 :	"Phi"
		- NEIGH  = { Phi , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { <= , i , if , }
		- SUCC   = { }

