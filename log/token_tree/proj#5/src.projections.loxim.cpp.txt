9 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

9 :	"loxim"
		- NEIGH  = { loxim , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

14 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"phi1"
		- NEIGH  = { phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"cosphi1"
		- NEIGH  = { cosphi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

17 :	"tanphi1"
		- NEIGH  = { tanphi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"s_forward"
		- NEIGH  = { s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

23 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

24 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

24 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

24 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

24 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

24 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

24 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

24 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

24 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

24 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

24 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { phi1 , Q , - , phi , lp , y , xy , }

26 :	"xy"
		- NEIGH  = { phi1 , Q , - , phi , lp , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

26 :	"y"
		- NEIGH  = { phi1 , Q , - , phi , lp , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

26 :	"lp"
		- NEIGH  = { phi1 , Q , - , phi , lp , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

26 :	"phi"
		- NEIGH  = { phi1 , Q , - , phi , lp , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

26 :	"-"
		- NEIGH  = { phi1 , Q , - , phi , lp , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

26 :	"Q"
		- NEIGH  = { phi1 , Q , - , phi , lp , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

26 :	"phi1"
		- NEIGH  = { phi1 , Q , - , phi , lp , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

27 :	"if"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , phi , if , + , M_FORTPI , cosphi1 , Q , lam , lp , * , x , < , xy , }
		- PRED   = { phi1 , Q , - , phi , lp , y , xy , }
		- SUCC   = { xy , return , }

27 :	"fabs"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , phi , if , + , M_FORTPI , cosphi1 , Q , lam , lp , * , x , < , xy , }
		- PRED   = { phi1 , Q , - , phi , lp , y , xy , }
		- SUCC   = { xy , return , }

27 :	"xy"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , phi , if , + , M_FORTPI , cosphi1 , Q , lam , lp , * , x , < , xy , }
		- PRED   = { phi1 , Q , - , phi , lp , y , xy , }
		- SUCC   = { xy , return , }

27 :	"y"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , phi , if , + , M_FORTPI , cosphi1 , Q , lam , lp , * , x , < , xy , }
		- PRED   = { phi1 , Q , - , phi , lp , y , xy , }
		- SUCC   = { xy , return , }

27 :	"<"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , phi , if , + , M_FORTPI , cosphi1 , Q , lam , lp , * , x , < , xy , }
		- PRED   = { phi1 , Q , - , phi , lp , y , xy , }
		- SUCC   = { xy , return , }

28 :	"xy"
		- NEIGH  = { cosphi1 , Q , lp , * , lam , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"x"
		- NEIGH  = { cosphi1 , Q , lp , * , lam , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"lp"
		- NEIGH  = { cosphi1 , Q , lp , * , lam , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"lam"
		- NEIGH  = { cosphi1 , Q , lp , * , lam , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"*"
		- NEIGH  = { cosphi1 , Q , lp , * , lam , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"Q"
		- NEIGH  = { cosphi1 , Q , lp , * , lam , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

28 :	"cosphi1"
		- NEIGH  = { cosphi1 , Q , lp , * , lam , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

30 :	"xy"
		- NEIGH  = { phi , lp , + , M_FORTPI , * , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , || , x , M_HALFPI , xy , < , fabs , if , }

30 :	"x"
		- NEIGH  = { phi , lp , + , M_FORTPI , * , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , || , x , M_HALFPI , xy , < , fabs , if , }

30 :	"M_FORTPI"
		- NEIGH  = { phi , lp , + , M_FORTPI , * , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , || , x , M_HALFPI , xy , < , fabs , if , }

30 :	"+"
		- NEIGH  = { phi , lp , + , M_FORTPI , * , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , || , x , M_HALFPI , xy , < , fabs , if , }

30 :	"*"
		- NEIGH  = { phi , lp , + , M_FORTPI , * , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , || , x , M_HALFPI , xy , < , fabs , if , }

30 :	"lp"
		- NEIGH  = { phi , lp , + , M_FORTPI , * , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , || , x , M_HALFPI , xy , < , fabs , if , }

30 :	"phi"
		- NEIGH  = { phi , lp , + , M_FORTPI , * , x , xy , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , || , x , M_HALFPI , xy , < , fabs , if , }

31 :	"if"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"fabs"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"xy"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"x"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"<"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"||"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"fabs"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"fabs"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"xy"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"x"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"-"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"M_HALFPI"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

31 :	"<"
		- NEIGH  = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PRED   = { phi , lp , + , M_FORTPI , * , x , xy , }
		- SUCC   = { }

32 :	"xy"
		- NEIGH  = { x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

32 :	"x"
		- NEIGH  = { x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"xy"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"x"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"lp"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"lam"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"*"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"xy"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"y"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"/"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"log"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"tan"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"xy"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"x"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"/"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"Q"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

34 :	"tanphi1"
		- NEIGH  = { Q , tanphi1 , tan , log , / , lp , y , * , lam , x , xy , }
		- PARENT = { - , || , x , M_HALFPI , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , < , fabs , if , }
		- SUCC   = { }

36 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , < , fabs , if , }
		- SUCC   = { }

40 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"s_inverse"
		- NEIGH  = { s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

41 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

41 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

42 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

42 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

42 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

42 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

42 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

42 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

42 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

42 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

42 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

42 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { phi1 , Q , + , y , xy , phi , lp , }

44 :	"lp"
		- NEIGH  = { phi1 , Q , + , y , xy , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

44 :	"phi"
		- NEIGH  = { phi1 , Q , + , y , xy , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

44 :	"xy"
		- NEIGH  = { phi1 , Q , + , y , xy , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

44 :	"y"
		- NEIGH  = { phi1 , Q , + , y , xy , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

44 :	"+"
		- NEIGH  = { phi1 , Q , + , y , xy , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

44 :	"Q"
		- NEIGH  = { phi1 , Q , + , y , xy , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

44 :	"phi1"
		- NEIGH  = { phi1 , Q , + , y , xy , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { y , xy , < , fabs , if , }

45 :	"if"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , if , * , + , M_FORTPI , cosphi1 , Q , phi , / , x , < , xy , lam , lp , }
		- PRED   = { phi1 , Q , + , y , xy , phi , lp , }
		- SUCC   = { lp , return , }

45 :	"fabs"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , if , * , + , M_FORTPI , cosphi1 , Q , phi , / , x , < , xy , lam , lp , }
		- PRED   = { phi1 , Q , + , y , xy , phi , lp , }
		- SUCC   = { lp , return , }

45 :	"xy"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , if , * , + , M_FORTPI , cosphi1 , Q , phi , / , x , < , xy , lam , lp , }
		- PRED   = { phi1 , Q , + , y , xy , phi , lp , }
		- SUCC   = { lp , return , }

45 :	"y"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , if , * , + , M_FORTPI , cosphi1 , Q , phi , / , x , < , xy , lam , lp , }
		- PRED   = { phi1 , Q , + , y , xy , phi , lp , }
		- SUCC   = { lp , return , }

45 :	"<"
		- NEIGH  = { y , xy , < , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , || , M_HALFPI , fabs , if , * , + , M_FORTPI , cosphi1 , Q , phi , / , x , < , xy , lam , lp , }
		- PRED   = { phi1 , Q , + , y , xy , phi , lp , }
		- SUCC   = { lp , return , }

46 :	"lp"
		- NEIGH  = { cosphi1 , Q , / , x , xy , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"lam"
		- NEIGH  = { cosphi1 , Q , / , x , xy , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"xy"
		- NEIGH  = { cosphi1 , Q , / , x , xy , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"x"
		- NEIGH  = { cosphi1 , Q , / , x , xy , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"/"
		- NEIGH  = { cosphi1 , Q , / , x , xy , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"Q"
		- NEIGH  = { cosphi1 , Q , / , x , xy , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"cosphi1"
		- NEIGH  = { cosphi1 , Q , / , x , xy , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"lp"
		- NEIGH  = { phi , + , M_FORTPI , * , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , || , fabs , lam , lp , < , if , }

48 :	"lam"
		- NEIGH  = { phi , + , M_FORTPI , * , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , || , fabs , lam , lp , < , if , }

48 :	"M_FORTPI"
		- NEIGH  = { phi , + , M_FORTPI , * , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , || , fabs , lam , lp , < , if , }

48 :	"+"
		- NEIGH  = { phi , + , M_FORTPI , * , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , || , fabs , lam , lp , < , if , }

48 :	"*"
		- NEIGH  = { phi , + , M_FORTPI , * , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , || , fabs , lam , lp , < , if , }

48 :	"lp"
		- NEIGH  = { phi , + , M_FORTPI , * , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , || , fabs , lam , lp , < , if , }

48 :	"phi"
		- NEIGH  = { phi , + , M_FORTPI , * , lam , lp , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { M_HALFPI , - , || , fabs , lam , lp , < , if , }

49 :	"if"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"fabs"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"lp"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"lam"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"<"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"||"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"fabs"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"fabs"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"lp"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"lam"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"-"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

49 :	"<"
		- NEIGH  = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- PARENT = { y , xy , < , fabs , if , }
		- CHILD  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PRED   = { phi , + , M_FORTPI , * , lam , lp , }
		- SUCC   = { }

50 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"lp"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"lam"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"xy"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"x"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"*"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"log"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"tan"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"lp"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"lam"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"/"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"Q"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"tanphi1"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"/"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"xy"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"y"
		- NEIGH  = { Q , tanphi1 , tan , / , log , y , * , x , xy , lam , lp , }
		- PARENT = { M_HALFPI , - , || , fabs , lam , lp , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

54 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , < , fabs , if , }
		- SUCC   = { }

54 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , xy , < , fabs , if , }
		- SUCC   = { }

58 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

58 :	"loxim"
		- NEIGH  = { loxim , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

59 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

59 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

59 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

59 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

59 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

59 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

59 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

59 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

59 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

60 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

60 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

60 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

61 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

61 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , Q , ctx , pj_param , f , phi1 , P , }

62 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , Q , ctx , pj_param , f , phi1 , P , }

62 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , Q , ctx , pj_param , f , phi1 , P , }

64 :	"Q"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi1 , cos , cosphi1 , Q , }

64 :	"phi1"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi1 , cos , cosphi1 , Q , }

64 :	"pj_param"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi1 , cos , cosphi1 , Q , }

64 :	"P"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi1 , cos , cosphi1 , Q , }

64 :	"ctx"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi1 , cos , cosphi1 , Q , }

64 :	"P"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi1 , cos , cosphi1 , Q , }

64 :	"params"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi1 , cos , cosphi1 , Q , }

64 :	"f"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { phi1 , cos , cosphi1 , Q , }

65 :	"Q"
		- NEIGH  = { phi1 , cos , cosphi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { < , cosphi1 , Q , if , }

65 :	"cosphi1"
		- NEIGH  = { phi1 , cos , cosphi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { < , cosphi1 , Q , if , }

65 :	"cos"
		- NEIGH  = { phi1 , cos , cosphi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { < , cosphi1 , Q , if , }

65 :	"Q"
		- NEIGH  = { phi1 , cos , cosphi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { < , cosphi1 , Q , if , }

65 :	"phi1"
		- NEIGH  = { phi1 , cos , cosphi1 , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { < , cosphi1 , Q , if , }

66 :	"if"
		- NEIGH  = { < , cosphi1 , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { phi1 , cos , cosphi1 , Q , }
		- SUCC   = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }

66 :	"Q"
		- NEIGH  = { < , cosphi1 , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { phi1 , cos , cosphi1 , Q , }
		- SUCC   = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }

66 :	"cosphi1"
		- NEIGH  = { < , cosphi1 , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { phi1 , cos , cosphi1 , Q , }
		- SUCC   = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }

66 :	"<"
		- NEIGH  = { < , cosphi1 , Q , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { phi1 , cos , cosphi1 , Q , }
		- SUCC   = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }

67 :	"return"
		- NEIGH  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { < , cosphi1 , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { < , cosphi1 , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"P"
		- NEIGH  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { < , cosphi1 , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"PJD_ERR_LAT_LARGER_THAN_90"
		- NEIGH  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { < , cosphi1 , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"Q"
		- NEIGH  = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , cosphi1 , Q , if , }
		- SUCC   = { s_inverse , inv , P , }

70 :	"tanphi1"
		- NEIGH  = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , cosphi1 , Q , if , }
		- SUCC   = { s_inverse , inv , P , }

70 :	"tan"
		- NEIGH  = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , cosphi1 , Q , if , }
		- SUCC   = { s_inverse , inv , P , }

70 :	"M_FORTPI"
		- NEIGH  = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , cosphi1 , Q , if , }
		- SUCC   = { s_inverse , inv , P , }

70 :	"+"
		- NEIGH  = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , cosphi1 , Q , if , }
		- SUCC   = { s_inverse , inv , P , }

70 :	"*"
		- NEIGH  = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , cosphi1 , Q , if , }
		- SUCC   = { s_inverse , inv , P , }

70 :	"Q"
		- NEIGH  = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , cosphi1 , Q , if , }
		- SUCC   = { s_inverse , inv , P , }

70 :	"phi1"
		- NEIGH  = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , cosphi1 , Q , if , }
		- SUCC   = { s_inverse , inv , P , }

72 :	"P"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- SUCC   = { s_forward , fwd , P , }

72 :	"inv"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- SUCC   = { s_forward , fwd , P , }

72 :	"s_inverse"
		- NEIGH  = { s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi1 , * , tan , tanphi1 , + , M_FORTPI , Q , }
		- SUCC   = { s_forward , fwd , P , }

73 :	"P"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { es , P , }

73 :	"fwd"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { es , P , }

73 :	"s_forward"
		- NEIGH  = { s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_inverse , inv , P , }
		- SUCC   = { es , P , }

74 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { P , return , }

74 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s_forward , fwd , P , }
		- SUCC   = { P , return , }

76 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { }

76 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { }

