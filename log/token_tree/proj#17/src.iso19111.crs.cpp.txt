56 :	"NS_PROJ"
		- NEIGH  = { NS_PROJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

56 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

82 :	"NS_PROJ_START"
		- NEIGH  = { NS_PROJ_START , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

84 :	"crs"
		- NEIGH  = { crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

89 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

89 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

90 :	"BoundCRSPtr"
		- NEIGH  = { canonicalBoundCRS_ , BoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extensionProj4_ , string , std , }

90 :	"canonicalBoundCRS_"
		- NEIGH  = { canonicalBoundCRS_ , BoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extensionProj4_ , string , std , }

91 :	"std"
		- NEIGH  = { extensionProj4_ , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { canonicalBoundCRS_ , BoundCRSPtr , }
		- SUCC   = { implicitCS_ , }

91 :	"string"
		- NEIGH  = { extensionProj4_ , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { canonicalBoundCRS_ , BoundCRSPtr , }
		- SUCC   = { implicitCS_ , }

91 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { canonicalBoundCRS_ , BoundCRSPtr , }
		- SUCC   = { implicitCS_ , }

92 :	"implicitCS_"
		- NEIGH  = { implicitCS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extensionProj4_ , string , std , }
		- SUCC   = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }

94 :	"setImplicitCS"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

94 :	"util"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

94 :	"PropertyMap"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

94 :	"&"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

94 :	"properties"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

95 :	"pVal"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

95 :	"properties"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

95 :	"get"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

96 :	"if"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

96 :	"pVal"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PRED   = { implicitCS_ , }
		- SUCC   = { }

97 :	"if"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

97 :	"genVal"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

98 :	"dynamic_cast"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

98 :	"<"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

98 :	"util"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

98 :	"BoxedValue"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

98 :	"*"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

98 :	">"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

98 :	"pVal"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

98 :	"get"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

99 :	"if"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

99 :	"genVal"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

99 :	"type"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

99 :	"=="
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

99 :	"util"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

99 :	"BoxedValue"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

99 :	"Type"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

99 :	"BOOLEAN"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

99 :	"&&"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

100 :	"genVal"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

100 :	"booleanValue"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

101 :	"implicitCS_"
		- NEIGH  = { implicitCS_ , }
		- PARENT = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

115 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

115 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

115 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

115 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

115 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"ObjectUsage"
		- NEIGH  = { ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

116 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

121 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"BoundCRSPtr"
		- NEIGH  = { BoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"canonicalBoundCRS"
		- NEIGH  = { canonicalBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"return"
		- NEIGH  = { canonicalBoundCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"d"
		- NEIGH  = { canonicalBoundCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"canonicalBoundCRS_"
		- NEIGH  = { canonicalBoundCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

148 :	"GeodeticCRSPtr"
		- NEIGH  = { GeodeticCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

148 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

148 :	"extractGeodeticCRS"
		- NEIGH  = { extractGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

149 :	"raw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

149 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

150 :	"if"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

150 :	"raw"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

151 :	"return"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"std"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"<"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"GeodeticCRS"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	">"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"raw"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"shared_from_this"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"as_nullable"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

154 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { raw , if , }
		- SUCC   = { }

160 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

161 :	"geodCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

161 :	"dynamic_cast"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

161 :	"<"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

161 :	"GeodeticCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

161 :	"*"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

161 :	">"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

161 :	"this"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

162 :	"if"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { geodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

162 :	"geodCRS"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { geodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

163 :	"return"
		- NEIGH  = { geodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

163 :	"geodCRS"
		- NEIGH  = { geodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

165 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

165 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

165 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

165 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

165 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

165 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

165 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

166 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

166 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

167 :	"return"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"projCRS"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"baseCRS"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

169 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

169 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

169 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

169 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

169 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

169 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

170 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

170 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

171 :	"for"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

171 :	"&"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

171 :	"subCrs"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

171 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

171 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

172 :	"retGeogCRS"
		- NEIGH  = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retGeogCRS , if , }

172 :	"subCrs"
		- NEIGH  = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retGeogCRS , if , }

172 :	"extractGeodeticCRSRaw"
		- NEIGH  = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retGeogCRS , if , }

173 :	"if"
		- NEIGH  = { retGeogCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retGeogCRS , return , }
		- PRED   = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- SUCC   = { }

173 :	"retGeogCRS"
		- NEIGH  = { retGeogCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retGeogCRS , return , }
		- PRED   = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- SUCC   = { }

174 :	"return"
		- NEIGH  = { retGeogCRS , return , }
		- PARENT = { retGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"retGeogCRS"
		- NEIGH  = { retGeogCRS , return , }
		- PARENT = { retGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

178 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

178 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

178 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

178 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

178 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

178 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

178 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

179 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

179 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

180 :	"return"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

180 :	"boundCRS"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

180 :	"baseCRS"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

180 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

182 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

189 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"getExtensionProj4"
		- NEIGH  = { getExtensionProj4 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

190 :	"return"
		- NEIGH  = { extensionProj4_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

190 :	"d"
		- NEIGH  = { extensionProj4_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

190 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"GeographicCRSPtr"
		- NEIGH  = { GeographicCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"extractGeographicCRS"
		- NEIGH  = { extractGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

205 :	"raw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

205 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

206 :	"if"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

206 :	"raw"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

207 :	"return"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"std"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"dynamic_pointer_cast"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"<"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"GeographicCRS"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	">"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

208 :	"raw"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

208 :	"shared_from_this"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

208 :	"as_nullable"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

210 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { raw , if , }
		- SUCC   = { }

216 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

216 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"createPropertyMap"
		- NEIGH  = { createPropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"obj"
		- NEIGH  = { obj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"props"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

218 :	"util"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

218 :	"PropertyMap"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

218 :	"set"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

218 :	"common"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

218 :	"IdentifiedObject"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

218 :	"NAME_KEY"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

219 :	"obj"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

219 :	"nameStr"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

220 :	"if"
		- NEIGH  = { isDeprecated , obj , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PRED   = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { props , return , }

220 :	"obj"
		- NEIGH  = { isDeprecated , obj , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PRED   = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { props , return , }

220 :	"isDeprecated"
		- NEIGH  = { isDeprecated , obj , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PRED   = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { props , return , }

221 :	"props"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

221 :	"set"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

221 :	"common"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

221 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

221 :	"DEPRECATED_KEY"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

223 :	"return"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , obj , if , }
		- SUCC   = { }

223 :	"props"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , obj , if , }
		- SUCC   = { }

231 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

231 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

231 :	"alterGeodeticCRS"
		- NEIGH  = { alterGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

231 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

231 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

231 :	"newGeodCRS"
		- NEIGH  = { newGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

232 :	"geodCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

232 :	"dynamic_cast"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

232 :	"<"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

232 :	"GeodeticCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

232 :	"*"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

232 :	">"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

232 :	"this"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

233 :	"if"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { newGeodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

233 :	"geodCRS"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { newGeodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

234 :	"return"
		- NEIGH  = { newGeodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"newGeodCRS"
		- NEIGH  = { newGeodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

237 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

237 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

237 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

237 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

237 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

237 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

238 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

238 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

239 :	"return"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"ProjectedCRS"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"create"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"createPropertyMap"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"this"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"newGeodCRS"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"projCRS"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"derivingConversionRef"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"projCRS"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

241 :	"coordinateSystem"
		- NEIGH  = { projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

244 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

244 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

244 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

244 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

244 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

244 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

244 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

245 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { createPropertyMap , CompoundCRS , this , return , compoundCRS , componentReferenceSystems , subCrs , & , for , components , vector , > , create , CRSNNPtr , < , std , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

245 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { createPropertyMap , CompoundCRS , this , return , compoundCRS , componentReferenceSystems , subCrs , & , for , components , vector , > , create , CRSNNPtr , < , std , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

246 :	"std"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

246 :	"vector"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

246 :	"<"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

246 :	"CRSNNPtr"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

246 :	">"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

246 :	"components"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

247 :	"for"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

247 :	"&"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

247 :	"subCrs"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

247 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

247 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

248 :	"components"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"emplace_back"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"subCrs"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"alterGeodeticCRS"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

248 :	"newGeodCRS"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

250 :	"return"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

250 :	"CompoundCRS"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

250 :	"create"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

250 :	"createPropertyMap"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

250 :	"this"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

250 :	"components"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

253 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

253 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

254 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

254 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

254 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

254 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

254 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

254 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

254 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

261 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"alterCSLinearUnit"
		- NEIGH  = { alterCSLinearUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"unit"
		- NEIGH  = { unit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

263 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

263 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

263 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

263 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

263 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

263 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

263 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

264 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }

264 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }

265 :	"return"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

265 :	"ProjectedCRS"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

265 :	"create"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"this"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"projCRS"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"baseCRS"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

267 :	"projCRS"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

267 :	"derivingConversionRef"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

268 :	"projCRS"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

268 :	"coordinateSystem"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

268 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

268 :	"unit"
		- NEIGH  = { unit , alterUnit , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

273 :	"geodCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

273 :	"dynamic_cast"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

273 :	"<"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

273 :	"GeodeticCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

273 :	"*"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

273 :	">"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

273 :	"this"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

274 :	"if"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

274 :	"geodCRS"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

274 :	"&&"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

274 :	"geodCRS"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

274 :	"isGeocentric"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

275 :	"cs"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

275 :	"dynamic_cast"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

275 :	"<"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

275 :	"cs"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

275 :	"CartesianCS"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

275 :	"*"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

275 :	">"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

276 :	"geodCRS"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

276 :	"coordinateSystem"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

276 :	"get"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

277 :	"assert"
		- NEIGH  = { cs , assert , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- SUCC   = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }

277 :	"cs"
		- NEIGH  = { cs , assert , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- SUCC   = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }

278 :	"return"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

278 :	"GeodeticCRS"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

278 :	"create"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

279 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

279 :	"this"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

279 :	"geodCRS"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

279 :	"datum"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

280 :	"geodCRS"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

280 :	"datumEnsemble"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

280 :	"cs"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

280 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

280 :	"unit"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

285 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

285 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

285 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

285 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

285 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

285 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

285 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

286 :	"if"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

286 :	"geogCRS"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

286 :	"&&"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

286 :	"geogCRS"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

286 :	"coordinateSystem"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

286 :	"axisList"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

286 :	"size"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

286 :	"=="
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

287 :	"return"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

287 :	"GeographicCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

287 :	"create"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

288 :	"createPropertyMap"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

288 :	"this"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

288 :	"geogCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

288 :	"datum"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

289 :	"geogCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

289 :	"datumEnsemble"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"geogCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"coordinateSystem"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"alterLinearUnit"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"unit"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

295 :	"vertCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

295 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

295 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

295 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

295 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

295 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

295 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

296 :	"if"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }

296 :	"vertCRS"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }

297 :	"return"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

297 :	"VerticalCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

297 :	"create"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"this"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"vertCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

298 :	"datum"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

299 :	"vertCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

299 :	"datumEnsemble"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"vertCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"coordinateSystem"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

300 :	"unit"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

305 :	"engCRS"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

305 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

305 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

305 :	"EngineeringCRS"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

305 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

305 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

305 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

306 :	"if"
		- NEIGH  = { engCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PRED   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

306 :	"engCRS"
		- NEIGH  = { engCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PRED   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

307 :	"cartCS"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

307 :	"util"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

307 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

307 :	"<"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

307 :	"cs"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

307 :	"CartesianCS"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

307 :	">"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

308 :	"engCRS"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

308 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

309 :	"if"
		- NEIGH  = { cartCS , if , }
		- PARENT = { engCRS , if , }
		- CHILD  = { > , nn_dynamic_pointer_cast , VerticalCS , cs , < , util , unit , alterUnit , coordinateSystem , datum , engCRS , vertCS , create , EngineeringCRS , cartCS , if , set , this , return , createPropertyMap , props , }
		- PRED   = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- SUCC   = { }

309 :	"cartCS"
		- NEIGH  = { cartCS , if , }
		- PARENT = { engCRS , if , }
		- CHILD  = { > , nn_dynamic_pointer_cast , VerticalCS , cs , < , util , unit , alterUnit , coordinateSystem , datum , engCRS , vertCS , create , EngineeringCRS , cartCS , if , set , this , return , createPropertyMap , props , }
		- PRED   = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- SUCC   = { }

310 :	"props"
		- NEIGH  = { this , createPropertyMap , props , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { set , props , }

310 :	"createPropertyMap"
		- NEIGH  = { this , createPropertyMap , props , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { set , props , }

310 :	"this"
		- NEIGH  = { this , createPropertyMap , props , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { set , props , }

311 :	"props"
		- NEIGH  = { set , props , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { this , createPropertyMap , props , }
		- SUCC   = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }

311 :	"set"
		- NEIGH  = { set , props , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { this , createPropertyMap , props , }
		- SUCC   = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }

312 :	"return"
		- NEIGH  = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

312 :	"EngineeringCRS"
		- NEIGH  = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

312 :	"create"
		- NEIGH  = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

312 :	"props"
		- NEIGH  = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

312 :	"engCRS"
		- NEIGH  = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

312 :	"datum"
		- NEIGH  = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

313 :	"cartCS"
		- NEIGH  = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

313 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

313 :	"unit"
		- NEIGH  = { unit , alterUnit , cartCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

315 :	"vertCS"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

315 :	"util"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

315 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

315 :	"<"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

315 :	"cs"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

315 :	"VerticalCS"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

315 :	">"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

316 :	"engCRS"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

316 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

317 :	"if"
		- NEIGH  = { vertCS , if , }
		- PARENT = { cartCS , if , }
		- CHILD  = { unit , alterUnit , datum , engCRS , create , vertCS , set , return , this , EngineeringCRS , createPropertyMap , props , }
		- PRED   = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- SUCC   = { }

317 :	"vertCS"
		- NEIGH  = { vertCS , if , }
		- PARENT = { cartCS , if , }
		- CHILD  = { unit , alterUnit , datum , engCRS , create , vertCS , set , return , this , EngineeringCRS , createPropertyMap , props , }
		- PRED   = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- SUCC   = { }

318 :	"props"
		- NEIGH  = { this , createPropertyMap , props , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { set , props , }

318 :	"createPropertyMap"
		- NEIGH  = { this , createPropertyMap , props , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { set , props , }

318 :	"this"
		- NEIGH  = { this , createPropertyMap , props , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { set , props , }

319 :	"props"
		- NEIGH  = { set , props , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { this , createPropertyMap , props , }
		- SUCC   = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }

319 :	"set"
		- NEIGH  = { set , props , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { this , createPropertyMap , props , }
		- SUCC   = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }

320 :	"return"
		- NEIGH  = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

320 :	"EngineeringCRS"
		- NEIGH  = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

320 :	"create"
		- NEIGH  = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

320 :	"props"
		- NEIGH  = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

320 :	"engCRS"
		- NEIGH  = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

320 :	"datum"
		- NEIGH  = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

321 :	"vertCS"
		- NEIGH  = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

321 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

321 :	"unit"
		- NEIGH  = { unit , alterUnit , vertCS , return , EngineeringCRS , props , create , datum , engCRS , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { set , props , }
		- SUCC   = { }

327 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

327 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

328 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

328 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

328 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

328 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

328 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

328 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

328 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

341 :	"VerticalCRSPtr"
		- NEIGH  = { VerticalCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

341 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

341 :	"extractVerticalCRS"
		- NEIGH  = { extractVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

342 :	"vertCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

342 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

342 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

342 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

342 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

342 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

342 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

343 :	"if"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

343 :	"vertCRS"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

344 :	"return"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

344 :	"std"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

344 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

344 :	"<"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

344 :	"VerticalCRS"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

344 :	">"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

345 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

345 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

347 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

347 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

347 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

347 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

347 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

347 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

347 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

348 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

348 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

349 :	"for"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

349 :	"&"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

349 :	"subCrs"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

349 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

349 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

350 :	"retVertCRS"
		- NEIGH  = { extractVerticalCRS , subCrs , retVertCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retVertCRS , if , }

350 :	"subCrs"
		- NEIGH  = { extractVerticalCRS , subCrs , retVertCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retVertCRS , if , }

350 :	"extractVerticalCRS"
		- NEIGH  = { extractVerticalCRS , subCrs , retVertCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retVertCRS , if , }

351 :	"if"
		- NEIGH  = { retVertCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retVertCRS , return , }
		- PRED   = { extractVerticalCRS , subCrs , retVertCRS , }
		- SUCC   = { }

351 :	"retVertCRS"
		- NEIGH  = { retVertCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retVertCRS , return , }
		- PRED   = { extractVerticalCRS , subCrs , retVertCRS , }
		- SUCC   = { }

352 :	"return"
		- NEIGH  = { retVertCRS , return , }
		- PARENT = { retVertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

352 :	"retVertCRS"
		- NEIGH  = { retVertCRS , return , }
		- PARENT = { retVertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

356 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

356 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

356 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

356 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

356 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

356 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

356 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

357 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

357 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

358 :	"return"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

358 :	"boundCRS"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

358 :	"baseCRS"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

358 :	"extractVerticalCRS"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

360 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

378 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

378 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

378 :	"createBoundCRSToWGS84IfPossible"
		- NEIGH  = { createBoundCRSToWGS84IfPossible , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

379 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

379 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

379 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

379 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

380 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

380 :	"CoordinateOperationContext"
		- NEIGH  = { CoordinateOperationContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

380 :	"IntermediateCRSUse"
		- NEIGH  = { IntermediateCRSUse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	"allowIntermediateCRSUse"
		- NEIGH  = { allowIntermediateCRSUse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

382 :	"thisAsCRS"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

382 :	"NN_NO_CHECK"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

383 :	"std"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

383 :	"static_pointer_cast"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

383 :	"<"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

383 :	"CRS"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

383 :	">"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

383 :	"shared_from_this"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

383 :	"as_nullable"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

384 :	"boundCRS"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

384 :	"util"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

384 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

384 :	"<"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

384 :	"BoundCRS"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

384 :	">"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

384 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

385 :	"if"
		- NEIGH  = { boundCRS , ! , if , }
		- PARENT = { }
		- CHILD  = { canonicalBoundCRS , boundCRS , }
		- PRED   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- SUCC   = { boundCRS , if , }

385 :	"!"
		- NEIGH  = { boundCRS , ! , if , }
		- PARENT = { }
		- CHILD  = { canonicalBoundCRS , boundCRS , }
		- PRED   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- SUCC   = { boundCRS , if , }

385 :	"boundCRS"
		- NEIGH  = { boundCRS , ! , if , }
		- PARENT = { }
		- CHILD  = { canonicalBoundCRS , boundCRS , }
		- PRED   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- SUCC   = { boundCRS , if , }

386 :	"boundCRS"
		- NEIGH  = { canonicalBoundCRS , boundCRS , }
		- PARENT = { boundCRS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

386 :	"canonicalBoundCRS"
		- NEIGH  = { canonicalBoundCRS , boundCRS , }
		- PARENT = { boundCRS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

388 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PRED   = { boundCRS , ! , if , }
		- SUCC   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }

388 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PRED   = { boundCRS , ! , if , }
		- SUCC   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }

389 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

389 :	"boundCRS"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

389 :	"hubCRS"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

389 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

390 :	"GeographicCRS"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

390 :	"EPSG_4326"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

390 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

391 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

391 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

391 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

391 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

392 :	"return"
		- NEIGH  = { boundCRS , NN_NO_CHECK , return , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

392 :	"NN_NO_CHECK"
		- NEIGH  = { boundCRS , NN_NO_CHECK , return , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

392 :	"boundCRS"
		- NEIGH  = { boundCRS , NN_NO_CHECK , return , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , GeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

396 :	"geodCRS"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

396 :	"util"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

396 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

396 :	"<"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

396 :	"GeodeticCRS"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

396 :	">"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

396 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

397 :	"geogCRS"
		- NEIGH  = { extractGeographicCRS , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- SUCC   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

397 :	"extractGeographicCRS"
		- NEIGH  = { extractGeographicCRS , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- SUCC   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

398 :	"hubCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

398 :	"util"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

398 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

398 :	"<"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

398 :	"CRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

398 :	">"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

398 :	"GeographicCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

398 :	"EPSG_4326"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

399 :	"if"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , if , ! , GeodeticCRS , geodCRS , _isEquivalentTo , hubCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

399 :	"geodCRS"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , if , ! , GeodeticCRS , geodCRS , _isEquivalentTo , hubCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

399 :	"&&"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , if , ! , GeodeticCRS , geodCRS , _isEquivalentTo , hubCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

399 :	"!"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , if , ! , GeodeticCRS , geodCRS , _isEquivalentTo , hubCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

399 :	"geogCRS"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , if , ! , GeodeticCRS , geodCRS , _isEquivalentTo , hubCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { dbContext , ! , if , }

400 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

400 :	"geodCRS"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

400 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

401 :	"GeographicCRS"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

401 :	"EPSG_4978"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

401 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

402 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

402 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

402 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

402 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

403 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

403 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

405 :	"hubCRS"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

405 :	"util"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

405 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

405 :	"<"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

405 :	"CRS"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

405 :	">"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

405 :	"GeodeticCRS"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

405 :	"EPSG_4978"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

406 :	"if"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

406 :	"!"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

406 :	"geogCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

406 :	"||"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

407 :	"geogCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

407 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

408 :	"GeographicCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

408 :	"EPSG_4326"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

408 :	"get"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

409 :	"util"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

409 :	"IComparable"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

409 :	"Criterion"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

409 :	"EQUIVALENT"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

410 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

410 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

412 :	"geodCRS"
		- NEIGH  = { geogCRS , geodCRS , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

412 :	"geogCRS"
		- NEIGH  = { geogCRS , geodCRS , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

415 :	"if"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { l_domains , domains , & , }

415 :	"!"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { l_domains , domains , & , }

415 :	"dbContext"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { l_domains , domains , & , }

416 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

416 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

419 :	"&"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { extent , ExtentPtr , metadata , }

419 :	"l_domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { extent , ExtentPtr , metadata , }

419 :	"domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { extent , ExtentPtr , metadata , }

420 :	"metadata"
		- NEIGH  = { extent , ExtentPtr , metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { empty , ! , l_domains , if , }

420 :	"ExtentPtr"
		- NEIGH  = { extent , ExtentPtr , metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { empty , ! , l_domains , if , }

420 :	"extent"
		- NEIGH  = { extent , ExtentPtr , metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { empty , ! , l_domains , if , }

421 :	"if"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

421 :	"!"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

421 :	"l_domains"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

421 :	"empty"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

422 :	"extent"
		- NEIGH  = { l_domains , domainOfValidity , extent , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

422 :	"l_domains"
		- NEIGH  = { l_domains , domainOfValidity , extent , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

422 :	"domainOfValidity"
		- NEIGH  = { l_domains , domainOfValidity , extent , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

425 :	"std"
		- NEIGH  = { crs_authority , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { identifiers , l_identifiers , & , }

425 :	"string"
		- NEIGH  = { crs_authority , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { identifiers , l_identifiers , & , }

425 :	"crs_authority"
		- NEIGH  = { crs_authority , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { identifiers , l_identifiers , & , }

426 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_authority , string , std , }
		- SUCC   = { empty , l_identifiers , ! , if , }

426 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_authority , string , std , }
		- SUCC   = { empty , l_identifiers , ! , if , }

426 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_authority , string , std , }
		- SUCC   = { empty , l_identifiers , ! , if , }

430 :	"if"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }

430 :	"!"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }

430 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }

430 :	"empty"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }

431 :	"crs_authority"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

431 :	"*"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

431 :	"l_identifiers"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

431 :	"codeSpace"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

434 :	"authorities"
		- NEIGH  = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

434 :	"dbContext"
		- NEIGH  = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

434 :	"getAllowedAuthorities"
		- NEIGH  = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

434 :	"crs_authority"
		- NEIGH  = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

435 :	"if"
		- NEIGH  = { empty , authorities , if , }
		- PARENT = { }
		- CHILD  = { emplace_back , authorities , }
		- PRED   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- SUCC   = { authorities , authority , & , for , }

435 :	"authorities"
		- NEIGH  = { empty , authorities , if , }
		- PARENT = { }
		- CHILD  = { emplace_back , authorities , }
		- PRED   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- SUCC   = { authorities , authority , & , for , }

435 :	"empty"
		- NEIGH  = { empty , authorities , if , }
		- PARENT = { }
		- CHILD  = { emplace_back , authorities , }
		- PRED   = { crs_authority , getAllowedAuthorities , dbContext , authorities , }
		- SUCC   = { authorities , authority , & , for , }

436 :	"authorities"
		- NEIGH  = { emplace_back , authorities , }
		- PARENT = { empty , authorities , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

436 :	"emplace_back"
		- NEIGH  = { emplace_back , authorities , }
		- PARENT = { empty , authorities , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

438 :	"for"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , catch , op , for , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , ctxt , operation , dbContext , NN_NO_CHECK , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , io , geodCRS , AuthorityFactory , }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { thisAsCRS , return , }

438 :	"&"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , catch , op , for , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , ctxt , operation , dbContext , NN_NO_CHECK , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , io , geodCRS , AuthorityFactory , }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { thisAsCRS , return , }

438 :	"authority"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , catch , op , for , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , ctxt , operation , dbContext , NN_NO_CHECK , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , io , geodCRS , AuthorityFactory , }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { thisAsCRS , return , }

438 :	"authorities"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , catch , op , for , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , ctxt , operation , dbContext , NN_NO_CHECK , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , io , geodCRS , AuthorityFactory , }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { thisAsCRS , return , }

441 :	"authFactory"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

441 :	"io"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

441 :	"AuthorityFactory"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

441 :	"create"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

442 :	"NN_NO_CHECK"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

442 :	"dbContext"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

443 :	"authority"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

443 :	"=="
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

443 :	"std"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

443 :	"string"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

443 :	"authority"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

444 :	"ctxt"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

444 :	"operation"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

444 :	"CoordinateOperationContext"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

444 :	"create"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

445 :	"authFactory"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

445 :	"extent"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

446 :	"ctxt"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- SUCC   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }

446 :	"setAllowUseIntermediateCRS"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- SUCC   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }

446 :	"allowIntermediateCRSUse"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- SUCC   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }

449 :	"list"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

450 :	"operation"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

450 :	"CoordinateOperationFactory"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

450 :	"create"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

451 :	"createOperations"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

451 :	"NN_NO_CHECK"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

451 :	"geodCRS"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

451 :	"hubCRS"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

451 :	"ctxt"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { list , op , & , for , }

452 :	"for"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { & , exception , std , catch , }

452 :	"&"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { & , exception , std , catch , }

452 :	"op"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { & , exception , std , catch , }

452 :	"list"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { & , exception , std , catch , }

453 :	"transf"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

454 :	"util"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

454 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

454 :	"<"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

454 :	"operation"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

454 :	"Transformation"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

454 :	">"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

455 :	"op"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

456 :	"if"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

456 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

456 :	"&&"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

456 :	"!"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

456 :	"starts_with"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

456 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

456 :	"nameStr"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { if , operation , concatenated , & , hubCRS , thisAsCRS , create , > , dynamic_cast , < , exception , util , op , ConcatenatedOperation , return , std , BoundCRS , catch , CRS , * , NN_NO_CHECK , getTOWGS84Parameters , get , nn_static_pointer_cast , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

458 :	"transf"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

458 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

459 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

459 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

459 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

459 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

460 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

462 :	"return"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

462 :	"util"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

462 :	"nn_static_pointer_cast"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

462 :	"<"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

462 :	"CRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

462 :	">"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

462 :	"BoundCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

462 :	"create"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"thisAsCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"hubCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

463 :	"transf"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

465 :	"concatenated"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

466 :	"dynamic_cast"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

466 :	"<"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

466 :	"operation"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

466 :	"ConcatenatedOperation"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

466 :	"*"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

466 :	">"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

467 :	"op"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

467 :	"get"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

468 :	"if"
		- NEIGH  = { concatenated , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { size , if , operations , == , subops , concatenated , & , }
		- PRED   = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- SUCC   = { }

468 :	"concatenated"
		- NEIGH  = { concatenated , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { size , if , operations , == , subops , concatenated , & , }
		- PRED   = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- SUCC   = { }

472 :	"&"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

472 :	"subops"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

472 :	"concatenated"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

472 :	"operations"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

473 :	"if"
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

473 :	"subops"
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

473 :	"size"
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

473 :	"=="
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

474 :	"firstOpIsTransformation"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

475 :	"dynamic_cast"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

475 :	"<"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

475 :	"operation"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

475 :	"Transformation"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

475 :	"*"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

475 :	">"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

476 :	"subops"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

476 :	"get"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

477 :	"firstOpIsConversion"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

478 :	"dynamic_cast"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

478 :	"<"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

478 :	"operation"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

478 :	"Conversion"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

478 :	"*"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

478 :	">"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

479 :	"subops"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

479 :	"get"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

480 :	"if"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

480 :	"firstOpIsTransformation"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

480 :	"&&"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

481 :	"firstOpIsTransformation"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

482 :	"isLongitudeRotation"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

482 :	"||"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	"dynamic_cast"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	"<"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	"DerivedCRS"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	"*"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	">"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	"thisAsCRS"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	"get"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

483 :	"&&"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

484 :	"firstOpIsConversion"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

485 :	"transf"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

485 :	"util"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

485 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

485 :	"<"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

486 :	"operation"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

486 :	"Transformation"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

486 :	">"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

486 :	"subops"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

487 :	"if"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

487 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

487 :	"&&"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

488 :	"!"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

488 :	"starts_with"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

488 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

488 :	"nameStr"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { hubCRS , thisAsCRS , create , > , < , util , & , exception , return , std , BoundCRS , catch , CRS , NN_NO_CHECK , getTOWGS84Parameters , nn_static_pointer_cast , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

491 :	"transf"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

491 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

492 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

492 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

492 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

492 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }

493 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

495 :	"return"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

495 :	"util"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

495 :	"nn_static_pointer_cast"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

495 :	"<"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

495 :	"CRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

495 :	">"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

496 :	"BoundCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

496 :	"create"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

496 :	"thisAsCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

496 :	"hubCRS"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

497 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

497 :	"transf"
		- NEIGH  = { NN_NO_CHECK , hubCRS , thisAsCRS , create , BoundCRS , util , < , > , transf , nn_static_pointer_cast , CRS , return , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

504 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { list , op , & , for , }
		- SUCC   = { }

504 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { list , op , & , for , }
		- SUCC   = { }

504 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { list , op , & , for , }
		- SUCC   = { }

504 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { list , op , & , for , }
		- SUCC   = { }

507 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorities , authority , & , for , }
		- SUCC   = { }

507 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorities , authority , & , for , }
		- SUCC   = { }

517 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

517 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

517 :	"stripVerticalComponent"
		- NEIGH  = { stripVerticalComponent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

518 :	"self"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

518 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

519 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

519 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

519 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

519 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

519 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

519 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

519 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

521 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

521 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

521 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

521 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

521 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

521 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

521 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

522 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

522 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

523 :	"&"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

523 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

523 :	"geogCRS"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

523 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

523 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

524 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

524 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

524 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

524 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

525 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

525 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

525 :	"EllipsoidalCS"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

525 :	"create"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

525 :	"util"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

525 :	"PropertyMap"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

526 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

526 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

527 :	"return"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

527 :	"util"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

527 :	"nn_static_pointer_cast"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

527 :	"<"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

527 :	"CRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

527 :	">"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

527 :	"GeographicCRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

527 :	"create"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"util"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"PropertyMap"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"set"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"common"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"IdentifiedObject"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

528 :	"NAME_KEY"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

529 :	"nameStr"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

530 :	"geogCRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

530 :	"datum"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

530 :	"geogCRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

530 :	"datumEnsemble"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

530 :	"cs"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

533 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

533 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

533 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

533 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

533 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

533 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

533 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

534 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { self , return , }

534 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { self , return , }

535 :	"&"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

535 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

535 :	"projCRS"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

535 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

535 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

536 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

536 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

536 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

536 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

537 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

537 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

537 :	"CartesianCS"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

537 :	"create"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

537 :	"util"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

537 :	"PropertyMap"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

537 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

538 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

539 :	"return"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

539 :	"util"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

539 :	"nn_static_pointer_cast"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

539 :	"<"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

539 :	"CRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

539 :	">"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

539 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

539 :	"create"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"util"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"PropertyMap"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"set"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"common"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"IdentifiedObject"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

540 :	"NAME_KEY"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

541 :	"nameStr"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

542 :	"projCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

542 :	"baseCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

542 :	"projCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

542 :	"derivingConversion"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

542 :	"cs"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

545 :	"return"
		- NEIGH  = { self , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

545 :	"self"
		- NEIGH  = { self , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

553 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

553 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

553 :	"shallowClone"
		- NEIGH  = { shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

553 :	"return"
		- NEIGH  = { _shallowClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

553 :	"_shallowClone"
		- NEIGH  = { _shallowClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

561 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

561 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

561 :	"alterName"
		- NEIGH  = { alterName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

561 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

561 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

561 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

561 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

562 :	"crs"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newName , newNameMod , }

562 :	"shallowClone"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newName , newNameMod , }

563 :	"newNameMod"
		- NEIGH  = { newName , newNameMod , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { PropertyMap , util , props , }

563 :	"newName"
		- NEIGH  = { newName , newNameMod , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { PropertyMap , util , props , }

564 :	"props"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , newNameMod , }
		- SUCC   = { newNameMod , ends_with , if , }

564 :	"util"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , newNameMod , }
		- SUCC   = { newNameMod , ends_with , if , }

564 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , newNameMod , }
		- SUCC   = { newNameMod , ends_with , if , }

565 :	"if"
		- NEIGH  = { newNameMod , ends_with , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , props , - , resize , size , DEPRECATED_KEY , strlen , set , newNameMod , }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }

565 :	"ends_with"
		- NEIGH  = { newNameMod , ends_with , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , props , - , resize , size , DEPRECATED_KEY , strlen , set , newNameMod , }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }

565 :	"newNameMod"
		- NEIGH  = { newNameMod , ends_with , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , props , - , resize , size , DEPRECATED_KEY , strlen , set , newNameMod , }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }

566 :	"newNameMod"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

566 :	"resize"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

566 :	"newNameMod"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

566 :	"size"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

566 :	"-"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

566 :	"strlen"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

567 :	"props"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

567 :	"set"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

567 :	"common"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

567 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

567 :	"DEPRECATED_KEY"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

569 :	"props"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

569 :	"set"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

569 :	"common"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

569 :	"IdentifiedObject"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

569 :	"NAME_KEY"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

569 :	"newNameMod"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

570 :	"crs"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- SUCC   = { crs , return , }

570 :	"setProperties"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- SUCC   = { crs , return , }

570 :	"props"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- SUCC   = { crs , return , }

571 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

571 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

580 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

580 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

580 :	"alterId"
		- NEIGH  = { alterId , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

580 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

580 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

580 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

580 :	"authName"
		- NEIGH  = { authName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

581 :	"code"
		- NEIGH  = { code , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

582 :	"crs"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PropertyMap , util , props , }

582 :	"shallowClone"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PropertyMap , util , props , }

583 :	"props"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }

583 :	"util"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }

583 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }

584 :	"props"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

584 :	"set"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

584 :	"metadata"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

584 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

584 :	"CODESPACE_KEY"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

584 :	"authName"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"set"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"metadata"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"CODE_KEY"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

585 :	"code"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

586 :	"crs"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- SUCC   = { crs , return , }

586 :	"setProperties"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- SUCC   = { crs , return , }

586 :	"props"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- SUCC   = { crs , return , }

587 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

587 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

596 :	"isAxisListNorthEast"
		- NEIGH  = { isAxisListNorthEast , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

597 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

597 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

597 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

597 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

597 :	"CoordinateSystemAxisNNPtr"
		- NEIGH  = { CoordinateSystemAxisNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

597 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

597 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

597 :	"axisList"
		- NEIGH  = { axisList , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

598 :	"&"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

598 :	"dir0"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

598 :	"axisList"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

598 :	"direction"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

599 :	"&"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }

599 :	"dir1"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }

599 :	"axisList"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }

599 :	"direction"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }

600 :	"return"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

600 :	"&"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

600 :	"dir0"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

600 :	"=="
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

600 :	"&"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

600 :	"cs"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

600 :	"AxisDirection"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

600 :	"NORTH"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

600 :	"&&"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

601 :	"&"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

601 :	"dir1"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

601 :	"=="
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

601 :	"&"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

601 :	"cs"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

601 :	"AxisDirection"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

601 :	"EAST"
		- NEIGH  = { dir1 , && , cs , == , dir0 , NORTH , & , EAST , AxisDirection , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

605 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

605 :	"mustAxisOrderBeSwitchedForVisualization"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

607 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

607 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

607 :	"compoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

607 :	"dynamic_cast"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

607 :	"<"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

607 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

607 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

607 :	">"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

607 :	"this"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

608 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

608 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

609 :	"&"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

609 :	"comps"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

609 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

609 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

610 :	"if"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

610 :	"!"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

610 :	"comps"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

610 :	"empty"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

611 :	"return"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

611 :	"comps"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

611 :	"mustAxisOrderBeSwitchedForVisualization"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

615 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

615 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

615 :	"geogCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

615 :	"dynamic_cast"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

615 :	"<"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

615 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

615 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

615 :	">"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

615 :	"this"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

616 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , geogCRS , isAxisListNorthEast , return , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

616 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , geogCRS , isAxisListNorthEast , return , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

617 :	"return"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , isAxisListNorthEast , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"isAxisListNorthEast"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , isAxisListNorthEast , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"geogCRS"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , isAxisListNorthEast , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , isAxisListNorthEast , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , isAxisListNorthEast , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

620 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

620 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

620 :	"projCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

620 :	"dynamic_cast"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

620 :	"<"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

620 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

620 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

620 :	">"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

620 :	"this"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

621 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , projCRS , isAxisListNorthEast , return , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { return , }

621 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , projCRS , isAxisListNorthEast , return , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { return , }

622 :	"return"
		- NEIGH  = { axisList , coordinateSystem , projCRS , isAxisListNorthEast , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

622 :	"isAxisListNorthEast"
		- NEIGH  = { axisList , coordinateSystem , projCRS , isAxisListNorthEast , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

622 :	"projCRS"
		- NEIGH  = { axisList , coordinateSystem , projCRS , isAxisListNorthEast , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

622 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , projCRS , isAxisListNorthEast , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

622 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , projCRS , isAxisListNorthEast , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

625 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

634 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

634 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

634 :	"normalizeForVisualization"
		- NEIGH  = { normalizeForVisualization , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

635 :	"props"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

635 :	"util"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

635 :	"PropertyMap"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

635 :	"set"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

636 :	"common"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

636 :	"IdentifiedObject"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

636 :	"NAME_KEY"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

637 :	"nameStr"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

637 :	"+"
		- NEIGH  = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

639 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

639 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

639 :	"compoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

639 :	"dynamic_cast"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

639 :	"<"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

639 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

639 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

639 :	">"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

639 :	"this"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , + , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { compoundCRS , if , }

640 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

640 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

641 :	"&"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

641 :	"comps"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

641 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

641 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

642 :	"if"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { props , return , ++ , nn_static_pointer_cast , size , CRS , i , normalizeForVisualization , for , comps , vector , > , emplace_back , CompoundCRS , newComps , create , CRSNNPtr , util , < , size_t , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

642 :	"!"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { props , return , ++ , nn_static_pointer_cast , size , CRS , i , normalizeForVisualization , for , comps , vector , > , emplace_back , CompoundCRS , newComps , create , CRSNNPtr , util , < , size_t , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

642 :	"comps"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { props , return , ++ , nn_static_pointer_cast , size , CRS , i , normalizeForVisualization , for , comps , vector , > , emplace_back , CompoundCRS , newComps , create , CRSNNPtr , util , < , size_t , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

642 :	"empty"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { props , return , ++ , nn_static_pointer_cast , size , CRS , i , normalizeForVisualization , for , comps , vector , > , emplace_back , CompoundCRS , newComps , create , CRSNNPtr , util , < , size_t , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

643 :	"std"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

643 :	"vector"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

643 :	"<"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

643 :	"CRSNNPtr"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

643 :	">"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

643 :	"newComps"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

644 :	"newComps"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

644 :	"emplace_back"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

644 :	"comps"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

644 :	"normalizeForVisualization"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

645 :	"for"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

645 :	"size_t"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

645 :	"i"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

645 :	"i"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

645 :	"<"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

645 :	"comps"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

645 :	"size"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

645 :	"i"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

645 :	"++"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { i , emplace_back , comps , newComps , }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }

646 :	"newComps"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"emplace_back"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"comps"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

646 :	"i"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

648 :	"return"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

648 :	"util"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

648 :	"nn_static_pointer_cast"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

648 :	"<"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

648 :	"CRS"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

648 :	">"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

649 :	"CompoundCRS"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

649 :	"create"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

649 :	"props"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

649 :	"newComps"
		- NEIGH  = { create , newComps , CompoundCRS , < , > , nn_static_pointer_cast , util , CRS , props , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

653 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

653 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

653 :	"geogCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

653 :	"dynamic_cast"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

653 :	"<"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

653 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

653 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

653 :	">"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

653 :	"this"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

654 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , geogCRS , axisList , isAxisListNorthEast , & , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

654 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , geogCRS , axisList , isAxisListNorthEast , & , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

655 :	"&"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

655 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

655 :	"geogCRS"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

655 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

655 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

656 :	"if"
		- NEIGH  = { axisList , isAxisListNorthEast , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , props , > , geogCRS , CRS , cs , util , < , size , nn_static_pointer_cast , return , datumEnsemble , EllipsoidalCS , == , PropertyMap , GeographicCRS , create , axisList , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

656 :	"isAxisListNorthEast"
		- NEIGH  = { axisList , isAxisListNorthEast , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , props , > , geogCRS , CRS , cs , util , < , size , nn_static_pointer_cast , return , datumEnsemble , EllipsoidalCS , == , PropertyMap , GeographicCRS , create , axisList , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

656 :	"axisList"
		- NEIGH  = { axisList , isAxisListNorthEast , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , props , > , geogCRS , CRS , cs , util , < , size , nn_static_pointer_cast , return , datumEnsemble , EllipsoidalCS , == , PropertyMap , GeographicCRS , create , axisList , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

657 :	"cs"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

657 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

657 :	"size"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

657 :	"=="
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

658 :	"cs"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

658 :	"EllipsoidalCS"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

658 :	"create"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

658 :	"util"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

658 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

659 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

659 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

660 :	"cs"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

660 :	"EllipsoidalCS"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

660 :	"create"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

660 :	"util"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

660 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

661 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

661 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

662 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }

663 :	"return"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

663 :	"util"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

663 :	"nn_static_pointer_cast"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

663 :	"<"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

663 :	"CRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

663 :	">"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

663 :	"GeographicCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

663 :	"create"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

664 :	"props"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

664 :	"geogCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

664 :	"datum"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

664 :	"geogCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

664 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

664 :	"cs"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , > , nn_static_pointer_cast , props , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

668 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

668 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

668 :	"projCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

668 :	"dynamic_cast"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

668 :	"<"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

668 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

668 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

668 :	">"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

668 :	"this"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

669 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , axisList , projCRS , isAxisListNorthEast , & , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

669 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , axisList , projCRS , isAxisListNorthEast , & , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

670 :	"&"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

670 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

670 :	"projCRS"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

670 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

670 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , isAxisListNorthEast , if , }

671 :	"if"
		- NEIGH  = { axisList , isAxisListNorthEast , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversionRef , baseCRS , props , ProjectedCRS , > , CRS , projCRS , cs , util , < , return , == , PropertyMap , create , size , nn_static_pointer_cast , CartesianCS , axisList , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

671 :	"isAxisListNorthEast"
		- NEIGH  = { axisList , isAxisListNorthEast , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversionRef , baseCRS , props , ProjectedCRS , > , CRS , projCRS , cs , util , < , return , == , PropertyMap , create , size , nn_static_pointer_cast , CartesianCS , axisList , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

671 :	"axisList"
		- NEIGH  = { axisList , isAxisListNorthEast , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversionRef , baseCRS , props , ProjectedCRS , > , CRS , projCRS , cs , util , < , return , == , PropertyMap , create , size , nn_static_pointer_cast , CartesianCS , axisList , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

672 :	"cs"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

673 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

673 :	"size"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

673 :	"=="
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

674 :	"cs"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

674 :	"CartesianCS"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

674 :	"create"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

674 :	"util"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

674 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

674 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

675 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

676 :	"cs"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

676 :	"CartesianCS"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

676 :	"create"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

676 :	"util"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

676 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

676 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

677 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

677 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }

678 :	"return"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

678 :	"util"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

678 :	"nn_static_pointer_cast"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

678 :	"<"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

678 :	"CRS"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

678 :	">"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

679 :	"ProjectedCRS"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

679 :	"create"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

679 :	"props"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

679 :	"projCRS"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

679 :	"baseCRS"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

680 :	"projCRS"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

680 :	"derivingConversionRef"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

680 :	"cs"
		- NEIGH  = { create , > , ProjectedCRS , cs , util , projCRS , < , derivingConversionRef , props , baseCRS , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , isAxisListNorthEast , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

684 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

684 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

685 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

685 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

685 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

685 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

685 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

685 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

685 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

718 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

718 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

718 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

718 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

718 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

718 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

718 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

718 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

719 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

719 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

719 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

719 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

719 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

719 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

720 :	"return"
		- NEIGH  = { authorityFactory , _identify , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

720 :	"_identify"
		- NEIGH  = { authorityFactory , _identify , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

720 :	"authorityFactory"
		- NEIGH  = { authorityFactory , _identify , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

727 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

727 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

727 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

727 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

727 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

728 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

728 :	"getNonDeprecated"
		- NEIGH  = { getNonDeprecated , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

728 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

728 :	"DatabaseContextNNPtr"
		- NEIGH  = { DatabaseContextNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

728 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

728 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

729 :	"std"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

729 :	"list"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

729 :	"<"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

729 :	"CRSNNPtr"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

729 :	">"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

729 :	"res"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

730 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , CRSNNPtr , < , list , std , }
		- SUCC   = { empty , l_identifiers , if , }

730 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , CRSNNPtr , < , list , std , }
		- SUCC   = { empty , l_identifiers , if , }

730 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , CRSNNPtr , < , list , std , }
		- SUCC   = { empty , l_identifiers , if , }

731 :	"if"
		- NEIGH  = { empty , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { tableName , * , }

731 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { tableName , * , }

731 :	"empty"
		- NEIGH  = { empty , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { tableName , * , }

732 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { empty , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

732 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { empty , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

734 :	"*"
		- NEIGH  = { tableName , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , if , }
		- SUCC   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }

734 :	"tableName"
		- NEIGH  = { tableName , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , if , }
		- SUCC   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }

735 :	"if"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

735 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

735 :	"<"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

735 :	"GeodeticCRS"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

735 :	"*"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

735 :	">"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

735 :	"this"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

736 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

737 :	"if"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

737 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

737 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

737 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

737 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

737 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

737 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

738 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

739 :	"if"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

739 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

739 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

739 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

739 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

739 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

739 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

740 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

741 :	"if"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

741 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

741 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

741 :	"CompoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

741 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

741 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

741 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

742 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

744 :	"if"
		- NEIGH  = { ! , tableName , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- SUCC   = { l_identifiers , id , & , }

744 :	"!"
		- NEIGH  = { ! , tableName , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- SUCC   = { l_identifiers , id , & , }

744 :	"tableName"
		- NEIGH  = { ! , tableName , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- SUCC   = { l_identifiers , id , & , }

745 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { ! , tableName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

745 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { ! , tableName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

747 :	"&"
		- NEIGH  = { l_identifiers , id , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , tableName , if , }
		- SUCC   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }

747 :	"id"
		- NEIGH  = { l_identifiers , id , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , tableName , if , }
		- SUCC   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }

747 :	"l_identifiers"
		- NEIGH  = { l_identifiers , id , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , tableName , if , }
		- SUCC   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }

748 :	"tmpRes"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

749 :	"dbContext"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

749 :	"getNonDeprecated"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

749 :	"tableName"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

749 :	"*"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

749 :	"id"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

749 :	"codeSpace"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

749 :	"id"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

749 :	"code"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

750 :	"for"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

750 :	"&"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

750 :	"pair"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

750 :	"tmpRes"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

751 :	"res"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

751 :	"emplace_back"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

751 :	"io"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

751 :	"AuthorityFactory"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

751 :	"create"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

751 :	"dbContext"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

751 :	"pair"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

751 :	"first"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

752 :	"createCoordinateReferenceSystem"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

752 :	"pair"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

752 :	"second"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

754 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tmpRes , pair , & , for , }
		- SUCC   = { }

754 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tmpRes , pair , & , for , }
		- SUCC   = { }

772 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"promoteTo3D"
		- NEIGH  = { promoteTo3D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

772 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

773 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

773 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

773 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

773 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

775 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

775 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

775 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

775 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

775 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

775 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

775 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

776 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

776 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

777 :	"&"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

777 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

777 :	"geogCRS"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

777 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

777 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

778 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , geogCRS , nameStr , ! , GeographicCRS , > , newName , CRS , datum , < , axisList , METRE , EllipsoidalCS , common , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , if , AxisDirection , dbContext , Ellipsoidal_height , AxisName , identifiers , NAME_KEY , h , create , cs , upAxis , return , size , CoordinateSystemAxis , && , util , UP , IdentifiedObject , PropertyMap , empty , == , set , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

778 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , geogCRS , nameStr , ! , GeographicCRS , > , newName , CRS , datum , < , axisList , METRE , EllipsoidalCS , common , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , if , AxisDirection , dbContext , Ellipsoidal_height , AxisName , identifiers , NAME_KEY , h , create , cs , upAxis , return , size , CoordinateSystemAxis , && , util , UP , IdentifiedObject , PropertyMap , empty , == , set , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

778 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , geogCRS , nameStr , ! , GeographicCRS , > , newName , CRS , datum , < , axisList , METRE , EllipsoidalCS , common , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , if , AxisDirection , dbContext , Ellipsoidal_height , AxisName , identifiers , NAME_KEY , h , create , cs , upAxis , return , size , CoordinateSystemAxis , && , util , UP , IdentifiedObject , PropertyMap , empty , == , set , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

778 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , geogCRS , nameStr , ! , GeographicCRS , > , newName , CRS , datum , < , axisList , METRE , EllipsoidalCS , common , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , if , AxisDirection , dbContext , Ellipsoidal_height , AxisName , identifiers , NAME_KEY , h , create , cs , upAxis , return , size , CoordinateSystemAxis , && , util , UP , IdentifiedObject , PropertyMap , empty , == , set , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

779 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

779 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

779 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

783 :	"if"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

783 :	"dbContext"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

783 :	"&&"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

783 :	"l_identifiers"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

783 :	"size"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

783 :	"=="
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

784 :	"authFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

784 :	"io"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

784 :	"AuthorityFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

784 :	"create"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

785 :	"NN_NO_CHECK"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

785 :	"dbContext"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

785 :	"*"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

785 :	"l_identifiers"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

785 :	"codeSpace"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

786 :	"res"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

786 :	"authFactory"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

786 :	"createObjectsFromName"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

787 :	"nameStr"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

788 :	"io"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

788 :	"AuthorityFactory"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

788 :	"ObjectType"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

788 :	"GEOGRAPHIC_3D_CRS"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

790 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { get , > , < , dynamic_cast , * , NN_NO_CHECK , is2DPartOf3D , firstRes , geogCRS , if , front , res , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

790 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { get , > , < , dynamic_cast , * , NN_NO_CHECK , is2DPartOf3D , firstRes , geogCRS , if , front , res , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

790 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { get , > , < , dynamic_cast , * , NN_NO_CHECK , is2DPartOf3D , firstRes , geogCRS , if , front , res , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

790 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { get , > , < , dynamic_cast , * , NN_NO_CHECK , is2DPartOf3D , firstRes , geogCRS , if , front , res , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

791 :	"&"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }

791 :	"firstRes"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }

791 :	"res"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }

791 :	"front"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }

792 :	"if"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

792 :	"geogCRS"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

792 :	"is2DPartOf3D"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

792 :	"NN_NO_CHECK"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

793 :	"dynamic_cast"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

793 :	"<"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

793 :	"GeographicCRS"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

793 :	"*"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

793 :	">"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

793 :	"firstRes"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

793 :	"get"
		- NEIGH  = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { }

794 :	"return"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

794 :	"NN_NO_CHECK"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

795 :	"util"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

795 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

795 :	"<"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

795 :	"CRS"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

795 :	">"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

795 :	"firstRes"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { get , firstRes , > , GeographicCRS , * , dynamic_cast , NN_NO_CHECK , is2DPartOf3D , < , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

800 :	"upAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

800 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

800 :	"CoordinateSystemAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

800 :	"create"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

801 :	"util"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

801 :	"PropertyMap"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

801 :	"set"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

801 :	"IdentifiedObject"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

801 :	"NAME_KEY"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

802 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

802 :	"AxisName"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

802 :	"Ellipsoidal_height"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

803 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

803 :	"AxisAbbreviation"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

803 :	"h"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

803 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

803 :	"AxisDirection"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

803 :	"UP"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

804 :	"common"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

804 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

804 :	"METRE"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

805 :	"cs"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

805 :	"cs"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

805 :	"EllipsoidalCS"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

805 :	"create"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

806 :	"util"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

806 :	"PropertyMap"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

806 :	"axisList"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

806 :	"axisList"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

806 :	"upAxis"
		- NEIGH  = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }

807 :	"return"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

807 :	"util"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

807 :	"nn_static_pointer_cast"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

807 :	"<"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

807 :	"CRS"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

807 :	">"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

807 :	"GeographicCRS"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

807 :	"create"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

808 :	"util"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

808 :	"PropertyMap"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

808 :	"set"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

808 :	"common"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

808 :	"IdentifiedObject"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

808 :	"NAME_KEY"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

809 :	"!"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

809 :	"newName"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

809 :	"empty"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

809 :	"newName"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

809 :	"nameStr"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

810 :	"geogCRS"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

810 :	"datum"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

810 :	"geogCRS"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

810 :	"datumEnsemble"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

810 :	"cs"
		- NEIGH  = { datum , newName , ! , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , empty , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

814 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

814 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

814 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

814 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

814 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

814 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

814 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

815 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

815 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

816 :	"&"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

816 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

816 :	"projCRS"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

816 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

816 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

817 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { NN_NO_CHECK , nameStr , empty , ! , newName , CRS , < , axisList , ProjectedCRS , return , CartesianCS , nn_dynamic_pointer_cast , METRE , common , create , h , AxisDirection , dbContext , Ellipsoidal_height , AxisName , NAME_KEY , UP , derivingConversionRef , IdentifiedObject , PropertyMap , cs , upAxis , promoteTo3D , CoordinateSystemAxis , util , > , projCRS , set , GeodeticCRS , string , std , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

817 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { NN_NO_CHECK , nameStr , empty , ! , newName , CRS , < , axisList , ProjectedCRS , return , CartesianCS , nn_dynamic_pointer_cast , METRE , common , create , h , AxisDirection , dbContext , Ellipsoidal_height , AxisName , NAME_KEY , UP , derivingConversionRef , IdentifiedObject , PropertyMap , cs , upAxis , promoteTo3D , CoordinateSystemAxis , util , > , projCRS , set , GeodeticCRS , string , std , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

817 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { NN_NO_CHECK , nameStr , empty , ! , newName , CRS , < , axisList , ProjectedCRS , return , CartesianCS , nn_dynamic_pointer_cast , METRE , common , create , h , AxisDirection , dbContext , Ellipsoidal_height , AxisName , NAME_KEY , UP , derivingConversionRef , IdentifiedObject , PropertyMap , cs , upAxis , promoteTo3D , CoordinateSystemAxis , util , > , projCRS , set , GeodeticCRS , string , std , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

817 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { NN_NO_CHECK , nameStr , empty , ! , newName , CRS , < , axisList , ProjectedCRS , return , CartesianCS , nn_dynamic_pointer_cast , METRE , common , create , h , AxisDirection , dbContext , Ellipsoidal_height , AxisName , NAME_KEY , UP , derivingConversionRef , IdentifiedObject , PropertyMap , cs , upAxis , promoteTo3D , CoordinateSystemAxis , util , > , projCRS , set , GeodeticCRS , string , std , nn_static_pointer_cast , UnitOfMeasure , AxisAbbreviation , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

818 :	"base3DCRS"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

819 :	"projCRS"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

819 :	"baseCRS"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

819 :	"promoteTo3D"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

819 :	"std"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

819 :	"string"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

819 :	"dbContext"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }

820 :	"upAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

820 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

820 :	"CoordinateSystemAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

820 :	"create"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

821 :	"util"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

821 :	"PropertyMap"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

821 :	"set"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

821 :	"IdentifiedObject"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

821 :	"NAME_KEY"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

822 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

822 :	"AxisName"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

822 :	"Ellipsoidal_height"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

823 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

823 :	"AxisAbbreviation"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

823 :	"h"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

823 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

823 :	"AxisDirection"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

823 :	"UP"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

824 :	"common"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

824 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

824 :	"METRE"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }

825 :	"cs"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

825 :	"cs"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

825 :	"CartesianCS"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

825 :	"create"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

825 :	"util"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

825 :	"PropertyMap"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

825 :	"axisList"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

826 :	"axisList"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

826 :	"upAxis"
		- NEIGH  = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }

827 :	"return"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

827 :	"util"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

827 :	"nn_static_pointer_cast"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

827 :	"<"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

827 :	"CRS"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

827 :	">"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

827 :	"ProjectedCRS"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

827 :	"create"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

828 :	"util"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

828 :	"PropertyMap"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

828 :	"set"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

828 :	"common"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

828 :	"IdentifiedObject"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

828 :	"NAME_KEY"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

829 :	"!"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

829 :	"newName"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

829 :	"empty"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

829 :	"newName"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

829 :	"nameStr"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

830 :	"NN_NO_CHECK"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

831 :	"util"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

831 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

831 :	"<"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

831 :	"GeodeticCRS"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

831 :	">"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

831 :	"base3DCRS"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

832 :	"projCRS"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

832 :	"derivingConversionRef"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

832 :	"cs"
		- NEIGH  = { cs , PropertyMap , IdentifiedObject , derivingConversionRef , NN_NO_CHECK , CRS , newName , GeodeticCRS , ! , NAME_KEY , create , set , projCRS , > , return , ProjectedCRS , util , < , nameStr , nn_static_pointer_cast , nn_dynamic_pointer_cast , common , empty , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { upAxis , axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

836 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

836 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

836 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

836 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

836 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

836 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

836 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

837 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

837 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

838 :	"return"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

838 :	"BoundCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

838 :	"create"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

839 :	"boundCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

839 :	"baseCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

839 :	"promoteTo3D"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

839 :	"newName"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

839 :	"dbContext"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

840 :	"boundCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

840 :	"hubCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

840 :	"boundCRS"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

840 :	"transformation"
		- NEIGH  = { hubCRS , dbContext , newName , transformation , promoteTo3D , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

843 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

843 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

844 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

844 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

844 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

844 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

844 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

844 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

844 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

851 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

851 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

851 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

851 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

851 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

851 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

851 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

851 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

852 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

852 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

852 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

852 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

852 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

853 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

861 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

861 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

862 :	"datum"
		- NEIGH  = { DatumPtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , DatumEnsemblePtr , datum , }

862 :	"DatumPtr"
		- NEIGH  = { DatumPtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , DatumEnsemblePtr , datum , }

862 :	"datum"
		- NEIGH  = { DatumPtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , DatumEnsemblePtr , datum , }

863 :	"datum"
		- NEIGH  = { datumEnsemble , DatumEnsemblePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DatumPtr , datum , }
		- SUCC   = { coordinateSystem , CoordinateSystemNNPtr , cs , }

863 :	"DatumEnsemblePtr"
		- NEIGH  = { datumEnsemble , DatumEnsemblePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DatumPtr , datum , }
		- SUCC   = { coordinateSystem , CoordinateSystemNNPtr , cs , }

863 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , DatumEnsemblePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DatumPtr , datum , }
		- SUCC   = { coordinateSystem , CoordinateSystemNNPtr , cs , }

864 :	"cs"
		- NEIGH  = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , DatumEnsemblePtr , datum , }
		- SUCC   = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }

864 :	"CoordinateSystemNNPtr"
		- NEIGH  = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , DatumEnsemblePtr , datum , }
		- SUCC   = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }

864 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , DatumEnsemblePtr , datum , }
		- SUCC   = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }

866 :	"Private"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

866 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

866 :	"DatumPtr"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

866 :	"&"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

866 :	"datumIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

867 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

867 :	"DatumEnsemblePtr"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

867 :	"&"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

867 :	"datumEnsembleIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

868 :	"cs"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

868 :	"CoordinateSystemNNPtr"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

868 :	"&"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

868 :	"csIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

869 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

869 :	"datumIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

869 :	"datumEnsemble"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

869 :	"datumEnsembleIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

870 :	"coordinateSystem"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

870 :	"csIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

871 :	"if"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

871 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

871 :	"+"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

871 :	"datumEnsemble"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

871 :	"!="
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

872 :	"throw"
		- NEIGH  = { Exception , util , throw , }
		- PARENT = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

872 :	"util"
		- NEIGH  = { Exception , util , throw , }
		- PARENT = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

872 :	"Exception"
		- NEIGH  = { Exception , util , throw , }
		- PARENT = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

880 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

880 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

880 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

880 :	"DatumPtr"
		- NEIGH  = { DatumPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

880 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

880 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

881 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

881 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

881 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

881 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

882 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

882 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

882 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

882 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

883 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

883 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

883 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

883 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

883 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

883 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

883 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

883 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

883 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

887 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

887 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

887 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

887 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

887 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

888 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

893 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

893 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

904 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

904 :	"DatumPtr"
		- NEIGH  = { DatumPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

904 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

904 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

904 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

904 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

904 :	"return"
		- NEIGH  = { datum , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

904 :	"d"
		- NEIGH  = { datum , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

904 :	"datum"
		- NEIGH  = { datum , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

914 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

914 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

914 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

914 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

914 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

914 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

915 :	"return"
		- NEIGH  = { datumEnsemble , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

915 :	"d"
		- NEIGH  = { datumEnsemble , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

915 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

926 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

926 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

926 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

926 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

926 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

926 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

927 :	"return"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

927 :	"d"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

927 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

932 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

932 :	"baseIsEquivalentTo"
		- NEIGH  = { baseIsEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

933 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

933 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

933 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

933 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

934 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

934 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

934 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

934 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

935 :	"otherSingleCRS"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }

935 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }

935 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }

935 :	"SingleCRS"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }

935 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }

935 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }

935 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }

936 :	"if"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

936 :	"otherSingleCRS"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

936 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

936 :	"||"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

937 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

937 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

937 :	"util"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

937 :	"IComparable"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

937 :	"Criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

937 :	"STRICT"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

937 :	"&&"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

938 :	"!"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

938 :	"ObjectUsage"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

938 :	"_isEquivalentTo"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

938 :	"other"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

938 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { datum , d , thisDatum , & , }

939 :	"return"
		- NEIGH  = { return , }
		- PARENT = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

941 :	"&"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

941 :	"thisDatum"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

941 :	"d"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

941 :	"datum"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

942 :	"&"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

942 :	"otherDatum"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

942 :	"otherSingleCRS"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

942 :	"d"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

942 :	"datum"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

943 :	"if"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { }
		- CHILD  = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PRED   = { otherSingleCRS , datum , d , otherDatum , & , }
		- SUCC   = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }

943 :	"thisDatum"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { }
		- CHILD  = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PRED   = { otherSingleCRS , datum , d , otherDatum , & , }
		- SUCC   = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }

944 :	"if"
		- NEIGH  = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

944 :	"!"
		- NEIGH  = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

944 :	"thisDatum"
		- NEIGH  = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

944 :	"_isEquivalentTo"
		- NEIGH  = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

944 :	"otherDatum"
		- NEIGH  = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

944 :	"get"
		- NEIGH  = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

944 :	"criterion"
		- NEIGH  = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

945 :	"return"
		- NEIGH  = { return , }
		- PARENT = { criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

948 :	"if"
		- NEIGH  = { otherDatum , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

948 :	"otherDatum"
		- NEIGH  = { otherDatum , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

949 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

954 :	"return"
		- NEIGH  = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

954 :	"d"
		- NEIGH  = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

954 :	"coordinateSystem"
		- NEIGH  = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

954 :	"_isEquivalentTo"
		- NEIGH  = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

955 :	"otherSingleCRS"
		- NEIGH  = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

955 :	"d"
		- NEIGH  = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

955 :	"coordinateSystem"
		- NEIGH  = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

955 :	"get"
		- NEIGH  = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

955 :	"criterion"
		- NEIGH  = { get , otherSingleCRS , criterion , return , coordinateSystem , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { }

961 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

961 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

962 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

962 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

962 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

962 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

964 :	"&"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

964 :	"l_datum"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

964 :	"d"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

964 :	"datum"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

965 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , datumEnsemble , d , & , formatter , l_datumEnsemble , _exportToWKT , l_datum , }
		- PRED   = { datum , d , l_datum , & , }
		- SUCC   = { }

965 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , datumEnsemble , d , & , formatter , l_datumEnsemble , _exportToWKT , l_datum , }
		- PRED   = { datum , d , l_datum , & , }
		- SUCC   = { }

966 :	"l_datum"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

966 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

966 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

968 :	"&"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

968 :	"l_datumEnsemble"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

968 :	"d"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

968 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

969 :	"assert"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , l_datumEnsemble , & , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

969 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , l_datumEnsemble , & , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

970 :	"l_datumEnsemble"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

970 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

970 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

978 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"std"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

979 :	"vector"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

979 :	"<"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

979 :	"operation"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

979 :	"PointMotionOperationNNPtr"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

979 :	">"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

979 :	"velocityModel"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

980 :	"datum"
		- NEIGH  = { datum_ , GeodeticReferenceFramePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- SUCC   = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }

980 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { datum_ , GeodeticReferenceFramePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- SUCC   = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }

980 :	"datum_"
		- NEIGH  = { datum_ , GeodeticReferenceFramePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- SUCC   = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }

982 :	"Private"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

982 :	"datum"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

982 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

982 :	"&"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

982 :	"datumIn"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

983 :	"datum_"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

983 :	"datumIn"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

988 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

988 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

988 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

989 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

989 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

989 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

989 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

989 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

990 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

990 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

990 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

990 :	"ensemble"
		- NEIGH  = { ensemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

991 :	"*"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

991 :	"msg"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

992 :	"if"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

992 :	"datumIn"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

993 :	"if"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

993 :	"!"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

993 :	"ensemble"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

994 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

994 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

996 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { datumIn , if , }
		- CHILD  = { }
		- PRED   = { ! , ensemble , if , }
		- SUCC   = { }

997 :	"if"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , GeodeticReferenceFrame , & , }
		- PRED   = { }
		- SUCC   = { }

997 :	"ensemble"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , GeodeticReferenceFrame , & , }
		- PRED   = { }
		- SUCC   = { }

998 :	"&"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

998 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

998 :	"ensemble"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

998 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

999 :	"assert"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

999 :	"!"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

999 :	"datums"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

999 :	"empty"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

1000 :	"grfFirst"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1001 :	"dynamic_cast"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1001 :	"<"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1001 :	"datum"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1001 :	"GeodeticReferenceFrame"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1001 :	"*"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1001 :	">"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1001 :	"datums"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1001 :	"get"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1002 :	"if"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- SUCC   = { msg , }

1002 :	"grfFirst"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- SUCC   = { msg , }

1003 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1003 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1005 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { grfFirst , if , }
		- SUCC   = { }

1007 :	"throw"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1007 :	"util"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1007 :	"Exception"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1007 :	"msg"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1014 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1014 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1015 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1015 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1015 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1015 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1016 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1016 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1016 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1016 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1017 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1017 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1017 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1017 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1017 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1018 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1019 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1019 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1019 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1019 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1019 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1019 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1019 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1024 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1024 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1024 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1024 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1025 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1025 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1025 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1025 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1026 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1026 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1026 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1026 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1026 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1027 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1028 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1032 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1032 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1032 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1032 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1032 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1032 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1033 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1033 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1033 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1033 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1034 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1034 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1034 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1034 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1035 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1035 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1035 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1035 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1035 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1036 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1041 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1041 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1041 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1041 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1041 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1047 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1047 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1052 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1052 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1052 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1053 :	"crs"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1053 :	"GeodeticCRS"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1053 :	"nn_make_shared"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1053 :	"<"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1053 :	"GeodeticCRS"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1053 :	">"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1053 :	"*"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1053 :	"this"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1054 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1054 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1054 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1055 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

1055 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

1065 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1065 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1065 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1065 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1065 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1065 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1066 :	"return"
		- NEIGH  = { datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1066 :	"d"
		- NEIGH  = { datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1066 :	"datum_"
		- NEIGH  = { datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"GeodeticReferenceFrame"
		- NEIGH  = { GeodeticReferenceFrame , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"oneDatum"
		- NEIGH  = { oneDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1072 :	"crs"
		- NEIGH  = { crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1073 :	"&"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1073 :	"l_datumEnsemble"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1073 :	"crs"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1073 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1074 :	"assert"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , crs , l_datumEnsemble , & , }
		- SUCC   = { l_datumEnsemble , l_datums , datums , & , }

1074 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , crs , l_datumEnsemble , & , }
		- SUCC   = { l_datumEnsemble , l_datums , datums , & , }

1075 :	"&"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1075 :	"l_datums"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1075 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1075 :	"datums"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1076 :	"return"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1076 :	"static_cast"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1076 :	"<"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1076 :	"datum"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1076 :	"GeodeticReferenceFrame"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1076 :	"*"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1076 :	">"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1076 :	"l_datums"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1076 :	"get"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1087 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1087 :	"PrimeMeridianNNPtr"
		- NEIGH  = { PrimeMeridianNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1087 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1087 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1087 :	"primeMeridian"
		- NEIGH  = { primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1087 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1088 :	"if"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , datum_ , d , return , }
		- PRED   = { }
		- SUCC   = { this , primeMeridian , oneDatum , return , }

1088 :	"d"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , datum_ , d , return , }
		- PRED   = { }
		- SUCC   = { this , primeMeridian , oneDatum , return , }

1088 :	"datum_"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , datum_ , d , return , }
		- PRED   = { }
		- SUCC   = { this , primeMeridian , oneDatum , return , }

1089 :	"return"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1089 :	"d"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1089 :	"datum_"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1089 :	"primeMeridian"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1091 :	"return"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1091 :	"oneDatum"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1091 :	"this"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1091 :	"primeMeridian"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1101 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1101 :	"EllipsoidNNPtr"
		- NEIGH  = { EllipsoidNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1101 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1101 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1101 :	"ellipsoid"
		- NEIGH  = { ellipsoid , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1101 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1102 :	"if"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { datum_ , d , ellipsoid , return , }
		- PRED   = { }
		- SUCC   = { this , oneDatum , ellipsoid , return , }

1102 :	"d"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { datum_ , d , ellipsoid , return , }
		- PRED   = { }
		- SUCC   = { this , oneDatum , ellipsoid , return , }

1102 :	"datum_"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { datum_ , d , ellipsoid , return , }
		- PRED   = { }
		- SUCC   = { this , oneDatum , ellipsoid , return , }

1103 :	"return"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1103 :	"d"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1103 :	"datum_"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1103 :	"ellipsoid"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1105 :	"return"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1105 :	"oneDatum"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1105 :	"this"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1105 :	"ellipsoid"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1114 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"PointMotionOperationNNPtr"
		- NEIGH  = { PointMotionOperationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1115 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1115 :	"velocityModel"
		- NEIGH  = { velocityModel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1115 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	"return"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	"d"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1116 :	"velocityModel"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1130 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1130 :	"isGeocentric"
		- NEIGH  = { isGeocentric , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1130 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1131 :	"&"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , cs , & , }

1131 :	"cs"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , cs , & , }

1131 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , cs , & , }

1132 :	"&"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1132 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1132 :	"cs"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1132 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1133 :	"return"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1133 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1133 :	"size"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1133 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1133 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	"dynamic_cast"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	"<"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	"CartesianCS"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	"*"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	">"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	"get"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	"!="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1134 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1135 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1135 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1135 :	"direction"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1135 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1135 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1135 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1135 :	"AxisDirection"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1135 :	"GEOCENTRIC_X"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1135 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1136 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1136 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1136 :	"direction"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1136 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1136 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1136 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1136 :	"AxisDirection"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1136 :	"GEOCENTRIC_Y"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1136 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1137 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1137 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1137 :	"direction"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1137 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1137 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1137 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1137 :	"AxisDirection"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1137 :	"GEOCENTRIC_Z"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1151 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1153 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1153 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1153 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1153 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1154 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1154 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1154 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1154 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1155 :	"return"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1155 :	"create"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1155 :	"properties"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1155 :	"datum"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1155 :	"as_nullable"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1155 :	"cs"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1172 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1173 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1173 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1173 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1173 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1173 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1173 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1174 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1174 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1174 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1174 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1176 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1176 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1176 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1176 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1177 :	"crs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1178 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1178 :	"nn_make_shared"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1178 :	"<"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1178 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1178 :	">"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1178 :	"datum"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1178 :	"datumEnsemble"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1178 :	"cs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1179 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1179 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1179 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1180 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1180 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1180 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1181 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1181 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1182 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1182 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1182 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1182 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1184 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1184 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1198 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1199 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1199 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1199 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1199 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1199 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1199 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1200 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1200 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1200 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1200 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1201 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1201 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1201 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1201 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1202 :	"return"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1202 :	"create"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1202 :	"properties"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1202 :	"datum"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1202 :	"as_nullable"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1202 :	"cs"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1219 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1220 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1220 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1220 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1220 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1220 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1220 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1221 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1221 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1221 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1221 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1222 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1222 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1222 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1222 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1223 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1223 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1223 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1223 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1224 :	"crs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1225 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1225 :	"nn_make_shared"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1225 :	"<"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1225 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1225 :	">"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1225 :	"datum"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1225 :	"datumEnsemble"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1225 :	"cs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1226 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1226 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1226 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1227 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1227 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1227 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1228 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1228 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1229 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1229 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1229 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1229 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1230 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1230 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1236 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1236 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1236 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1236 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1236 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1236 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1237 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1237 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1237 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1237 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1237 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1237 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1237 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1237 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1238 :	"isGeographic"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1239 :	"dynamic_cast"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1239 :	"<"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1239 :	"GeographicCRS"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1239 :	"*"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1239 :	">"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1239 :	"this"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1239 :	"!="
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1240 :	"formatter"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1240 :	"startNode"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1240 :	"isWKT2"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1241 :	"formatter"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1241 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1241 :	"&&"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1241 :	"isGeographic"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1242 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1242 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1242 :	"GEOGCRS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1243 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1243 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1243 :	"GEODCRS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1244 :	"isGeocentric"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1244 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1244 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1244 :	"GEOCCS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1245 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1245 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1245 :	"GEOGCS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1246 :	"!"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1246 :	"identifiers"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1246 :	"empty"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { nameStr , l_name , }

1247 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- SUCC   = { coordinateSystem , cs , & , }

1247 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- SUCC   = { coordinateSystem , cs , & , }

1248 :	"&"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { axisList , cs , & , }

1248 :	"cs"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { axisList , cs , & , }

1248 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { axisList , cs , & , }

1249 :	"&"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1249 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1249 :	"cs"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1249 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1251 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

1251 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

1251 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

1253 :	"if"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { WKTFormatter , NO , OutputAxisRule , io , oldAxisOutputRule , ! , formatter , isStrict , && , isWKT2 , isGeographic , == , axisList , l_name , size , != , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1253 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { WKTFormatter , NO , OutputAxisRule , io , oldAxisOutputRule , ! , formatter , isStrict , && , isWKT2 , isGeographic , == , axisList , l_name , size , != , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1253 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { WKTFormatter , NO , OutputAxisRule , io , oldAxisOutputRule , ! , formatter , isStrict , && , isWKT2 , isGeographic , == , axisList , l_name , size , != , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1254 :	"if"
		- NEIGH  = { size , != , axisList , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { == , l_name , if , }

1254 :	"axisList"
		- NEIGH  = { size , != , axisList , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { == , l_name , if , }

1254 :	"size"
		- NEIGH  = { size , != , axisList , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { == , l_name , if , }

1254 :	"!="
		- NEIGH  = { size , != , axisList , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { == , l_name , if , }

1255 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { size , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { size , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { size , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1259 :	"if"
		- NEIGH  = { == , l_name , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { ! , if , databaseContext , formatter , dbContext , & , aliasFound , l_name , }
		- PRED   = { size , != , axisList , if , }
		- SUCC   = { }

1259 :	"l_name"
		- NEIGH  = { == , l_name , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { ! , if , databaseContext , formatter , dbContext , & , aliasFound , l_name , }
		- PRED   = { size , != , axisList , if , }
		- SUCC   = { }

1259 :	"=="
		- NEIGH  = { == , l_name , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { ! , if , databaseContext , formatter , dbContext , & , aliasFound , l_name , }
		- PRED   = { size , != , axisList , if , }
		- SUCC   = { }

1260 :	"l_name"
		- NEIGH  = { l_name , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1262 :	"aliasFound"
		- NEIGH  = { aliasFound , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

1263 :	"&"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { aliasFound , }
		- SUCC   = { dbContext , if , }

1263 :	"dbContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { aliasFound , }
		- SUCC   = { dbContext , if , }

1263 :	"formatter"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { aliasFound , }
		- SUCC   = { dbContext , if , }

1263 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { aliasFound , }
		- SUCC   = { dbContext , if , }

1264 :	"if"
		- NEIGH  = { dbContext , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { empty , l_name , dbContext , ! , if , getAliasFromOfficialName , l_alias , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { aliasFound , ! , if , }

1264 :	"dbContext"
		- NEIGH  = { dbContext , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { empty , l_name , dbContext , ! , if , getAliasFromOfficialName , l_alias , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { aliasFound , ! , if , }

1265 :	"l_alias"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1265 :	"dbContext"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1265 :	"getAliasFromOfficialName"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1266 :	"l_name"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1267 :	"if"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1267 :	"!"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1267 :	"l_alias"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1267 :	"empty"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1268 :	"l_name"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aliasFound , }

1268 :	"l_alias"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aliasFound , }

1269 :	"aliasFound"
		- NEIGH  = { aliasFound , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { l_alias , l_name , }
		- SUCC   = { }

1272 :	"if"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { starts_with , ! , if , io , WKTFormatter , morphNameToESRI , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1272 :	"!"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { starts_with , ! , if , io , WKTFormatter , morphNameToESRI , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1272 :	"aliasFound"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { starts_with , ! , if , io , WKTFormatter , morphNameToESRI , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1273 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1273 :	"io"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1273 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1273 :	"morphNameToESRI"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1273 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1274 :	"if"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1274 :	"!"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1274 :	"starts_with"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1274 :	"l_name"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1275 :	"l_name"
		- NEIGH  = { + , l_name , }
		- PARENT = { l_name , starts_with , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1275 :	"+"
		- NEIGH  = { + , l_name , }
		- PARENT = { l_name , starts_with , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1275 :	"l_name"
		- NEIGH  = { + , l_name , }
		- PARENT = { l_name , starts_with , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1279 :	"if"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1279 :	"!"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1279 :	"isWKT2"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1279 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1279 :	"formatter"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1279 :	"isStrict"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1279 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1279 :	"isGeographic"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1279 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1280 :	"axisList"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1280 :	"size"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1280 :	"!="
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1280 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1281 :	"oldAxisOutputRule"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1281 :	"!="
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1281 :	"io"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1281 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1281 :	"OutputAxisRule"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1281 :	"NO"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { }

1282 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1282 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1282 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1286 :	"if"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1286 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1286 :	"isWKT2"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1286 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1286 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1286 :	"formatter"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1286 :	"useESRIDialect"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1286 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1286 :	"isDeprecated"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1287 :	"l_name"
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1287 :	"+="
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1289 :	"formatter"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { axisList , unit , & , }

1289 :	"addQuotedString"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { axisList , unit , & , }

1289 :	"l_name"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { axisList , unit , & , }

1291 :	"&"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1291 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1291 :	"axisList"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1291 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1292 :	"formatter"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1292 :	"pushAxisAngularUnit"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1292 :	"common"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1292 :	"UnitOfMeasure"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1292 :	"create"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1292 :	"unit"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1293 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , }

1293 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , }

1294 :	"primeMeridian"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { popAxisAngularUnit , formatter , }

1294 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { popAxisAngularUnit , formatter , }

1294 :	"formatter"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { popAxisAngularUnit , formatter , }

1295 :	"formatter"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , }
		- SUCC   = { isWKT2 , ! , if , }

1295 :	"popAxisAngularUnit"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , }
		- SUCC   = { isWKT2 , ! , if , }

1296 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

1296 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

1296 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

1297 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1297 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1297 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1300 :	"if"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1300 :	"oldAxisOutputRule"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1300 :	"=="
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1301 :	"io"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1301 :	"WKTFormatter"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1301 :	"OutputAxisRule"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1301 :	"WKT1_GDAL_EPSG_STYLE"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1301 :	"&&"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1302 :	"isGeocentric"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1303 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1305 :	"cs"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

1305 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

1305 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

1306 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

1306 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

1306 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

1308 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

1308 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

1308 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

1310 :	"if"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1310 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1310 :	"isWKT2"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1310 :	"&&"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1310 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1310 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1310 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1311 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1311 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1311 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1311 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1311 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1312 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1312 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1312 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1312 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1313 :	"formatter"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1313 :	"startNode"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1313 :	"io"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1313 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1313 :	"EXTENSION"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1314 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

1314 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

1315 :	"formatter"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

1315 :	"addQuotedString"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

1315 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

1316 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

1316 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

1320 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { }

1320 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { }

1327 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1327 :	"addGeocentricUnitConversionIntoPROJString"
		- NEIGH  = { addGeocentricUnitConversionIntoPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1328 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1328 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1328 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1328 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1330 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1330 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1330 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1330 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1331 :	"&"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1331 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1331 :	"axisList"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1331 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1332 :	"if"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1332 :	"!"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1332 :	"unit"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1332 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1332 :	"common"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1332 :	"UnitOfMeasure"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1332 :	"METRE"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1333 :	"util"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1333 :	"IComparable"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1333 :	"Criterion"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1333 :	"EQUIVALENT"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1334 :	"if"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

1334 :	"formatter"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

1334 :	"getCRSExport"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

1335 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1335 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1335 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1339 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { getCRSExport , formatter , if , }
		- SUCC   = { addParam , formatter , }

1339 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { getCRSExport , formatter , if , }
		- SUCC   = { addParam , formatter , }

1340 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { addParam , formatter , }

1340 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { addParam , formatter , }

1341 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { exportToPROJString , unit , projUnit , }

1341 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { exportToPROJString , unit , projUnit , }

1343 :	"projUnit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , ! , if , }

1343 :	"unit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , ! , if , }

1343 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , ! , if , }

1344 :	"if"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1344 :	"!"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1344 :	"projUnit"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1344 :	"empty"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1345 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

1345 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

1345 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

1346 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { return , }

1346 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { return , }

1346 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { return , }

1347 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { }

1351 :	"&"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1351 :	"toSI"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1351 :	"unit"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1351 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1352 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { conversionToSI , unit , toSI , & , }
		- SUCC   = { toSI , addParam , formatter , }

1352 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { conversionToSI , unit , toSI , & , }
		- SUCC   = { toSI , addParam , formatter , }

1352 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { conversionToSI , unit , toSI , & , }
		- SUCC   = { toSI , addParam , formatter , }

1353 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

1353 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

1353 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

1354 :	"if"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

1354 :	"formatter"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

1354 :	"getCRSExport"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

1355 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1355 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1363 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1363 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1364 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1364 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1364 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1364 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1366 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1366 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1366 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1366 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1366 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1367 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1367 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1367 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1367 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1368 :	"formatter"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1368 :	"ingestPROJString"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1369 :	"replaceAll"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1369 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1370 :	"formatter"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

1370 :	"addNoDefs"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

1371 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addNoDefs , formatter , }
		- SUCC   = { }

1374 :	"if"
		- NEIGH  = { isGeocentric , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

1374 :	"!"
		- NEIGH  = { isGeocentric , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

1374 :	"isGeocentric"
		- NEIGH  = { isGeocentric , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

1375 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeocentric , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1375 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeocentric , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1375 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeocentric , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1380 :	"if"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1380 :	"!"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1380 :	"formatter"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1380 :	"getCRSExport"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1381 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1381 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1383 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1383 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1385 :	"addDatumInfoToPROJString"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , getCRSExport , formatter , if , }
		- SUCC   = { formatter , addGeocentricUnitConversionIntoPROJString , }

1385 :	"formatter"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , getCRSExport , formatter , if , }
		- SUCC   = { formatter , addGeocentricUnitConversionIntoPROJString , }

1386 :	"addGeocentricUnitConversionIntoPROJString"
		- NEIGH  = { formatter , addGeocentricUnitConversionIntoPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , addDatumInfoToPROJString , }
		- SUCC   = { }

1386 :	"formatter"
		- NEIGH  = { formatter , addGeocentricUnitConversionIntoPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , addDatumInfoToPROJString , }
		- SUCC   = { }

1393 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1393 :	"addDatumInfoToPROJString"
		- NEIGH  = { addDatumInfoToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1394 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1394 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1394 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1394 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1396 :	"&"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1396 :	"TOWGS84Params"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1396 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1396 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1397 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- SUCC   = { getHDatumExtension , formatter , nadgrids , & , }

1398 :	"&"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { datum , l_datum , & , }

1398 :	"nadgrids"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { datum , l_datum , & , }

1398 :	"formatter"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { datum , l_datum , & , }

1398 :	"getHDatumExtension"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { datum , l_datum , & , }

1399 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }

1399 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }

1399 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }

1400 :	"if"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1400 :	"formatter"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1400 :	"getCRSExport"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1400 :	"&&"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1400 :	"l_datum"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1400 :	"&&"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1400 :	"TOWGS84Params"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1400 :	"empty"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1400 :	"&&"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1401 :	"nadgrids"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1401 :	"empty"
		- NEIGH  = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { ! , datumWritten , if , }

1402 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1402 :	"l_datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1402 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1403 :	"datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1403 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1403 :	"EPSG_6326"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1403 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1404 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1404 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1404 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1404 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1405 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

1406 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1406 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1407 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1407 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1407 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1408 :	"datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1408 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1408 :	"EPSG_6267"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1408 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1409 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1409 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1409 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1409 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1410 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

1411 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1411 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1412 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1412 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1412 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1413 :	"datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1413 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1413 :	"EPSG_6269"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1413 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1414 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1414 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1414 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1414 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1415 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getLegacyCRSToCRSContext , formatter , if , }

1416 :	"if"
		- NEIGH  = { getLegacyCRSToCRSContext , formatter , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1416 :	"formatter"
		- NEIGH  = { getLegacyCRSToCRSContext , formatter , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1416 :	"getLegacyCRSToCRSContext"
		- NEIGH  = { getLegacyCRSToCRSContext , formatter , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1418 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1418 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1420 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1420 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1424 :	"if"
		- NEIGH  = { ! , datumWritten , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , formatter , _exportToPROJString , ellipsoid , }
		- PRED   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- SUCC   = { == , size , TOWGS84Params , if , }

1424 :	"!"
		- NEIGH  = { ! , datumWritten , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , formatter , _exportToPROJString , ellipsoid , }
		- PRED   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- SUCC   = { == , size , TOWGS84Params , if , }

1424 :	"datumWritten"
		- NEIGH  = { ! , datumWritten , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , formatter , _exportToPROJString , ellipsoid , }
		- PRED   = { nadgrids , empty , TOWGS84Params , l_datum , formatter , && , getCRSExport , if , }
		- SUCC   = { == , size , TOWGS84Params , if , }

1425 :	"ellipsoid"
		- NEIGH  = { formatter , _exportToPROJString , ellipsoid , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { _exportToPROJString , formatter , primeMeridian , }

1425 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , ellipsoid , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { _exportToPROJString , formatter , primeMeridian , }

1425 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , ellipsoid , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { _exportToPROJString , formatter , primeMeridian , }

1426 :	"primeMeridian"
		- NEIGH  = { _exportToPROJString , formatter , primeMeridian , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , ellipsoid , }
		- SUCC   = { }

1426 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , formatter , primeMeridian , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , ellipsoid , }
		- SUCC   = { }

1426 :	"formatter"
		- NEIGH  = { _exportToPROJString , formatter , primeMeridian , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , ellipsoid , }
		- SUCC   = { }

1428 :	"if"
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1428 :	"TOWGS84Params"
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1428 :	"size"
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1428 :	"=="
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1429 :	"formatter"
		- NEIGH  = { addParam , TOWGS84Params , formatter , }
		- PARENT = { == , size , TOWGS84Params , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1429 :	"addParam"
		- NEIGH  = { addParam , TOWGS84Params , formatter , }
		- PARENT = { == , size , TOWGS84Params , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1429 :	"TOWGS84Params"
		- NEIGH  = { addParam , TOWGS84Params , formatter , }
		- PARENT = { == , size , TOWGS84Params , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1431 :	"if"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1431 :	"!"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1431 :	"nadgrids"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1431 :	"empty"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1432 :	"formatter"
		- NEIGH  = { addParam , nadgrids , formatter , }
		- PARENT = { empty , ! , nadgrids , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1432 :	"addParam"
		- NEIGH  = { addParam , nadgrids , formatter , }
		- PARENT = { empty , ! , nadgrids , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1432 :	"nadgrids"
		- NEIGH  = { addParam , nadgrids , formatter , }
		- PARENT = { empty , ! , nadgrids , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1440 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1440 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1441 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1441 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1441 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1441 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1443 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1443 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1443 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1444 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1445 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1445 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1445 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1445 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1445 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

1447 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

1447 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

1448 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

1448 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

1449 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

1449 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

1449 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

1450 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1450 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1452 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1452 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1452 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1455 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

1455 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

1455 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

1456 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

1456 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

1457 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

1457 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

1458 :	"l_datum"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

1458 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

1458 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

1460 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

1460 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

1461 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

1461 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

1462 :	"datumEnsemble"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

1462 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

1462 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

1465 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

1465 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

1466 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

1466 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

1467 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

1467 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

1467 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

1469 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

1469 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

1469 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

1476 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1476 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1476 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1477 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1477 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1477 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1477 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1477 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1478 :	"return"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1478 :	"criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1478 :	"=="
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1478 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1478 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1478 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1479 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1481 :	"criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1488 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1488 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1489 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1489 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1489 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1489 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1490 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1490 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1490 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1490 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1491 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }

1491 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }

1491 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }

1492 :	"otherGeodCRS"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1492 :	"dynamic_cast"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1492 :	"<"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1492 :	"GeodeticCRS"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1492 :	"*"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1492 :	">"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1492 :	"other"
		- NEIGH  = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }

1494 :	"return"
		- NEIGH  = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1494 :	"otherGeodCRS"
		- NEIGH  = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1494 :	"!="
		- NEIGH  = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1494 :	"&&"
		- NEIGH  = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1495 :	"SingleCRS"
		- NEIGH  = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1495 :	"baseIsEquivalentTo"
		- NEIGH  = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1495 :	"other"
		- NEIGH  = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1495 :	"standardCriterion"
		- NEIGH  = { standardCriterion , other , baseIsEquivalentTo , && , SingleCRS , != , otherGeodCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , < , GeodeticCRS , dynamic_cast , * , otherGeodCRS , }
		- SUCC   = { }

1502 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1502 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1502 :	"createMapNameEPSGCode"
		- NEIGH  = { createMapNameEPSGCode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1502 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1502 :	"name"
		- NEIGH  = { name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1502 :	"code"
		- NEIGH  = { code , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1503 :	"return"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1503 :	"util"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1503 :	"PropertyMap"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1504 :	"set"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1504 :	"common"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1504 :	"IdentifiedObject"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1504 :	"NAME_KEY"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1504 :	"name"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"set"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"metadata"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"CODESPACE_KEY"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"metadata"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"EPSG"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1506 :	"set"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1506 :	"metadata"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1506 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1506 :	"CODE_KEY"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1506 :	"code"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1512 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1512 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1512 :	"createEPSG_4978"
		- NEIGH  = { createEPSG_4978 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1513 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1513 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1514 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1515 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1515 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1515 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1516 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1516 :	"CartesianCS"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1516 :	"createGeocentric"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1516 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1516 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1516 :	"METRE"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1523 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { hasCodeCompatibleOfAuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1524 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1524 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1524 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1524 :	"obj"
		- NEIGH  = { obj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1525 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1525 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1525 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1525 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1526 :	"&"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

1526 :	"ids"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

1526 :	"obj"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

1526 :	"identifiers"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

1527 :	"if"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1527 :	"!"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1527 :	"ids"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1527 :	"empty"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1527 :	"&&"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1527 :	"authorityFactory"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1527 :	"getAuthority"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1527 :	"empty"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

1528 :	"return"
		- NEIGH  = { return , }
		- PARENT = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1530 :	"for"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

1530 :	"&"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

1530 :	"id"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

1530 :	"ids"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

1531 :	"if"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1531 :	"*"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1531 :	"id"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1531 :	"codeSpace"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1531 :	"=="
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1531 :	"authorityFactory"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1531 :	"getAuthority"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1532 :	"return"
		- NEIGH  = { return , }
		- PARENT = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1535 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ids , id , & , for , }
		- SUCC   = { }

1538 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { hasCodeCompatibleOfAuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1539 :	"metadata"
		- NEIGH  = { metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1539 :	"IdentifierNNPtr"
		- NEIGH  = { IdentifierNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1539 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1539 :	"id"
		- NEIGH  = { id , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1540 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1540 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1540 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1540 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1541 :	"if"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

1541 :	"authorityFactory"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

1541 :	"getAuthority"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

1541 :	"empty"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

1542 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , getAuthority , authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1544 :	"return"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1544 :	"*"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1544 :	"id"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1544 :	"codeSpace"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1544 :	"=="
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1544 :	"authorityFactory"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1544 :	"getAuthority"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

1574 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1574 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1575 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1576 :	"std"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1576 :	"pair"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1576 :	"<"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1576 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1576 :	">"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1576 :	"Pair"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1577 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1577 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1577 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1577 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1577 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1577 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

1578 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1578 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1578 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }

1580 :	"l_implicitCS"
		- NEIGH  = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

1580 :	"CRS"
		- NEIGH  = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

1580 :	"getPrivate"
		- NEIGH  = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

1580 :	"implicitCS_"
		- NEIGH  = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

1581 :	"crsCriterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1582 :	"l_implicitCS"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1583 :	"util"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1583 :	"IComparable"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1583 :	"Criterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1583 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1584 :	"util"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1584 :	"IComparable"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1584 :	"Criterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1584 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , CRS , implicitCS_ , l_implicitCS , }
		- SUCC   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }

1586 :	"GeographicCRSNNPtr"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1586 :	"candidatesCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1586 :	"GeographicCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1586 :	"EPSG_4326"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1587 :	"GeographicCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1587 :	"EPSG_4267"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1588 :	"GeographicCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1588 :	"EPSG_4269"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { candidatesCRS , crs , & , for , }

1589 :	"for"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { }
		- CHILD  = { || , && , if , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { string , geodetic_crs_type , std , }

1589 :	"&"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { }
		- CHILD  = { || , && , if , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { string , geodetic_crs_type , std , }

1589 :	"crs"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { }
		- CHILD  = { || , && , if , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { string , geodetic_crs_type , std , }

1589 :	"candidatesCRS"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { }
		- CHILD  = { || , && , if , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { string , geodetic_crs_type , std , }

1590 :	"nameEquivalent"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1590 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1590 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1590 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1591 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1591 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1591 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1591 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1591 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

1592 :	"nameEqual"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }

1592 :	"thisName"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }

1592 :	"=="
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }

1592 :	"crs"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }

1592 :	"nameStr"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }

1593 :	"isEq"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1593 :	"_isEquivalentTo"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1593 :	"crs"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1593 :	"get"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1593 :	"crsCriterion"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

1594 :	"if"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- SUCC   = { }

1594 :	"nameEquivalent"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- SUCC   = { }

1594 :	"&&"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- SUCC   = { }

1594 :	"isEq"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- SUCC   = { }

1594 :	"&&"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- SUCC   = { }

1594 :	"!"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- SUCC   = { }

1594 :	"authorityFactory"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- SUCC   = { }

1594 :	"||"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- SUCC   = { }

1594 :	"nameEqual"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , isEq , }
		- SUCC   = { }

1595 :	"res"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1595 :	"emplace_back"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1595 :	"util"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1595 :	"nn_static_pointer_cast"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1595 :	"<"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1595 :	"GeodeticCRS"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1595 :	">"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1595 :	"crs"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1596 :	"nameEqual"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1597 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1597 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1598 :	"if"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1598 :	"nameEqual"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1598 :	"&&"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1598 :	"!"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1598 :	"isEq"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1598 :	"&&"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1598 :	"!"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1598 :	"authorityFactory"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

1599 :	"res"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1599 :	"emplace_back"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1599 :	"util"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1599 :	"nn_static_pointer_cast"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1599 :	"<"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1599 :	"GeodeticCRS"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1599 :	">"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1599 :	"crs"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1601 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1601 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1602 :	"if"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1602 :	"isEq"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1602 :	"&&"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1602 :	"!"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1602 :	"authorityFactory"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

1603 :	"res"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1603 :	"emplace_back"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1603 :	"util"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1603 :	"nn_static_pointer_cast"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1603 :	"<"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1603 :	"GeodeticCRS"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1603 :	">"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1603 :	"crs"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

1605 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1605 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

1609 :	"std"
		- NEIGH  = { string , geodetic_crs_type , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { candidatesCRS , crs , & , for , }
		- SUCC   = { isGeocentric , if , }

1609 :	"string"
		- NEIGH  = { string , geodetic_crs_type , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { candidatesCRS , crs , & , for , }
		- SUCC   = { isGeocentric , if , }

1609 :	"geodetic_crs_type"
		- NEIGH  = { string , geodetic_crs_type , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { candidatesCRS , crs , & , for , }
		- SUCC   = { isGeocentric , if , }

1610 :	"if"
		- NEIGH  = { isGeocentric , if , }
		- PARENT = { }
		- CHILD  = { if , > , < , geogCRS , GeographicCRS , this , * , dynamic_cast , geodetic_crs_type , }
		- PRED   = { string , geodetic_crs_type , std , }
		- SUCC   = { authorityFactory , if , }

1610 :	"isGeocentric"
		- NEIGH  = { isGeocentric , if , }
		- PARENT = { }
		- CHILD  = { if , > , < , geogCRS , GeographicCRS , this , * , dynamic_cast , geodetic_crs_type , }
		- PRED   = { string , geodetic_crs_type , std , }
		- SUCC   = { authorityFactory , if , }

1611 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1613 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1613 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1613 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1613 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1613 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1613 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1613 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1614 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { size , == , axisList , coordinateSystem , if , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { }

1614 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { size , == , axisList , coordinateSystem , if , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { }

1615 :	"if"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1615 :	"coordinateSystem"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1615 :	"axisList"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1615 :	"size"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1615 :	"=="
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

1616 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , }
		- PARENT = { size , == , axisList , coordinateSystem , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1618 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , }
		- PARENT = { size , == , axisList , coordinateSystem , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1623 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , a , Pair , thisCS , >= , crsCriterion , unsignificantName , res , l_implicitCS , == , front , authorityFactory , empty , thisName , second , searchByEllipsoid , thisEllipsoid , if , ci_equal , ellipsoid , geodetic_crs_type , || , && , this , sort , thisDatum , searchByDatum , coordinateSystem , datum , & , }
		- PRED   = { isGeocentric , if , }
		- SUCC   = { res , return , }

1623 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , a , Pair , thisCS , >= , crsCriterion , unsignificantName , res , l_implicitCS , == , front , authorityFactory , empty , thisName , second , searchByEllipsoid , thisEllipsoid , if , ci_equal , ellipsoid , geodetic_crs_type , || , && , this , sort , thisDatum , searchByDatum , coordinateSystem , datum , & , }
		- PRED   = { isGeocentric , if , }
		- SUCC   = { res , return , }

1625 :	"&"
		- NEIGH  = { datum , thisDatum , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }

1625 :	"thisDatum"
		- NEIGH  = { datum , thisDatum , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }

1625 :	"datum"
		- NEIGH  = { datum , thisDatum , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }

1627 :	"searchByDatum"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1627 :	"this"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1627 :	"&"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1627 :	"authorityFactory"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1627 :	"&"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1627 :	"res"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1627 :	"&"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1627 :	"thisDatum"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1628 :	"&"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1628 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1628 :	"crsCriterion"
		- NEIGH  = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { datum , thisDatum , & , }
		- SUCC   = { ellipsoid , thisEllipsoid , & , }

1629 :	"for"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1629 :	"&"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1629 :	"id"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1629 :	"thisDatum"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1629 :	"identifiers"
		- NEIGH  = { thisDatum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

1631 :	"tempRes"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1631 :	"authorityFactory"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1631 :	"createGeodeticCRSFromDatum"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1632 :	"*"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1632 :	"id"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1632 :	"codeSpace"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1632 :	"id"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1632 :	"code"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1632 :	"geodetic_crs_type"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1633 :	"for"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1633 :	"&"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1633 :	"crs"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1633 :	"tempRes"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1634 :	"if"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1634 :	"_isEquivalentTo"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1634 :	"crs"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1634 :	"get"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1634 :	"crsCriterion"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

1635 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1635 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1635 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1638 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1638 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1638 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1638 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { thisDatum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1643 :	"&"
		- NEIGH  = { ellipsoid , thisEllipsoid , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- SUCC   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

1643 :	"thisEllipsoid"
		- NEIGH  = { ellipsoid , thisEllipsoid , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- SUCC   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

1643 :	"ellipsoid"
		- NEIGH  = { ellipsoid , thisEllipsoid , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , res , authorityFactory , & , crsCriterion , this , thisDatum , searchByDatum , }
		- SUCC   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

1644 :	"searchByEllipsoid"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1644 :	"this"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1644 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1644 :	"authorityFactory"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1644 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1644 :	"res"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1644 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1644 :	"thisDatum"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1645 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1645 :	"thisEllipsoid"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1645 :	"&"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1645 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1646 :	"l_implicitCS"
		- NEIGH  = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisEllipsoid , & , }
		- SUCC   = { ci_equal , || , empty , thisName , unsignificantName , }

1647 :	"ellipsoids"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1648 :	"thisEllipsoid"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1648 :	"identifiers"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1648 :	"empty"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1649 :	"authorityFactory"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1649 :	"createEllipsoidFromExisting"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1650 :	"thisEllipsoid"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1651 :	"std"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1651 :	"list"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1651 :	"<"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1651 :	"datum"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1651 :	"EllipsoidNNPtr"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1651 :	">"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1651 :	"thisEllipsoid"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ellipsoids , ellps , & , for , }

1652 :	"for"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

1652 :	"&"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

1652 :	"ellps"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

1652 :	"ellipsoids"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

1653 :	"for"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1653 :	"&"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1653 :	"id"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1653 :	"ellps"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1653 :	"identifiers"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

1655 :	"tempRes"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1656 :	"authorityFactory"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1656 :	"createGeodeticCRSFromEllipsoid"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1657 :	"*"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1657 :	"id"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1657 :	"codeSpace"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1657 :	"id"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1657 :	"code"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1658 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

1659 :	"for"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , EQUIVALENT , Criterion , IComparable , util , get , ! , crs , _isEquivalentTo , && , if , coordinateSystem , datum , ellps , thisDatum , ellipsoid , crsDatum , primeMeridian , & , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1659 :	"&"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , EQUIVALENT , Criterion , IComparable , util , get , ! , crs , _isEquivalentTo , && , if , coordinateSystem , datum , ellps , thisDatum , ellipsoid , crsDatum , primeMeridian , & , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1659 :	"crs"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , EQUIVALENT , Criterion , IComparable , util , get , ! , crs , _isEquivalentTo , && , if , coordinateSystem , datum , ellps , thisDatum , ellipsoid , crsDatum , primeMeridian , & , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1659 :	"tempRes"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , EQUIVALENT , Criterion , IComparable , util , get , ! , crs , _isEquivalentTo , && , if , coordinateSystem , datum , ellps , thisDatum , ellipsoid , crsDatum , primeMeridian , & , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

1660 :	"&"
		- NEIGH  = { datum , crs , crsDatum , & , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }

1660 :	"crsDatum"
		- NEIGH  = { datum , crs , crsDatum , & , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }

1660 :	"crs"
		- NEIGH  = { datum , crs , crsDatum , & , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }

1660 :	"datum"
		- NEIGH  = { datum , crs , crsDatum , & , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }

1661 :	"if"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1661 :	"crsDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1661 :	"&&"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1662 :	"crsDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1662 :	"ellipsoid"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1662 :	"_isEquivalentTo"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1663 :	"ellps"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1663 :	"get"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1664 :	"util"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1664 :	"IComparable"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1664 :	"Criterion"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1664 :	"EQUIVALENT"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1664 :	"&&"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1665 :	"crsDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1665 :	"primeMeridian"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1665 :	"_isEquivalentTo"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1666 :	"thisDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1666 :	"primeMeridian"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1666 :	"get"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1667 :	"util"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1667 :	"IComparable"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1667 :	"Criterion"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1667 :	"EQUIVALENT"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1667 :	"&&"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1668 :	"!"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1668 :	"l_implicitCS"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1668 :	"||"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1669 :	"coordinateSystem"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1669 :	"_isEquivalentTo"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1670 :	"crs"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1670 :	"coordinateSystem"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1670 :	"get"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1671 :	"util"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1671 :	"IComparable"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1671 :	"Criterion"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1672 :	"EQUIVALENT"
		- NEIGH  = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datum , crs , crsDatum , & , }
		- SUCC   = { }

1673 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1673 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1673 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { || , l_implicitCS , primeMeridian , EQUIVALENT , IComparable , Criterion , util , get , && , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1676 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1676 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1676 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1676 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

1682 :	"unsignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1682 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1682 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1682 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1683 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1683 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1683 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1684 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1684 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisEllipsoid , thisDatum , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { unsignificantName , if , }

1686 :	"if"
		- NEIGH  = { unsignificantName , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { authorityFactory , this , thisDatum , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { coordinateSystem , thisCS , & , }

1686 :	"unsignificantName"
		- NEIGH  = { unsignificantName , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { authorityFactory , this , thisDatum , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { coordinateSystem , thisCS , & , }

1687 :	"if"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { }
		- SUCC   = { }

1687 :	"thisDatum"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { }
		- SUCC   = { }

1688 :	"if"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1688 :	"!"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1688 :	"thisDatum"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1688 :	"identifiers"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1688 :	"empty"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1689 :	"searchByDatum"
		- NEIGH  = { searchByDatum , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1691 :	"searchByEllipsoid"
		- NEIGH  = { searchByEllipsoid , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1694 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { thisDatum , ! , if , id , ++ , < , && , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

1694 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { thisDatum , ! , if , id , ++ , < , && , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

1694 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { thisDatum , ! , if , id , ++ , < , && , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

1695 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { unsignificantName , if , }
		- CHILD  = { thisDatum , ! , if , id , ++ , < , && , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

1698 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

1698 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

1698 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

1698 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

1699 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

1699 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

1699 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

1699 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

1701 :	"crs"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1701 :	"io"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1701 :	"AuthorityFactory"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1701 :	"create"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1702 :	"authorityFactory"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1702 :	"databaseContext"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1703 :	"*"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1703 :	"id"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1703 :	"codeSpace"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1704 :	"createGeodeticCRS"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1704 :	"id"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1704 :	"code"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsCriterion , get , crs , _isEquivalentTo , match , }

1705 :	"match"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1705 :	"_isEquivalentTo"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1705 :	"crs"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1705 :	"get"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1705 :	"crsCriterion"
		- NEIGH  = { crsCriterion , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

1706 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

1706 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

1706 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

1706 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { crsCriterion , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

1707 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

1707 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

1708 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

1708 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

1708 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

1708 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

1713 :	"gotAbove25Pct"
		- NEIGH  = { gotAbove25Pct , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , ++ , ipass , for , }

1714 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1714 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1714 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1714 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1714 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1714 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { && , thisDatum , ! , gotAbove25Pct , if , }

1715 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }

1715 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }

1715 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }

1716 :	"objects"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1716 :	"authorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1716 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1717 :	"thisName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1717 :	"io"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1717 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1717 :	"ObjectType"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1717 :	"GEODETIC_CRS"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1718 :	"approximateMatch"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

1719 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

1719 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

1719 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

1719 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

1720 :	"crs"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1720 :	"util"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1720 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1720 :	"<"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1720 :	"GeodeticCRS"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1720 :	">"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1720 :	"obj"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

1721 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

1721 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

1722 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , crsCriterion , if , }

1722 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , crsCriterion , if , }

1722 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , crsCriterion , if , }

1723 :	"if"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1723 :	"_isEquivalentTo"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1723 :	"crs"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1723 :	"get"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1723 :	"crsCriterion"
		- NEIGH  = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

1724 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1724 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1724 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1724 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1724 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

1725 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

1725 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

1726 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

1726 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

1726 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

1727 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

1727 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

1729 :	"eqName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1730 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1730 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1730 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1731 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1731 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1731 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1731 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1731 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

1732 :	"res"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

1732 :	"emplace_back"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

1732 :	"crsNN"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

1732 :	"eqName"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

1733 :	"gotAbove25Pct"
		- NEIGH  = { gotAbove25Pct , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { crsNN , eqName , emplace_back , res , }
		- SUCC   = { }

1735 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1735 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1735 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1738 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

1738 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

1738 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

1738 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

1739 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1742 :	"if"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1742 :	"!"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1742 :	"gotAbove25Pct"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1742 :	"&&"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1742 :	"thisDatum"
		- NEIGH  = { && , thisDatum , ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { empty , thisDatum , ! , identifiers , if , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

1743 :	"if"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1743 :	"!"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1743 :	"thisDatum"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1743 :	"identifiers"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1743 :	"empty"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { && , thisDatum , ! , gotAbove25Pct , if , }
		- CHILD  = { searchByEllipsoid , searchByDatum , }
		- PRED   = { }
		- SUCC   = { }

1744 :	"searchByDatum"
		- NEIGH  = { searchByDatum , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1746 :	"searchByEllipsoid"
		- NEIGH  = { searchByEllipsoid , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1751 :	"&"
		- NEIGH  = { coordinateSystem , thisCS , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { unsignificantName , if , }
		- SUCC   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }

1751 :	"thisCS"
		- NEIGH  = { coordinateSystem , thisCS , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { unsignificantName , if , }
		- SUCC   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }

1751 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , thisCS , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { unsignificantName , if , }
		- SUCC   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }

1753 :	"res"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"sort"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"thisName"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"thisDatum"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"thisCS"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"Pair"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1753 :	"a"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1754 :	"Pair"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1754 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1754 :	"b"
		- NEIGH  = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

1756 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1756 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1756 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1756 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1756 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1756 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

1757 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1759 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1759 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1759 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1759 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1759 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1759 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

1760 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1764 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1764 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1764 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1764 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1764 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

1765 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1765 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1765 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1765 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1765 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

1766 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1766 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1766 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1766 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1766 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1766 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1766 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1766 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

1767 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1769 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1769 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1769 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1769 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1769 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1769 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1769 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1769 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datum , first , a , aDatum , & , }

1770 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1774 :	"&"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1774 :	"aDatum"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1774 :	"a"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1774 :	"first"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1774 :	"datum"
		- NEIGH  = { datum , first , a , aDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { datum , first , b , bDatum , & , }

1775 :	"&"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1775 :	"bDatum"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1775 :	"b"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1775 :	"first"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1775 :	"datum"
		- NEIGH  = { datum , first , b , bDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum , first , a , aDatum , & , }
		- SUCC   = { && , bDatum , aDatum , thisDatum , if , }

1776 :	"if"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , if , bDatum , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1776 :	"thisDatum"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , if , bDatum , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1776 :	"&&"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , if , bDatum , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1776 :	"aDatum"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , if , bDatum , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1776 :	"&&"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , if , bDatum , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1776 :	"bDatum"
		- NEIGH  = { && , bDatum , aDatum , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { && , if , bDatum , IComparable , thisDatum , ! , _isEquivalentTo , Criterion , util , aDatum , get , thisEquivBDatum , EQUIVALENT , thisEquivADatum , }
		- PRED   = { datum , first , b , bDatum , & , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

1777 :	"thisEquivADatum"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1777 :	"thisDatum"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1777 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1778 :	"aDatum"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1778 :	"get"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1778 :	"util"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1778 :	"IComparable"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1778 :	"Criterion"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1778 :	"EQUIVALENT"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

1779 :	"thisEquivBDatum"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1779 :	"thisDatum"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1779 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1780 :	"bDatum"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1780 :	"get"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1780 :	"util"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1780 :	"IComparable"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1780 :	"Criterion"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1780 :	"EQUIVALENT"
		- NEIGH  = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

1782 :	"if"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1782 :	"thisEquivADatum"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1782 :	"&&"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1782 :	"!"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1782 :	"thisEquivBDatum"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

1783 :	"return"
		- NEIGH  = { return , }
		- PARENT = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1785 :	"if"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1785 :	"!"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1785 :	"thisEquivADatum"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1785 :	"&&"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1785 :	"thisEquivBDatum"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { && , bDatum , aDatum , thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { }

1786 :	"return"
		- NEIGH  = { return , }
		- PARENT = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1791 :	"&"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1791 :	"aCS"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1791 :	"a"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1791 :	"first"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1791 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , thisDatum , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

1792 :	"&"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1792 :	"bCS"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1792 :	"b"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1792 :	"first"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1792 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

1793 :	"thisEquivACs"
		- NEIGH  = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1793 :	"thisCS"
		- NEIGH  = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1793 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1794 :	"aCS"
		- NEIGH  = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1794 :	"get"
		- NEIGH  = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1794 :	"util"
		- NEIGH  = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1794 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1794 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1794 :	"EQUIVALENT"
		- NEIGH  = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

1795 :	"thisEquivBCs"
		- NEIGH  = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1795 :	"thisCS"
		- NEIGH  = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1795 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1796 :	"bCS"
		- NEIGH  = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1796 :	"get"
		- NEIGH  = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1796 :	"util"
		- NEIGH  = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1796 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1796 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1796 :	"EQUIVALENT"
		- NEIGH  = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

1797 :	"if"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1797 :	"thisEquivACs"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1797 :	"&&"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1797 :	"!"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1797 :	"thisEquivBCs"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

1798 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1800 :	"if"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1800 :	"!"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1800 :	"thisEquivACs"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1800 :	"&&"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1800 :	"thisEquivBCs"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

1801 :	"return"
		- NEIGH  = { return , }
		- PARENT = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1805 :	"thisCSAxisListSize"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

1805 :	"thisCS"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

1805 :	"axisList"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

1805 :	"size"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

1806 :	"aCSAxistListSize"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

1806 :	"aCS"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

1806 :	"axisList"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

1806 :	"size"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

1807 :	"bCSAxistListSize"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1807 :	"bCS"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1807 :	"axisList"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1807 :	"size"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1808 :	"if"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1808 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1808 :	"=="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1808 :	"aCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1808 :	"&&"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1809 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1809 :	"!="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1809 :	"bCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

1810 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1812 :	"if"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1812 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1812 :	"!="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1812 :	"aCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1812 :	"&&"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1813 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1813 :	"=="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1813 :	"bCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { && , bDatum , aDatum , if , }

1814 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1817 :	"if"
		- NEIGH  = { && , bDatum , aDatum , if , }
		- PARENT = { }
		- CHILD  = { && , b , bDatum , ellipsoid , bEllpsNameEqCRSName , a , c_str , metadata , nameStr , ! , aEllpsNameEqCRSName , aDatum , if , first , isEquivalentName , Identifier , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { bName , < , aName , return , }

1817 :	"aDatum"
		- NEIGH  = { && , bDatum , aDatum , if , }
		- PARENT = { }
		- CHILD  = { && , b , bDatum , ellipsoid , bEllpsNameEqCRSName , a , c_str , metadata , nameStr , ! , aEllpsNameEqCRSName , aDatum , if , first , isEquivalentName , Identifier , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { bName , < , aName , return , }

1817 :	"&&"
		- NEIGH  = { && , bDatum , aDatum , if , }
		- PARENT = { }
		- CHILD  = { && , b , bDatum , ellipsoid , bEllpsNameEqCRSName , a , c_str , metadata , nameStr , ! , aEllpsNameEqCRSName , aDatum , if , first , isEquivalentName , Identifier , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { bName , < , aName , return , }

1817 :	"bDatum"
		- NEIGH  = { && , bDatum , aDatum , if , }
		- PARENT = { }
		- CHILD  = { && , b , bDatum , ellipsoid , bEllpsNameEqCRSName , a , c_str , metadata , nameStr , ! , aEllpsNameEqCRSName , aDatum , if , first , isEquivalentName , Identifier , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { bName , < , aName , return , }

1820 :	"aEllpsNameEqCRSName"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1821 :	"metadata"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1821 :	"Identifier"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1821 :	"isEquivalentName"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1822 :	"aDatum"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1822 :	"ellipsoid"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1822 :	"nameStr"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1822 :	"c_str"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1823 :	"a"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1823 :	"first"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1823 :	"nameStr"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1823 :	"c_str"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

1824 :	"bEllpsNameEqCRSName"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1825 :	"metadata"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1825 :	"Identifier"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1825 :	"isEquivalentName"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1826 :	"bDatum"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1826 :	"ellipsoid"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1826 :	"nameStr"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1826 :	"c_str"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1827 :	"b"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1827 :	"first"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1827 :	"nameStr"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1827 :	"c_str"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

1828 :	"if"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1828 :	"aEllpsNameEqCRSName"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1828 :	"&&"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1828 :	"!"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1828 :	"bEllpsNameEqCRSName"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

1829 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1831 :	"if"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1831 :	"bEllpsNameEqCRSName"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1831 :	"&&"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1831 :	"!"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1831 :	"aEllpsNameEqCRSName"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { && , bDatum , aDatum , if , }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { }

1832 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1837 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , if , }
		- SUCC   = { }

1837 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , if , }
		- SUCC   = { }

1837 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , if , }
		- SUCC   = { }

1837 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , bDatum , aDatum , if , }
		- SUCC   = { }

1841 :	"if"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1841 :	"res"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1841 :	"size"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1841 :	">="
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1841 :	"&&"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1841 :	"res"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1841 :	"front"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1841 :	"second"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1841 :	"=="
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

1842 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1842 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1842 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1842 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1842 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1842 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

1843 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

1843 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

1843 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

1843 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

1844 :	"if"
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

1844 :	"pair"
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

1844 :	"second"
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

1844 :	"=="
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

1845 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1845 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1845 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1847 :	"break"
		- NEIGH  = { break , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1850 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

1850 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

1853 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

1853 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

1860 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1860 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1860 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1860 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1860 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1860 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1860 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1860 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1861 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1861 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1861 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1861 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1861 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1861 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1862 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1862 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1862 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1862 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1862 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1862 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

1863 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1863 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1863 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1863 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1863 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1863 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

1864 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

1864 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

1864 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

1865 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

1865 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

1865 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

1865 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

1866 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1866 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1866 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1866 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1866 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1866 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1868 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

1868 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

1876 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1876 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1877 :	"cs"
		- NEIGH  = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }

1877 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }

1877 :	"coordinateSystem_"
		- NEIGH  = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }

1878 :	"Private"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

1878 :	"cs"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

1878 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

1878 :	"&"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

1878 :	"csIn"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

1879 :	"coordinateSystem_"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

1879 :	"csIn"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

1885 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1885 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1885 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1885 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1885 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1885 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1886 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1886 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1886 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1886 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1887 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1887 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1887 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1887 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1888 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1888 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1888 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1888 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1889 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1889 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1890 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1890 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1890 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1890 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1891 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1891 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1891 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1891 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1891 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1891 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1891 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1895 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1895 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1895 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1895 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1895 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1896 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1896 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1896 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1896 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1897 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1897 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1897 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1897 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1897 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1897 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1897 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1897 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1897 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1902 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1902 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1907 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1907 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1907 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1908 :	"crs"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1908 :	"GeographicCRS"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1908 :	"nn_make_shared"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1908 :	"<"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1908 :	"GeographicCRS"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1908 :	">"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1908 :	"*"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1908 :	"this"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1909 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1909 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1909 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1910 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

1910 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

1919 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1919 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1919 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1919 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1919 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1919 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1920 :	"return"
		- NEIGH  = { coordinateSystem_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1920 :	"d"
		- NEIGH  = { coordinateSystem_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1920 :	"coordinateSystem_"
		- NEIGH  = { coordinateSystem_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1935 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1936 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1936 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1936 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1936 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1936 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1936 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1937 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1937 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1937 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1937 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1938 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1938 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1938 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1938 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1939 :	"return"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1939 :	"create"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1939 :	"properties"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1939 :	"datum"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1939 :	"as_nullable"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1939 :	"cs"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1958 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1959 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1959 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1959 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1959 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1959 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1959 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1960 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1960 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1960 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1960 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1961 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1961 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1961 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1961 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1962 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1962 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1962 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1962 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1963 :	"GeographicCRSNNPtr"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1963 :	"crs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1964 :	"GeographicCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1964 :	"nn_make_shared"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1964 :	"<"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1964 :	"GeographicCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1964 :	">"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1964 :	"datum"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1964 :	"datumEnsemble"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1964 :	"cs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1965 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- SUCC   = { properties , setProperties , crs , }

1965 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- SUCC   = { properties , setProperties , crs , }

1965 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- SUCC   = { properties , setProperties , crs , }

1966 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1966 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1966 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1967 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

1967 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

1968 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

1968 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

1968 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

1968 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

1969 :	"crs"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

1969 :	"CRS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

1969 :	"getPrivate"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

1969 :	"setImplicitCS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

1969 :	"properties"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

1970 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

1970 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

1980 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	"is2DPartOf3D"
		- NEIGH  = { is2DPartOf3D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1981 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1982 :	"&"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

1982 :	"axis"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

1982 :	"d"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

1982 :	"coordinateSystem_"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

1982 :	"axisList"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

1983 :	"&"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

1983 :	"otherAxis"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

1983 :	"other"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

1983 :	"d"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

1983 :	"coordinateSystem_"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

1983 :	"axisList"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

1984 :	"if"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

1984 :	"!"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

1984 :	"axis"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

1984 :	"size"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

1984 :	"=="
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

1984 :	"&&"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

1984 :	"otherAxis"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

1984 :	"size"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

1984 :	"=="
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

1985 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherAxis , && , == , size , if , ! , axis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1987 :	"&"
		- NEIGH  = { axis , firstAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherAxis , && , == , size , if , ! , axis , }
		- SUCC   = { axis , secondAxis , & , }

1987 :	"firstAxis"
		- NEIGH  = { axis , firstAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherAxis , && , == , size , if , ! , axis , }
		- SUCC   = { axis , secondAxis , & , }

1987 :	"axis"
		- NEIGH  = { axis , firstAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherAxis , && , == , size , if , ! , axis , }
		- SUCC   = { axis , secondAxis , & , }

1988 :	"&"
		- NEIGH  = { axis , secondAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , firstAxis , & , }
		- SUCC   = { otherFirstAxis , otherAxis , & , }

1988 :	"secondAxis"
		- NEIGH  = { axis , secondAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , firstAxis , & , }
		- SUCC   = { otherFirstAxis , otherAxis , & , }

1988 :	"axis"
		- NEIGH  = { axis , secondAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , firstAxis , & , }
		- SUCC   = { otherFirstAxis , otherAxis , & , }

1989 :	"&"
		- NEIGH  = { otherFirstAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , secondAxis , & , }
		- SUCC   = { otherSecondAxis , otherAxis , & , }

1989 :	"otherFirstAxis"
		- NEIGH  = { otherFirstAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , secondAxis , & , }
		- SUCC   = { otherSecondAxis , otherAxis , & , }

1989 :	"otherAxis"
		- NEIGH  = { otherFirstAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , secondAxis , & , }
		- SUCC   = { otherSecondAxis , otherAxis , & , }

1990 :	"&"
		- NEIGH  = { otherSecondAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherFirstAxis , otherAxis , & , }
		- SUCC   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }

1990 :	"otherSecondAxis"
		- NEIGH  = { otherSecondAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherFirstAxis , otherAxis , & , }
		- SUCC   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }

1990 :	"otherAxis"
		- NEIGH  = { otherSecondAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherFirstAxis , otherAxis , & , }
		- SUCC   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }

1991 :	"if"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1991 :	"!"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1991 :	"firstAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1991 :	"_isEquivalentTo"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1992 :	"otherFirstAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1992 :	"get"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1992 :	"util"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1992 :	"IComparable"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1992 :	"Criterion"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1992 :	"EQUIVALENT"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1992 :	"&&"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1993 :	"secondAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1993 :	"_isEquivalentTo"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1994 :	"otherSecondAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1994 :	"get"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1995 :	"util"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1995 :	"IComparable"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1995 :	"Criterion"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1995 :	"EQUIVALENT"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }

1996 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1998 :	"&"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

1998 :	"thisDatum"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

1998 :	"GeodeticCRS"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

1998 :	"getPrivate"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

1998 :	"datum_"
		- NEIGH  = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }

1999 :	"&"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

1999 :	"otherDatum"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

1999 :	"other"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

1999 :	"GeodeticCRS"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

1999 :	"getPrivate"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

1999 :	"datum_"
		- NEIGH  = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , getPrivate , GeodeticCRS , thisDatum , & , }
		- SUCC   = { otherDatum , && , thisDatum , if , }

2000 :	"if"
		- NEIGH  = { otherDatum , && , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PRED   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- SUCC   = { return , }

2000 :	"thisDatum"
		- NEIGH  = { otherDatum , && , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PRED   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- SUCC   = { return , }

2000 :	"&&"
		- NEIGH  = { otherDatum , && , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PRED   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- SUCC   = { return , }

2000 :	"otherDatum"
		- NEIGH  = { otherDatum , && , thisDatum , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PRED   = { datum_ , otherDatum , getPrivate , GeodeticCRS , other , & , }
		- SUCC   = { return , }

2001 :	"return"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2001 :	"thisDatum"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2001 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2002 :	"otherDatum"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2002 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2002 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2002 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2002 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2002 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { otherDatum , && , thisDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2004 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherDatum , && , thisDatum , if , }
		- SUCC   = { }

2012 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2012 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2013 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2013 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2013 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2013 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2014 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2014 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2014 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2014 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2015 :	"otherGeogCRS"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2015 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2015 :	"<"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2015 :	"GeographicCRS"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2015 :	"*"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2015 :	">"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2015 :	"other"
		- NEIGH  = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , otherGeogCRS , if , }

2016 :	"if"
		- NEIGH  = { == , otherGeogCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2016 :	"otherGeogCRS"
		- NEIGH  = { == , otherGeogCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2016 :	"=="
		- NEIGH  = { == , otherGeogCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , GeographicCRS , < , > , otherGeogCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2017 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , otherGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2019 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , otherGeogCRS , if , }
		- SUCC   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }

2019 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , otherGeogCRS , if , }
		- SUCC   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }

2019 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , otherGeogCRS , if , }
		- SUCC   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }

2020 :	"if"
		- NEIGH  = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2020 :	"GeodeticCRS"
		- NEIGH  = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2020 :	"_isEquivalentTo"
		- NEIGH  = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2020 :	"other"
		- NEIGH  = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2020 :	"standardCriterion"
		- NEIGH  = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2021 :	"return"
		- NEIGH  = { return , }
		- PARENT = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2023 :	"if"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- SUCC   = { coordinateSystem , axisOrder , }

2023 :	"criterion"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- SUCC   = { coordinateSystem , axisOrder , }

2023 :	"!="
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- SUCC   = { coordinateSystem , axisOrder , }

2024 :	"util"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- SUCC   = { coordinateSystem , axisOrder , }

2024 :	"IComparable"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- SUCC   = { coordinateSystem , axisOrder , }

2024 :	"Criterion"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- SUCC   = { coordinateSystem , axisOrder , }

2024 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { standardCriterion , _isEquivalentTo , other , GeodeticCRS , if , }
		- SUCC   = { coordinateSystem , axisOrder , }

2025 :	"return"
		- NEIGH  = { return , }
		- PARENT = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2027 :	"axisOrder"
		- NEIGH  = { coordinateSystem , axisOrder , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- SUCC   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2027 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisOrder , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- SUCC   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2027 :	"axisOrder"
		- NEIGH  = { coordinateSystem , axisOrder , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- SUCC   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2028 :	"if"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2028 :	"axisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2028 :	"=="
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2028 :	"cs"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2028 :	"EllipsoidalCS"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2028 :	"AxisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2028 :	"LONG_EAST_LAT_NORTH"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2028 :	"||"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2029 :	"axisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2029 :	"=="
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2029 :	"cs"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2029 :	"EllipsoidalCS"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2029 :	"AxisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2029 :	"LAT_NORTH_LONG_EAST"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , GeodeticCRS , createLongitudeLatitude , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , _isEquivalentTo , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { return , }

2030 :	"&"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2030 :	"unit"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2030 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2030 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2030 :	"unit"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2031 :	"return"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2031 :	"GeographicCRS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2031 :	"create"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2032 :	"util"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2032 :	"PropertyMap"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2032 :	"set"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2032 :	"common"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2032 :	"IdentifiedObject"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2032 :	"NAME_KEY"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2033 :	"nameStr"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2034 :	"datum"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2034 :	"datumEnsemble"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2035 :	"axisOrder"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2035 :	"=="
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2036 :	"cs"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2036 :	"EllipsoidalCS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2036 :	"AxisOrder"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2036 :	"LONG_EAST_LAT_NORTH"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2037 :	"cs"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2037 :	"EllipsoidalCS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2037 :	"createLatitudeLongitude"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2037 :	"unit"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2038 :	"cs"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2038 :	"EllipsoidalCS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2038 :	"createLongitudeLatitude"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2038 :	"unit"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2039 :	"GeodeticCRS"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2039 :	"_isEquivalentTo"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2039 :	"other"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2039 :	"standardCriterion"
		- NEIGH  = { standardCriterion , other , createLongitudeLatitude , unit , set , _isEquivalentTo , GeodeticCRS , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2041 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { }

2047 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2047 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2047 :	"createEPSG_4267"
		- NEIGH  = { createEPSG_4267 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2048 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2048 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2048 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2049 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2049 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2049 :	"EPSG_6267"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2050 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2050 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2050 :	"createLatitudeLongitude"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2051 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2051 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2051 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2056 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2056 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2056 :	"createEPSG_4269"
		- NEIGH  = { createEPSG_4269 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2057 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2057 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2057 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2058 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2058 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2058 :	"EPSG_6269"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2059 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2059 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2059 :	"createLatitudeLongitude"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2060 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2060 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2060 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2065 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2065 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2065 :	"createEPSG_4326"
		- NEIGH  = { createEPSG_4326 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2066 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2066 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2066 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2067 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2067 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2067 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2068 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2068 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2068 :	"createLatitudeLongitude"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2069 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2069 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2069 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2074 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2074 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2074 :	"createOGC_CRS84"
		- NEIGH  = { createOGC_CRS84 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2075 :	"util"
		- NEIGH  = { propertiesCRS , PropertyMap , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }

2075 :	"PropertyMap"
		- NEIGH  = { propertiesCRS , PropertyMap , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }

2075 :	"propertiesCRS"
		- NEIGH  = { propertiesCRS , PropertyMap , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }

2076 :	"propertiesCRS"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2077 :	"set"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2077 :	"metadata"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2077 :	"Identifier"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2077 :	"CODESPACE_KEY"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2077 :	"metadata"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2077 :	"Identifier"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2077 :	"OGC"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2078 :	"set"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2078 :	"metadata"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2078 :	"Identifier"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2078 :	"CODE_KEY"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2079 :	"set"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2079 :	"common"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2079 :	"IdentifiedObject"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2079 :	"NAME_KEY"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2080 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2080 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2080 :	"propertiesCRS"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2080 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2080 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2080 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2081 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2081 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2081 :	"createLongitudeLatitude"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2082 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2082 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2082 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2087 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"createEPSG_4979"
		- NEIGH  = { createEPSG_4979 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2089 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2090 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2090 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2090 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2091 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2091 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2091 :	"createLatitudeLongitudeEllipsoidalHeight"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2092 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2092 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2092 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2092 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2092 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2092 :	"METRE"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2097 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2097 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2097 :	"createEPSG_4807"
		- NEIGH  = { createEPSG_4807 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2098 :	"ellps"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2098 :	"datum"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2098 :	"Ellipsoid"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2098 :	"createFlattenedSphere"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2099 :	"createMapNameEPSGCode"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2100 :	"common"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2100 :	"Length"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2100 :	"common"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2100 :	"Scale"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2102 :	"cs"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2102 :	"cs"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2102 :	"EllipsoidalCS"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2102 :	"createLatitudeLongitude"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2103 :	"common"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2103 :	"UnitOfMeasure"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2103 :	"GRAD"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2105 :	"datum"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2105 :	"datum"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2105 :	"GeodeticReferenceFrame"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2105 :	"create"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2106 :	"createMapNameEPSGCode"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	"ellps"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	"util"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	"optional"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	"<"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	"std"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	"string"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	">"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	"datum"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	"PrimeMeridian"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2107 :	"PARIS"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2109 :	"return"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2109 :	"create"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2109 :	"createMapNameEPSGCode"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2109 :	"datum"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2109 :	"cs"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2125 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2126 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2126 :	"demoteTo2D"
		- NEIGH  = { demoteTo2D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2126 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2126 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2126 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2126 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2127 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2127 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2127 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2127 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2129 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2129 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2129 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2129 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2130 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2130 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2130 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2130 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2131 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

2131 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

2131 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

2135 :	"if"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2135 :	"dbContext"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2135 :	"&&"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2135 :	"l_identifiers"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2135 :	"size"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2135 :	"=="
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2136 :	"authFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2136 :	"io"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2136 :	"AuthorityFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2136 :	"create"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2137 :	"NN_NO_CHECK"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2137 :	"dbContext"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2137 :	"*"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2137 :	"l_identifiers"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2137 :	"codeSpace"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2138 :	"res"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2138 :	"authFactory"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2138 :	"createObjectsFromName"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2139 :	"nameStr"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2140 :	"io"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2140 :	"AuthorityFactory"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2140 :	"ObjectType"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2140 :	"GEOGRAPHIC_2D_CRS"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2141 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2141 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2141 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2141 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2142 :	"&"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2142 :	"firstRes"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2142 :	"res"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2142 :	"front"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2143 :	"firstResAsGeogCRS"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2144 :	"util"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2144 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2144 :	"<"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2144 :	"GeographicCRS"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2144 :	">"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2144 :	"firstRes"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2145 :	"if"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2145 :	"firstResAsGeogCRS"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2145 :	"&&"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2146 :	"firstResAsGeogCRS"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2146 :	"is2DPartOf3D"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2146 :	"NN_NO_CHECK"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2146 :	"this"
		- NEIGH  = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2147 :	"return"
		- NEIGH  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PARENT = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2147 :	"NN_NO_CHECK"
		- NEIGH  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PARENT = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2147 :	"firstResAsGeogCRS"
		- NEIGH  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PARENT = { this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2152 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2152 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2152 :	"EllipsoidalCS"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2152 :	"create"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2152 :	"util"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2152 :	"PropertyMap"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2152 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2153 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2154 :	"return"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2154 :	"GeographicCRS"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2154 :	"create"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2155 :	"util"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2155 :	"PropertyMap"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2155 :	"set"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2155 :	"common"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2155 :	"IdentifiedObject"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2155 :	"NAME_KEY"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2156 :	"!"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2156 :	"newName"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2156 :	"empty"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2156 :	"newName"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2156 :	"nameStr"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2157 :	"datum"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2157 :	"datumEnsemble"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2157 :	"cs"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2160 :	"return"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2160 :	"NN_NO_CHECK"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2160 :	"std"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2160 :	"dynamic_pointer_cast"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2160 :	"<"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2160 :	"GeographicCRS"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2160 :	">"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2161 :	"shared_from_this"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2161 :	"as_nullable"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2167 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2167 :	"addAngularUnitConvertAndAxisSwap"
		- NEIGH  = { addAngularUnitConvertAndAxisSwap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2168 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2168 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2168 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2168 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2169 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2169 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2169 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2169 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2171 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { addParam , formatter , }

2171 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { addParam , formatter , }

2172 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2172 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2173 :	"if"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2173 :	"axisList"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2173 :	"size"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2173 :	"=="
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2173 :	"&&"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2173 :	"!"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2173 :	"formatter"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2173 :	"omitZUnitConversion"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2174 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2174 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2177 :	"&"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2177 :	"unitHoriz"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2177 :	"axisList"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2177 :	"unit"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2178 :	"projUnit"
		- NEIGH  = { exportToPROJString , unitHoriz , projUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unitHoriz , unit , & , }
		- SUCC   = { empty , projUnit , if , }

2178 :	"unitHoriz"
		- NEIGH  = { exportToPROJString , unitHoriz , projUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unitHoriz , unit , & , }
		- SUCC   = { empty , projUnit , if , }

2178 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unitHoriz , projUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unitHoriz , unit , & , }
		- SUCC   = { empty , projUnit , if , }

2179 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { }
		- CHILD  = { projUnit , conversionToSI , unitHoriz , addParam , formatter , }
		- PRED   = { exportToPROJString , unitHoriz , projUnit , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2179 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { }
		- CHILD  = { projUnit , conversionToSI , unitHoriz , addParam , formatter , }
		- PRED   = { exportToPROJString , unitHoriz , projUnit , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2179 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { }
		- CHILD  = { projUnit , conversionToSI , unitHoriz , addParam , formatter , }
		- PRED   = { exportToPROJString , unitHoriz , projUnit , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2180 :	"formatter"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2180 :	"addParam"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2180 :	"unitHoriz"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2180 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2182 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2182 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2182 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2185 :	"if"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2185 :	"axisList"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2185 :	"size"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2185 :	"=="
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2185 :	"&&"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2185 :	"!"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2185 :	"formatter"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2185 :	"omitZUnitConversion"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2186 :	"&"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2186 :	"unitZ"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2186 :	"axisList"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2186 :	"unit"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2187 :	"projVUnit"
		- NEIGH  = { exportToPROJString , unitZ , projVUnit , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , unitZ , unit , & , }
		- SUCC   = { empty , projVUnit , if , }

2187 :	"unitZ"
		- NEIGH  = { exportToPROJString , unitZ , projVUnit , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , unitZ , unit , & , }
		- SUCC   = { empty , projVUnit , if , }

2187 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unitZ , projVUnit , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , unitZ , unit , & , }
		- SUCC   = { empty , projVUnit , if , }

2188 :	"if"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { conversionToSI , projVUnit , unitZ , addParam , formatter , }
		- PRED   = { exportToPROJString , unitZ , projVUnit , }
		- SUCC   = { }

2188 :	"projVUnit"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { conversionToSI , projVUnit , unitZ , addParam , formatter , }
		- PRED   = { exportToPROJString , unitZ , projVUnit , }
		- SUCC   = { }

2188 :	"empty"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { conversionToSI , projVUnit , unitZ , addParam , formatter , }
		- PRED   = { exportToPROJString , unitZ , projVUnit , }
		- SUCC   = { }

2189 :	"formatter"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2189 :	"addParam"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2189 :	"unitZ"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2189 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2191 :	"formatter"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2191 :	"addParam"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2191 :	"projVUnit"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2195 :	"*"
		- NEIGH  = { order , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { one , * , }

2195 :	"order"
		- NEIGH  = { order , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { one , * , }

2196 :	"*"
		- NEIGH  = { one , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , * , }
		- SUCC   = { two , * , }

2196 :	"one"
		- NEIGH  = { one , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , * , }
		- SUCC   = { two , * , }

2197 :	"*"
		- NEIGH  = { two , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { one , * , }
		- SUCC   = { ++ , < , i , for , }

2197 :	"two"
		- NEIGH  = { two , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { one , * , }
		- SUCC   = { ++ , < , i , for , }

2198 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2198 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2198 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2198 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2198 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2198 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2199 :	"&"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2199 :	"dir"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2199 :	"axisList"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2199 :	"i"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2199 :	"direction"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2200 :	"if"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2200 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2200 :	"dir"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2200 :	"=="
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2200 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2200 :	"cs"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2200 :	"AxisDirection"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2200 :	"WEST"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2201 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2201 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2202 :	"if"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2202 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2202 :	"dir"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2202 :	"=="
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2202 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2202 :	"cs"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2202 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2202 :	"EAST"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2203 :	"order"
		- NEIGH  = { one , i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2203 :	"i"
		- NEIGH  = { one , i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2203 :	"one"
		- NEIGH  = { one , i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2204 :	"if"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2204 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2204 :	"dir"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2204 :	"=="
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2204 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2204 :	"cs"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2204 :	"AxisDirection"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2204 :	"SOUTH"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2205 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2205 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2206 :	"if"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"dir"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"=="
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"cs"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"AxisDirection"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"NORTH"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2207 :	"order"
		- NEIGH  = { two , i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2207 :	"i"
		- NEIGH  = { two , i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2207 :	"two"
		- NEIGH  = { two , i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2210 :	"if"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"&&"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"&&"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"!="
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"one"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"||"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"!="
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2210 :	"two"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2211 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

2211 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

2212 :	"orderStr"
		- NEIGH  = { orderStr , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { order , orderStr , sprintf , }

2213 :	"sprintf"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2213 :	"orderStr"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2213 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2213 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2214 :	"formatter"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

2214 :	"addParam"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

2214 :	"orderStr"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

2222 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2222 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2223 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2223 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2223 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2223 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2225 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2225 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2225 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2225 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2225 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2226 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2226 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2226 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2226 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2227 :	"formatter"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2227 :	"ingestPROJString"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2228 :	"replaceAll"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2228 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2229 :	"formatter"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

2229 :	"addNoDefs"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

2230 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addNoDefs , formatter , }
		- SUCC   = { }

2233 :	"if"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2233 :	"!"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2233 :	"formatter"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2233 :	"omitProjLongLatIfPossible"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2233 :	"||"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2234 :	"primeMeridian"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2234 :	"longitude"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2234 :	"getSIValue"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2234 :	"!="
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2234 :	"||"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2235 :	"!"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2235 :	"formatter"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2235 :	"getTOWGS84Parameters"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2235 :	"empty"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2235 :	"||"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2236 :	"!"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2236 :	"formatter"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2236 :	"getHDatumExtension"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2236 :	"empty"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2238 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { done , }

2238 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { done , }

2239 :	"done"
		- NEIGH  = { done , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }

2240 :	"if"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2240 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2240 :	"getLegacyCRSToCRSContext"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2240 :	"&&"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2241 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2241 :	"getHDatumExtension"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2241 :	"empty"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2241 :	"&&"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2242 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2242 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2242 :	"empty"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , util , get , EPSG_6326 , if , l_datum , datum , GeodeticReferenceFrame , _isEquivalentTo , && , & , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2243 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }

2243 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }

2243 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }

2244 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2244 :	"l_datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2244 :	"&&"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2245 :	"l_datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2245 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2246 :	"datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2246 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2246 :	"EPSG_6326"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2246 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2247 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2247 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2247 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2247 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , util , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , formatter , _isEquivalentTo , && , get , Criterion , addParam , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { }

2248 :	"done"
		- NEIGH  = { done , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2249 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2249 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2250 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2250 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2250 :	"&&"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2251 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2251 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2252 :	"datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2252 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2252 :	"EPSG_6269"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2252 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2253 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2253 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2253 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2253 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2254 :	"done"
		- NEIGH  = { done , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2256 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2256 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , if , EPSG_6269 , l_datum , datum , _isEquivalentTo , && , GeodeticReferenceFrame , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2259 :	"if"
		- NEIGH  = { done , ! , if , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { formatter , addDatumInfoToPROJString , }
		- PRED   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- SUCC   = { }

2259 :	"!"
		- NEIGH  = { done , ! , if , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { formatter , addDatumInfoToPROJString , }
		- PRED   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- SUCC   = { }

2259 :	"done"
		- NEIGH  = { done , ! , if , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { formatter , addDatumInfoToPROJString , }
		- PRED   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- SUCC   = { }

2260 :	"addDatumInfoToPROJString"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { done , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2260 :	"formatter"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { done , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2263 :	"if"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2263 :	"!"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2263 :	"formatter"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2263 :	"getCRSExport"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2264 :	"addAngularUnitConvertAndAxisSwap"
		- NEIGH  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2264 :	"formatter"
		- NEIGH  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2272 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2272 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2273 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2273 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2273 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2273 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2275 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2275 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2275 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2275 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2276 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2277 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2277 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2277 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2277 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2277 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2279 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2279 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2280 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2280 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2281 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2281 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2281 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2282 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2282 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2284 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2284 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2284 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2287 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2287 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2287 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2288 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2288 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2289 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2289 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2290 :	"l_datum"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2290 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2290 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2292 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2292 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2293 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2293 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2294 :	"datumEnsemble"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2294 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2294 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2297 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2297 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2298 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2298 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2299 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2299 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2299 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2301 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2301 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2301 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2308 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2308 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2309 :	"std"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2309 :	"vector"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2309 :	"<"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2309 :	"operation"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2309 :	"TransformationNNPtr"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2309 :	">"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2309 :	"geoidModel"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2310 :	"std"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2310 :	"vector"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2310 :	"<"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2310 :	"operation"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2310 :	"PointMotionOperationNNPtr"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2310 :	">"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2310 :	"velocityModel"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2317 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2317 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2317 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2318 :	"checkEnsembleForVerticalCRS"
		- NEIGH  = { checkEnsembleForVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2318 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2318 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2318 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2318 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2319 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2319 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2319 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2319 :	"ensemble"
		- NEIGH  = { ensemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2320 :	"*"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

2320 :	"msg"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

2321 :	"if"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

2321 :	"datumIn"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

2322 :	"if"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

2322 :	"!"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

2322 :	"ensemble"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

2323 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2323 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2325 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { datumIn , if , }
		- CHILD  = { }
		- PRED   = { ! , ensemble , if , }
		- SUCC   = { }

2326 :	"if"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , VerticalReferenceFrame , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , & , }
		- PRED   = { }
		- SUCC   = { }

2326 :	"ensemble"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , VerticalReferenceFrame , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , & , }
		- PRED   = { }
		- SUCC   = { }

2327 :	"&"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2327 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2327 :	"ensemble"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2327 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2328 :	"assert"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2328 :	"!"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2328 :	"datums"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2328 :	"empty"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2329 :	"grfFirst"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2330 :	"dynamic_cast"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2330 :	"<"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2330 :	"datum"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2330 :	"VerticalReferenceFrame"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2330 :	"*"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2330 :	">"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2330 :	"datums"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2330 :	"get"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2331 :	"if"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- SUCC   = { msg , }

2331 :	"grfFirst"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- SUCC   = { msg , }

2332 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2332 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2334 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { grfFirst , if , }
		- SUCC   = { }

2336 :	"throw"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2336 :	"util"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2336 :	"Exception"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2336 :	"msg"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2342 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2342 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2342 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2342 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2342 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2342 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2343 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2343 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2343 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2343 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2344 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2344 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2344 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2344 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2345 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2345 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2345 :	"checkEnsembleForVerticalCRS"
		- NEIGH  = { checkEnsembleForVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2345 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2345 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2346 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2347 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2347 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2347 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2347 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2347 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2347 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2351 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2351 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2351 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2351 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2351 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2357 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2357 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2362 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2362 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2362 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2363 :	"crs"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2363 :	"VerticalCRS"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2363 :	"nn_make_shared"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2363 :	"<"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2363 :	"VerticalCRS"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2363 :	">"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2363 :	"*"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2363 :	"this"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2364 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2364 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2364 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2365 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2365 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2374 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2374 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2374 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2374 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2375 :	"return"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2375 :	"std"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2375 :	"static_pointer_cast"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2375 :	"<"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2375 :	"datum"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2375 :	"VerticalReferenceFrame"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2375 :	">"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2376 :	"SingleCRS"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2376 :	"getPrivate"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2376 :	"datum"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2388 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2388 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2388 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2388 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2388 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2388 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2388 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2389 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2389 :	"geoidModel"
		- NEIGH  = { geoidModel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2389 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2390 :	"return"
		- NEIGH  = { geoidModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2390 :	"d"
		- NEIGH  = { geoidModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2390 :	"geoidModel"
		- NEIGH  = { geoidModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2399 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2399 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2399 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2399 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2399 :	"PointMotionOperationNNPtr"
		- NEIGH  = { PointMotionOperationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2399 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2399 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2400 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2400 :	"velocityModel"
		- NEIGH  = { velocityModel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2400 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2401 :	"return"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2401 :	"d"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2401 :	"velocityModel"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2410 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2410 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2410 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2410 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2411 :	"return"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2411 :	"util"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2411 :	"nn_static_pointer_cast"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2411 :	"<"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2411 :	"cs"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2411 :	"VerticalCS"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2411 :	">"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2412 :	"SingleCRS"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2412 :	"getPrivate"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2412 :	"coordinateSystem"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2418 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2418 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2418 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2418 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2418 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2418 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2419 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }

2419 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }

2419 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }

2419 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }

2419 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }

2419 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }

2419 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }

2419 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }

2420 :	"formatter"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2420 :	"startNode"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2420 :	"isWKT2"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2420 :	"io"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2420 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2420 :	"VERTCRS"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2421 :	"io"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2421 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2421 :	"VERT_CS"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2422 :	"!"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2422 :	"identifiers"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2422 :	"empty"
		- NEIGH  = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2423 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

2423 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

2423 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , VERTCRS , WKTConstants , io , VERT_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

2424 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

2424 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

2425 :	"&"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2425 :	"cs"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2425 :	"SingleCRS"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2425 :	"getPrivate"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2425 :	"coordinateSystem"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { axisList , cs , & , }

2426 :	"&"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

2426 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

2426 :	"cs"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

2426 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

2427 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

2427 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

2427 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

2428 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2428 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2428 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2428 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2431 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

2431 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

2431 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

2432 :	"if"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2432 :	"oldAxisOutputRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2432 :	"=="
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2433 :	"io"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2433 :	"WKTFormatter"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2433 :	"OutputAxisRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2433 :	"WKT1_GDAL_EPSG_STYLE"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

2434 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2434 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2434 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2434 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2434 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2434 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2436 :	"cs"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

2436 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

2436 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

2437 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2437 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2437 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2439 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { endNode , formatter , }

2439 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { endNode , formatter , }

2439 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { endNode , formatter , }

2440 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

2440 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

2447 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2447 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2448 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2448 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2448 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2448 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2450 :	"geoidgrids"
		- NEIGH  = { getVDatumExtension , formatter , geoidgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , geoidgrids , ! , if , }

2450 :	"formatter"
		- NEIGH  = { getVDatumExtension , formatter , geoidgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , geoidgrids , ! , if , }

2450 :	"getVDatumExtension"
		- NEIGH  = { getVDatumExtension , formatter , geoidgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , geoidgrids , ! , if , }

2451 :	"if"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

2451 :	"!"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

2451 :	"geoidgrids"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

2451 :	"empty"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

2452 :	"formatter"
		- NEIGH  = { geoidgrids , addParam , formatter , }
		- PARENT = { empty , geoidgrids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2452 :	"addParam"
		- NEIGH  = { geoidgrids , addParam , formatter , }
		- PARENT = { empty , geoidgrids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2452 :	"geoidgrids"
		- NEIGH  = { geoidgrids , addParam , formatter , }
		- PARENT = { empty , geoidgrids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2455 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

2455 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

2455 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

2455 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

2456 :	"if"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2456 :	"!"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2456 :	"axisList"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2456 :	"empty"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2457 :	"projUnit"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

2457 :	"axisList"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

2457 :	"unit"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

2457 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

2458 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { projUnit , conversionToSI , unit , axisList , addParam , formatter , }
		- PRED   = { exportToPROJString , axisList , unit , projUnit , }
		- SUCC   = { }

2458 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { projUnit , conversionToSI , unit , axisList , addParam , formatter , }
		- PRED   = { exportToPROJString , axisList , unit , projUnit , }
		- SUCC   = { }

2458 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { projUnit , conversionToSI , unit , axisList , addParam , formatter , }
		- PRED   = { exportToPROJString , axisList , unit , projUnit , }
		- SUCC   = { }

2459 :	"formatter"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2459 :	"addParam"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2460 :	"axisList"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2460 :	"unit"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2460 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2462 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2462 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2462 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2471 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2471 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2472 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2472 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2472 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2472 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2474 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2474 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2474 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2474 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2475 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2476 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2476 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2476 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2476 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2476 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2478 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2478 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2479 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2479 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2480 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2480 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2480 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2481 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2481 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2483 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2483 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2483 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2486 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2486 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2486 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2487 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2487 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2488 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2488 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2489 :	"l_datum"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2489 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2489 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2491 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2491 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2492 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2492 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2493 :	"datumEnsemble"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2493 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2493 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2496 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2496 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2497 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2497 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2498 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2498 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2498 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2500 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2500 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2500 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2507 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2507 :	"addLinearUnitConvert"
		- NEIGH  = { addLinearUnitConvert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2508 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2508 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2508 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2508 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2509 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

2509 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

2509 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

2509 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

2511 :	"if"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2511 :	"!"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2511 :	"axisList"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2511 :	"empty"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

2512 :	"if"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2512 :	"axisList"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2512 :	"unit"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2512 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2512 :	"!="
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

2513 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2513 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2514 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { unit , axisList , exportToPROJString , projVUnit , }

2514 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { unit , axisList , exportToPROJString , projVUnit , }

2515 :	"projVUnit"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

2515 :	"axisList"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

2515 :	"unit"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

2515 :	"exportToPROJString"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

2516 :	"if"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { conversionToSI , unit , axisList , projVUnit , addParam , formatter , }
		- PRED   = { unit , axisList , exportToPROJString , projVUnit , }
		- SUCC   = { }

2516 :	"projVUnit"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { conversionToSI , unit , axisList , projVUnit , addParam , formatter , }
		- PRED   = { unit , axisList , exportToPROJString , projVUnit , }
		- SUCC   = { }

2516 :	"empty"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { conversionToSI , unit , axisList , projVUnit , addParam , formatter , }
		- PRED   = { unit , axisList , exportToPROJString , projVUnit , }
		- SUCC   = { }

2517 :	"formatter"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2517 :	"addParam"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2518 :	"axisList"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2518 :	"unit"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2518 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2520 :	"formatter"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2520 :	"addParam"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2520 :	"projVUnit"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2538 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2539 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2540 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2540 :	"VerticalReferenceFrameNNPtr"
		- NEIGH  = { VerticalReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2540 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2540 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2541 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2541 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2541 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2541 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2542 :	"return"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2542 :	"create"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2542 :	"properties"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2542 :	"datumIn"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2542 :	"as_nullable"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2542 :	"csIn"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2559 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2560 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2560 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2560 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2560 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2560 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2560 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2561 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2561 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2561 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2561 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2562 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2562 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2562 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2562 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2563 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2563 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2563 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2563 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2564 :	"crs"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2564 :	"VerticalCRS"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2564 :	"nn_make_shared"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2564 :	"<"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2564 :	"VerticalCRS"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2564 :	">"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2564 :	"datumIn"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2564 :	"datumEnsembleIn"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2565 :	"csIn"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2566 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- SUCC   = { properties , setProperties , crs , }

2566 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- SUCC   = { properties , setProperties , crs , }

2566 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- SUCC   = { properties , setProperties , crs , }

2567 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

2567 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

2567 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

2568 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

2568 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

2574 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2574 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2575 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2575 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2575 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2575 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2576 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2576 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2576 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2576 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2577 :	"otherVertCRS"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2577 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2577 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2577 :	"VerticalCRS"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2577 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2577 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2577 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

2579 :	"return"
		- NEIGH  = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2579 :	"otherVertCRS"
		- NEIGH  = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2579 :	"!="
		- NEIGH  = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2579 :	"&&"
		- NEIGH  = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2580 :	"SingleCRS"
		- NEIGH  = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2580 :	"baseIsEquivalentTo"
		- NEIGH  = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2580 :	"other"
		- NEIGH  = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2580 :	"criterion"
		- NEIGH  = { other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

2607 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2607 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2607 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2607 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2607 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2607 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2607 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2607 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2608 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2608 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2608 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2608 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2608 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2608 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2609 :	"std"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2609 :	"pair"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2609 :	"<"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2609 :	"VerticalCRSNNPtr"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2609 :	">"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2609 :	"Pair"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2610 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2610 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2610 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2610 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2610 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2610 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

2612 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

2612 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

2612 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

2614 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , a , >= , Pair , & , sort , res , || , this , ci_equal , if , authorityFactory , hasCodeCompatibleOfAuthorityFactory , empty , thisName , unsignificantName , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

2614 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , a , >= , Pair , & , sort , res , || , this , ci_equal , if , authorityFactory , hasCodeCompatibleOfAuthorityFactory , empty , thisName , unsignificantName , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

2616 :	"unsignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2616 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2616 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2616 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2617 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2617 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2617 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2618 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2618 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

2619 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

2619 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

2619 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

2619 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

2622 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2622 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2622 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2622 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2623 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , match , createVerticalCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2623 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , match , createVerticalCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2623 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , match , createVerticalCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2623 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , match , createVerticalCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2625 :	"crs"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2625 :	"io"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2625 :	"AuthorityFactory"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2625 :	"create"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2626 :	"authorityFactory"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2626 :	"databaseContext"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2627 :	"*"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2627 :	"id"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2627 :	"codeSpace"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2628 :	"createVerticalCRS"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2628 :	"id"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2628 :	"code"
		- NEIGH  = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

2629 :	"match"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2629 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2630 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2630 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2631 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2631 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2631 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2631 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createVerticalCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2632 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

2632 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

2632 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

2632 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

2633 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

2633 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

2634 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2634 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2634 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2634 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2638 :	"if"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

2638 :	"!"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

2638 :	"unsignificantName"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

2639 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2639 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2639 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2639 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2639 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2639 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

2640 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

2640 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

2640 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

2641 :	"objects"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2641 :	"authorityFactory"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2641 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2642 :	"thisName"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2642 :	"io"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2642 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2642 :	"ObjectType"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2642 :	"VERTICAL_CRS"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2643 :	"approximateMatch"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2644 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2644 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2644 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2644 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2645 :	"crs"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2645 :	"util"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2645 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2645 :	"<"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2645 :	"VerticalCRS"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2645 :	">"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2645 :	"obj"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2646 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

2646 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

2647 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

2647 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

2647 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

2648 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2648 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2649 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2649 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2650 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2650 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2650 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2650 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2651 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2651 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2651 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2651 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2651 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2652 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2652 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2653 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

2653 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

2653 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

2654 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

2654 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

2656 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

2656 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

2656 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

2658 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2658 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2658 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2661 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2661 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2661 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2661 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2662 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2668 :	"res"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2668 :	"sort"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2668 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2668 :	"thisName"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2668 :	"Pair"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2668 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2668 :	"a"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2668 :	"Pair"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2668 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2668 :	"b"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

2670 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2670 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2670 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2670 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2670 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2670 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2671 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2673 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2673 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2673 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2673 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2673 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2673 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2674 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2678 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2678 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2678 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2678 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2678 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2679 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2679 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2679 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2679 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2679 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2680 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2680 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2680 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2680 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2680 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2680 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2680 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2680 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2681 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2683 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2683 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2683 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2683 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2683 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2683 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2683 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2683 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

2684 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2688 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

2688 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

2688 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

2688 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

2692 :	"if"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

2692 :	"res"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

2692 :	"size"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

2692 :	">="
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

2693 :	"highestConfidence"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

2693 :	"res"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

2693 :	"front"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

2693 :	"second"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

2694 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2694 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2694 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2694 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2694 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2694 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

2695 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2695 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2695 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2695 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2696 :	"if"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2696 :	"pair"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2696 :	"second"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2696 :	"=="
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2696 :	"highestConfidence"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2697 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2697 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2697 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2699 :	"break"
		- NEIGH  = { break , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2702 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

2702 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

2706 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

2706 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

2713 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2715 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2715 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2715 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2715 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2715 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2715 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2716 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2716 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2716 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2716 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2716 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2716 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2717 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

2717 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

2717 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

2718 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2718 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2718 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2718 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2719 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2719 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2719 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2719 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2719 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2719 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2721 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

2721 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

2729 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2729 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2730 :	"SingleCRSNNPtr"
		- NEIGH  = { baseCRS_ , SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion_ , ConversionNNPtr , operation , }

2730 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion_ , ConversionNNPtr , operation , }

2731 :	"operation"
		- NEIGH  = { derivingConversion_ , ConversionNNPtr , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , SingleCRSNNPtr , }
		- SUCC   = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }

2731 :	"ConversionNNPtr"
		- NEIGH  = { derivingConversion_ , ConversionNNPtr , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , SingleCRSNNPtr , }
		- SUCC   = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }

2731 :	"derivingConversion_"
		- NEIGH  = { derivingConversion_ , ConversionNNPtr , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , SingleCRSNNPtr , }
		- SUCC   = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }

2733 :	"Private"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2733 :	"SingleCRSNNPtr"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2733 :	"&"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2733 :	"baseCRSIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2734 :	"operation"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2734 :	"ConversionNNPtr"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2734 :	"&"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2734 :	"derivingConversionIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2735 :	"baseCRS_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2735 :	"baseCRSIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2735 :	"derivingConversion_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2735 :	"derivingConversionIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2739 :	"Private"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2739 :	"Private"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2739 :	"&"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2739 :	"other"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2740 :	"baseCRS_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2740 :	"other"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2740 :	"baseCRS_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2741 :	"derivingConversion_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2741 :	"other"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2741 :	"derivingConversion_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2741 :	"shallowClone"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

2754 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2754 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2754 :	"SingleCRSNNPtr"
		- NEIGH  = { SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2754 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2754 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2755 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2755 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2755 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2755 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2756 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2758 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2763 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2763 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2763 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2763 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2763 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2763 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2765 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2765 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2765 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2765 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2765 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2765 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2765 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2765 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2770 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2770 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2770 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2770 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2770 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2773 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2773 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2775 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2775 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2775 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2775 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2775 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2775 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2775 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2775 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2775 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2781 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2781 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2790 :	"SingleCRSNNPtr"
		- NEIGH  = { SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2790 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2790 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2790 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2790 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2791 :	"return"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2791 :	"d"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2791 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2800 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2800 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2800 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2800 :	"derivingConversion"
		- NEIGH  = { derivingConversion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2801 :	"return"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2801 :	"d"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2801 :	"derivingConversion_"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2801 :	"shallowClone"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2807 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2807 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2807 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2808 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2808 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2808 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2809 :	"return"
		- NEIGH  = { derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2809 :	"d"
		- NEIGH  = { derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2809 :	"derivingConversion_"
		- NEIGH  = { derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2815 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2815 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2815 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2815 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2815 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2815 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2816 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2816 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2816 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2816 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2817 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2817 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2817 :	"<"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2817 :	"DerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2817 :	"*"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2817 :	">"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2817 :	"other"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2818 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- SUCC   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }

2818 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- SUCC   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }

2818 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- SUCC   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }

2819 :	"if"
		- NEIGH  = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

2819 :	"otherDerivedCRS"
		- NEIGH  = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

2819 :	"=="
		- NEIGH  = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

2819 :	"||"
		- NEIGH  = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

2820 :	"!"
		- NEIGH  = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

2820 :	"SingleCRS"
		- NEIGH  = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

2820 :	"baseIsEquivalentTo"
		- NEIGH  = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

2820 :	"other"
		- NEIGH  = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

2820 :	"standardCriterion"
		- NEIGH  = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

2821 :	"return"
		- NEIGH  = { return , }
		- PARENT = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2823 :	"return"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2823 :	"d"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2823 :	"baseCRS_"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2823 :	"_isEquivalentTo"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2823 :	"otherDerivedCRS"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2823 :	"d"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2823 :	"baseCRS_"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2823 :	"get"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2824 :	"criterion"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2824 :	"&&"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2825 :	"d"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2825 :	"derivingConversion_"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2825 :	"_isEquivalentTo"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2826 :	"otherDerivedCRS"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2826 :	"d"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2826 :	"derivingConversion_"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2826 :	"get"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2827 :	"standardCriterion"
		- NEIGH  = { get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

2832 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2832 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2833 :	"derivingConversionRef"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2833 :	"setWeakSourceTargetCRS"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2834 :	"baseCRS"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2834 :	"as_nullable"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2835 :	"std"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2835 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2835 :	"<"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2835 :	"CRS"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2835 :	">"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2835 :	"shared_from_this"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2835 :	"as_nullable"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2840 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2840 :	"baseExportToWKT"
		- NEIGH  = { baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2840 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2840 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2840 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2840 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2841 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2841 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2841 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2841 :	"keyword"
		- NEIGH  = { keyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2842 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2842 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2842 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2842 :	"baseKeyword"
		- NEIGH  = { baseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2843 :	"formatter"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2843 :	"startNode"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2843 :	"keyword"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2843 :	"!"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2843 :	"identifiers"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2843 :	"empty"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

2844 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , startNode , ! , keyword , identifiers , formatter , }
		- SUCC   = { baseCRS_ , d , l_baseCRS , & , }

2844 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , startNode , ! , keyword , identifiers , formatter , }
		- SUCC   = { baseCRS_ , d , l_baseCRS , & , }

2844 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , startNode , ! , keyword , identifiers , formatter , }
		- SUCC   = { baseCRS_ , d , l_baseCRS , & , }

2846 :	"&"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

2846 :	"l_baseCRS"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

2846 :	"d"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

2846 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

2847 :	"formatter"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2847 :	"startNode"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2847 :	"baseKeyword"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2847 :	"formatter"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2847 :	"use2019Keywords"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2847 :	"&&"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2848 :	"!"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2848 :	"l_baseCRS"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2848 :	"identifiers"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2848 :	"empty"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

2849 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

2849 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

2849 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

2849 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

2850 :	"l_baseCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

2850 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

2850 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

2851 :	"if"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2851 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2851 :	"use2019Keywords"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2851 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2852 :	"!"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2852 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2852 :	"idOnTopLevelOnly"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2852 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2852 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2852 :	"topLevelHasId"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

2853 :	"l_baseCRS"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2853 :	"formatID"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2853 :	"formatter"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2855 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

2855 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

2857 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

2857 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

2858 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

2858 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

2858 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

2859 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

2859 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

2861 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2861 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2861 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

2862 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

2862 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

2862 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

2863 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

2863 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

2869 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2869 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2870 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2870 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2870 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2870 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2872 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

2872 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

2872 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

2872 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

2873 :	"objectContext"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2874 :	"formatter"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2874 :	"MakeObjectContext"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2874 :	"className"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2874 :	"!"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2874 :	"identifiers"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2874 :	"empty"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

2876 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2876 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2877 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2877 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2878 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

2878 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

2878 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

2879 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2879 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2881 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2881 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2881 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2884 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

2884 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

2885 :	"baseCRS"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

2885 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

2885 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

2887 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2887 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2888 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

2888 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

2889 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

2889 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

2889 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

2891 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2891 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2892 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2892 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2893 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2893 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2893 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2895 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2895 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2895 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2902 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2902 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2903 :	"GeodeticCRSNNPtr"
		- NEIGH  = { baseCRS_ , GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs_ , CartesianCSNNPtr , cs , }

2903 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs_ , CartesianCSNNPtr , cs , }

2904 :	"cs"
		- NEIGH  = { cs_ , CartesianCSNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , GeodeticCRSNNPtr , }
		- SUCC   = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }

2904 :	"CartesianCSNNPtr"
		- NEIGH  = { cs_ , CartesianCSNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , GeodeticCRSNNPtr , }
		- SUCC   = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }

2904 :	"cs_"
		- NEIGH  = { cs_ , CartesianCSNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , GeodeticCRSNNPtr , }
		- SUCC   = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }

2905 :	"Private"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2905 :	"GeodeticCRSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2905 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2905 :	"baseCRSIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2905 :	"cs"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2905 :	"CartesianCSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2905 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2905 :	"csIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2906 :	"baseCRS_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2906 :	"baseCRSIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2906 :	"cs_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2906 :	"csIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2908 :	"GeodeticCRSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2908 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2908 :	"baseCRS"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2908 :	"return"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2908 :	"baseCRS_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2910 :	"cs"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2910 :	"CartesianCSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2910 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2910 :	"coordinateSystem"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2910 :	"return"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2910 :	"cs_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

2916 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2916 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2917 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2917 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2917 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2918 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2918 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2918 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2918 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2919 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2919 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2919 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2919 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2920 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2920 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2920 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2920 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2920 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2920 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2921 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2921 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2921 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2921 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2922 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2922 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2922 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2922 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2922 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2922 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2922 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2922 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2926 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2926 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2926 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2926 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2926 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2927 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2927 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2927 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2927 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2928 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2928 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2928 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2928 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2928 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2928 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2928 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2928 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2929 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2929 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2934 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2934 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2939 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2939 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2939 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2940 :	"crs"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2940 :	"ProjectedCRS"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2940 :	"nn_make_shared"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2940 :	"<"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2940 :	"ProjectedCRS"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2940 :	">"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2940 :	"*"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2940 :	"this"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2941 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

2941 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

2941 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

2942 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

2942 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

2943 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

2943 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

2953 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2953 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2953 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2953 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2953 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2954 :	"return"
		- NEIGH  = { d , baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2954 :	"d"
		- NEIGH  = { d , baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2954 :	"baseCRS"
		- NEIGH  = { d , baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2964 :	"return"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2964 :	"d"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2964 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2970 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2970 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2970 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2970 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2970 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2970 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2971 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

2971 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

2971 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

2971 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

2971 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

2971 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

2971 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

2971 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

2973 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

2973 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

2973 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

2976 :	"&"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

2976 :	"dbContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

2976 :	"formatter"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

2976 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

2978 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { string , l_alias , std , }

2978 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { string , l_alias , std , }

2979 :	"std"
		- NEIGH  = { string , l_alias , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

2979 :	"string"
		- NEIGH  = { string , l_alias , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

2979 :	"l_alias"
		- NEIGH  = { string , l_alias , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

2980 :	"if"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

2980 :	"formatter"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

2980 :	"useESRIDialect"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

2980 :	"&&"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

2980 :	"dbContext"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

2981 :	"l_alias"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2981 :	"dbContext"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2981 :	"getAliasFromOfficialName"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2981 :	"l_name"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2985 :	"if"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"!"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"isWKT2"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"formatter"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"useESRIDialect"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"!"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"l_identifiers"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"empty"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2985 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2986 :	"*"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2986 :	"l_identifiers"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2986 :	"codeSpace"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2986 :	"=="
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2986 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2986 :	"dbContext"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

2988 :	"definition"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

2988 :	"dbContext"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

2988 :	"getTextDefinition"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

2989 :	"l_identifiers"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

2989 :	"code"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

2990 :	"if"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { EQUIVALENT , Criterion , get , > , * , IComparable , util , dynamic_cast , < , _isEquivalentTo , dbContext , if , definition , attachDatabaseContext , WKTParser , io , createFromWKT , crsFromFromDef , }
		- PRED   = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- SUCC   = { & , exception , std , catch , }

2990 :	"starts_with"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { EQUIVALENT , Criterion , get , > , * , IComparable , util , dynamic_cast , < , _isEquivalentTo , dbContext , if , definition , attachDatabaseContext , WKTParser , io , createFromWKT , crsFromFromDef , }
		- PRED   = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- SUCC   = { & , exception , std , catch , }

2990 :	"definition"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { EQUIVALENT , Criterion , get , > , * , IComparable , util , dynamic_cast , < , _isEquivalentTo , dbContext , if , definition , attachDatabaseContext , WKTParser , io , createFromWKT , crsFromFromDef , }
		- PRED   = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- SUCC   = { & , exception , std , catch , }

2991 :	"crsFromFromDef"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

2991 :	"io"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

2991 :	"WKTParser"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

2992 :	"attachDatabaseContext"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

2992 :	"dbContext"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

2993 :	"createFromWKT"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

2993 :	"definition"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

2994 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2994 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2995 :	"dynamic_cast"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2995 :	"<"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2995 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2995 :	"*"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2995 :	">"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2995 :	"crsFromFromDef"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2995 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2996 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2996 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2996 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2996 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

2997 :	"formatter"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

2997 :	"ingestWKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

2998 :	"io"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

2998 :	"WKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

2998 :	"createFrom"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

2998 :	"definition"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

2999 :	"return"
		- NEIGH  = { return , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- SUCC   = { }

3002 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3002 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3002 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3002 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3004 :	"if"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3004 :	"!"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3004 :	"isWKT2"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3004 :	"&&"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3004 :	"formatter"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3004 :	"useESRIDialect"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3004 :	"&&"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3004 :	"!"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3004 :	"l_alias"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3004 :	"empty"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3006 :	"res"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3007 :	"io"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3007 :	"AuthorityFactory"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3007 :	"create"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3007 :	"NN_NO_CHECK"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3007 :	"dbContext"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3008 :	"createObjectsFromName"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3009 :	"l_alias"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3010 :	"io"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3010 :	"AuthorityFactory"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3010 :	"ObjectType"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3010 :	"PROJECTED_CRS"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3012 :	"if"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3012 :	"res"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3012 :	"size"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3012 :	"=="
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3013 :	"definition"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3013 :	"dbContext"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3013 :	"getTextDefinition"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3015 :	"res"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3015 :	"front"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3015 :	"identifiers"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3015 :	"code"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3016 :	"if"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PRED   = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- SUCC   = { }

3016 :	"starts_with"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PRED   = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- SUCC   = { }

3016 :	"definition"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PRED   = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- SUCC   = { }

3017 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3017 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3018 :	"dynamic_cast"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3018 :	"<"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3018 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3018 :	"*"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3018 :	">"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3018 :	"res"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3018 :	"front"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3018 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3019 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3019 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3019 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3019 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3020 :	"formatter"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3020 :	"ingestWKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3021 :	"io"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3021 :	"WKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3021 :	"createFrom"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3021 :	"definition"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3022 :	"return"
		- NEIGH  = { return , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- SUCC   = { }

3026 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3026 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3026 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3026 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3030 :	"&"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3030 :	"l_coordinateSystem"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3030 :	"d"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3030 :	"coordinateSystem"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3031 :	"&"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3031 :	"axisList"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3031 :	"l_coordinateSystem"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3031 :	"axisList"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3032 :	"if"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3032 :	"axisList"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3032 :	"size"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3032 :	"=="
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3032 :	"&&"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3032 :	"!"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3032 :	"isWKT2"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3032 :	"&&"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3032 :	"formatter"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3032 :	"use2019Keywords"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3033 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3033 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3033 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3037 :	"exportAxis"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3037 :	"&"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3037 :	"l_coordinateSystem"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3037 :	"&"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3037 :	"axisList"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3037 :	"&"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3037 :	"formatter"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3038 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3038 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3038 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3039 :	"if"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3039 :	"oldAxisOutputRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3039 :	"=="
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3040 :	"io"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3040 :	"WKTFormatter"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3040 :	"OutputAxisRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3040 :	"WKT1_GDAL_EPSG_STYLE"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3041 :	"if"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3041 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3041 :	"axisList"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3041 :	"direction"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3041 :	"=="
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3041 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3041 :	"cs"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3041 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3041 :	"EAST"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3041 :	"&&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3042 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3042 :	"axisList"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3042 :	"direction"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3042 :	"=="
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3042 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3042 :	"cs"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3042 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3042 :	"NORTH"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3043 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3046 :	"l_coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , l_coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3046 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3046 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3047 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_coordinateSystem , }
		- SUCC   = { }

3047 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_coordinateSystem , }
		- SUCC   = { }

3047 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_coordinateSystem , }
		- SUCC   = { }

3050 :	"if"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3050 :	"!"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3050 :	"isWKT2"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3050 :	"&&"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3050 :	"!"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3050 :	"formatter"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3050 :	"useESRIDialect"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3050 :	"&&"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3051 :	"starts_with"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3051 :	"nameStr"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3052 :	"formatter"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3052 :	"startNode"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3052 :	"io"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3052 :	"WKTConstants"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3052 :	"PROJCS"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3052 :	"!"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3052 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3052 :	"empty"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3053 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3053 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3053 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3054 :	"formatter"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , baseCRS , }

3054 :	"setTOWGS84Parameters"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , baseCRS , }

3055 :	"baseCRS"
		- NEIGH  = { formatter , _exportToWKT , baseCRS , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3055 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , baseCRS , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3055 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , baseCRS , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3056 :	"formatter"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , baseCRS , }
		- SUCC   = { PROJECTION , WKTConstants , io , startNode , formatter , }

3056 :	"setTOWGS84Parameters"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , baseCRS , }
		- SUCC   = { PROJECTION , WKTConstants , io , startNode , formatter , }

3058 :	"formatter"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3058 :	"startNode"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3058 :	"io"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3058 :	"WKTConstants"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3058 :	"PROJECTION"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3059 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

3059 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

3060 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3060 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3062 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3062 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3062 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3062 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3062 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3063 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3063 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3064 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3064 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3065 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3065 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3067 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3067 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3067 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3067 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3067 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3068 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3068 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3069 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3069 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3070 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3070 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3072 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3072 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3072 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3072 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3072 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3073 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3073 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3074 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3074 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3075 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3075 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3077 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3077 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3077 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3077 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3077 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3078 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3078 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3079 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3079 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3080 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { formatter , _exportToWKT , unit , axisList , }

3080 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { formatter , _exportToWKT , unit , axisList , }

3082 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3082 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3082 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3082 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3083 :	"exportAxis"
		- NEIGH  = { exportAxis , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , unit , axisList , }
		- SUCC   = { formatter , addWKTExtensionNode , derivingConversionRef , }

3084 :	"derivingConversionRef"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3084 :	"addWKTExtensionNode"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3084 :	"formatter"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3085 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- SUCC   = { endNode , formatter , }

3085 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- SUCC   = { endNode , formatter , }

3085 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- SUCC   = { endNode , formatter , }

3086 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3086 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3087 :	"return"
		- NEIGH  = { return , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { }

3090 :	"formatter"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3090 :	"startNode"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3090 :	"isWKT2"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3090 :	"io"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3090 :	"WKTConstants"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3090 :	"PROJCRS"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3091 :	"io"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3091 :	"WKTConstants"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3091 :	"PROJCS"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3092 :	"!"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3092 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3092 :	"empty"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3094 :	"if"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { empty , l_alias , if , }
		- PRED   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3094 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { empty , l_alias , if , }
		- PRED   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3094 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { empty , l_alias , if , }
		- PRED   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3095 :	"if"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { l_alias , WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { }
		- SUCC   = { }

3095 :	"l_alias"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { l_alias , WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { }
		- SUCC   = { }

3095 :	"empty"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { l_alias , WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { }
		- SUCC   = { }

3096 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3096 :	"io"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3096 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3096 :	"morphNameToESRI"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3096 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3098 :	"l_name"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3098 :	"l_alias"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3101 :	"if"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3101 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3101 :	"isWKT2"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3101 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3101 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3101 :	"formatter"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3101 :	"useESRIDialect"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3101 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3101 :	"isDeprecated"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3102 :	"l_name"
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3102 :	"+="
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3104 :	"formatter"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { baseCRS , d , l_baseCRS , & , }

3104 :	"addQuotedString"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { baseCRS , d , l_baseCRS , & , }

3104 :	"l_name"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { baseCRS , d , l_baseCRS , & , }

3106 :	"&"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3106 :	"l_baseCRS"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3106 :	"d"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3106 :	"baseCRS"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3107 :	"&"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3107 :	"geodeticCRSAxisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3107 :	"l_baseCRS"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3107 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3107 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3109 :	"if"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { NO , OutputAxisRule , outputAxis , endNode , topLevelHasId , _exportToWKT , primeMeridian , if , exportDatumOrDatumEnsembleToWkt , oldAxisOutputRule , empty , setOutputAxis , identifiers , WKTFormatter , BASEGEODCRS , nameStr , WKTConstants , startNode , io , addQuotedString , get , l_baseCRS , && , primeMeridianOrParameterUnitOmittedIfSameAsAxis , BASEGEOGCRS , use2019Keywords , > , idOnTopLevelOnly , GeographicCRS , dynamic_cast , < , ! , formatter , * , }
		- PRED   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- SUCC   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }

3109 :	"isWKT2"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { NO , OutputAxisRule , outputAxis , endNode , topLevelHasId , _exportToWKT , primeMeridian , if , exportDatumOrDatumEnsembleToWkt , oldAxisOutputRule , empty , setOutputAxis , identifiers , WKTFormatter , BASEGEODCRS , nameStr , WKTConstants , startNode , io , addQuotedString , get , l_baseCRS , && , primeMeridianOrParameterUnitOmittedIfSameAsAxis , BASEGEOGCRS , use2019Keywords , > , idOnTopLevelOnly , GeographicCRS , dynamic_cast , < , ! , formatter , * , }
		- PRED   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- SUCC   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }

3110 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3110 :	"startNode"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3111 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3111 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3111 :	"&&"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3112 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3112 :	"<"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3112 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3112 :	"*"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3112 :	">"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3112 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3112 :	"get"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3113 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3113 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3113 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3114 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3114 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3114 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3115 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3115 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3115 :	"&&"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3115 :	"!"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3115 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3115 :	"identifiers"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3115 :	"empty"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3116 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3116 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3116 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3116 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3117 :	"l_baseCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }

3117 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }

3117 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }

3122 :	"if"
		- NEIGH  = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

3122 :	"formatter"
		- NEIGH  = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

3122 :	"primeMeridianOrParameterUnitOmittedIfSameAsAxis"
		- NEIGH  = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

3123 :	"geodeticCRSAxisList"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3123 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3123 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3123 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3125 :	"l_baseCRS"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3125 :	"primeMeridian"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3125 :	"_exportToWKT"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3125 :	"formatter"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3126 :	"if"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3126 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3126 :	"use2019Keywords"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3126 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3127 :	"!"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3127 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3127 :	"idOnTopLevelOnly"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3127 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3127 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3127 :	"topLevelHasId"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3128 :	"l_baseCRS"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3128 :	"formatID"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3128 :	"formatter"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3130 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { }

3130 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { }

3132 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

3132 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

3132 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

3133 :	"formatter"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3133 :	"setOutputAxis"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3133 :	"io"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3133 :	"WKTFormatter"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3133 :	"OutputAxisRule"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3133 :	"NO"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3134 :	"l_baseCRS"
		- NEIGH  = { formatter , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3134 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3134 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3135 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_baseCRS , }
		- SUCC   = { }

3135 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_baseCRS , }
		- SUCC   = { }

3135 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_baseCRS , }
		- SUCC   = { }

3138 :	"formatter"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3138 :	"pushAxisLinearUnit"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3139 :	"common"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3139 :	"UnitOfMeasure"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3139 :	"create"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3139 :	"axisList"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3139 :	"unit"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3141 :	"formatter"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3141 :	"pushAxisAngularUnit"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3142 :	"common"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3142 :	"UnitOfMeasure"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3142 :	"create"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3142 :	"geodeticCRSAxisList"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3142 :	"unit"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3144 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { popAxisAngularUnit , formatter , }

3144 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { popAxisAngularUnit , formatter , }

3144 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { popAxisAngularUnit , formatter , }

3146 :	"formatter"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { popAxisLinearUnit , formatter , }

3146 :	"popAxisAngularUnit"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { popAxisLinearUnit , formatter , }

3148 :	"formatter"
		- NEIGH  = { popAxisLinearUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

3148 :	"popAxisLinearUnit"
		- NEIGH  = { popAxisLinearUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

3150 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { popAxisLinearUnit , formatter , }
		- SUCC   = { exportAxis , }

3150 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { popAxisLinearUnit , formatter , }
		- SUCC   = { exportAxis , }

3150 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { popAxisLinearUnit , formatter , }
		- SUCC   = { exportAxis , }

3151 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3154 :	"exportAxis"
		- NEIGH  = { exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

3156 :	"if"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3156 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3156 :	"isWKT2"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3156 :	"&&"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3156 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3156 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3156 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3157 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3157 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3157 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3157 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3157 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3158 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3158 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3158 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3158 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3159 :	"formatter"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3159 :	"startNode"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3159 :	"io"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3159 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3159 :	"EXTENSION"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3160 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

3160 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

3161 :	"formatter"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3161 :	"addQuotedString"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3161 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3162 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

3162 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

3164 :	"derivingConversionRef"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3164 :	"addWKTExtensionNode"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3164 :	"formatter"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3168 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { endNode , formatter , }

3168 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { endNode , formatter , }

3168 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { endNode , formatter , }

3169 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3169 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3170 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { }

3177 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3177 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3178 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3178 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3178 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3178 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3180 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3180 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3180 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3180 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3181 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3182 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3182 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3182 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3182 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3182 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3184 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3184 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3185 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3185 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3186 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3186 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3186 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3187 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3187 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3189 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3189 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3189 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3192 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setAllowIDInImmediateChild , formatter , }

3192 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setAllowIDInImmediateChild , formatter , }

3193 :	"formatter"
		- NEIGH  = { setAllowIDInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3193 :	"setAllowIDInImmediateChild"
		- NEIGH  = { setAllowIDInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3194 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAllowIDInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3194 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAllowIDInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3195 :	"baseCRS"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3195 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3195 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3197 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3197 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3198 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3198 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3199 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3199 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3199 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3201 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3201 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3202 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3202 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3203 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3203 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3203 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3205 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3205 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3205 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3211 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3211 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3212 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3212 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3212 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3212 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3214 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3214 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3214 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3214 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3214 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3215 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

3215 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

3215 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

3215 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

3216 :	"formatter"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

3216 :	"ingestPROJString"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

3217 :	"replaceAll"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

3217 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

3218 :	"formatter"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

3218 :	"addNoDefs"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

3219 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addNoDefs , formatter , }
		- SUCC   = { }

3222 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToPROJString , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { }

3222 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { }

3222 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { }

3241 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3242 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3242 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3242 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3242 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3242 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3242 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3243 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3243 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3243 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3244 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3244 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3244 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3244 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3245 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3245 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3245 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3245 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3246 :	"crs"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3246 :	"ProjectedCRS"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3246 :	"nn_make_shared"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3246 :	"<"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3246 :	"ProjectedCRS"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3246 :	">"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3247 :	"baseCRSIn"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3247 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3247 :	"csIn"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3248 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

3248 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

3248 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

3249 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3249 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3249 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3250 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

3250 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

3251 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3251 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3252 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3252 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3252 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3252 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

3253 :	"crs"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3253 :	"CRS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3253 :	"getPrivate"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3253 :	"setImplicitCS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3253 :	"properties"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

3254 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

3254 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

3259 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3259 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3260 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3260 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3260 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3260 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3262 :	"otherProjCRS"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3262 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3262 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3262 :	"ProjectedCRS"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3262 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3262 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3262 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }

3263 :	"return"
		- NEIGH  = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3263 :	"otherProjCRS"
		- NEIGH  = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3263 :	"!="
		- NEIGH  = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3263 :	"&&"
		- NEIGH  = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3264 :	"DerivedCRS"
		- NEIGH  = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3264 :	"_isEquivalentTo"
		- NEIGH  = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3264 :	"other"
		- NEIGH  = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3264 :	"criterion"
		- NEIGH  = { other , _isEquivalentTo , && , DerivedCRS , != , otherProjCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , otherProjCRS , ProjectedCRS , < , }
		- SUCC   = { }

3270 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3271 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3271 :	"alterParametersLinearUnit"
		- NEIGH  = { alterParametersLinearUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3271 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3271 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3271 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3271 :	"unit"
		- NEIGH  = { unit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3272 :	"convertToNewUnit"
		- NEIGH  = { convertToNewUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3273 :	"return"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3273 :	"create"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3273 :	"createPropertyMap"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3273 :	"this"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3273 :	"baseCRS"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3274 :	"derivingConversionRef"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3274 :	"alterParametersLinearUnit"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3275 :	"unit"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3275 :	"convertToNewUnit"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3276 :	"coordinateSystem"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , this , create , baseCRS , coordinateSystem , derivingConversionRef , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"addUnitConvertAndAxisSwap"
		- NEIGH  = { addUnitConvertAndAxisSwap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3284 :	"axisSpecFound"
		- NEIGH  = { axisSpecFound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3285 :	"&"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3285 :	"axisList"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3285 :	"d"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3285 :	"coordinateSystem"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3285 :	"axisList"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

3286 :	"&"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

3286 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

3286 :	"axisList"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

3286 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

3287 :	"if"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3287 :	"!"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3287 :	"unit"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3287 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3287 :	"common"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3287 :	"UnitOfMeasure"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3287 :	"METRE"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3288 :	"util"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3288 :	"IComparable"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3288 :	"Criterion"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3288 :	"EQUIVALENT"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

3289 :	"projUnit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , unit , toSI , }

3289 :	"unit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , unit , toSI , }

3289 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , unit , toSI , }

3290 :	"toSI"
		- NEIGH  = { conversionToSI , unit , toSI , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

3290 :	"unit"
		- NEIGH  = { conversionToSI , unit , toSI , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

3290 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , toSI , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

3291 :	"if"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { empty , projUnit , addParam , addStep , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

3291 :	"!"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { empty , projUnit , addParam , addStep , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

3291 :	"formatter"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { empty , projUnit , addParam , addStep , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

3291 :	"getCRSExport"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { empty , projUnit , addParam , addStep , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

3292 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3292 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3293 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { addParam , formatter , }

3293 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { addParam , formatter , }

3294 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , if , }

3294 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , if , }

3295 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { }

3295 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { }

3295 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { }

3296 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { toSI , addParam , formatter , }

3296 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { toSI , addParam , formatter , }

3296 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { toSI , addParam , formatter , }

3297 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

3297 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

3297 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

3299 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

3299 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

3299 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

3300 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { }

3300 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { }

3300 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { }

3303 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3303 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3303 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3304 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3304 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3304 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3309 :	"if"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3309 :	"formatter"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3309 :	"getCRSExport"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3309 :	"&&"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3310 :	"!"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3310 :	"formatter"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3310 :	"getLegacyCRSToCRSContext"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

3311 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3311 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3314 :	"if"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- SUCC   = { }

3314 :	"!"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- SUCC   = { }

3314 :	"axisSpecFound"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- SUCC   = { }

3314 :	"&&"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- SUCC   = { }

3314 :	"!"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- SUCC   = { }

3314 :	"formatter"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- SUCC   = { }

3314 :	"getCRSExport"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- SUCC   = { }

3315 :	"&"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

3315 :	"dir0"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

3315 :	"axisList"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

3315 :	"direction"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

3316 :	"&"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

3316 :	"dir1"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

3316 :	"axisList"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

3316 :	"direction"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

3317 :	"if"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3317 :	"!"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3317 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3317 :	"dir0"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3317 :	"=="
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3317 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3317 :	"cs"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3317 :	"AxisDirection"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3317 :	"EAST"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3317 :	"&&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3318 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3318 :	"dir1"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3318 :	"=="
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3318 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3318 :	"cs"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3318 :	"AxisDirection"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3318 :	"NORTH"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3318 :	"&&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3321 :	"dir0"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3321 :	"!="
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3321 :	"dir1"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

3323 :	"*"
		- NEIGH  = { order , * , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

3323 :	"order"
		- NEIGH  = { order , * , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

3324 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3324 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3324 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3324 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3324 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3324 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

3325 :	"&"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3325 :	"dir"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3325 :	"axisList"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3325 :	"i"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3325 :	"direction"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

3326 :	"if"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3326 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3326 :	"dir"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3326 :	"=="
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3326 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3326 :	"cs"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3326 :	"AxisDirection"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3326 :	"WEST"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

3327 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3327 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3328 :	"if"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3328 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3328 :	"dir"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3328 :	"=="
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3328 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3328 :	"cs"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3328 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3328 :	"EAST"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3329 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3329 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3330 :	"if"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3330 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3330 :	"dir"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3330 :	"=="
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3330 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3330 :	"cs"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3330 :	"AxisDirection"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3330 :	"SOUTH"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

3331 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3331 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3332 :	"if"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3332 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3332 :	"dir"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3332 :	"=="
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3332 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3332 :	"cs"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3332 :	"AxisDirection"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3332 :	"NORTH"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

3333 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3333 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3336 :	"if"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

3336 :	"order"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

3336 :	"&&"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

3336 :	"order"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

3337 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

3337 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

3338 :	"orderStr"
		- NEIGH  = { orderStr , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { order , orderStr , sprintf , }

3339 :	"sprintf"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

3339 :	"orderStr"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

3339 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

3339 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

3340 :	"formatter"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

3340 :	"addParam"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

3340 :	"orderStr"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

3343 :	"&"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

3343 :	"name0"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

3343 :	"axisList"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

3343 :	"nameStr"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

3344 :	"&"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

3344 :	"name1"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

3344 :	"axisList"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

3344 :	"nameStr"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

3345 :	"northingEasting"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3345 :	"ci_starts_with"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3345 :	"name0"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3345 :	"&&"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3346 :	"ci_starts_with"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3346 :	"name1"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

3349 :	"if"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3349 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3349 :	"dir0"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3349 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3349 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3349 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3349 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3349 :	"SOUTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3349 :	"&&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3350 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3350 :	"dir1"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3350 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3350 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3350 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3350 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3350 :	"SOUTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3350 :	"||"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3351 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3351 :	"dir0"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3351 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3351 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3351 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3351 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3351 :	"NORTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3351 :	"&&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3352 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3352 :	"dir1"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3352 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3352 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3352 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3352 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3352 :	"NORTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3352 :	"&&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3353 :	"northingEasting"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

3354 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3354 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3355 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { }

3355 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { }

3394 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3394 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3394 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3394 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3394 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3394 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3394 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3394 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3395 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3395 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3395 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3395 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3395 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3395 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3396 :	"std"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3396 :	"pair"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3396 :	"<"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3396 :	"ProjectedCRSNNPtr"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3396 :	">"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3396 :	"Pair"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3397 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3397 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3397 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3397 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3397 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3397 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

3399 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

3399 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

3399 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

3401 :	"std"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3401 :	"list"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3401 :	"<"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3401 :	"std"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3401 :	"pair"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3401 :	"<"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3401 :	"GeodeticCRSNNPtr"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3401 :	">>"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3401 :	"baseRes"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

3402 :	"&"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

3402 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

3402 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

3403 :	"geogCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3403 :	"dynamic_cast"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3403 :	"<"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3403 :	"GeographicCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3403 :	"*"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3403 :	">"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3403 :	"l_baseCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3403 :	"get"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

3404 :	"if"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3404 :	"geogCRS"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3404 :	"&&"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3405 :	"geogCRS"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3405 :	"coordinateSystem"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3405 :	"axisOrder"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3405 :	"=="
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3406 :	"cs"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3406 :	"EllipsoidalCS"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3406 :	"AxisOrder"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3406 :	"LONG_EAST_LAT_NORTH"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

3407 :	"baseRes"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3408 :	"GeographicCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3408 :	"create"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3409 :	"util"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3409 :	"PropertyMap"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3409 :	"set"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3409 :	"common"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3409 :	"IdentifiedObject"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3409 :	"NAME_KEY"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3410 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3410 :	"nameStr"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3411 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3411 :	"datum"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3411 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3411 :	"datumEnsemble"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3412 :	"cs"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3412 :	"EllipsoidalCS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3412 :	"createLatitudeLongitude"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3413 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3413 :	"coordinateSystem"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3413 :	"axisList"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3413 :	"unit"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3414 :	"identify"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3414 :	"authorityFactory"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3416 :	"baseRes"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3416 :	"l_baseCRS"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3416 :	"identify"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3416 :	"authorityFactory"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3419 :	"zone"
		- NEIGH  = { zone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- SUCC   = { north , }

3420 :	"north"
		- NEIGH  = { north , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { zone , }
		- SUCC   = { crsName , std , & , thisName , string , computeConfidence , }

3422 :	"computeConfidence"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3422 :	"&"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3422 :	"thisName"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3422 :	"std"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3422 :	"string"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3422 :	"&"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3422 :	"crsName"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { l_north , l_zone , base , * , computeUTMCRSName , }

3423 :	"return"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3423 :	"crsName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3423 :	"=="
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3423 :	"thisName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3424 :	"metadata"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3424 :	"Identifier"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3424 :	"isEquivalentName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3425 :	"crsName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3425 :	"c_str"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3425 :	"thisName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3425 :	"c_str"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3429 :	"computeUTMCRSName"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3429 :	"*"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3429 :	"base"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3429 :	"l_zone"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3429 :	"l_north"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { derivingConversionRef , conv , & , }

3430 :	"return"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3430 :	"base"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3430 :	"+"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3430 :	"toString"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3430 :	"l_zone"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3430 :	"+"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3430 :	"l_north"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3433 :	"&"
		- NEIGH  = { derivingConversionRef , conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { coordinateSystem , cs , & , }

3433 :	"conv"
		- NEIGH  = { derivingConversionRef , conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { coordinateSystem , cs , & , }

3433 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { coordinateSystem , cs , & , }

3434 :	"&"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , conv , & , }
		- SUCC   = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }

3434 :	"cs"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , conv , & , }
		- SUCC   = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }

3434 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , conv , & , }
		- SUCC   = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }

3435 :	"if"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3435 :	"baseRes"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3435 :	"size"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3435 :	"=="
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3435 :	"&&"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3435 :	"baseRes"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3435 :	"front"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3435 :	"second"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3435 :	">="
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3435 :	"&&"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3436 :	"conv"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3436 :	"isUTM"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3436 :	"zone"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3436 :	"north"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3436 :	"&&"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3437 :	"cs"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3437 :	"_isEquivalentTo"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3438 :	"cs"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3438 :	"CartesianCS"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3438 :	"createEastingNorthing"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3438 :	"common"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3438 :	"UnitOfMeasure"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3438 :	"METRE"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3439 :	"get"
		- NEIGH  = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- PARENT = { }
		- CHILD  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { authorityFactory , if , }

3440 :	"if"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3440 :	"baseRes"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3440 :	"front"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3440 :	"first"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3440 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3441 :	"GeographicCRS"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3441 :	"EPSG_4326"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3441 :	"get"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3442 :	"util"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3442 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3442 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3442 :	"EQUIVALENT"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- PARENT = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { }
		- SUCC   = { }

3443 :	"std"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3443 :	"string"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3443 :	"crsName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3444 :	"computeUTMCRSName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3444 :	"zone"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3444 :	"north"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

3445 :	"res"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3445 :	"emplace_back"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3446 :	"ProjectedCRS"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3446 :	"create"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3447 :	"createMapNameEPSGCode"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3447 :	"crsName"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3447 :	"c_str"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3448 :	"north"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3448 :	"+"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3448 :	"zone"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3449 :	"GeographicCRS"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3449 :	"EPSG_4326"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3449 :	"conv"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3449 :	"identify"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3449 :	"cs"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3450 :	"computeConfidence"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3450 :	"crsName"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3451 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- SUCC   = { }

3451 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- SUCC   = { }

3452 :	"if"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	">="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"<="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3452 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3453 :	"north"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3453 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3454 :	"baseRes"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3454 :	"front"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3454 :	"first"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3454 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3455 :	"GeographicCRS"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3455 :	"EPSG_4267"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3455 :	"get"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3456 :	"util"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3456 :	"IComparable"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3456 :	"Criterion"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3456 :	"EQUIVALENT"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , if , first , baseRes , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

3457 :	"std"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3457 :	"string"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3457 :	"crsName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3458 :	"computeUTMCRSName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3458 :	"zone"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3458 :	"north"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3459 :	"res"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3459 :	"emplace_back"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3460 :	"ProjectedCRS"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3460 :	"create"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3461 :	"createMapNameEPSGCode"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3461 :	"crsName"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3461 :	"c_str"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3462 :	"zone"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3462 :	">="
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3462 :	"+"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3462 :	"zone"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3462 :	"-"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3463 :	"+"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3463 :	"zone"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3464 :	"GeographicCRS"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3464 :	"EPSG_4267"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3464 :	"conv"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3464 :	"identify"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3464 :	"cs"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3465 :	"computeConfidence"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3465 :	"crsName"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3466 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

3466 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

3467 :	"if"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	">="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"<="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3467 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3468 :	"north"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3468 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3469 :	"baseRes"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3469 :	"front"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3469 :	"first"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3469 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3470 :	"GeographicCRS"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3470 :	"EPSG_4269"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3470 :	"get"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3471 :	"util"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3471 :	"IComparable"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3471 :	"Criterion"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3471 :	"EQUIVALENT"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

3472 :	"std"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3472 :	"string"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3472 :	"crsName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3473 :	"computeUTMCRSName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3473 :	"zone"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3473 :	"north"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

3474 :	"res"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3474 :	"emplace_back"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3475 :	"ProjectedCRS"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3475 :	"create"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3476 :	"createMapNameEPSGCode"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3476 :	"crsName"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3476 :	"c_str"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3477 :	"zone"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3477 :	">="
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3477 :	"+"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3477 :	"zone"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3477 :	"-"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3478 :	"+"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3478 :	"zone"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3479 :	"GeographicCRS"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3479 :	"EPSG_4269"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3479 :	"conv"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3479 :	"identify"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3479 :	"cs"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3480 :	"computeConfidence"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3480 :	"crsName"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

3481 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

3481 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

3485 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , < , ci_equal , ! , second , sort , res , a , this , && , Pair , & , || , lambdaSort , if , empty , authorityFactory , front , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , >= , unsignificantName , }
		- PRED   = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- SUCC   = { res , return , }

3485 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , < , ci_equal , ! , second , sort , res , a , this , && , Pair , & , || , lambdaSort , if , empty , authorityFactory , front , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , >= , unsignificantName , }
		- PRED   = { get , UnitOfMeasure , METRE , common , CartesianCS , createEastingNorthing , _isEquivalentTo , cs , == , isUTM , conv , && , >= , north , second , baseRes , zone , front , size , if , }
		- SUCC   = { res , return , }

3487 :	"unsignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3487 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3487 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3487 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3488 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3488 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3488 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3489 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3489 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3490 :	"foundEquivalentName"
		- NEIGH  = { foundEquivalentName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3492 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3492 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3492 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3492 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3495 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3495 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3495 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3495 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3496 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , createProjectedCRS , emplace_back , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , _isEquivalentTo , crs , AuthorityFactory , create , std , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

3496 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , createProjectedCRS , emplace_back , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , _isEquivalentTo , crs , AuthorityFactory , create , std , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

3496 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , createProjectedCRS , emplace_back , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , _isEquivalentTo , crs , AuthorityFactory , create , std , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

3496 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , createProjectedCRS , emplace_back , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , _isEquivalentTo , crs , AuthorityFactory , create , std , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

3498 :	"crs"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3498 :	"io"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3498 :	"AuthorityFactory"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3498 :	"create"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3499 :	"authorityFactory"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3499 :	"databaseContext"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3500 :	"*"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3500 :	"id"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3500 :	"codeSpace"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3501 :	"createProjectedCRS"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3501 :	"id"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3501 :	"code"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }

3502 :	"match"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3502 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3503 :	"crs"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3503 :	"get"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3504 :	"util"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3504 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3504 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3505 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3506 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

3506 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

3506 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

3506 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

3507 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

3507 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

3508 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3508 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3508 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3508 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3512 :	"if"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3512 :	"!"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3512 :	"unsignificantName"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3513 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3513 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3513 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3513 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3513 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3513 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , io , createObjectsFromName , authorityFactory , == , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3514 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3514 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3514 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3515 :	"objects"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3515 :	"authorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3515 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3516 :	"thisName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3516 :	"io"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3516 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3516 :	"ObjectType"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3516 :	"PROJECTED_CRS"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3517 :	"approximateMatch"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3518 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , get , assert , if , |= , c_str , thisName , IComparable , ProjectedCRS , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , eqName , util , < , crsNN , foundEquivalentName , obj , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3518 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , get , assert , if , |= , c_str , thisName , IComparable , ProjectedCRS , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , eqName , util , < , crsNN , foundEquivalentName , obj , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3518 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , get , assert , if , |= , c_str , thisName , IComparable , ProjectedCRS , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , eqName , util , < , crsNN , foundEquivalentName , obj , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3518 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , get , assert , if , |= , c_str , thisName , IComparable , ProjectedCRS , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , eqName , util , < , crsNN , foundEquivalentName , obj , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , PROJECTED_CRS , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3519 :	"crs"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3519 :	"util"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3519 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3519 :	"<"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3519 :	"ProjectedCRS"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3519 :	">"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3519 :	"obj"
		- NEIGH  = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3520 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

3520 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , ProjectedCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

3521 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

3521 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

3521 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

3522 :	"eqName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3522 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3522 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3522 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3523 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3523 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3523 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3523 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3523 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3524 :	"foundEquivalentName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3524 :	"|="
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3524 :	"eqName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3525 :	"if"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { size , objects , EQUIVALENT , IComparable , l_baseCRS , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , getPrivate , thisName , crsNN , CRS , emplace_back , derivingConversionRef , baseCRS , eqName , && , util , res , Criterion , == , nameStr , _isEquivalentTo , implicitCS_ , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3525 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { size , objects , EQUIVALENT , IComparable , l_baseCRS , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , getPrivate , thisName , crsNN , CRS , emplace_back , derivingConversionRef , baseCRS , eqName , && , util , res , Criterion , == , nameStr , _isEquivalentTo , implicitCS_ , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3526 :	"crs"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { size , objects , EQUIVALENT , IComparable , l_baseCRS , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , getPrivate , thisName , crsNN , CRS , emplace_back , derivingConversionRef , baseCRS , eqName , && , util , res , Criterion , == , nameStr , _isEquivalentTo , implicitCS_ , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3526 :	"get"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { size , objects , EQUIVALENT , IComparable , l_baseCRS , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , getPrivate , thisName , crsNN , CRS , emplace_back , derivingConversionRef , baseCRS , eqName , && , util , res , Criterion , == , nameStr , _isEquivalentTo , implicitCS_ , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3527 :	"util"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { size , objects , EQUIVALENT , IComparable , l_baseCRS , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , getPrivate , thisName , crsNN , CRS , emplace_back , derivingConversionRef , baseCRS , eqName , && , util , res , Criterion , == , nameStr , _isEquivalentTo , implicitCS_ , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3527 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { size , objects , EQUIVALENT , IComparable , l_baseCRS , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , getPrivate , thisName , crsNN , CRS , emplace_back , derivingConversionRef , baseCRS , eqName , && , util , res , Criterion , == , nameStr , _isEquivalentTo , implicitCS_ , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3527 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { size , objects , EQUIVALENT , IComparable , l_baseCRS , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , getPrivate , thisName , crsNN , CRS , emplace_back , derivingConversionRef , baseCRS , eqName , && , util , res , Criterion , == , nameStr , _isEquivalentTo , implicitCS_ , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3528 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { size , objects , EQUIVALENT , IComparable , l_baseCRS , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , getPrivate , thisName , crsNN , CRS , emplace_back , derivingConversionRef , baseCRS , eqName , && , util , res , Criterion , == , nameStr , _isEquivalentTo , implicitCS_ , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3529 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3529 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3529 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3529 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3529 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3530 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3530 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3531 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3531 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3531 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3532 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3532 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3534 :	"res"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3534 :	"emplace_back"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3534 :	"crsNN"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3534 :	"eqName"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3535 :	"if"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3535 :	"crs"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3535 :	"nameStr"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3535 :	"=="
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3535 :	"thisName"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3535 :	"&&"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3536 :	"CRS"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3536 :	"getPrivate"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3536 :	"implicitCS_"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3536 :	"&&"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3537 :	"l_baseCRS"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3537 :	"_isEquivalentTo"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3538 :	"crs"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3538 :	"baseCRS"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3538 :	"get"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3539 :	"util"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3539 :	"IComparable"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3539 :	"Criterion"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3540 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3540 :	"&&"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3541 :	"derivingConversionRef"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3541 :	"_isEquivalentTo"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3542 :	"crs"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3542 :	"derivingConversionRef"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3542 :	"get"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3543 :	"util"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3543 :	"IComparable"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3543 :	"Criterion"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3543 :	"EQUIVALENT"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3543 :	"&&"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3544 :	"objects"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3544 :	"size"
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3544 :	"=="
		- NEIGH  = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3545 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3545 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3546 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3546 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3546 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3547 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3547 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3549 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3549 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3549 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { objects , EQUIVALENT , IComparable , util , get , derivingConversionRef , baseCRS , thisName , CRS , implicitCS_ , crs , _isEquivalentTo , getPrivate , && , Criterion , == , size , nameStr , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , l_baseCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3552 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3552 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3552 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3552 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3553 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3558 :	"lambdaSort"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3558 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3558 :	"thisName"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3558 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3558 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3558 :	"a"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3558 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3558 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3558 :	"b"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3560 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3560 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3560 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3560 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3560 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3560 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3561 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3563 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3563 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3563 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3563 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3563 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3563 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3564 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3568 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3568 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3568 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3568 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3568 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3569 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3569 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3569 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3569 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3569 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3570 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3570 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3570 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3570 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3570 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3570 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3570 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3570 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3571 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3573 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3573 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3573 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3573 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3573 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3573 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3573 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3573 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3574 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3578 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3578 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3578 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3578 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3582 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }

3582 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }

3582 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }

3584 :	"if"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3584 :	"!"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3584 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3584 :	"this"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3584 :	"authorityFactory"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3584 :	"&&"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"!"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"foundEquivalentName"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"&&"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"res"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"empty"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"||"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"res"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"front"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"second"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3585 :	"<"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , ellipsoid , createProjectedCRSFromExisting , as_nullable , pair , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , lambdaSort , for , crs , self , string , < , l_baseCRS , alreadyKnown , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3586 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"set"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"pair"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	">>"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3586 :	"alreadyKnown"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3587 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3587 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3587 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3587 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3588 :	"&"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3588 :	"ids"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3588 :	"pair"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3588 :	"first"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3588 :	"identifiers"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3589 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3589 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3589 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3589 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3590 :	"alreadyKnown"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3590 :	"insert"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3590 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3590 :	"pair"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3590 :	"<"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3590 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3590 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3590 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3590 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3590 :	">"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3591 :	"*"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3591 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3591 :	"codeSpace"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3591 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3591 :	"code"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3594 :	"self"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3594 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3594 :	"std"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3594 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3594 :	"<"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3594 :	"ProjectedCRS"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3594 :	">"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3595 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3595 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

3596 :	"candidates"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

3597 :	"authorityFactory"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

3597 :	"createProjectedCRSFromExisting"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

3597 :	"self"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

3598 :	"&"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { candidates , crs , & , for , }

3598 :	"ellipsoid"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { candidates , crs , & , for , }

3598 :	"l_baseCRS"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { candidates , crs , & , for , }

3598 :	"ellipsoid"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { candidates , crs , & , for , }

3599 :	"for"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { lambdaSort , sort , res , }

3599 :	"&"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { lambdaSort , sort , res , }

3599 :	"crs"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { lambdaSort , sort , res , }

3599 :	"candidates"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { lambdaSort , sort , res , }

3600 :	"&"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3600 :	"ids"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3600 :	"crs"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3600 :	"identifiers"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3601 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3601 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3601 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3601 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3602 :	"if"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	"find"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	"pair"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	"<"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3602 :	">"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3603 :	"*"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3603 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3603 :	"codeSpace"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3603 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3603 :	"code"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3603 :	"!="
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3604 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3604 :	"end"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }

3605 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3608 :	"if"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3608 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3608 :	"crs"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3608 :	"get"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3609 :	"util"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3609 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3609 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3610 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { EQUIVALENT , Criterion , util , get , ellipsoid , if , IComparable , unsignificantName , crs , _isEquivalentTo , && , emplace_back , derivingConversionRef , baseCRS , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3611 :	"res"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3611 :	"emplace_back"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3611 :	"crs"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3611 :	"unsignificantName"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3612 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3612 :	"ellipsoid"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3612 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3613 :	"crs"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3613 :	"baseCRS"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3613 :	"ellipsoid"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3613 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3614 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3614 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3614 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3614 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3614 :	"&&"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3615 :	"derivingConversionRef"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3615 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3616 :	"crs"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3616 :	"derivingConversionRef"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3616 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3617 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3617 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3617 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3617 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- PARENT = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , res , IComparable , Criterion , util , get , coordinateSystem , crs , emplace_back , _isEquivalentTo , if , }
		- PRED   = { }
		- SUCC   = { }

3618 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3618 :	"coordinateSystem"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3618 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3619 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3619 :	"coordinateSystem"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3619 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3620 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3620 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3620 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3620 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

3621 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3621 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3621 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3623 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3623 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3623 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , coordinateSystem , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3626 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3626 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3626 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , Criterion , util , get , && , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3630 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

3630 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

3630 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

3634 :	"if"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

3634 :	"res"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

3634 :	"size"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

3634 :	">="
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

3635 :	"highestConfidence"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3635 :	"res"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3635 :	"front"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3635 :	"second"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3636 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3636 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3636 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3636 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3636 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3636 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3637 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3637 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3637 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3637 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3638 :	"if"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3638 :	"pair"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3638 :	"second"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3638 :	"=="
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3638 :	"highestConfidence"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3639 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3639 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3639 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3641 :	"break"
		- NEIGH  = { break , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3644 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

3644 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

3648 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

3648 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

3655 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3657 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3657 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3657 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3657 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3657 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3657 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3658 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3658 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3658 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3658 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3658 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3658 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3659 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

3659 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

3659 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

3660 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3660 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3660 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3660 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3661 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3661 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3661 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3661 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3661 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3661 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3663 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

3663 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

3671 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3671 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3672 :	"std"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3672 :	"vector"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3672 :	"<"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3672 :	"CRSNNPtr"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3672 :	">"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3672 :	"components_"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3678 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3678 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3678 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3678 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3678 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3678 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3678 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3678 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3678 :	"components"
		- NEIGH  = { components , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3679 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3679 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3679 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3679 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3679 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3679 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3679 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3680 :	"d"
		- NEIGH  = { components_ , components , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3680 :	"components_"
		- NEIGH  = { components_ , components , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3680 :	"components"
		- NEIGH  = { components_ , components , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3685 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3685 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3685 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3685 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3685 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3686 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3691 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3691 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3696 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3696 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3696 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3697 :	"crs"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3697 :	"CompoundCRS"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3697 :	"nn_make_shared"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3697 :	"<"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3697 :	"CompoundCRS"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3697 :	">"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3697 :	"*"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3697 :	"this"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3698 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

3698 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

3698 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

3699 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

3699 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

3708 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3708 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3708 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3708 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3708 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3708 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3709 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3709 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3709 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3710 :	"return"
		- NEIGH  = { components_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3710 :	"d"
		- NEIGH  = { components_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3710 :	"components_"
		- NEIGH  = { components_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3722 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3722 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3722 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3722 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3722 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3722 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3722 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3723 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3723 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3723 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3723 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3723 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3723 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3723 :	"components"
		- NEIGH  = { components , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3724 :	"compoundCRS"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , compoundCRS , }

3724 :	"CompoundCRS"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , compoundCRS , }

3724 :	"nn_make_shared"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , compoundCRS , }

3724 :	"<"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , compoundCRS , }

3724 :	"CompoundCRS"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , compoundCRS , }

3724 :	">"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , compoundCRS , }

3724 :	"components"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , compoundCRS , }

3725 :	"compoundCRS"
		- NEIGH  = { assignSelf , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- SUCC   = { setProperties , properties , compoundCRS , }

3725 :	"assignSelf"
		- NEIGH  = { assignSelf , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- SUCC   = { setProperties , properties , compoundCRS , }

3725 :	"compoundCRS"
		- NEIGH  = { assignSelf , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- SUCC   = { setProperties , properties , compoundCRS , }

3726 :	"compoundCRS"
		- NEIGH  = { setProperties , properties , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , compoundCRS , }
		- SUCC   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }

3726 :	"setProperties"
		- NEIGH  = { setProperties , properties , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , compoundCRS , }
		- SUCC   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }

3726 :	"properties"
		- NEIGH  = { setProperties , properties , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , compoundCRS , }
		- SUCC   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }

3727 :	"if"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

3727 :	"!"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

3727 :	"properties"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

3727 :	"get"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

3727 :	"common"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

3727 :	"IdentifiedObject"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

3727 :	"NAME_KEY"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

3728 :	"std"
		- NEIGH  = { string , name , std , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { components , crs , & , for , }

3728 :	"string"
		- NEIGH  = { string , name , std , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { components , crs , & , for , }

3728 :	"name"
		- NEIGH  = { string , name , std , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { components , crs , & , for , }

3729 :	"for"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

3729 :	"&"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

3729 :	"crs"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

3729 :	"components"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

3730 :	"if"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

3730 :	"!"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

3730 :	"name"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

3730 :	"empty"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

3731 :	"name"
		- NEIGH  = { += , name , }
		- PARENT = { empty , ! , name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3731 :	"+="
		- NEIGH  = { += , name , }
		- PARENT = { empty , ! , name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3733 :	"&"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

3733 :	"l_name"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

3733 :	"crs"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

3733 :	"nameStr"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

3734 :	"if"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

3734 :	"!"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

3734 :	"l_name"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

3734 :	"empty"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

3735 :	"name"
		- NEIGH  = { l_name , += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3735 :	"+="
		- NEIGH  = { l_name , += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3735 :	"l_name"
		- NEIGH  = { l_name , += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3737 :	"name"
		- NEIGH  = { += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3737 :	"+="
		- NEIGH  = { += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3740 :	"util"
		- NEIGH  = { propertyName , PropertyMap , util , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { components , crs , & , for , }
		- SUCC   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }

3740 :	"PropertyMap"
		- NEIGH  = { propertyName , PropertyMap , util , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { components , crs , & , for , }
		- SUCC   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }

3740 :	"propertyName"
		- NEIGH  = { propertyName , PropertyMap , util , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { components , crs , & , for , }
		- SUCC   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }

3741 :	"propertyName"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

3741 :	"set"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

3741 :	"common"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

3741 :	"IdentifiedObject"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

3741 :	"NAME_KEY"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

3741 :	"name"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

3742 :	"compoundCRS"
		- NEIGH  = { propertyName , setProperties , compoundCRS , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- SUCC   = { }

3742 :	"setProperties"
		- NEIGH  = { propertyName , setProperties , compoundCRS , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- SUCC   = { }

3742 :	"propertyName"
		- NEIGH  = { propertyName , setProperties , compoundCRS , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- SUCC   = { }

3745 :	"return"
		- NEIGH  = { compoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- SUCC   = { }

3745 :	"compoundCRS"
		- NEIGH  = { compoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- SUCC   = { }

3751 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3751 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3751 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3751 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3751 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3751 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3752 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

3752 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

3752 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

3752 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

3752 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

3752 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

3752 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

3752 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }

3753 :	"formatter"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3753 :	"startNode"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3753 :	"isWKT2"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3753 :	"io"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3753 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3753 :	"COMPOUNDCRS"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3754 :	"io"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3754 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3754 :	"COMPD_CS"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3755 :	"!"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3755 :	"identifiers"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3755 :	"empty"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3756 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

3756 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

3756 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

3757 :	"for"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3757 :	"&"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3757 :	"crs"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3757 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3758 :	"crs"
		- NEIGH  = { formatter , _exportToWKT , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3758 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3758 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3760 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { endNode , formatter , }

3760 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { endNode , formatter , }

3760 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { endNode , formatter , }

3761 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

3761 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

3768 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3768 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3769 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3769 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3769 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3769 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3771 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3771 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3771 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3771 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3772 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3773 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3773 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3773 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3773 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3773 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

3775 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3775 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3776 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3776 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3777 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3777 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3777 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3778 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3778 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3780 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3780 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3780 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3783 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { MakeArrayContext , writer , componentsContext , }

3783 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { MakeArrayContext , writer , componentsContext , }

3785 :	"componentsContext"
		- NEIGH  = { MakeArrayContext , writer , componentsContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

3785 :	"writer"
		- NEIGH  = { MakeArrayContext , writer , componentsContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

3785 :	"MakeArrayContext"
		- NEIGH  = { MakeArrayContext , writer , componentsContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

3786 :	"for"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3786 :	"&"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3786 :	"crs"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3786 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3787 :	"crs"
		- NEIGH  = { formatter , _exportToJSON , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3787 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3787 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3791 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { }

3791 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { }

3791 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { }

3797 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3797 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3798 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3798 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3798 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3798 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3800 :	"for"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

3800 :	"&"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

3800 :	"crs"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

3800 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

3801 :	"crs_exportable"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

3802 :	"dynamic_cast"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

3802 :	"<"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

3802 :	"IPROJStringExportable"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

3802 :	"*"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

3802 :	">"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

3802 :	"crs"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

3802 :	"get"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

3803 :	"if"
		- NEIGH  = { crs_exportable , if , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { formatter , _exportToPROJString , crs_exportable , }
		- PRED   = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- SUCC   = { }

3803 :	"crs_exportable"
		- NEIGH  = { crs_exportable , if , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { formatter , _exportToPROJString , crs_exportable , }
		- PRED   = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- SUCC   = { }

3804 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { crs_exportable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3804 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { crs_exportable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3804 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { crs_exportable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3811 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3811 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3812 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3812 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3812 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3812 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3813 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3813 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3813 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3813 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3814 :	"otherCompoundCRS"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

3814 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

3814 :	"<"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

3814 :	"CompoundCRS"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

3814 :	"*"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

3814 :	">"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

3814 :	"other"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

3815 :	"if"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3815 :	"otherCompoundCRS"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3815 :	"=="
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3815 :	"||"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3816 :	"criterion"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3816 :	"=="
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3816 :	"util"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3816 :	"IComparable"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3816 :	"Criterion"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3816 :	"STRICT"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3816 :	"&&"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3817 :	"!"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3817 :	"ObjectUsage"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3817 :	"_isEquivalentTo"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3817 :	"other"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3817 :	"criterion"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

3818 :	"return"
		- NEIGH  = { return , }
		- PARENT = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3820 :	"&"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }

3820 :	"components"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }

3820 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }

3821 :	"&"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

3821 :	"otherComponents"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

3821 :	"otherCompoundCRS"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

3821 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

3822 :	"if"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

3822 :	"components"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

3822 :	"size"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

3822 :	"!="
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

3822 :	"otherComponents"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

3822 :	"size"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

3823 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherComponents , != , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3825 :	"for"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

3825 :	"size_t"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

3825 :	"i"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

3825 :	"i"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

3825 :	"<"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

3825 :	"components"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

3825 :	"size"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

3825 :	"i"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

3825 :	"++"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

3826 :	"if"
		- NEIGH  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"!"
		- NEIGH  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"components"
		- NEIGH  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"i"
		- NEIGH  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"_isEquivalentTo"
		- NEIGH  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"otherComponents"
		- NEIGH  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"i"
		- NEIGH  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"get"
		- NEIGH  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3827 :	"criterion"
		- NEIGH  = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3828 :	"return"
		- NEIGH  = { return , }
		- PARENT = { get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3831 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , ++ , size_t , i , < , size , for , }
		- SUCC   = { }

3859 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3859 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3859 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3859 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3859 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3859 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3859 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3859 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3860 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3860 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3860 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3860 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3860 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3860 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3861 :	"std"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3861 :	"pair"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3861 :	"<"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3861 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3861 :	">"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3861 :	"Pair"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3862 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

3862 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

3862 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

3862 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

3862 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

3862 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

3864 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

3864 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

3864 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

3866 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , < , ci_equal , ! , identifiers , second , sort , res , a , this , && , Pair , & , || , lambdaSort , if , empty , authorityFactory , front , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , >= , unsignificantName , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

3866 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , < , ci_equal , ! , identifiers , second , sort , res , a , this , && , Pair , & , || , lambdaSort , if , empty , authorityFactory , front , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , >= , unsignificantName , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

3868 :	"unsignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3868 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3868 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3868 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3869 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3869 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3869 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3870 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3870 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , unsignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

3871 :	"foundEquivalentName"
		- NEIGH  = { foundEquivalentName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ci_equal , || , empty , thisName , unsignificantName , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3873 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3873 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3873 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3873 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { unsignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

3876 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3876 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3876 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3876 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3877 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , createCompoundCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

3877 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , createCompoundCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

3877 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , createCompoundCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

3877 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , databaseContext , * , createCompoundCRS , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

3879 :	"crs"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3879 :	"io"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3879 :	"AuthorityFactory"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3879 :	"create"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3880 :	"authorityFactory"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3880 :	"databaseContext"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3881 :	"*"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3881 :	"id"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3881 :	"codeSpace"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3882 :	"createCompoundCRS"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3882 :	"id"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3882 :	"code"
		- NEIGH  = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }

3883 :	"match"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3883 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3884 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3884 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3885 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3885 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3885 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3885 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , authorityFactory , createCompoundCRS , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3886 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

3886 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

3886 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

3886 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , match , }
		- SUCC   = { res , return , }

3887 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

3887 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

3888 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3888 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3888 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3888 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3892 :	"if"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3892 :	"!"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3892 :	"unsignificantName"
		- NEIGH  = { ! , unsignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3893 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3893 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3893 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3893 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3893 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3893 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , unsignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3894 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3894 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3894 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3895 :	"objects"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3895 :	"authorityFactory"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3895 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3896 :	"thisName"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3896 :	"io"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3896 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3896 :	"ObjectType"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3896 :	"COMPOUND_CRS"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3897 :	"approximateMatch"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3898 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , get , assert , if , |= , c_str , thisName , IComparable , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3898 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , get , assert , if , |= , c_str , thisName , IComparable , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3898 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , get , assert , if , |= , c_str , thisName , IComparable , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3898 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , get , assert , if , |= , c_str , thisName , IComparable , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3899 :	"crs"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3899 :	"util"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3899 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3899 :	"<"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3899 :	"CompoundCRS"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3899 :	">"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3899 :	"obj"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3900 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

3900 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

3901 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

3901 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

3901 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

3902 :	"eqName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3902 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3902 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3902 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3903 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3903 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3903 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3903 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3903 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

3904 :	"foundEquivalentName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3904 :	"|="
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3904 :	"eqName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3905 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3905 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3906 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3906 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3907 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3907 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3907 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3907 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

3908 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3908 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3908 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3908 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3908 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

3909 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3909 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3910 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3910 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3910 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3911 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3911 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3913 :	"res"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3913 :	"emplace_back"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3913 :	"crsNN"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3913 :	"eqName"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3915 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3915 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3915 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3918 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3918 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3918 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3918 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3919 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3924 :	"lambdaSort"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3924 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3924 :	"thisName"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3924 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3924 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3924 :	"a"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3924 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3924 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3924 :	"b"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

3926 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3926 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3926 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3926 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3926 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3926 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3927 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3929 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3929 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3929 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3929 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3929 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3929 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3930 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3934 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3934 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3934 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3934 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3934 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3935 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3935 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3935 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3935 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3935 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3936 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3936 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3936 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3936 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3936 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3936 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3936 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3936 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3937 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3939 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3939 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3939 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3939 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3939 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3939 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3939 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3939 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3940 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3944 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3944 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3944 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3944 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3948 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }

3948 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }

3948 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }

3950 :	"if"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3950 :	"identifiers"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3950 :	"empty"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3950 :	"&&"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3950 :	"!"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3950 :	"foundEquivalentName"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3950 :	"&&"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3951 :	"res"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3951 :	"empty"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3951 :	"||"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3951 :	"res"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3951 :	"front"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3951 :	"second"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3951 :	"<"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , as_nullable , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , candidates , res , & , >> , for , crs , CompoundCRS , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

3952 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"set"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"pair"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	">>"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3952 :	"alreadyKnown"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

3953 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3953 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3953 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3953 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

3954 :	"&"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3954 :	"ids"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3954 :	"pair"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3954 :	"first"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3954 :	"identifiers"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3955 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3955 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3955 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3955 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

3956 :	"alreadyKnown"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3956 :	"insert"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3956 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3956 :	"pair"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3956 :	"<"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3956 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3956 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3956 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3956 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3956 :	">"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3957 :	"*"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3957 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3957 :	"codeSpace"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3957 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3957 :	"code"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

3960 :	"self"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

3960 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

3960 :	"std"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

3960 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

3960 :	"<"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

3960 :	"CompoundCRS"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

3960 :	">"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

3961 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

3961 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

3962 :	"candidates"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

3963 :	"authorityFactory"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

3963 :	"createCompoundCRSFromExisting"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

3963 :	"self"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

3964 :	"for"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

3964 :	"&"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

3964 :	"crs"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

3964 :	"candidates"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , != , code , * , util , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

3965 :	"&"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3965 :	"ids"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3965 :	"crs"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3965 :	"identifiers"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

3966 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3966 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3966 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3966 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

3967 :	"if"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	"find"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	"pair"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	"<"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3967 :	">"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3968 :	"*"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3968 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3968 :	"codeSpace"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3968 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3968 :	"code"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3968 :	"!="
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3969 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3969 :	"end"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3970 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3973 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3973 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3973 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3973 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3974 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3974 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3974 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3974 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { unsignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

3975 :	"res"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3975 :	"emplace_back"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3975 :	"crs"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3975 :	"unsignificantName"
		- NEIGH  = { unsignificantName , crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3977 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3977 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3977 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3981 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

3981 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

3981 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

3985 :	"if"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { }

3985 :	"res"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { }

3985 :	"size"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { }

3985 :	">="
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { }

3986 :	"highestConfidence"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3986 :	"res"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3986 :	"front"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3986 :	"second"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3987 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3987 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3987 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3987 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3987 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3987 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3988 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3988 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3988 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3988 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3989 :	"if"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3989 :	"pair"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3989 :	"second"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3989 :	"=="
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3989 :	"highestConfidence"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3990 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3990 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3990 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3992 :	"break"
		- NEIGH  = { break , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3995 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

3995 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

3999 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

3999 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

4006 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4006 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4006 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4006 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4006 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4006 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4006 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4006 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4007 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4007 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4007 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4007 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4007 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4007 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4008 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4008 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4008 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4008 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4008 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4008 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4009 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4009 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4009 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4009 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4009 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4009 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4010 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

4010 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

4010 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

4011 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4011 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4011 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4011 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4012 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4012 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4012 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4012 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4012 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4012 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4014 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

4014 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

4022 :	"PROJ_INTERNAL"
		- NEIGH  = { PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4022 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4022 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4023 :	"CRSNNPtr"
		- NEIGH  = { baseCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hubCRS_ , CRSNNPtr , }

4023 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hubCRS_ , CRSNNPtr , }

4024 :	"CRSNNPtr"
		- NEIGH  = { hubCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , CRSNNPtr , }
		- SUCC   = { TransformationNNPtr , transformation_ , operation , }

4024 :	"hubCRS_"
		- NEIGH  = { hubCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , CRSNNPtr , }
		- SUCC   = { TransformationNNPtr , transformation_ , operation , }

4025 :	"operation"
		- NEIGH  = { TransformationNNPtr , transformation_ , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hubCRS_ , CRSNNPtr , }
		- SUCC   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }

4025 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , transformation_ , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hubCRS_ , CRSNNPtr , }
		- SUCC   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }

4025 :	"transformation_"
		- NEIGH  = { TransformationNNPtr , transformation_ , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hubCRS_ , CRSNNPtr , }
		- SUCC   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }

4027 :	"Private"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4027 :	"CRSNNPtr"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4027 :	"&"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4027 :	"baseCRSIn"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4027 :	"CRSNNPtr"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4027 :	"&"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4027 :	"hubCRSIn"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4028 :	"operation"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4028 :	"TransformationNNPtr"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4028 :	"&"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4028 :	"transformationIn"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

4030 :	"CRSNNPtr"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4030 :	"&"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4030 :	"baseCRS"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4030 :	"return"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4030 :	"baseCRS_"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4031 :	"CRSNNPtr"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4031 :	"&"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4031 :	"hubCRS"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4031 :	"return"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4031 :	"hubCRS_"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4032 :	"operation"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4032 :	"TransformationNNPtr"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4032 :	"&"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4032 :	"transformation"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4033 :	"return"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4033 :	"transformation_"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

4037 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4037 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4037 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4038 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4038 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4038 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4038 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4038 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4038 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4039 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4039 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4039 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4039 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4040 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4040 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4040 :	"hubCRS_"
		- NEIGH  = { hubCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4040 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4041 :	"transformation_"
		- NEIGH  = { transformation_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4041 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4049 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4049 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4049 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4049 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4049 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4049 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4049 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4049 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4049 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4054 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4054 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4054 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4054 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4054 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4055 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4055 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"hubCRS"
		- NEIGH  = { hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4057 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4057 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4057 :	"transformation"
		- NEIGH  = { transformation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4062 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4062 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"shallowCloneAsBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4068 :	"crs"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4068 :	"BoundCRS"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4068 :	"nn_make_shared"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4068 :	"<"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4068 :	"BoundCRS"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4068 :	">"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4068 :	"*"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4068 :	"this"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4069 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4069 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4069 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4070 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

4070 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

4075 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4075 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4075 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4075 :	"return"
		- NEIGH  = { shallowCloneAsBoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4075 :	"shallowCloneAsBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4085 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4085 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4085 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4085 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4085 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4085 :	"return"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4085 :	"d"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4085 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4090 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4090 :	"setCanonicalBoundCRS"
		- NEIGH  = { setCanonicalBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4090 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4090 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4090 :	"boundCRS"
		- NEIGH  = { boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4092 :	"d"
		- NEIGH  = { boundCRS , canonicalBoundCRS_ , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4092 :	"canonicalBoundCRS_"
		- NEIGH  = { boundCRS , canonicalBoundCRS_ , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4092 :	"boundCRS"
		- NEIGH  = { boundCRS , canonicalBoundCRS_ , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4110 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4110 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4110 :	"baseCRSWithCanonicalBoundCRS"
		- NEIGH  = { baseCRSWithCanonicalBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4111 :	"baseCRSClone"
		- NEIGH  = { _shallowClone , baseCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }

4111 :	"baseCRS"
		- NEIGH  = { _shallowClone , baseCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }

4111 :	"_shallowClone"
		- NEIGH  = { _shallowClone , baseCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }

4112 :	"baseCRSClone"
		- NEIGH  = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _shallowClone , baseCRS , baseCRSClone , }
		- SUCC   = { baseCRSClone , return , }

4112 :	"setCanonicalBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _shallowClone , baseCRS , baseCRSClone , }
		- SUCC   = { baseCRSClone , return , }

4112 :	"shallowCloneAsBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _shallowClone , baseCRS , baseCRSClone , }
		- SUCC   = { baseCRSClone , return , }

4113 :	"return"
		- NEIGH  = { baseCRSClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- SUCC   = { }

4113 :	"baseCRSClone"
		- NEIGH  = { baseCRSClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- SUCC   = { }

4122 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4122 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4122 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4122 :	"hubCRS"
		- NEIGH  = { hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4122 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4122 :	"return"
		- NEIGH  = { d , hubCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4122 :	"d"
		- NEIGH  = { d , hubCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4122 :	"hubCRS_"
		- NEIGH  = { d , hubCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4130 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4130 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4130 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4131 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4131 :	"transformation"
		- NEIGH  = { transformation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4131 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4132 :	"return"
		- NEIGH  = { d , transformation_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4132 :	"d"
		- NEIGH  = { d , transformation_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4132 :	"transformation_"
		- NEIGH  = { d , transformation_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4145 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4146 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4146 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4146 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4146 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4146 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4146 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4146 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4146 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4147 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4147 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4147 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4147 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4148 :	"crs"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4148 :	"BoundCRS"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4148 :	"nn_make_shared"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4148 :	"<"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4148 :	"BoundCRS"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4148 :	">"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4148 :	"baseCRSIn"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4148 :	"hubCRSIn"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4149 :	"transformationIn"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4150 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { nameStr , l_name , baseCRSIn , & , }

4150 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { nameStr , l_name , baseCRSIn , & , }

4150 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { nameStr , l_name , baseCRSIn , & , }

4151 :	"&"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

4151 :	"l_name"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

4151 :	"baseCRSIn"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

4151 :	"nameStr"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

4152 :	"if"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

4152 :	"!"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

4152 :	"l_name"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

4152 :	"empty"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

4153 :	"crs"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4153 :	"setProperties"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4153 :	"util"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4153 :	"PropertyMap"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4153 :	"set"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4154 :	"common"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4154 :	"IdentifiedObject"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4154 :	"NAME_KEY"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4154 :	"l_name"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4156 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , ! , if , }
		- SUCC   = { }

4156 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , ! , if , }
		- SUCC   = { }

4168 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4169 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4169 :	"createFromTOWGS84"
		- NEIGH  = { createFromTOWGS84 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4169 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4169 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4169 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4170 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4170 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4170 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4170 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4170 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4170 :	"TOWGS84Parameters"
		- NEIGH  = { TOWGS84Parameters , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4172 :	"geodCRS"
		- NEIGH  = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }

4172 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }

4172 :	"extractGeodeticCRS"
		- NEIGH  = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }

4173 :	"targetCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4174 :	"geodCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4174 :	"get"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4174 :	"=="
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4174 :	"||"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4175 :	"dynamic_cast"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4175 :	"<"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4175 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4175 :	"GeographicCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4175 :	"*"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4175 :	">"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4175 :	"geodCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4175 :	"get"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4176 :	"util"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4176 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4176 :	"<"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4176 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4176 :	"CRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4176 :	">"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4177 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4177 :	"GeographicCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4177 :	"EPSG_4326"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4178 :	"util"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4178 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4178 :	"<"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4178 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4178 :	"CRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4178 :	">"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4179 :	"crs"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4179 :	"GeodeticCRS"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4179 :	"EPSG_4978"
		- NEIGH  = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , extractGeodeticCRS , geodCRS , }
		- SUCC   = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }

4180 :	"return"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4180 :	"create"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4181 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4181 :	"targetCRS"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4182 :	"operation"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4182 :	"Transformation"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4182 :	"createTOWGS84"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4182 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4182 :	"TOWGS84Parameters"
		- NEIGH  = { baseCRSIn , TOWGS84Parameters , createTOWGS84 , create , operation , Transformation , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG_4978 , EPSG_4326 , CRS , nn_static_pointer_cast , > , GeodeticCRS , geodCRS , crs , util , targetCRS , dynamic_cast , < , * , == , || , get , GeographicCRS , }
		- SUCC   = { }

4193 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4193 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4193 :	"createFromNadgrids"
		- NEIGH  = { createFromNadgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4193 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4193 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4193 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4194 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4194 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4194 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4194 :	"filename"
		- NEIGH  = { filename , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4195 :	"CRSPtr"
		- NEIGH  = { extractGeographicCRS , sourceGeographicCRS , baseCRSIn , CRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }

4195 :	"sourceGeographicCRS"
		- NEIGH  = { extractGeographicCRS , sourceGeographicCRS , baseCRSIn , CRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }

4195 :	"baseCRSIn"
		- NEIGH  = { extractGeographicCRS , sourceGeographicCRS , baseCRSIn , CRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }

4195 :	"extractGeographicCRS"
		- NEIGH  = { extractGeographicCRS , sourceGeographicCRS , baseCRSIn , CRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }

4196 :	"transformationSourceCRS"
		- NEIGH  = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , sourceGeographicCRS , baseCRSIn , CRSPtr , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4197 :	"sourceGeographicCRS"
		- NEIGH  = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , sourceGeographicCRS , baseCRSIn , CRSPtr , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4197 :	"sourceGeographicCRS"
		- NEIGH  = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , sourceGeographicCRS , baseCRSIn , CRSPtr , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4197 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , sourceGeographicCRS , baseCRSIn , CRSPtr , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4197 :	"as_nullable"
		- NEIGH  = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , sourceGeographicCRS , baseCRSIn , CRSPtr , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

4198 :	"std"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { += , transformationName , }

4198 :	"string"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { += , transformationName , }

4198 :	"transformationName"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { += , transformationName , }

4198 :	"transformationSourceCRS"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { += , transformationName , }

4198 :	"nameStr"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRSIn , as_nullable , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { += , transformationName , }

4199 :	"transformationName"
		- NEIGH  = { += , transformationName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- SUCC   = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }

4199 :	"+="
		- NEIGH  = { += , transformationName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- SUCC   = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }

4201 :	"return"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4201 :	"create"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4202 :	"baseCRSIn"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4202 :	"GeographicCRS"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4202 :	"EPSG_4326"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4203 :	"operation"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4203 :	"Transformation"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4203 :	"createNTv2"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4204 :	"util"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4204 :	"PropertyMap"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4204 :	"set"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4204 :	"common"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4204 :	"IdentifiedObject"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4204 :	"NAME_KEY"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4205 :	"transformationName"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4206 :	"NN_NO_CHECK"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4206 :	"transformationSourceCRS"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4206 :	"GeographicCRS"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4206 :	"EPSG_4326"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4207 :	"filename"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4207 :	"std"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4207 :	"vector"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4207 :	"<"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4207 :	"metadata"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4207 :	"PositionalAccuracyNNPtr"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4207 :	">"
		- NEIGH  = { > , GeographicCRS , PositionalAccuracyNNPtr , metadata , vector , transformationSourceCRS , NN_NO_CHECK , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , create , Transformation , std , EPSG_4326 , baseCRSIn , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

4212 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4212 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"return"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"dynamic_cast"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"<"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"GeodeticCRS"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"*"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	">"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"d"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"hubCRS"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"get"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"!="
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4213 :	"&&"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4214 :	"ci_equal"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4214 :	"d"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4214 :	"hubCRS"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4214 :	"nameStr"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4219 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4219 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4219 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4219 :	"getHDatumPROJ4GRIDS"
		- NEIGH  = { getHDatumPROJ4GRIDS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4220 :	"if"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4220 :	"ci_equal"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4220 :	"d"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4220 :	"hubCRS"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4220 :	"nameStr"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4221 :	"return"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4221 :	"d"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4221 :	"transformation"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4221 :	"getNTv2Filename"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4223 :	"return"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , d , ci_equal , if , }
		- SUCC   = { }

4223 :	"std"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , d , ci_equal , if , }
		- SUCC   = { }

4223 :	"string"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , d , ci_equal , if , }
		- SUCC   = { }

4228 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4228 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4228 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4228 :	"getVDatumPROJ4GRIDS"
		- NEIGH  = { getVDatumPROJ4GRIDS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4229 :	"if"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4229 :	"dynamic_cast"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4229 :	"<"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4229 :	"VerticalCRS"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4229 :	"*"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4229 :	">"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4229 :	"d"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4229 :	"baseCRS"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4229 :	"get"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4229 :	"&&"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4230 :	"ci_equal"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4230 :	"d"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4230 :	"hubCRS"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4230 :	"nameStr"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

4231 :	"return"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4231 :	"d"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4231 :	"transformation"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4231 :	"getHeightToGeographic3DFilename"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4233 :	"return"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- SUCC   = { }

4233 :	"std"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- SUCC   = { }

4233 :	"string"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- SUCC   = { }

4239 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4239 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4239 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4239 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4239 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4239 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4240 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4240 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4240 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4240 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4240 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4240 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4240 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4240 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

4241 :	"if"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , setTOWGS84Parameters , getTOWGS84Parameters , isTOWGS84Compatible , hdatumProj4GridName , if , getVDatumPROJ4GRIDS , empty , params , transformation , getHDatumPROJ4GRIDS , setAbridgedTransformation , vdatumProj4GridName , WKTConstants , hubCRS , TARGETCRS , endNode , _exportToWKT , SOURCECRS , ! , useESRIDialect , formatter , d , BOUNDCRS , baseCRS , vector , io , startNode , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

4241 :	"isWKT2"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , setTOWGS84Parameters , getTOWGS84Parameters , isTOWGS84Compatible , hdatumProj4GridName , if , getVDatumPROJ4GRIDS , empty , params , transformation , getHDatumPROJ4GRIDS , setAbridgedTransformation , vdatumProj4GridName , WKTConstants , hubCRS , TARGETCRS , endNode , _exportToWKT , SOURCECRS , ! , useESRIDialect , formatter , d , BOUNDCRS , baseCRS , vector , io , startNode , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

4242 :	"formatter"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4242 :	"startNode"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4242 :	"io"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4242 :	"WKTConstants"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4242 :	"BOUNDCRS"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

4243 :	"formatter"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4243 :	"startNode"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4243 :	"io"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4243 :	"WKTConstants"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4243 :	"SOURCECRS"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4244 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4244 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4244 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4244 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4245 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { TARGETCRS , WKTConstants , io , startNode , formatter , }

4245 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { TARGETCRS , WKTConstants , io , startNode , formatter , }

4246 :	"formatter"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4246 :	"startNode"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4246 :	"io"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4246 :	"WKTConstants"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4246 :	"TARGETCRS"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

4247 :	"d"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4247 :	"hubCRS"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4247 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4247 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

4248 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , hubCRS , d , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4248 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , hubCRS , d , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4249 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , transformation , _exportToWKT , d , }

4249 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , transformation , _exportToWKT , d , }

4250 :	"d"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4250 :	"transformation"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4250 :	"_exportToWKT"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4250 :	"formatter"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4251 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , transformation , _exportToWKT , d , }
		- SUCC   = { endNode , formatter , }

4251 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , transformation , _exportToWKT , d , }
		- SUCC   = { endNode , formatter , }

4252 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { }

4252 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { }

4255 :	"vdatumProj4GridName"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

4255 :	"getVDatumPROJ4GRIDS"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

4256 :	"if"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

4256 :	"!"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

4256 :	"vdatumProj4GridName"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

4256 :	"empty"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

4257 :	"formatter"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4257 :	"setVDatumExtension"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4257 :	"vdatumProj4GridName"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4258 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4258 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4258 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4258 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4259 :	"formatter"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4259 :	"setVDatumExtension"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4259 :	"std"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4259 :	"string"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4260 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { string , setVDatumExtension , std , formatter , }
		- SUCC   = { }

4263 :	"hdatumProj4GridName"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , vdatumProj4GridName , ! , if , }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

4263 :	"getHDatumPROJ4GRIDS"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , vdatumProj4GridName , ! , if , }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

4264 :	"if"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

4264 :	"!"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

4264 :	"hdatumProj4GridName"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

4264 :	"empty"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

4265 :	"formatter"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4265 :	"setHDatumExtension"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4265 :	"hdatumProj4GridName"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4266 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4266 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4266 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4266 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4267 :	"formatter"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4267 :	"setHDatumExtension"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4267 :	"std"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4267 :	"string"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

4268 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { string , setHDatumExtension , std , formatter , }
		- SUCC   = { }

4271 :	"if"
		- NEIGH  = { isTOWGS84Compatible , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , hdatumProj4GridName , ! , if , }
		- SUCC   = { transformation , getTOWGS84Parameters , d , params , }

4271 :	"!"
		- NEIGH  = { isTOWGS84Compatible , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , hdatumProj4GridName , ! , if , }
		- SUCC   = { transformation , getTOWGS84Parameters , d , params , }

4271 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , hdatumProj4GridName , ! , if , }
		- SUCC   = { transformation , getTOWGS84Parameters , d , params , }

4272 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isTOWGS84Compatible , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4272 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isTOWGS84Compatible , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4272 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isTOWGS84Compatible , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4275 :	"params"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

4275 :	"d"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

4275 :	"transformation"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

4275 :	"getTOWGS84Parameters"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

4276 :	"if"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4276 :	"!"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4276 :	"formatter"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4276 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

4277 :	"formatter"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { useESRIDialect , ! , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4277 :	"setTOWGS84Parameters"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { useESRIDialect , ! , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4277 :	"params"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { useESRIDialect , ! , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4279 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4279 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4279 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4279 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4280 :	"formatter"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4280 :	"setTOWGS84Parameters"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4280 :	"std"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4280 :	"vector"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4280 :	"<"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4280 :	">"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

4288 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4288 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4289 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4289 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4289 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4289 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4291 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4291 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4291 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4291 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4292 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4293 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4293 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4293 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4293 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4293 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

4295 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , d , }

4295 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , d , }

4296 :	"d"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4296 :	"baseCRS"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4296 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4296 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4298 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , d , }
		- SUCC   = { formatter , _exportToJSON , hubCRS , d , }

4298 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , d , }
		- SUCC   = { formatter , _exportToJSON , hubCRS , d , }

4299 :	"d"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4299 :	"hubCRS"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4299 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4299 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

4301 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , hubCRS , d , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

4301 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , hubCRS , d , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

4302 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4302 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4303 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , transformation , d , }

4303 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , transformation , d , }

4304 :	"d"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4304 :	"transformation"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4304 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4304 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

4305 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , transformation , d , }
		- SUCC   = { }

4305 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , transformation , d , }
		- SUCC   = { }

4311 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4311 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4312 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4312 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4312 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4312 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4314 :	"crs_exportable"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4315 :	"dynamic_cast"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4315 :	"<"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4315 :	"io"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4315 :	"IPROJStringExportable"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4315 :	"*"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4315 :	">"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4315 :	"d"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4315 :	"baseCRS_"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4315 :	"get"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

4316 :	"if"
		- NEIGH  = { crs_exportable , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- SUCC   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }

4316 :	"!"
		- NEIGH  = { crs_exportable , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- SUCC   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }

4316 :	"crs_exportable"
		- NEIGH  = { crs_exportable , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- SUCC   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }

4317 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { crs_exportable , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4317 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { crs_exportable , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4317 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { crs_exportable , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4321 :	"vdatumProj4GridName"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_exportable , ! , if , }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

4321 :	"getVDatumPROJ4GRIDS"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_exportable , ! , if , }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

4322 :	"if"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

4322 :	"!"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

4322 :	"vdatumProj4GridName"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

4322 :	"empty"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

4323 :	"formatter"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4323 :	"setVDatumExtension"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4323 :	"vdatumProj4GridName"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4324 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4324 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4324 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

4325 :	"formatter"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4325 :	"setVDatumExtension"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4325 :	"std"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4325 :	"string"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4327 :	"hdatumProj4GridName"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

4327 :	"getHDatumPROJ4GRIDS"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

4328 :	"if"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

4328 :	"!"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

4328 :	"hdatumProj4GridName"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

4328 :	"empty"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

4329 :	"formatter"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4329 :	"setHDatumExtension"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4329 :	"hdatumProj4GridName"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4330 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4330 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4330 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

4331 :	"formatter"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4331 :	"setHDatumExtension"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4331 :	"std"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4331 :	"string"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4333 :	"if"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { formatter , getTOWGS84Parameters , setTOWGS84Parameters , transformation , params , }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4333 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { formatter , getTOWGS84Parameters , setTOWGS84Parameters , transformation , params , }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

4334 :	"params"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , setTOWGS84Parameters , formatter , }

4334 :	"transformation"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , setTOWGS84Parameters , formatter , }

4334 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , setTOWGS84Parameters , formatter , }

4335 :	"formatter"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4335 :	"setTOWGS84Parameters"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4335 :	"params"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4337 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4337 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4337 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

4338 :	"formatter"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4338 :	"setTOWGS84Parameters"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4338 :	"std"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4338 :	"vector"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4338 :	"<"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4338 :	">"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

4345 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4345 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4345 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4345 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4345 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4345 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4346 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4346 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4346 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4346 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4347 :	"otherBoundCRS"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

4347 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

4347 :	"<"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

4347 :	"BoundCRS"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

4347 :	"*"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

4347 :	">"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

4347 :	"other"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }

4348 :	"if"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4348 :	"otherBoundCRS"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4348 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4348 :	"||"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4349 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4349 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4349 :	"util"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4349 :	"IComparable"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4349 :	"Criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4349 :	"STRICT"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4349 :	"&&"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4350 :	"!"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4350 :	"ObjectUsage"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4350 :	"_isEquivalentTo"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4350 :	"other"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4350 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

4351 :	"return"
		- NEIGH  = { return , }
		- PARENT = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4353 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

4353 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

4353 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , ObjectUsage , if , }
		- SUCC   = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

4354 :	"return"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4354 :	"d"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4354 :	"baseCRS_"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4354 :	"_isEquivalentTo"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4354 :	"otherBoundCRS"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4354 :	"d"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4354 :	"baseCRS_"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4354 :	"get"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4355 :	"criterion"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4355 :	"&&"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4356 :	"d"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4356 :	"hubCRS_"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4356 :	"_isEquivalentTo"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4356 :	"otherBoundCRS"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4356 :	"d"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4356 :	"hubCRS_"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4356 :	"get"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4357 :	"criterion"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4357 :	"&&"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4358 :	"d"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4358 :	"transformation_"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4358 :	"_isEquivalentTo"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4359 :	"otherBoundCRS"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4359 :	"d"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4359 :	"transformation_"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4359 :	"get"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4359 :	"standardCriterion"
		- NEIGH  = { transformation_ , hubCRS_ , get , otherBoundCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

4366 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4366 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4366 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4366 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4366 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4366 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4366 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4366 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4367 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4367 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4367 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4367 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4367 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4367 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4368 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4368 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4368 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4368 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4368 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4368 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4369 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }

4369 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }

4369 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }

4369 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }

4369 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }

4369 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }

4370 :	"if"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4370 :	"authorityFactory"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4370 :	"&&"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4371 :	"d"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4371 :	"hubCRS_"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4371 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4371 :	"GeographicCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4371 :	"EPSG_4326"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4371 :	"get"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4372 :	"util"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4372 :	"IComparable"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4372 :	"Criterion"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4372 :	"EQUIVALENT"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- PARENT = { }
		- CHILD  = { & , pair , identify , baseCRS_ , d , authorityFactory , for , resTemp , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { res , return , }

4373 :	"resTemp"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , resTemp , & , for , }

4373 :	"d"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , resTemp , & , for , }

4373 :	"baseCRS_"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , resTemp , & , for , }

4373 :	"identify"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , resTemp , & , for , }

4373 :	"authorityFactory"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , resTemp , & , for , }

4374 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { }

4374 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { }

4374 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { }

4374 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { }

4375 :	"&"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

4375 :	"candidateBaseCRS"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

4375 :	"pair"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

4375 :	"first"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

4376 :	"projCRS"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4377 :	"dynamic_cast"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4377 :	"<"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4377 :	"ProjectedCRS"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4377 :	"*"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4377 :	">"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4377 :	"candidateBaseCRS"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4377 :	"get"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

4378 :	"geodCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4378 :	"projCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4378 :	"projCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4378 :	"baseCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4378 :	"as_nullable"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4379 :	"util"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4379 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4379 :	"<"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4379 :	"GeodeticCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4379 :	">"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4380 :	"candidateBaseCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

4381 :	"if"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { ! , for , op , foundOp , & , catch , exportToPROJString , ops , geodCRS , io , exception , transformation_ , get , refTransfPROJStringValid , refTransfPROJString , std , EPSG_4326 , create , GeographicCRS , d , string , CoordinateOperationFactory , PROJStringFormatter , createOperations , == , authorityFactory , CoordinateOperationContext , if , operation , NN_NO_CHECK , context , }
		- PRED   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- SUCC   = { }

4381 :	"geodCRS"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { ! , for , op , foundOp , & , catch , exportToPROJString , ops , geodCRS , io , exception , transformation_ , get , refTransfPROJStringValid , refTransfPROJString , std , EPSG_4326 , create , GeographicCRS , d , string , CoordinateOperationFactory , PROJStringFormatter , createOperations , == , authorityFactory , CoordinateOperationContext , if , operation , NN_NO_CHECK , context , }
		- PRED   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- SUCC   = { }

4382 :	"context"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4382 :	"operation"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4382 :	"CoordinateOperationContext"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4382 :	"create"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4383 :	"authorityFactory"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

4384 :	"ops"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4385 :	"operation"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4385 :	"CoordinateOperationFactory"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4385 :	"create"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4386 :	"createOperations"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4386 :	"NN_NO_CHECK"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4386 :	"geodCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4387 :	"GeographicCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4387 :	"EPSG_4326"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4387 :	"context"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { refTransfPROJString , string , std , }

4388 :	"std"
		- NEIGH  = { refTransfPROJString , string , std , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- SUCC   = { refTransfPROJStringValid , }

4388 :	"string"
		- NEIGH  = { refTransfPROJString , string , std , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- SUCC   = { refTransfPROJStringValid , }

4388 :	"refTransfPROJString"
		- NEIGH  = { refTransfPROJString , string , std , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- SUCC   = { refTransfPROJStringValid , }

4389 :	"refTransfPROJStringValid"
		- NEIGH  = { refTransfPROJStringValid , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { refTransfPROJString , string , std , }
		- SUCC   = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }

4391 :	"refTransfPROJString"
		- NEIGH  = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refTransfPROJStringValid , }

4392 :	"d"
		- NEIGH  = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refTransfPROJStringValid , }

4392 :	"transformation_"
		- NEIGH  = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refTransfPROJStringValid , }

4392 :	"exportToPROJString"
		- NEIGH  = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refTransfPROJStringValid , }

4393 :	"io"
		- NEIGH  = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refTransfPROJStringValid , }

4393 :	"PROJStringFormatter"
		- NEIGH  = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refTransfPROJStringValid , }

4393 :	"create"
		- NEIGH  = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refTransfPROJStringValid , }

4393 :	"get"
		- NEIGH  = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refTransfPROJStringValid , }

4394 :	"refTransfPROJStringValid"
		- NEIGH  = { refTransfPROJStringValid , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { transformation_ , io , create , exportToPROJString , d , get , PROJStringFormatter , refTransfPROJString , }
		- SUCC   = { == , refTransfPROJString , if , }

4395 :	"if"
		- NEIGH  = { == , refTransfPROJString , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { clear , refTransfPROJString , }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { & , exception , std , catch , }

4395 :	"refTransfPROJString"
		- NEIGH  = { == , refTransfPROJString , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { clear , refTransfPROJString , }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { & , exception , std , catch , }

4395 :	"=="
		- NEIGH  = { == , refTransfPROJString , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { clear , refTransfPROJString , }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { & , exception , std , catch , }

4396 :	"refTransfPROJString"
		- NEIGH  = { clear , refTransfPROJString , }
		- PARENT = { == , refTransfPROJString , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4396 :	"clear"
		- NEIGH  = { clear , refTransfPROJString , }
		- PARENT = { == , refTransfPROJString , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4398 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { == , refTransfPROJString , if , }
		- SUCC   = { foundOp , }

4398 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { == , refTransfPROJString , if , }
		- SUCC   = { foundOp , }

4398 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { == , refTransfPROJString , if , }
		- SUCC   = { foundOp , }

4398 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { == , refTransfPROJString , if , }
		- SUCC   = { foundOp , }

4400 :	"foundOp"
		- NEIGH  = { foundOp , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { op , ops , & , for , }

4401 :	"for"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , catch , IComparable , refTransfPROJStringValid , get , create , || , util , transformation_ , && , exception , io , == , PROJStringFormatter , opTransfPROJStringValid , nameStr , opTransfPROJString , find , & , op , d , _isEquivalentTo , string , exportToPROJString , if , EQUIVALENT , refTransfPROJString , std , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

4401 :	"&"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , catch , IComparable , refTransfPROJStringValid , get , create , || , util , transformation_ , && , exception , io , == , PROJStringFormatter , opTransfPROJStringValid , nameStr , opTransfPROJString , find , & , op , d , _isEquivalentTo , string , exportToPROJString , if , EQUIVALENT , refTransfPROJString , std , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

4401 :	"op"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , catch , IComparable , refTransfPROJStringValid , get , create , || , util , transformation_ , && , exception , io , == , PROJStringFormatter , opTransfPROJStringValid , nameStr , opTransfPROJString , find , & , op , d , _isEquivalentTo , string , exportToPROJString , if , EQUIVALENT , refTransfPROJString , std , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

4401 :	"ops"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , catch , IComparable , refTransfPROJStringValid , get , create , || , util , transformation_ , && , exception , io , == , PROJStringFormatter , opTransfPROJStringValid , nameStr , opTransfPROJString , find , & , op , d , _isEquivalentTo , string , exportToPROJString , if , EQUIVALENT , refTransfPROJString , std , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

4402 :	"std"
		- NEIGH  = { opTransfPROJString , string , std , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { opTransfPROJStringValid , }

4402 :	"string"
		- NEIGH  = { opTransfPROJString , string , std , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { opTransfPROJStringValid , }

4402 :	"opTransfPROJString"
		- NEIGH  = { opTransfPROJString , string , std , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { opTransfPROJStringValid , }

4403 :	"opTransfPROJStringValid"
		- NEIGH  = { opTransfPROJStringValid , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJString , string , std , }
		- SUCC   = { == , nameStr , find , op , if , }

4404 :	"if"
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , isTOWGS84Compatible , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }

4404 :	"op"
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , isTOWGS84Compatible , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }

4404 :	"nameStr"
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , isTOWGS84Compatible , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }

4404 :	"find"
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , isTOWGS84Compatible , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }

4404 :	"=="
		- NEIGH  = { == , nameStr , find , op , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , isTOWGS84Compatible , if , }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }

4405 :	"if"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { == , nameStr , find , op , if , }
		- CHILD  = { > , < , vector , if , getTOWGS84Parameters , transformation , == , std , params , }
		- PRED   = { }
		- SUCC   = { continue , }

4405 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { == , nameStr , find , op , if , }
		- CHILD  = { > , < , vector , if , getTOWGS84Parameters , transformation , == , std , params , }
		- PRED   = { }
		- SUCC   = { continue , }

4406 :	"params"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , vector , == , params , std , if , }

4407 :	"transformation"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , vector , == , params , std , if , }

4407 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , vector , == , params , std , if , }

4408 :	"if"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4408 :	"params"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4408 :	"=="
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4409 :	"std"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4409 :	"vector"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4409 :	"<"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4409 :	">"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

4410 :	"res"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4410 :	"emplace_back"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4410 :	"create"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4410 :	"candidateBaseCRS"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4411 :	"d"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4411 :	"hubCRS_"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4412 :	"transformation"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4413 :	"pair"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4413 :	"second"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4414 :	"foundOp"
		- NEIGH  = { foundOp , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- SUCC   = { break , }

4415 :	"break"
		- NEIGH  = { break , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { foundOp , }
		- SUCC   = { }

4418 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { == , nameStr , find , op , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { }

4421 :	"opTransfPROJString"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4421 :	"op"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4421 :	"exportToPROJString"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4422 :	"io"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4422 :	"PROJStringFormatter"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4422 :	"create"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4422 :	"get"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { == , nameStr , find , op , if , }
		- SUCC   = { opTransfPROJStringValid , }

4423 :	"opTransfPROJStringValid"
		- NEIGH  = { opTransfPROJStringValid , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { get , PROJStringFormatter , io , create , exportToPROJString , op , opTransfPROJString , }
		- SUCC   = { & , exception , std , catch , }

4424 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }

4424 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }

4424 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }

4424 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }

4426 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4426 :	"refTransfPROJStringValid"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4426 :	"&&"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4426 :	"opTransfPROJStringValid"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4426 :	"&&"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4427 :	"refTransfPROJString"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4427 :	"=="
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4427 :	"opTransfPROJString"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4427 :	"||"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4428 :	"op"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4428 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4429 :	"d"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4429 :	"transformation_"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4429 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4430 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4430 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4430 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4430 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

4431 :	"res"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4431 :	"emplace_back"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4432 :	"create"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4432 :	"candidateBaseCRS"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4432 :	"d"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4432 :	"hubCRS_"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4433 :	"NN_NO_CHECK"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4433 :	"util"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4433 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4433 :	"<"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4434 :	"operation"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4434 :	"Transformation"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4434 :	">"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4434 :	"op"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4435 :	"pair"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4435 :	"second"
		- NEIGH  = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

4436 :	"foundOp"
		- NEIGH  = { foundOp , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { second , pair , op , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , res , }
		- SUCC   = { break , }

4437 :	"break"
		- NEIGH  = { break , }
		- PARENT = { EQUIVALENT , IComparable , util , op , transformation_ , || , refTransfPROJString , opTransfPROJString , opTransfPROJStringValid , d , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , if , }
		- CHILD  = { }
		- PRED   = { foundOp , }
		- SUCC   = { }

4440 :	"if"
		- NEIGH  = { foundOp , ! , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PRED   = { op , ops , & , for , }
		- SUCC   = { }

4440 :	"!"
		- NEIGH  = { foundOp , ! , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PRED   = { op , ops , & , for , }
		- SUCC   = { }

4440 :	"foundOp"
		- NEIGH  = { foundOp , ! , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PRED   = { op , ops , & , for , }
		- SUCC   = { }

4441 :	"res"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4441 :	"emplace_back"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4442 :	"create"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4442 :	"candidateBaseCRS"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4442 :	"d"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4442 :	"hubCRS_"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4442 :	"transformation"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4443 :	"std"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4443 :	"min"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4443 :	"pair"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4443 :	"second"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4448 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- SUCC   = { }

4448 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , get , hubCRS_ , if , d , _isEquivalentTo , && , util , Criterion , authorityFactory , }
		- SUCC   = { }

4454 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4454 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4460 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4460 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4465 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4465 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4466 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4466 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4466 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4467 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4467 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4467 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4467 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4468 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4468 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4468 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4468 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4469 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4469 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4469 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4469 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4469 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4469 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4470 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4470 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4470 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4470 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4470 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4470 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4471 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4475 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4475 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4476 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4476 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4476 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4477 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4477 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4477 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4477 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4478 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4478 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4478 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4478 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4479 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4479 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4479 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4479 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4479 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4479 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4480 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4480 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4480 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4480 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4480 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4480 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4481 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4481 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4481 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4481 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4481 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4485 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4485 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4485 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4485 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4485 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4486 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4486 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4486 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4486 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4486 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4486 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4486 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4490 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4490 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4490 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4491 :	"crs"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4491 :	"DerivedGeodeticCRS"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4491 :	"nn_make_shared"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4491 :	"<"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4491 :	"DerivedGeodeticCRS"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4491 :	">"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4491 :	"*"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4491 :	"this"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4492 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4492 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4492 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4493 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4493 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4494 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4494 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4503 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4503 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4503 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4504 :	"return"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4504 :	"NN_NO_CHECK"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4504 :	"util"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4504 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4504 :	"<"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4504 :	"GeodeticCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4504 :	">"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4505 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4505 :	"getPrivate"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4505 :	"baseCRS_"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4521 :	"DerivedGeodeticCRSNNPtr"
		- NEIGH  = { DerivedGeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4521 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4521 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4522 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4522 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4522 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4522 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4522 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4522 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4522 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4523 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4523 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4523 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4523 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4524 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4524 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4524 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4524 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4525 :	"crs"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4525 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4525 :	"nn_make_shared"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4525 :	"<"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4525 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4525 :	">"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4526 :	"baseCRSIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4526 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4526 :	"csIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4527 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4527 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4527 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4528 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4528 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4528 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4529 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4529 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4530 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4530 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4546 :	"DerivedGeodeticCRSNNPtr"
		- NEIGH  = { DerivedGeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4546 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4546 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4547 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4547 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4547 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4547 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4547 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4547 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4547 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4548 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4548 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4548 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4548 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4549 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4549 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4549 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4549 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4550 :	"crs"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4550 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4550 :	"nn_make_shared"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4550 :	"<"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4550 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4550 :	">"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4551 :	"baseCRSIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4551 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4551 :	"csIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4552 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4552 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4552 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

4553 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4553 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4553 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4554 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4554 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4555 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4555 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4561 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4561 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4561 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4561 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4561 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4561 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4562 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4562 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4562 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4562 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4562 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4562 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4562 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4562 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4563 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }

4563 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }

4563 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }

4564 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4564 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4564 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4567 :	"formatter"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4567 :	"startNode"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4567 :	"io"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4567 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4567 :	"GEODCRS"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4567 :	"!"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4567 :	"identifiers"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4567 :	"empty"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4568 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

4568 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

4568 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

4570 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

4570 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

4571 :	"formatter"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4571 :	"startNode"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4571 :	"formatter"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4571 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4571 :	"&&"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4572 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4572 :	"<"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4572 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4572 :	"*"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4572 :	">"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4572 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4572 :	"get"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4573 :	"io"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4573 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4573 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4574 :	"io"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4574 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4574 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4575 :	"!"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4575 :	"baseCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4575 :	"identifiers"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4575 :	"empty"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4576 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

4576 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

4576 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

4576 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

4577 :	"l_datum"
		- NEIGH  = { datum , l_baseCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { l_datum , if , }

4577 :	"l_baseCRS"
		- NEIGH  = { datum , l_baseCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { l_datum , if , }

4577 :	"datum"
		- NEIGH  = { datum , l_baseCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { l_datum , if , }

4578 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , formatter , l_datumEnsemble , l_datum , _exportToWKT , datumEnsemble , }
		- PRED   = { datum , l_baseCRS , l_datum , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

4578 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , formatter , l_datumEnsemble , l_datum , _exportToWKT , datumEnsemble , }
		- PRED   = { datum , l_baseCRS , l_datum , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

4579 :	"l_datum"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4579 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4579 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4581 :	"l_datumEnsemble"
		- NEIGH  = { datumEnsemble , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

4581 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

4582 :	"assert"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , l_datumEnsemble , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

4582 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , l_datumEnsemble , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

4583 :	"l_datumEnsemble"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

4583 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

4583 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

4585 :	"l_baseCRS"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

4585 :	"primeMeridian"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

4585 :	"_exportToWKT"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

4585 :	"formatter"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

4586 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4586 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4588 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

4588 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

4589 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4589 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4589 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4590 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4590 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4592 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4592 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4592 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4593 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4593 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4593 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4594 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4594 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4600 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4600 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4601 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4601 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4601 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4603 :	"throw"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4603 :	"io"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4603 :	"FormattingException"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4609 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4609 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4610 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4610 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4610 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4610 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4611 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4611 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4611 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4611 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4612 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4612 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4612 :	"<"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4612 :	"DerivedGeodeticCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4612 :	"*"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4612 :	">"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4612 :	"other"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4613 :	"return"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4613 :	"otherDerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4613 :	"!="
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4613 :	"&&"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4614 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4614 :	"_isEquivalentTo"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4614 :	"other"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4614 :	"criterion"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4621 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4621 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4621 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4621 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4621 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4621 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4621 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4621 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4622 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4622 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4622 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4622 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4622 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4622 :	"factory"
		- NEIGH  = { factory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4623 :	"return"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4623 :	"CRS"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4623 :	"_identify"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4623 :	"factory"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4631 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4631 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4637 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4637 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4642 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4642 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4643 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4643 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4643 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4644 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4644 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4644 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4644 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4645 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4645 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4645 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4645 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4646 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4646 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4646 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4646 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4646 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4646 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4647 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4647 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4647 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4647 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4647 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4647 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4648 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4648 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4648 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4648 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4648 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4652 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4652 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4652 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4652 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4652 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4653 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4653 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4653 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4653 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4653 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4653 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4653 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4657 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4657 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4657 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4658 :	"crs"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4658 :	"DerivedGeographicCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4658 :	"nn_make_shared"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4658 :	"<"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4658 :	"DerivedGeographicCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4658 :	">"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4658 :	"*"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4658 :	"this"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4659 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4659 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4659 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4660 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4660 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4661 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4661 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4670 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4670 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4670 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4671 :	"return"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4671 :	"NN_NO_CHECK"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4671 :	"util"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4671 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4671 :	"<"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4671 :	"GeodeticCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4671 :	">"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4672 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4672 :	"getPrivate"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4672 :	"baseCRS_"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4688 :	"DerivedGeographicCRSNNPtr"
		- NEIGH  = { DerivedGeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4688 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4688 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4689 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4689 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4689 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4689 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4689 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4689 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4689 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4690 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4690 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4690 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4690 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4691 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4691 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4691 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4691 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4692 :	"crs"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4692 :	"DerivedGeographicCRS"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4692 :	"nn_make_shared"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4692 :	"<"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4692 :	"DerivedGeographicCRS"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4692 :	">"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4693 :	"baseCRSIn"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4693 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4693 :	"csIn"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4694 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

4694 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

4694 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

4695 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4695 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4695 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4696 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4696 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4697 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4697 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4703 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4703 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4703 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4703 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4703 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4703 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4704 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4704 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4704 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4704 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4704 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4704 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4704 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4704 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4705 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }

4705 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }

4705 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }

4706 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4706 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4706 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4709 :	"formatter"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4709 :	"startNode"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4709 :	"formatter"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4709 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4710 :	"io"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4710 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4710 :	"GEOGCRS"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4711 :	"io"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4711 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4711 :	"GEODCRS"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4712 :	"!"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4712 :	"identifiers"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4712 :	"empty"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4713 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

4713 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

4713 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

4715 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

4715 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

4716 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4716 :	"startNode"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4716 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4716 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4716 :	"&&"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4717 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4717 :	"<"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4717 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4717 :	"*"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4717 :	">"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4717 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4717 :	"get"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4718 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4718 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4718 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4719 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4719 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4719 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4720 :	"!"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4720 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4720 :	"identifiers"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4720 :	"empty"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

4721 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

4721 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

4721 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

4721 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

4722 :	"l_baseCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

4722 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

4722 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

4723 :	"l_baseCRS"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

4723 :	"primeMeridian"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

4723 :	"_exportToWKT"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

4723 :	"formatter"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

4724 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4724 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4726 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

4726 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

4727 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4727 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4727 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4728 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4728 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4730 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4730 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4730 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4731 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4731 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4731 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4732 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4732 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4738 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4738 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4739 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4739 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4739 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4739 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4741 :	"&"
		- NEIGH  = { derivingConversionRef , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , method , methodName , l_conv , & , }

4741 :	"l_conv"
		- NEIGH  = { derivingConversionRef , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , method , methodName , l_conv , & , }

4741 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , method , methodName , l_conv , & , }

4742 :	"&"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { || , == , methodName , if , }

4742 :	"methodName"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { || , == , methodName , if , }

4742 :	"l_conv"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { || , == , methodName , if , }

4742 :	"method"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { || , == , methodName , if , }

4742 :	"nameStr"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { || , == , methodName , if , }

4743 :	"if"
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4743 :	"methodName"
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4743 :	"=="
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4743 :	"||"
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4744 :	"methodName"
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4744 :	"=="
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4744 :	"||"
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4745 :	"methodName"
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4745 :	"=="
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4745 :	"||"
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4746 :	"methodName"
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4746 :	"=="
		- NEIGH  = { || , == , methodName , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { FormattingException , io , throw , }

4747 :	"l_conv"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { || , == , methodName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

4747 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { || , == , methodName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

4747 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { || , == , methodName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

4748 :	"return"
		- NEIGH  = { return , }
		- PARENT = { || , == , methodName , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , l_conv , }
		- SUCC   = { }

4751 :	"throw"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { || , == , methodName , if , }
		- SUCC   = { }

4751 :	"io"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { || , == , methodName , if , }
		- SUCC   = { }

4751 :	"FormattingException"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { || , == , methodName , if , }
		- SUCC   = { }

4757 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4757 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4758 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4758 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4758 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4758 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4759 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4759 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4759 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4759 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4760 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4760 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4760 :	"<"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4760 :	"DerivedGeographicCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4760 :	"*"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4760 :	">"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4760 :	"other"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4761 :	"return"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4761 :	"otherDerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4761 :	"!="
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4761 :	"&&"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4762 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4762 :	"_isEquivalentTo"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4762 :	"other"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4762 :	"criterion"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

4769 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4769 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4769 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4769 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4769 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4769 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4769 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4769 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4770 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4770 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4770 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4770 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4770 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4770 :	"factory"
		- NEIGH  = { factory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4771 :	"return"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4771 :	"CRS"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4771 :	"_identify"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4771 :	"factory"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4779 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4779 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4785 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4785 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4790 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4790 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4791 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4791 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4791 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4792 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4792 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4792 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4792 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4793 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4793 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4793 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4793 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4794 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4794 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4794 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4794 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4794 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4794 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4795 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4795 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4795 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4795 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4795 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4799 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4799 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4799 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4799 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4799 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4800 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4800 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4800 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4800 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4800 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4804 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4804 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4804 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4805 :	"crs"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4805 :	"DerivedProjectedCRS"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4805 :	"nn_make_shared"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4805 :	"<"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4805 :	"DerivedProjectedCRS"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4805 :	">"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4805 :	"*"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4805 :	"this"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4806 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4806 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4806 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4807 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4807 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4808 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4808 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4817 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4817 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4817 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4818 :	"return"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4818 :	"NN_NO_CHECK"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4818 :	"util"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4818 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4818 :	"<"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4818 :	"ProjectedCRS"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4818 :	">"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4819 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4819 :	"getPrivate"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4819 :	"baseCRS_"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4835 :	"DerivedProjectedCRSNNPtr"
		- NEIGH  = { DerivedProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4835 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4835 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4836 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4836 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4836 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4836 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4836 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4836 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4836 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4837 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4837 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4837 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4837 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4838 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4838 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4838 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4838 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4839 :	"crs"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4839 :	"DerivedProjectedCRS"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4839 :	"nn_make_shared"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4839 :	"<"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4839 :	"DerivedProjectedCRS"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4839 :	">"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4840 :	"baseCRSIn"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4840 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4840 :	"csIn"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4841 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

4841 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

4841 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

4842 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4842 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4842 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4843 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4843 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

4844 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4844 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

4850 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4850 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4850 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4850 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4850 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4850 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4851 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

4851 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

4851 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

4851 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

4851 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

4851 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

4851 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

4851 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

4852 :	"if"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

4852 :	"!"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

4852 :	"isWKT2"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

4852 :	"||"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

4852 :	"!"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

4852 :	"formatter"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

4852 :	"use2019Keywords"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

4853 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4853 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4853 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4856 :	"formatter"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4856 :	"startNode"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4856 :	"io"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4856 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4856 :	"DERIVEDPROJCRS"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4857 :	"!"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4857 :	"identifiers"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4857 :	"empty"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4858 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , }

4858 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , }

4858 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , }

4861 :	"l_baseProjCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }

4861 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }

4862 :	"formatter"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

4862 :	"startNode"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

4862 :	"io"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

4862 :	"WKTConstants"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

4862 :	"BASEPROJCRS"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

4863 :	"!"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

4863 :	"l_baseProjCRS"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

4863 :	"identifiers"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

4863 :	"empty"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

4864 :	"formatter"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

4864 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

4864 :	"l_baseProjCRS"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

4864 :	"nameStr"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

4866 :	"l_baseGeodCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }

4866 :	"l_baseProjCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }

4866 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }

4867 :	"&"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

4867 :	"geodeticCRSAxisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

4868 :	"l_baseGeodCRS"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

4868 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

4868 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

4870 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4870 :	"startNode"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4871 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4871 :	"<"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4871 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4871 :	"*"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4871 :	">"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4871 :	"l_baseGeodCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4871 :	"get"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4872 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4872 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4872 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4873 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4873 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4873 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4874 :	"!"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4874 :	"l_baseGeodCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4874 :	"identifiers"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4874 :	"empty"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

4875 :	"formatter"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

4875 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

4875 :	"l_baseGeodCRS"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

4875 :	"nameStr"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

4876 :	"l_baseGeodCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- SUCC   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }

4876 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- SUCC   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }

4876 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- SUCC   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }

4881 :	"if"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

4881 :	"formatter"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

4881 :	"primeMeridianOrParameterUnitOmittedIfSameAsAxis"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

4881 :	"&&"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

4882 :	"!"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

4882 :	"geodeticCRSAxisList"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

4882 :	"empty"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

4883 :	"geodeticCRSAxisList"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4883 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4883 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4883 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4885 :	"l_baseGeodCRS"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

4885 :	"primeMeridian"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

4885 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

4885 :	"formatter"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

4886 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }

4886 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }

4888 :	"l_baseProjCRS"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

4888 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

4888 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

4888 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

4889 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4889 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4892 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

4892 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

4893 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4893 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4893 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

4894 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4894 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4896 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4896 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4896 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4897 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4897 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4897 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4898 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4898 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4904 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4904 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4905 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4905 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4905 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4905 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4906 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4906 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4906 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4906 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4907 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4907 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4907 :	"<"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4907 :	"DerivedProjectedCRS"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4907 :	"*"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4907 :	">"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4907 :	"other"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

4908 :	"return"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

4908 :	"otherDerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

4908 :	"!="
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

4908 :	"&&"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

4909 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

4909 :	"_isEquivalentTo"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

4909 :	"other"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

4909 :	"criterion"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

4915 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4915 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4921 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4921 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4926 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4926 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4926 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4926 :	"TemporalDatumNNPtr"
		- NEIGH  = { TemporalDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4926 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4926 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4927 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4927 :	"TemporalCSNNPtr"
		- NEIGH  = { TemporalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4927 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4927 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4928 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4928 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4928 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4928 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4928 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4932 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4932 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4932 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4932 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4932 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4933 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4933 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4933 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4937 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4937 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4937 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4938 :	"crs"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"TemporalCRS"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"nn_make_shared"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"<"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"TemporalCRS"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	">"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"*"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4938 :	"this"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4939 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4939 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4939 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4940 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

4940 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

4949 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4949 :	"TemporalDatumNNPtr"
		- NEIGH  = { TemporalDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4949 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4949 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4950 :	"return"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4950 :	"NN_NO_CHECK"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4950 :	"std"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4950 :	"static_pointer_cast"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4950 :	"<"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4950 :	"datum"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4950 :	"TemporalDatum"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4950 :	">"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4951 :	"SingleCRS"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4951 :	"getPrivate"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4951 :	"datum"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4960 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4960 :	"TemporalCSNNPtr"
		- NEIGH  = { TemporalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4960 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4960 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4961 :	"return"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4961 :	"util"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4961 :	"nn_static_pointer_cast"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4961 :	"<"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4961 :	"cs"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4961 :	"TemporalCS"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4961 :	">"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4962 :	"SingleCRS"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4962 :	"getPrivate"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4962 :	"coordinateSystem"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4975 :	"TemporalCRSNNPtr"
		- NEIGH  = { TemporalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4975 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4975 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4975 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4975 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4975 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4975 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4976 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4976 :	"TemporalDatumNNPtr"
		- NEIGH  = { TemporalDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4976 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4976 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4977 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4977 :	"TemporalCSNNPtr"
		- NEIGH  = { TemporalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4977 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4977 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4978 :	"crs"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4978 :	"TemporalCRS"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4978 :	"nn_make_shared"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4978 :	"<"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4978 :	"TemporalCRS"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4978 :	">"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4978 :	"datumIn"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4978 :	"csIn"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4979 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

4979 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

4979 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

4980 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4980 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4980 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

4981 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

4981 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

4987 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4987 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4987 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4987 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4987 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4987 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4988 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4988 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4988 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4988 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4988 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4988 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4988 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4988 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

4989 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }

4989 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }

4989 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }

4990 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4990 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4990 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4993 :	"formatter"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4993 :	"startNode"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4993 :	"io"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4993 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4993 :	"TIMECRS"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4993 :	"!"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4993 :	"identifiers"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4993 :	"empty"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4994 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

4994 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

4994 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

4995 :	"datum"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4995 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4995 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

4996 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4996 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4996 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4997 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4997 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4997 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

4998 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4998 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5005 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5005 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5006 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5006 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5006 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5006 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5008 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5008 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5008 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5008 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5009 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5010 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5010 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5010 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5010 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5010 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5012 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5012 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5013 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5013 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5014 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5014 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5014 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5015 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5015 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5017 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5017 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5017 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5020 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5020 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5021 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5021 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5022 :	"datum"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5022 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5022 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5024 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5024 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5025 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5025 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5026 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5026 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5026 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5028 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5028 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5028 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5034 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5034 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5035 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5036 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5036 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5036 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5036 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5037 :	"otherTemporalCRS"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5037 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5037 :	"<"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5037 :	"TemporalCRS"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5037 :	"*"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5037 :	">"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5037 :	"other"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

5038 :	"return"
		- NEIGH  = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5038 :	"otherTemporalCRS"
		- NEIGH  = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5038 :	"!="
		- NEIGH  = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5038 :	"&&"
		- NEIGH  = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5039 :	"SingleCRS"
		- NEIGH  = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5039 :	"baseIsEquivalentTo"
		- NEIGH  = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5039 :	"other"
		- NEIGH  = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5039 :	"criterion"
		- NEIGH  = { other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

5045 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5045 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5046 :	"forceOutputCS_"
		- NEIGH  = { forceOutputCS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5053 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5053 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5058 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5058 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5058 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5058 :	"EngineeringDatumNNPtr"
		- NEIGH  = { EngineeringDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5058 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5058 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5059 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5060 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5060 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5060 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5060 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5061 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5061 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5061 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5061 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5061 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5061 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5065 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5065 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5065 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5065 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5065 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5066 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5070 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5070 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5070 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5071 :	"crs"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5071 :	"EngineeringCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5071 :	"nn_make_shared"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5071 :	"<"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5071 :	"EngineeringCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5071 :	">"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5071 :	"*"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5071 :	"this"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5072 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { crs , return , }

5072 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { crs , return , }

5072 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { crs , return , }

5073 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5073 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5082 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5082 :	"EngineeringDatumNNPtr"
		- NEIGH  = { EngineeringDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5082 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5082 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5083 :	"return"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5083 :	"NN_NO_CHECK"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5083 :	"std"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5083 :	"static_pointer_cast"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5083 :	"<"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5083 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5083 :	"EngineeringDatum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5083 :	">"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5084 :	"SingleCRS"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5084 :	"getPrivate"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5084 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5097 :	"EngineeringCRSNNPtr"
		- NEIGH  = { EngineeringCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5098 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5098 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5098 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5098 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5098 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5098 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5099 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5099 :	"EngineeringDatumNNPtr"
		- NEIGH  = { EngineeringDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5099 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5099 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5100 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5100 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5100 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5100 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5101 :	"crs"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5101 :	"EngineeringCRS"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5101 :	"nn_make_shared"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5101 :	"<"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5101 :	"EngineeringCRS"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5101 :	">"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5101 :	"datumIn"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5101 :	"csIn"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5102 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5102 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5102 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5103 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { properties , get , pVal , }

5103 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { properties , get , pVal , }

5103 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { properties , get , pVal , }

5105 :	"pVal"
		- NEIGH  = { properties , get , pVal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { pVal , if , }

5105 :	"properties"
		- NEIGH  = { properties , get , pVal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { pVal , if , }

5105 :	"get"
		- NEIGH  = { properties , get , pVal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { pVal , if , }

5106 :	"if"
		- NEIGH  = { pVal , if , }
		- PARENT = { }
		- CHILD  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PRED   = { properties , get , pVal , }
		- SUCC   = { crs , return , }

5106 :	"pVal"
		- NEIGH  = { pVal , if , }
		- PARENT = { }
		- CHILD  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PRED   = { properties , get , pVal , }
		- SUCC   = { crs , return , }

5107 :	"if"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5107 :	"genVal"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5108 :	"dynamic_cast"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5108 :	"<"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5108 :	"util"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5108 :	"BoxedValue"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5108 :	"*"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5108 :	">"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5108 :	"pVal"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5108 :	"get"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { pVal , if , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

5109 :	"if"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5109 :	"genVal"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5109 :	"type"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5109 :	"=="
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5109 :	"util"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5109 :	"BoxedValue"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5109 :	"Type"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5109 :	"BOOLEAN"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5109 :	"&&"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5110 :	"genVal"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5110 :	"booleanValue"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { forceOutputCS_ , d , crs , }
		- PRED   = { }
		- SUCC   = { }

5111 :	"crs"
		- NEIGH  = { forceOutputCS_ , d , crs , }
		- PARENT = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5111 :	"d"
		- NEIGH  = { forceOutputCS_ , d , crs , }
		- PARENT = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5111 :	"forceOutputCS_"
		- NEIGH  = { forceOutputCS_ , d , crs , }
		- PARENT = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5116 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pVal , if , }
		- SUCC   = { }

5116 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pVal , if , }
		- SUCC   = { }

5122 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5122 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5122 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5122 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5122 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5122 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5123 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5123 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5123 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5123 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5123 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5123 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5123 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5123 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

5124 :	"formatter"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5124 :	"startNode"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5124 :	"isWKT2"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5124 :	"io"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5124 :	"WKTConstants"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5124 :	"ENGCRS"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5125 :	"io"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5125 :	"WKTConstants"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5125 :	"LOCAL_CS"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5126 :	"!"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5126 :	"identifiers"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5126 :	"empty"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5127 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { empty , datum , if , ! , || , nameStr , isWKT2 , }

5127 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { empty , datum , if , ! , || , nameStr , isWKT2 , }

5127 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { empty , datum , if , ! , || , nameStr , isWKT2 , }

5128 :	"if"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { coordinateSystem , formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }

5128 :	"isWKT2"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { coordinateSystem , formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }

5128 :	"||"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { coordinateSystem , formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }

5128 :	"!"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { coordinateSystem , formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }

5128 :	"datum"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { coordinateSystem , formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }

5128 :	"nameStr"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { coordinateSystem , formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }

5128 :	"empty"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { coordinateSystem , formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }

5129 :	"datum"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5129 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5129 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5130 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { }

5130 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { }

5130 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { }

5132 :	"if"
		- NEIGH  = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5132 :	"!"
		- NEIGH  = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5132 :	"isWKT2"
		- NEIGH  = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5132 :	"&&"
		- NEIGH  = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5132 :	"d"
		- NEIGH  = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5132 :	"forceOutputCS_"
		- NEIGH  = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5133 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5133 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5133 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5133 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5133 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5135 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- SUCC   = { endNode , formatter , }

5135 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- SUCC   = { endNode , formatter , }

5135 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { forceOutputCS_ , if , ! , d , && , isWKT2 , }
		- SUCC   = { endNode , formatter , }

5136 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5136 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5143 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5143 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5144 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5144 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5144 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5144 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5146 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5146 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5146 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5147 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5148 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5148 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5148 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5148 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5148 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5150 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5150 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5151 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5151 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5152 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5152 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5152 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5153 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5153 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5155 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5155 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5155 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5158 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5158 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5159 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5159 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5160 :	"datum"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5160 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5160 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5162 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5162 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5163 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5163 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5164 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5164 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5164 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5166 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5166 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5166 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5172 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5172 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5173 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5173 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5173 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5173 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5174 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5174 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5174 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5174 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"otherEngineeringCRS"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5175 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5175 :	"<"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5175 :	"EngineeringCRS"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5175 :	"*"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5175 :	">"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5175 :	"other"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

5176 :	"return"
		- NEIGH  = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5176 :	"otherEngineeringCRS"
		- NEIGH  = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5176 :	"!="
		- NEIGH  = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5176 :	"&&"
		- NEIGH  = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5177 :	"SingleCRS"
		- NEIGH  = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5177 :	"baseIsEquivalentTo"
		- NEIGH  = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5177 :	"other"
		- NEIGH  = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5177 :	"criterion"
		- NEIGH  = { other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

5183 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5183 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5189 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5189 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5194 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5194 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5194 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5194 :	"ParametricDatumNNPtr"
		- NEIGH  = { ParametricDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5194 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5194 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5195 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5195 :	"ParametricCSNNPtr"
		- NEIGH  = { ParametricCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5195 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5195 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5196 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5196 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5196 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5196 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5196 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5200 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5200 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5200 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5200 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5200 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5201 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5201 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5201 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5205 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5205 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5205 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5206 :	"crs"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5206 :	"ParametricCRS"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5206 :	"nn_make_shared"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5206 :	"<"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5206 :	"ParametricCRS"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5206 :	">"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5206 :	"*"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5206 :	"this"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5207 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5207 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5207 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5208 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5208 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5217 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5217 :	"ParametricDatumNNPtr"
		- NEIGH  = { ParametricDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5217 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5217 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5218 :	"return"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5218 :	"NN_NO_CHECK"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5218 :	"std"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5218 :	"static_pointer_cast"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5218 :	"<"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5218 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5218 :	"ParametricDatum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5218 :	">"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5219 :	"SingleCRS"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5219 :	"getPrivate"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5219 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5228 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5228 :	"ParametricCSNNPtr"
		- NEIGH  = { ParametricCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5228 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5228 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5229 :	"return"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5229 :	"util"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5229 :	"nn_static_pointer_cast"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5229 :	"<"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5229 :	"cs"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5229 :	"ParametricCS"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5229 :	">"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5230 :	"SingleCRS"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5230 :	"getPrivate"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5230 :	"coordinateSystem"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5243 :	"ParametricCRSNNPtr"
		- NEIGH  = { ParametricCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5245 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5245 :	"ParametricDatumNNPtr"
		- NEIGH  = { ParametricDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5245 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5245 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5246 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5246 :	"ParametricCSNNPtr"
		- NEIGH  = { ParametricCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5246 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5246 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5247 :	"crs"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5247 :	"ParametricCRS"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5247 :	"nn_make_shared"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5247 :	"<"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5247 :	"ParametricCRS"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5247 :	">"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5247 :	"datumIn"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5247 :	"csIn"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5248 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5248 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5248 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5249 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5249 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5249 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5250 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

5250 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

5256 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5256 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5256 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5256 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5256 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5256 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5257 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5257 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5257 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5257 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5257 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5257 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5257 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5257 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5258 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }

5258 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }

5258 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }

5259 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5259 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5259 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5262 :	"formatter"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5262 :	"startNode"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5262 :	"io"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5262 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5262 :	"PARAMETRICCRS"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5263 :	"!"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5263 :	"identifiers"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5263 :	"empty"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5264 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

5264 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

5264 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

5265 :	"datum"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5265 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5265 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5266 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5266 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5266 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5267 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5267 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5267 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5268 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5268 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5275 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5275 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5276 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5276 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5276 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5276 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5278 :	"&"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5278 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5278 :	"formatter"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5278 :	"writer"
		- NEIGH  = { formatter , writer , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5279 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5280 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5280 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5280 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5280 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5280 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , & , }
		- SUCC   = { AddObjKey , writer , }

5282 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5282 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

5283 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5283 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

5284 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5284 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5284 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

5285 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5285 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5287 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5287 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5287 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5290 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5290 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5291 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5291 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

5292 :	"datum"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5292 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5292 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

5294 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5294 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5295 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5295 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

5296 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5296 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5296 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

5298 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5298 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5298 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

5304 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5304 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5305 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5305 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5305 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5305 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5306 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5306 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5306 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5306 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5307 :	"otherParametricCRS"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5307 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5307 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5307 :	"ParametricCRS"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5307 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5307 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5307 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

5308 :	"return"
		- NEIGH  = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5308 :	"otherParametricCRS"
		- NEIGH  = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5308 :	"!="
		- NEIGH  = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5308 :	"&&"
		- NEIGH  = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5309 :	"SingleCRS"
		- NEIGH  = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5309 :	"baseIsEquivalentTo"
		- NEIGH  = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5309 :	"other"
		- NEIGH  = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5309 :	"criterion"
		- NEIGH  = { other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

5315 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5315 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5321 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5321 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5326 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5326 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5327 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5327 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5327 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5328 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5328 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5328 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5328 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5329 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5329 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5329 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5329 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5330 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5330 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5330 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5330 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5330 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5330 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5331 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5331 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5331 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5331 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5331 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5331 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5332 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5332 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5332 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5332 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5332 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5336 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5336 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5336 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5336 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5336 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5337 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5337 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5337 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5337 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5337 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5337 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5337 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5341 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5341 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5341 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5342 :	"crs"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5342 :	"DerivedVerticalCRS"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5342 :	"nn_make_shared"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5342 :	"<"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5342 :	"DerivedVerticalCRS"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5342 :	">"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5342 :	"*"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5342 :	"this"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5343 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5343 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5343 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5344 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5344 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5345 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5345 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5354 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5354 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5354 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5355 :	"return"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5355 :	"NN_NO_CHECK"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5355 :	"util"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5355 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5355 :	"<"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5355 :	"VerticalCRS"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5355 :	">"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5356 :	"DerivedCRS"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5356 :	"getPrivate"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5356 :	"baseCRS_"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5372 :	"DerivedVerticalCRSNNPtr"
		- NEIGH  = { DerivedVerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5372 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5372 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5373 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5373 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5373 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5373 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5373 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5373 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5373 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5374 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5374 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5374 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5374 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5375 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5375 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5375 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5375 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5376 :	"crs"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5376 :	"DerivedVerticalCRS"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5376 :	"nn_make_shared"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5376 :	"<"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5376 :	"DerivedVerticalCRS"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5376 :	">"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5377 :	"baseCRSIn"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5377 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5377 :	"csIn"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5378 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5378 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5378 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5379 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5379 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5379 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5380 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5380 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5381 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5381 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5387 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5387 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5387 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5387 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5387 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5387 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5388 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5388 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5388 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5388 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5388 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5388 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5388 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5388 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5389 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }

5389 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }

5389 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }

5390 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5390 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5390 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5393 :	"baseExportToWKT"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5393 :	"formatter"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5393 :	"io"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5393 :	"WKTConstants"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5393 :	"VERTCRS"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5394 :	"io"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5394 :	"WKTConstants"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5394 :	"BASEVERTCRS"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

5400 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5400 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5401 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5401 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5401 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5403 :	"throw"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5403 :	"io"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5403 :	"FormattingException"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5409 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5409 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5410 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5410 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5410 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5410 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5411 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5411 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5411 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5411 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5412 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5412 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5412 :	"<"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5412 :	"DerivedVerticalCRS"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5412 :	"*"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5412 :	">"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5412 :	"other"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5413 :	"return"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5413 :	"otherDerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5413 :	"!="
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5413 :	"&&"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5414 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5414 :	"_isEquivalentTo"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5414 :	"other"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5414 :	"criterion"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

5421 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5421 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5421 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5421 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5421 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5421 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5421 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5421 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5422 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5422 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5422 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5422 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5422 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5422 :	"factory"
		- NEIGH  = { factory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5423 :	"return"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5423 :	"CRS"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5423 :	"_identify"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5423 :	"factory"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5431 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5431 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5431 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5432 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5432 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5432 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5432 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5432 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5438 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5438 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5438 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5439 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5439 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5439 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5439 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5439 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5444 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5444 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5444 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5445 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5445 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5445 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5445 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5445 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"BaseNNPtr"
		- NEIGH  = { BaseNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"CSNNPtr"
		- NEIGH  = { CSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5448 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5448 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5448 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5448 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5448 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	"BaseType"
		- NEIGH  = { BaseType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5449 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5450 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5450 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5450 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5450 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5450 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5454 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5455 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5455 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5455 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5455 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5455 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5456 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5456 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5456 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5457 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5457 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5457 :	"BaseType"
		- NEIGH  = { BaseType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5457 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5457 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5457 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5457 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5461 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5461 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5461 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5462 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5462 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5462 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5462 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5462 :	"BaseNNPtr"
		- NEIGH  = { BaseNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5463 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5463 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5463 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5463 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5463 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5464 :	"l_baseCRS"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

5464 :	"DerivedCRS"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

5464 :	"getPrivate"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

5464 :	"baseCRS_"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

5465 :	"return"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5465 :	"NN_NO_CHECK"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5465 :	"util"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5465 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5465 :	"<"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5465 :	"BaseType"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5465 :	">"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5465 :	"l_baseCRS"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

5472 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5472 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5472 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5473 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5473 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5473 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5473 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5473 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5473 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5474 :	"crs"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5474 :	"DerivedCRSTemplate"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5474 :	"nn_make_shared"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5474 :	"<"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5474 :	"DerivedCRSTemplate"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5474 :	">"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5474 :	"*"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5474 :	"this"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5475 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5475 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5475 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5476 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5476 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5477 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5477 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5482 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5482 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5482 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5483 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5483 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5483 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5483 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5483 :	"NNPtr"
		- NEIGH  = { NNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5484 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5484 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5484 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5484 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5484 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5485 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5485 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5485 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5485 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5485 :	"BaseNNPtr"
		- NEIGH  = { BaseNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5485 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5485 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5486 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5487 :	"CSNNPtr"
		- NEIGH  = { CSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5487 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5487 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5488 :	"crs"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5488 :	"DerivedCRSTemplate"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5488 :	"nn_make_shared"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5488 :	"<"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5488 :	"DerivedCRSTemplate"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5488 :	">"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	"baseCRSIn"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5489 :	"csIn"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5490 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5490 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5490 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5491 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5491 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5491 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5492 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5492 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5493 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5493 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5498 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5498 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5498 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5499 :	"className"
		- NEIGH  = { className , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5500 :	"return"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5500 :	"DerivedCRSTraits"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5500 :	"CRSName"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5500 :	"c_str"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5505 :	"DerivedCRSTemplateCheckExportToWKT"
		- NEIGH  = { DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5505 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5505 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5505 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5505 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5506 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5506 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5506 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5506 :	"crsName"
		- NEIGH  = { crsName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5507 :	"wkt2_2019_only"
		- NEIGH  = { wkt2_2019_only , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5508 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5508 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5508 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5508 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5508 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5508 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5508 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5508 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

5509 :	"if"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5509 :	"!"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5509 :	"isWKT2"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5509 :	"||"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5509 :	"wkt2_2019_only"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5509 :	"&&"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5509 :	"!"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5509 :	"formatter"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5509 :	"use2019Keywords"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5510 :	"io"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5510 :	"FormattingException"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5510 :	"Throw"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5510 :	"crsName"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5510 :	"+"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5511 :	"+"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5512 :	"wkt2_2019_only"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5518 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5518 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5518 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5519 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5519 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5519 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5519 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5519 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5520 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5520 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5520 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5520 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5521 :	"DerivedCRSTemplateCheckExportToWKT"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5521 :	"formatter"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5521 :	"DerivedCRSTraits"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5521 :	"CRSName"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5522 :	"DerivedCRSTraits"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5522 :	"wkt2_2019_only"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

5523 :	"baseExportToWKT"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5523 :	"formatter"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5523 :	"DerivedCRSTraits"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5523 :	"WKTKeyword"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5524 :	"DerivedCRSTraits"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5524 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

5529 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5529 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5529 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5530 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5530 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5530 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5530 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5530 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5531 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5531 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5531 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5531 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5532 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5532 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5532 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5532 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5533 :	"otherDerivedCRS"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5533 :	"dynamic_cast"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5533 :	"<"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5533 :	"DerivedCRSTemplate"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5533 :	"*"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5533 :	">"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5533 :	"other"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5534 :	"return"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5534 :	"otherDerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5534 :	"!="
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5534 :	"&&"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5535 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5535 :	"_isEquivalentTo"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5535 :	"other"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5535 :	"criterion"
		- NEIGH  = { DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

5543 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5543 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5543 :	"STRING_DerivedEngineeringCRS"
		- NEIGH  = { STRING_DerivedEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5544 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5544 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5544 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5544 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5544 :	"CRSName"
		- NEIGH  = { CRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5545 :	"return"
		- NEIGH  = { STRING_DerivedEngineeringCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5545 :	"STRING_DerivedEngineeringCRS"
		- NEIGH  = { STRING_DerivedEngineeringCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5547 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5547 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5547 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5547 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5547 :	"WKTKeyword"
		- NEIGH  = { WKTKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5548 :	"return"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5548 :	"io"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5548 :	"WKTConstants"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5548 :	"ENGCRS"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5550 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5550 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5550 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5550 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5550 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5551 :	"return"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5551 :	"io"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5551 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5551 :	"BASEENGCRS"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5554 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5554 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5554 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5554 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5560 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5560 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5560 :	"STRING_DerivedParametricCRS"
		- NEIGH  = { STRING_DerivedParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5561 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5561 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5561 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5561 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5561 :	"CRSName"
		- NEIGH  = { CRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5562 :	"return"
		- NEIGH  = { STRING_DerivedParametricCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5562 :	"STRING_DerivedParametricCRS"
		- NEIGH  = { STRING_DerivedParametricCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5564 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5564 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5564 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5564 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5564 :	"WKTKeyword"
		- NEIGH  = { WKTKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5565 :	"return"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5565 :	"io"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5565 :	"WKTConstants"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5565 :	"PARAMETRICCRS"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5567 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5567 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5567 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5567 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5567 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5568 :	"return"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5568 :	"io"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5568 :	"WKTConstants"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5568 :	"BASEPARAMCRS"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5571 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5571 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5571 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5571 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5577 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5577 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5577 :	"STRING_DerivedTemporalCRS"
		- NEIGH  = { STRING_DerivedTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5578 :	"CRSName"
		- NEIGH  = { CRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5579 :	"return"
		- NEIGH  = { STRING_DerivedTemporalCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5579 :	"STRING_DerivedTemporalCRS"
		- NEIGH  = { STRING_DerivedTemporalCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5581 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5581 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5581 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5581 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5581 :	"WKTKeyword"
		- NEIGH  = { WKTKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5582 :	"return"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5582 :	"io"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5582 :	"WKTConstants"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5582 :	"TIMECRS"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5584 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5584 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5584 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5584 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5584 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5585 :	"return"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5585 :	"io"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5585 :	"WKTConstants"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5585 :	"BASETIMECRS"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5588 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5588 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5588 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5588 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5594 :	"NS_PROJ_END"
		- NEIGH  = { NS_PROJ_END , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

