36 :	"Mode"
		- NEIGH  = { Mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

40 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

45 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"sinph0"
		- NEIGH  = { sinph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"cosph0"
		- NEIGH  = { cosph0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"en"
		- NEIGH  = { en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

49 :	"M1"
		- NEIGH  = { M1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

50 :	"N1"
		- NEIGH  = { N1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"Mp"
		- NEIGH  = { Mp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

52 :	"He"
		- NEIGH  = { He , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

53 :	"G"
		- NEIGH  = { G , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

54 :	"Mode"
		- NEIGH  = { Mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

54 :	"mode"
		- NEIGH  = { mode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

55 :	"geod_geodesic"
		- NEIGH  = { geod_geodesic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

55 :	"g"
		- NEIGH  = { g , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"aeqd"
		- NEIGH  = { aeqd , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"destructor"
		- NEIGH  = { destructor , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"errlev"
		- NEIGH  = { errlev , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"if"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

66 :	"=="
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

66 :	"P"
		- NEIGH  = { P , == , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { P , opaque , == , if , }

67 :	"return"
		- NEIGH  = { return , }
		- PARENT = { P , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"if"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

69 :	"=="
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

69 :	"P"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

69 :	"opaque"
		- NEIGH  = { P , opaque , == , if , }
		- PARENT = { }
		- CHILD  = { errlev , P , pj_default_destructor , return , }
		- PRED   = { P , == , if , }
		- SUCC   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }

70 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { P , opaque , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"pj_dealloc"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

72 :	"static_cast"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

72 :	"<"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

72 :	"pj_opaque"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

72 :	"*"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

72 :	">"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

72 :	"P"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

72 :	"opaque"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

72 :	"en"
		- NEIGH  = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , opaque , == , if , }
		- SUCC   = { errlev , P , pj_default_destructor , return , }

73 :	"return"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

73 :	"pj_default_destructor"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

73 :	"P"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

73 :	"errlev"
		- NEIGH  = { errlev , P , pj_default_destructor , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { en , opaque , P , > , * , pj_opaque , static_cast , < , pj_dealloc , }
		- SUCC   = { }

78 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"e_guam_fwd"
		- NEIGH  = { e_guam_fwd , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

79 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

80 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

80 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

80 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

80 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

80 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

80 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

80 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

80 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

80 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

80 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { t , sinphi , cosphi , }

81 :	"cosphi"
		- NEIGH  = { t , sinphi , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , cos , cosphi , }

81 :	"sinphi"
		- NEIGH  = { t , sinphi , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , cos , cosphi , }

81 :	"t"
		- NEIGH  = { t , sinphi , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , cos , cosphi , }

83 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , sinphi , cosphi , }
		- SUCC   = { phi , lp , sin , sinphi , }

83 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , sinphi , cosphi , }
		- SUCC   = { phi , lp , sin , sinphi , }

83 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , sinphi , cosphi , }
		- SUCC   = { phi , lp , sin , sinphi , }

83 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , sinphi , cosphi , }
		- SUCC   = { phi , lp , sin , sinphi , }

84 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { sinphi , * , es , - , sqrt , P , / , t , }

84 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { sinphi , * , es , - , sqrt , P , / , t , }

84 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { sinphi , * , es , - , sqrt , P , / , t , }

84 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { sinphi , * , es , - , sqrt , P , / , t , }

85 :	"t"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

85 :	"/"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

85 :	"sqrt"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

85 :	"-"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

85 :	"P"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

85 :	"es"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

85 :	"*"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

85 :	"sinphi"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

85 :	"*"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

85 :	"sinphi"
		- NEIGH  = { sinphi , * , es , - , sqrt , P , / , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { t , cosphi , lp , * , lam , x , xy , }

86 :	"xy"
		- NEIGH  = { t , cosphi , lp , * , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , - , sqrt , P , / , t , }
		- SUCC   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }

86 :	"x"
		- NEIGH  = { t , cosphi , lp , * , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , - , sqrt , P , / , t , }
		- SUCC   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }

86 :	"lp"
		- NEIGH  = { t , cosphi , lp , * , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , - , sqrt , P , / , t , }
		- SUCC   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }

86 :	"lam"
		- NEIGH  = { t , cosphi , lp , * , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , - , sqrt , P , / , t , }
		- SUCC   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }

86 :	"*"
		- NEIGH  = { t , cosphi , lp , * , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , - , sqrt , P , / , t , }
		- SUCC   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }

86 :	"cosphi"
		- NEIGH  = { t , cosphi , lp , * , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , - , sqrt , P , / , t , }
		- SUCC   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }

86 :	"*"
		- NEIGH  = { t , cosphi , lp , * , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , - , sqrt , P , / , t , }
		- SUCC   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }

86 :	"t"
		- NEIGH  = { t , cosphi , lp , * , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , * , es , - , sqrt , P , / , t , }
		- SUCC   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }

87 :	"xy"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"y"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"pj_mlfn"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"lp"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"phi"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"sinphi"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"cosphi"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"Q"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"en"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"-"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"Q"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"M1"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

87 :	"+"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"*"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"lp"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"lam"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"*"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"lp"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"lam"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"*"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"cosphi"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"*"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"sinphi"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"*"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

88 :	"t"
		- NEIGH  = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , cosphi , lp , * , lam , x , xy , }
		- SUCC   = { xy , return , }

90 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- SUCC   = { }

90 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , + , y , - , Q , phi , pj_mlfn , sinphi , lam , lp , t , M1 , xy , cosphi , en , }
		- SUCC   = { }

94 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"aeqd_e_forward"
		- NEIGH  = { aeqd_e_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

95 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

95 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

96 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

96 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

96 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

96 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

96 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

96 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

96 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

96 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

96 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

96 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , sinphi , cosphi , coslam , }

97 :	"coslam"
		- NEIGH  = { rho , sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { azi2 , s12 , azi1 , }

97 :	"cosphi"
		- NEIGH  = { rho , sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { azi2 , s12 , azi1 , }

97 :	"sinphi"
		- NEIGH  = { rho , sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { azi2 , s12 , azi1 , }

97 :	"rho"
		- NEIGH  = { rho , sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { azi2 , s12 , azi1 , }

98 :	"azi1"
		- NEIGH  = { azi2 , s12 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rho , sinphi , cosphi , coslam , }
		- SUCC   = { phi2 , phi1 , lam2 , lam1 , }

98 :	"azi2"
		- NEIGH  = { azi2 , s12 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rho , sinphi , cosphi , coslam , }
		- SUCC   = { phi2 , phi1 , lam2 , lam1 , }

98 :	"s12"
		- NEIGH  = { azi2 , s12 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rho , sinphi , cosphi , coslam , }
		- SUCC   = { phi2 , phi1 , lam2 , lam1 , }

99 :	"lam1"
		- NEIGH  = { phi2 , phi1 , lam2 , lam1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { azi2 , s12 , azi1 , }
		- SUCC   = { lam , lp , cos , coslam , }

99 :	"phi1"
		- NEIGH  = { phi2 , phi1 , lam2 , lam1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { azi2 , s12 , azi1 , }
		- SUCC   = { lam , lp , cos , coslam , }

99 :	"lam2"
		- NEIGH  = { phi2 , phi1 , lam2 , lam1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { azi2 , s12 , azi1 , }
		- SUCC   = { lam , lp , cos , coslam , }

99 :	"phi2"
		- NEIGH  = { phi2 , phi1 , lam2 , lam1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { azi2 , s12 , azi1 , }
		- SUCC   = { lam , lp , cos , coslam , }

101 :	"coslam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi2 , phi1 , lam2 , lam1 , }
		- SUCC   = { phi , lp , cos , cosphi , }

101 :	"cos"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi2 , phi1 , lam2 , lam1 , }
		- SUCC   = { phi , lp , cos , cosphi , }

101 :	"lp"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi2 , phi1 , lam2 , lam1 , }
		- SUCC   = { phi , lp , cos , cosphi , }

101 :	"lam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi2 , phi1 , lam2 , lam1 , }
		- SUCC   = { phi , lp , cos , cosphi , }

102 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { phi , lp , sin , sinphi , }

102 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { phi , lp , sin , sinphi , }

102 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { phi , lp , sin , sinphi , }

102 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { phi , lp , sin , sinphi , }

103 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

103 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

103 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

103 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

104 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { cos , a , azi1 , & , + , lam2 , phi2 , DEG_TO_RAD , / , phi0 , P , && , < , *= , phi1 , * , EQUIT , g , break , y , sin , pj_mlfn , x , en , geod_inverse , - , Q , xy , lam1 , cosphi , phi , if , lam , lp , coslam , OBLIQ , azi2 , sinphi , s12 , lam0 , N_POLE , Mp , fabs , rho , S_POLE , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { xy , return , }

104 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { cos , a , azi1 , & , + , lam2 , phi2 , DEG_TO_RAD , / , phi0 , P , && , < , *= , phi1 , * , EQUIT , g , break , y , sin , pj_mlfn , x , en , geod_inverse , - , Q , xy , lam1 , cosphi , phi , if , lam , lp , coslam , OBLIQ , azi2 , sinphi , s12 , lam0 , N_POLE , Mp , fabs , rho , S_POLE , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { xy , return , }

104 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { cos , a , azi1 , & , + , lam2 , phi2 , DEG_TO_RAD , / , phi0 , P , && , < , *= , phi1 , * , EQUIT , g , break , y , sin , pj_mlfn , x , en , geod_inverse , - , Q , xy , lam1 , cosphi , phi , if , lam , lp , coslam , OBLIQ , azi2 , sinphi , s12 , lam0 , N_POLE , Mp , fabs , rho , S_POLE , }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { xy , return , }

105 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , coslam , }

106 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

106 :	"-"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

106 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { S_POLE , }

108 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , }
		- SUCC   = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }

109 :	"rho"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"fabs"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"Q"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"Mp"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"-"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"pj_mlfn"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"lp"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"phi"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"sinphi"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"cosphi"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"Q"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

109 :	"en"
		- NEIGH  = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { lp , sin , lam , rho , * , x , xy , }

110 :	"xy"
		- NEIGH  = { lp , sin , lam , rho , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- SUCC   = { coslam , rho , * , y , xy , }

110 :	"x"
		- NEIGH  = { lp , sin , lam , rho , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- SUCC   = { coslam , rho , * , y , xy , }

110 :	"rho"
		- NEIGH  = { lp , sin , lam , rho , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- SUCC   = { coslam , rho , * , y , xy , }

110 :	"*"
		- NEIGH  = { lp , sin , lam , rho , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- SUCC   = { coslam , rho , * , y , xy , }

110 :	"sin"
		- NEIGH  = { lp , sin , lam , rho , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- SUCC   = { coslam , rho , * , y , xy , }

110 :	"lp"
		- NEIGH  = { lp , sin , lam , rho , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- SUCC   = { coslam , rho , * , y , xy , }

110 :	"lam"
		- NEIGH  = { lp , sin , lam , rho , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { en , phi , sinphi , lp , cosphi , pj_mlfn , - , Mp , Q , fabs , rho , }
		- SUCC   = { coslam , rho , * , y , xy , }

111 :	"xy"
		- NEIGH  = { coslam , rho , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { lp , sin , lam , rho , * , x , xy , }
		- SUCC   = { break , }

111 :	"y"
		- NEIGH  = { coslam , rho , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { lp , sin , lam , rho , * , x , xy , }
		- SUCC   = { break , }

111 :	"rho"
		- NEIGH  = { coslam , rho , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { lp , sin , lam , rho , * , x , xy , }
		- SUCC   = { break , }

111 :	"*"
		- NEIGH  = { coslam , rho , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { lp , sin , lam , rho , * , x , xy , }
		- SUCC   = { break , }

111 :	"coslam"
		- NEIGH  = { coslam , rho , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { lp , sin , lam , rho , * , x , xy , }
		- SUCC   = { break , }

112 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { coslam , rho , * , y , xy , }
		- SUCC   = { EQUIT , }

113 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { OBLIQ , }

114 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }

115 :	"if"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"fabs"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"lp"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"lam"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"<"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"&&"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"fabs"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"lp"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"phi"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"-"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"P"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"phi0"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

115 :	"<"
		- NEIGH  = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { break , y , x , xy , }
		- PRED   = { OBLIQ , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , phi1 , }

116 :	"xy"
		- NEIGH  = { y , x , xy , }
		- PARENT = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

116 :	"x"
		- NEIGH  = { y , x , xy , }
		- PARENT = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

116 :	"xy"
		- NEIGH  = { y , x , xy , }
		- PARENT = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

116 :	"y"
		- NEIGH  = { y , x , xy , }
		- PARENT = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

117 :	"break"
		- NEIGH  = { break , }
		- PARENT = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- CHILD  = { }
		- PRED   = { y , x , xy , }
		- SUCC   = { }

120 :	"phi1"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- SUCC   = { DEG_TO_RAD , lam0 , / , P , lam1 , }

120 :	"P"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- SUCC   = { DEG_TO_RAD , lam0 , / , P , lam1 , }

120 :	"phi0"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- SUCC   = { DEG_TO_RAD , lam0 , / , P , lam1 , }

120 :	"/"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- SUCC   = { DEG_TO_RAD , lam0 , / , P , lam1 , }

120 :	"DEG_TO_RAD"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , phi , && , P , fabs , lam , lp , < , phi0 , if , }
		- SUCC   = { DEG_TO_RAD , lam0 , / , P , lam1 , }

121 :	"lam1"
		- NEIGH  = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- SUCC   = { DEG_TO_RAD , phi , lp , / , phi2 , }

121 :	"P"
		- NEIGH  = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- SUCC   = { DEG_TO_RAD , phi , lp , / , phi2 , }

121 :	"lam0"
		- NEIGH  = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- SUCC   = { DEG_TO_RAD , phi , lp , / , phi2 , }

121 :	"/"
		- NEIGH  = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- SUCC   = { DEG_TO_RAD , phi , lp , / , phi2 , }

121 :	"DEG_TO_RAD"
		- NEIGH  = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , phi1 , }
		- SUCC   = { DEG_TO_RAD , phi , lp , / , phi2 , }

122 :	"phi2"
		- NEIGH  = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- SUCC   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }

122 :	"lp"
		- NEIGH  = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- SUCC   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }

122 :	"phi"
		- NEIGH  = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- SUCC   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }

122 :	"/"
		- NEIGH  = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- SUCC   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }

122 :	"DEG_TO_RAD"
		- NEIGH  = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lam0 , / , P , lam1 , }
		- SUCC   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }

123 :	"lam2"
		- NEIGH  = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- SUCC   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }

123 :	"lp"
		- NEIGH  = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- SUCC   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }

123 :	"lam"
		- NEIGH  = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- SUCC   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }

123 :	"+"
		- NEIGH  = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- SUCC   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }

123 :	"P"
		- NEIGH  = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- SUCC   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }

123 :	"lam0"
		- NEIGH  = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- SUCC   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }

123 :	"/"
		- NEIGH  = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- SUCC   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }

123 :	"DEG_TO_RAD"
		- NEIGH  = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , phi , lp , / , phi2 , }
		- SUCC   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }

125 :	"geod_inverse"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"&"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"Q"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"g"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"phi1"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"lam1"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"phi2"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"lam2"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"&"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"s12"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"&"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"azi1"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"&"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

125 :	"azi2"
		- NEIGH  = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , lam0 , lam , P , + , lp , lam2 , }
		- SUCC   = { *= , DEG_TO_RAD , azi1 , }

126 :	"azi1"
		- NEIGH  = { *= , DEG_TO_RAD , azi1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- SUCC   = { P , / , a , azi1 , sin , s12 , * , x , xy , }

126 :	"*="
		- NEIGH  = { *= , DEG_TO_RAD , azi1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- SUCC   = { P , / , a , azi1 , sin , s12 , * , x , xy , }

126 :	"DEG_TO_RAD"
		- NEIGH  = { *= , DEG_TO_RAD , azi1 , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { azi1 , s12 , azi2 , lam2 , phi1 , lam1 , g , phi2 , Q , & , geod_inverse , }
		- SUCC   = { P , / , a , azi1 , sin , s12 , * , x , xy , }

127 :	"xy"
		- NEIGH  = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { *= , DEG_TO_RAD , azi1 , }
		- SUCC   = { P , a , azi1 , / , cos , s12 , * , y , xy , }

127 :	"x"
		- NEIGH  = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { *= , DEG_TO_RAD , azi1 , }
		- SUCC   = { P , a , azi1 , / , cos , s12 , * , y , xy , }

127 :	"s12"
		- NEIGH  = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { *= , DEG_TO_RAD , azi1 , }
		- SUCC   = { P , a , azi1 , / , cos , s12 , * , y , xy , }

127 :	"*"
		- NEIGH  = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { *= , DEG_TO_RAD , azi1 , }
		- SUCC   = { P , a , azi1 , / , cos , s12 , * , y , xy , }

127 :	"sin"
		- NEIGH  = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { *= , DEG_TO_RAD , azi1 , }
		- SUCC   = { P , a , azi1 , / , cos , s12 , * , y , xy , }

127 :	"azi1"
		- NEIGH  = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { *= , DEG_TO_RAD , azi1 , }
		- SUCC   = { P , a , azi1 , / , cos , s12 , * , y , xy , }

127 :	"/"
		- NEIGH  = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { *= , DEG_TO_RAD , azi1 , }
		- SUCC   = { P , a , azi1 , / , cos , s12 , * , y , xy , }

127 :	"P"
		- NEIGH  = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { *= , DEG_TO_RAD , azi1 , }
		- SUCC   = { P , a , azi1 , / , cos , s12 , * , y , xy , }

127 :	"a"
		- NEIGH  = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { *= , DEG_TO_RAD , azi1 , }
		- SUCC   = { P , a , azi1 , / , cos , s12 , * , y , xy , }

128 :	"xy"
		- NEIGH  = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- SUCC   = { break , }

128 :	"y"
		- NEIGH  = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- SUCC   = { break , }

128 :	"s12"
		- NEIGH  = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- SUCC   = { break , }

128 :	"*"
		- NEIGH  = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- SUCC   = { break , }

128 :	"cos"
		- NEIGH  = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- SUCC   = { break , }

128 :	"azi1"
		- NEIGH  = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- SUCC   = { break , }

128 :	"/"
		- NEIGH  = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- SUCC   = { break , }

128 :	"P"
		- NEIGH  = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- SUCC   = { break , }

128 :	"a"
		- NEIGH  = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , / , a , azi1 , sin , s12 , * , x , xy , }
		- SUCC   = { break , }

129 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { P , a , azi1 , / , cos , s12 , * , y , xy , }
		- SUCC   = { }

131 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

131 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

135 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"aeqd_s_forward"
		- NEIGH  = { aeqd_s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

135 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

136 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

137 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

137 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

137 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

137 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

137 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

137 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

137 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

137 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

137 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

137 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { sinphi , cosphi , coslam , }

138 :	"coslam"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

138 :	"cosphi"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

138 :	"sinphi"
		- NEIGH  = { sinphi , cosphi , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { phi , lp , sin , sinphi , }

140 :	"sinphi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

140 :	"sin"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

140 :	"lp"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

140 :	"phi"
		- NEIGH  = { phi , lp , sin , sinphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , coslam , }
		- SUCC   = { phi , lp , cos , cosphi , }

141 :	"cosphi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

141 :	"cos"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

141 :	"lp"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

141 :	"phi"
		- NEIGH  = { phi , lp , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinphi , }
		- SUCC   = { lam , lp , cos , coslam , }

142 :	"coslam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

142 :	"cos"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

142 :	"lp"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

142 :	"lam"
		- NEIGH  = { lam , lp , cos , coslam , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , lp , cos , cosphi , }
		- SUCC   = { mode , Q , switch , }

143 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , S_POLE , N_POLE , break , == , phi , mode , if , lam , /= , lp , cosph0 , x , fabs , y , oblcon , sin , acos , + , sinph0 , OBLIQ , coslam , - , xy , Q , sinphi , *= , * , EQUIT , < , cosphi , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { xy , return , }

143 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , S_POLE , N_POLE , break , == , phi , mode , if , lam , /= , lp , cosph0 , x , fabs , y , oblcon , sin , acos , + , sinph0 , OBLIQ , coslam , - , xy , Q , sinphi , *= , * , EQUIT , < , cosphi , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { xy , return , }

143 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , S_POLE , N_POLE , break , == , phi , mode , if , lam , /= , lp , cosph0 , x , fabs , y , oblcon , sin , acos , + , sinph0 , OBLIQ , coslam , - , xy , Q , sinphi , *= , * , EQUIT , < , cosphi , }
		- PRED   = { lam , lp , cos , coslam , }
		- SUCC   = { xy , return , }

144 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { coslam , cosphi , * , y , xy , }

145 :	"xy"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { oblcon , }

145 :	"y"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { oblcon , }

145 :	"cosphi"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { oblcon , }

145 :	"*"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { oblcon , }

145 :	"coslam"
		- NEIGH  = { coslam , cosphi , * , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { oblcon , }

146 :	"oblcon"
		- NEIGH  = { oblcon , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { coslam , cosphi , * , y , xy , }
		- SUCC   = { OBLIQ , }

147 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { oblcon , }
		- SUCC   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }

148 :	"xy"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"y"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"Q"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"sinph0"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"*"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"sinphi"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"+"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"Q"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"cosph0"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"*"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"cosphi"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"*"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

148 :	"coslam"
		- NEIGH  = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { < , - , y , xy , fabs , if , oblcon , }

149 :	"oblcon"
		- NEIGH  = { < , - , y , xy , fabs , if , oblcon , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }

150 :	"if"
		- NEIGH  = { < , - , y , xy , fabs , if , oblcon , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { < , y , xy , if , }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }

150 :	"fabs"
		- NEIGH  = { < , - , y , xy , fabs , if , oblcon , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { < , y , xy , if , }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }

150 :	"fabs"
		- NEIGH  = { < , - , y , xy , fabs , if , oblcon , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { < , y , xy , if , }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }

150 :	"xy"
		- NEIGH  = { < , - , y , xy , fabs , if , oblcon , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { < , y , xy , if , }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }

150 :	"y"
		- NEIGH  = { < , - , y , xy , fabs , if , oblcon , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { < , y , xy , if , }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }

150 :	"-"
		- NEIGH  = { < , - , y , xy , fabs , if , oblcon , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { < , y , xy , if , }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }

150 :	"<"
		- NEIGH  = { < , - , y , xy , fabs , if , oblcon , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { < , y , xy , if , }
		- PRED   = { cosphi , cosph0 , + , sinphi , Q , y , * , sinph0 , coslam , xy , }
		- SUCC   = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }

151 :	"if"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { < , - , y , xy , fabs , if , oblcon , }
		- CHILD  = { lp , aeqd_e_forward , xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { }

151 :	"xy"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { < , - , y , xy , fabs , if , oblcon , }
		- CHILD  = { lp , aeqd_e_forward , xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { }

151 :	"y"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { < , - , y , xy , fabs , if , oblcon , }
		- CHILD  = { lp , aeqd_e_forward , xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { }

151 :	"<"
		- NEIGH  = { < , y , xy , if , }
		- PARENT = { < , - , y , xy , fabs , if , oblcon , }
		- CHILD  = { lp , aeqd_e_forward , xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { }

152 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

152 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

152 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

153 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

153 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

156 :	"return"
		- NEIGH  = { lp , aeqd_e_forward , P , return , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

156 :	"aeqd_e_forward"
		- NEIGH  = { lp , aeqd_e_forward , P , return , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

156 :	"lp"
		- NEIGH  = { lp , aeqd_e_forward , P , return , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

156 :	"P"
		- NEIGH  = { lp , aeqd_e_forward , P , return , }
		- PARENT = { < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

158 :	"xy"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

158 :	"y"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

158 :	"acos"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

158 :	"xy"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

158 :	"y"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

159 :	"xy"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

159 :	"y"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

159 :	"/="
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

159 :	"sin"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

159 :	"xy"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

159 :	"y"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"xy"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"x"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"xy"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"y"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"*"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"cosphi"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"*"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"sin"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"lp"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

160 :	"lam"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

161 :	"xy"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

161 :	"y"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

161 :	"*="
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

161 :	"Q"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

161 :	"mode"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

161 :	"=="
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

161 :	"EQUIT"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

161 :	"sinphi"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"Q"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"cosph0"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"*"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"sinphi"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"-"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"Q"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"sinph0"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"*"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"cosphi"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"*"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

162 :	"coslam"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

164 :	"break"
		- NEIGH  = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , - , y , xy , fabs , if , oblcon , }
		- SUCC   = { N_POLE , }

165 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { sinph0 , sinphi , EQUIT , == , break , mode , coslam , Q , lam , lp , xy , cosphi , sin , x , /= , cosph0 , acos , *= , * , - , y , }
		- SUCC   = { - , phi , lp , }

166 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , coslam , }

166 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , coslam , }

166 :	"-"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , coslam , }

166 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , coslam , }

166 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { - , coslam , }

167 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , phi , lp , }
		- SUCC   = { S_POLE , }

167 :	"-"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , phi , lp , }
		- SUCC   = { S_POLE , }

167 :	"coslam"
		- NEIGH  = { - , coslam , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , phi , lp , }
		- SUCC   = { S_POLE , }

169 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { - , coslam , }
		- SUCC   = { < , M_HALFPI , - , phi , lp , fabs , if , }

170 :	"if"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { S_POLE , }
		- SUCC   = { phi , lp , + , xy , M_HALFPI , y , }

170 :	"fabs"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { S_POLE , }
		- SUCC   = { phi , lp , + , xy , M_HALFPI , y , }

170 :	"lp"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { S_POLE , }
		- SUCC   = { phi , lp , + , xy , M_HALFPI , y , }

170 :	"phi"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { S_POLE , }
		- SUCC   = { phi , lp , + , xy , M_HALFPI , y , }

170 :	"-"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { S_POLE , }
		- SUCC   = { phi , lp , + , xy , M_HALFPI , y , }

170 :	"M_HALFPI"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { S_POLE , }
		- SUCC   = { phi , lp , + , xy , M_HALFPI , y , }

170 :	"<"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { S_POLE , }
		- SUCC   = { phi , lp , + , xy , M_HALFPI , y , }

171 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

171 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

171 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

172 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

172 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

174 :	"xy"
		- NEIGH  = { phi , lp , + , xy , M_HALFPI , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lam , lp , sin , * , y , x , xy , }

174 :	"y"
		- NEIGH  = { phi , lp , + , xy , M_HALFPI , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lam , lp , sin , * , y , x , xy , }

174 :	"M_HALFPI"
		- NEIGH  = { phi , lp , + , xy , M_HALFPI , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lam , lp , sin , * , y , x , xy , }

174 :	"+"
		- NEIGH  = { phi , lp , + , xy , M_HALFPI , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lam , lp , sin , * , y , x , xy , }

174 :	"lp"
		- NEIGH  = { phi , lp , + , xy , M_HALFPI , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lam , lp , sin , * , y , x , xy , }

174 :	"phi"
		- NEIGH  = { phi , lp , + , xy , M_HALFPI , y , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lam , lp , sin , * , y , x , xy , }

175 :	"xy"
		- NEIGH  = { lam , lp , sin , * , y , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , + , xy , M_HALFPI , y , }
		- SUCC   = { coslam , *= , y , xy , }

175 :	"x"
		- NEIGH  = { lam , lp , sin , * , y , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , + , xy , M_HALFPI , y , }
		- SUCC   = { coslam , *= , y , xy , }

175 :	"xy"
		- NEIGH  = { lam , lp , sin , * , y , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , + , xy , M_HALFPI , y , }
		- SUCC   = { coslam , *= , y , xy , }

175 :	"y"
		- NEIGH  = { lam , lp , sin , * , y , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , + , xy , M_HALFPI , y , }
		- SUCC   = { coslam , *= , y , xy , }

175 :	"*"
		- NEIGH  = { lam , lp , sin , * , y , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , + , xy , M_HALFPI , y , }
		- SUCC   = { coslam , *= , y , xy , }

175 :	"sin"
		- NEIGH  = { lam , lp , sin , * , y , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , + , xy , M_HALFPI , y , }
		- SUCC   = { coslam , *= , y , xy , }

175 :	"lp"
		- NEIGH  = { lam , lp , sin , * , y , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , + , xy , M_HALFPI , y , }
		- SUCC   = { coslam , *= , y , xy , }

175 :	"lam"
		- NEIGH  = { lam , lp , sin , * , y , x , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { phi , lp , + , xy , M_HALFPI , y , }
		- SUCC   = { coslam , *= , y , xy , }

176 :	"xy"
		- NEIGH  = { coslam , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { lam , lp , sin , * , y , x , xy , }
		- SUCC   = { break , }

176 :	"y"
		- NEIGH  = { coslam , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { lam , lp , sin , * , y , x , xy , }
		- SUCC   = { break , }

176 :	"*="
		- NEIGH  = { coslam , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { lam , lp , sin , * , y , x , xy , }
		- SUCC   = { break , }

176 :	"coslam"
		- NEIGH  = { coslam , *= , y , xy , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { lam , lp , sin , * , y , x , xy , }
		- SUCC   = { break , }

177 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { coslam , *= , y , xy , }
		- SUCC   = { }

179 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

179 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { }

183 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"e_guam_inv"
		- NEIGH  = { e_guam_inv , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

184 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

184 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

185 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

185 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

185 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

185 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

185 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

185 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

185 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

185 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

185 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

185 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { t , x2 , }

186 :	"x2"
		- NEIGH  = { t , x2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

186 :	"t"
		- NEIGH  = { t , x2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { i , }

187 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { t , x2 , }
		- SUCC   = { x , xy , * , x2 , }

189 :	"x2"
		- NEIGH  = { x , xy , * , x2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { phi0 , P , phi , lp , }

189 :	"*"
		- NEIGH  = { x , xy , * , x2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { phi0 , P , phi , lp , }

189 :	"xy"
		- NEIGH  = { x , xy , * , x2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { phi0 , P , phi , lp , }

189 :	"x"
		- NEIGH  = { x , xy , * , x2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { phi0 , P , phi , lp , }

189 :	"*"
		- NEIGH  = { x , xy , * , x2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { phi0 , P , phi , lp , }

189 :	"xy"
		- NEIGH  = { x , xy , * , x2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { phi0 , P , phi , lp , }

189 :	"x"
		- NEIGH  = { x , xy , * , x2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { phi0 , P , phi , lp , }

190 :	"lp"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , xy , * , x2 , }
		- SUCC   = { ++ , < , i , for , }

190 :	"phi"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , xy , * , x2 , }
		- SUCC   = { ++ , < , i , for , }

190 :	"P"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , xy , * , x2 , }
		- SUCC   = { ++ , < , i , for , }

190 :	"phi0"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , xy , * , x2 , }
		- SUCC   = { ++ , < , i , for , }

191 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { en , xy , + , x2 , Q , y , - , es , * , ctx , sqrt , lp , tan , P , e , sin , pj_inv_mlfn , phi , M1 , t , }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { phi , cos , / , t , * , x , xy , lam , lp , }

191 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { en , xy , + , x2 , Q , y , - , es , * , ctx , sqrt , lp , tan , P , e , sin , pj_inv_mlfn , phi , M1 , t , }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { phi , cos , / , t , * , x , xy , lam , lp , }

191 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { en , xy , + , x2 , Q , y , - , es , * , ctx , sqrt , lp , tan , P , e , sin , pj_inv_mlfn , phi , M1 , t , }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { phi , cos , / , t , * , x , xy , lam , lp , }

191 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { en , xy , + , x2 , Q , y , - , es , * , ctx , sqrt , lp , tan , P , e , sin , pj_inv_mlfn , phi , M1 , t , }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { phi , cos , / , t , * , x , xy , lam , lp , }

191 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { en , xy , + , x2 , Q , y , - , es , * , ctx , sqrt , lp , tan , P , e , sin , pj_inv_mlfn , phi , M1 , t , }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { phi , cos , / , t , * , x , xy , lam , lp , }

191 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { en , xy , + , x2 , Q , y , - , es , * , ctx , sqrt , lp , tan , P , e , sin , pj_inv_mlfn , phi , M1 , t , }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { phi , cos , / , t , * , x , xy , lam , lp , }

192 :	"t"
		- NEIGH  = { lp , e , sin , * , P , phi , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , * , sqrt , t , }

192 :	"P"
		- NEIGH  = { lp , e , sin , * , P , phi , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , * , sqrt , t , }

192 :	"e"
		- NEIGH  = { lp , e , sin , * , P , phi , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , * , sqrt , t , }

192 :	"*"
		- NEIGH  = { lp , e , sin , * , P , phi , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , * , sqrt , t , }

192 :	"sin"
		- NEIGH  = { lp , e , sin , * , P , phi , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , * , sqrt , t , }

192 :	"lp"
		- NEIGH  = { lp , e , sin , * , P , phi , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , * , sqrt , t , }

192 :	"phi"
		- NEIGH  = { lp , e , sin , * , P , phi , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , * , sqrt , t , }

193 :	"t"
		- NEIGH  = { - , * , sqrt , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lp , e , sin , * , P , phi , t , }
		- SUCC   = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }

193 :	"sqrt"
		- NEIGH  = { - , * , sqrt , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lp , e , sin , * , P , phi , t , }
		- SUCC   = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }

193 :	"-"
		- NEIGH  = { - , * , sqrt , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lp , e , sin , * , P , phi , t , }
		- SUCC   = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }

193 :	"t"
		- NEIGH  = { - , * , sqrt , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lp , e , sin , * , P , phi , t , }
		- SUCC   = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }

193 :	"*"
		- NEIGH  = { - , * , sqrt , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lp , e , sin , * , P , phi , t , }
		- SUCC   = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }

193 :	"t"
		- NEIGH  = { - , * , sqrt , t , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { lp , e , sin , * , P , phi , t , }
		- SUCC   = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }

194 :	"lp"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"phi"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"pj_inv_mlfn"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"P"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"ctx"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"Q"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"M1"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"+"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"xy"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"y"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

194 :	"-"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"x2"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"*"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"tan"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"lp"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"phi"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"*"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"t"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"P"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"es"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"Q"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

195 :	"en"
		- NEIGH  = { en , - , y , xy , + , t , M1 , tan , P , pj_inv_mlfn , x2 , Q , es , * , ctx , phi , lp , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { - , * , sqrt , t , }
		- SUCC   = { }

197 :	"lp"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

197 :	"lam"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

197 :	"xy"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

197 :	"x"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

197 :	"*"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

197 :	"t"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

197 :	"/"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

197 :	"cos"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

197 :	"lp"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

197 :	"phi"
		- NEIGH  = { phi , cos , / , t , * , x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { lp , return , }

198 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , cos , / , t , * , x , xy , lam , lp , }
		- SUCC   = { }

198 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi , cos , / , t , * , x , xy , lam , lp , }
		- SUCC   = { }

202 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"aeqd_e_inverse"
		- NEIGH  = { aeqd_e_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

203 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

203 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

204 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

204 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

204 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

204 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

204 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

204 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

204 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

204 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

204 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

204 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { c , }

205 :	"c"
		- NEIGH  = { c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }

206 :	"azi1"
		- NEIGH  = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { < , x , xy , y , hypot , c , if , }

206 :	"azi2"
		- NEIGH  = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { < , x , xy , y , hypot , c , if , }

206 :	"s12"
		- NEIGH  = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { < , x , xy , y , hypot , c , if , }

206 :	"x2"
		- NEIGH  = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { < , x , xy , y , hypot , c , if , }

206 :	"y2"
		- NEIGH  = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { < , x , xy , y , hypot , c , if , }

206 :	"lat1"
		- NEIGH  = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { < , x , xy , y , hypot , c , if , }

206 :	"lon1"
		- NEIGH  = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { < , x , xy , y , hypot , c , if , }

206 :	"lat2"
		- NEIGH  = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { < , x , xy , y , hypot , c , if , }

206 :	"lon2"
		- NEIGH  = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { c , }
		- SUCC   = { < , x , xy , y , hypot , c , if , }

208 :	"if"
		- NEIGH  = { < , x , xy , y , hypot , c , if , }
		- PARENT = { }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

208 :	"c"
		- NEIGH  = { < , x , xy , y , hypot , c , if , }
		- PARENT = { }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

208 :	"hypot"
		- NEIGH  = { < , x , xy , y , hypot , c , if , }
		- PARENT = { }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

208 :	"xy"
		- NEIGH  = { < , x , xy , y , hypot , c , if , }
		- PARENT = { }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

208 :	"x"
		- NEIGH  = { < , x , xy , y , hypot , c , if , }
		- PARENT = { }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

208 :	"xy"
		- NEIGH  = { < , x , xy , y , hypot , c , if , }
		- PARENT = { }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

208 :	"y"
		- NEIGH  = { < , x , xy , y , hypot , c , if , }
		- PARENT = { }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

208 :	"<"
		- NEIGH  = { < , x , xy , y , hypot , c , if , }
		- PARENT = { }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { lat2 , x2 , azi2 , y2 , lon2 , s12 , lon1 , lat1 , azi1 , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

209 :	"lp"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { < , x , xy , y , hypot , c , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

209 :	"phi"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { < , x , xy , y , hypot , c , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

209 :	"P"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { < , x , xy , y , hypot , c , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

209 :	"phi0"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { < , x , xy , y , hypot , c , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

210 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { < , x , xy , y , hypot , c , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { lp , return , }

210 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { < , x , xy , y , hypot , c , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { lp , return , }

211 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { < , x , xy , y , hypot , c , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

211 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { < , x , xy , y , hypot , c , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

213 :	"if"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

213 :	"Q"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

213 :	"mode"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

213 :	"=="
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

213 :	"OBLIQ"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

213 :	"||"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

213 :	"Q"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

213 :	"mode"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

213 :	"=="
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

213 :	"EQUIT"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { en , c , Mp , == , -= , lam , mode , phi , lp , azi2 , es , lon2 , geod_direct , atan2 , sqrt , + , azi1 , lat1 , & , N_POLE , s12 , lam0 , DEG_TO_RAD , / , pj_inv_mlfn , phi0 , lat2 , * , a , P , g , lon1 , y , ctx , y2 , x , - , xy , Q , x2 , }
		- PRED   = { < , x , xy , y , hypot , c , if , }
		- SUCC   = { lp , return , }

215 :	"x2"
		- NEIGH  = { a , P , * , x , xy , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { a , P , * , y , xy , y2 , }

215 :	"xy"
		- NEIGH  = { a , P , * , x , xy , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { a , P , * , y , xy , y2 , }

215 :	"x"
		- NEIGH  = { a , P , * , x , xy , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { a , P , * , y , xy , y2 , }

215 :	"*"
		- NEIGH  = { a , P , * , x , xy , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { a , P , * , y , xy , y2 , }

215 :	"P"
		- NEIGH  = { a , P , * , x , xy , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { a , P , * , y , xy , y2 , }

215 :	"a"
		- NEIGH  = { a , P , * , x , xy , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { a , P , * , y , xy , y2 , }

216 :	"y2"
		- NEIGH  = { a , P , * , y , xy , y2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , x , xy , x2 , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , lat1 , }

216 :	"xy"
		- NEIGH  = { a , P , * , y , xy , y2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , x , xy , x2 , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , lat1 , }

216 :	"y"
		- NEIGH  = { a , P , * , y , xy , y2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , x , xy , x2 , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , lat1 , }

216 :	"*"
		- NEIGH  = { a , P , * , y , xy , y2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , x , xy , x2 , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , lat1 , }

216 :	"P"
		- NEIGH  = { a , P , * , y , xy , y2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , x , xy , x2 , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , lat1 , }

216 :	"a"
		- NEIGH  = { a , P , * , y , xy , y2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , x , xy , x2 , }
		- SUCC   = { phi0 , / , P , DEG_TO_RAD , lat1 , }

217 :	"lat1"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , y , xy , y2 , }
		- SUCC   = { lam0 , / , P , DEG_TO_RAD , lon1 , }

217 :	"P"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , y , xy , y2 , }
		- SUCC   = { lam0 , / , P , DEG_TO_RAD , lon1 , }

217 :	"phi0"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , y , xy , y2 , }
		- SUCC   = { lam0 , / , P , DEG_TO_RAD , lon1 , }

217 :	"/"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , y , xy , y2 , }
		- SUCC   = { lam0 , / , P , DEG_TO_RAD , lon1 , }

217 :	"DEG_TO_RAD"
		- NEIGH  = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { a , P , * , y , xy , y2 , }
		- SUCC   = { lam0 , / , P , DEG_TO_RAD , lon1 , }

218 :	"lon1"
		- NEIGH  = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- SUCC   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }

218 :	"P"
		- NEIGH  = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- SUCC   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }

218 :	"lam0"
		- NEIGH  = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- SUCC   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }

218 :	"/"
		- NEIGH  = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- SUCC   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }

218 :	"DEG_TO_RAD"
		- NEIGH  = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { phi0 , / , P , DEG_TO_RAD , lat1 , }
		- SUCC   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }

219 :	"azi1"
		- NEIGH  = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- SUCC   = { y2 , s12 , + , * , sqrt , x2 , }

219 :	"atan2"
		- NEIGH  = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- SUCC   = { y2 , s12 , + , * , sqrt , x2 , }

219 :	"x2"
		- NEIGH  = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- SUCC   = { y2 , s12 , + , * , sqrt , x2 , }

219 :	"y2"
		- NEIGH  = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- SUCC   = { y2 , s12 , + , * , sqrt , x2 , }

219 :	"/"
		- NEIGH  = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- SUCC   = { y2 , s12 , + , * , sqrt , x2 , }

219 :	"DEG_TO_RAD"
		- NEIGH  = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { lam0 , / , P , DEG_TO_RAD , lon1 , }
		- SUCC   = { y2 , s12 , + , * , sqrt , x2 , }

220 :	"s12"
		- NEIGH  = { y2 , s12 , + , * , sqrt , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- SUCC   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }

220 :	"sqrt"
		- NEIGH  = { y2 , s12 , + , * , sqrt , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- SUCC   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }

220 :	"x2"
		- NEIGH  = { y2 , s12 , + , * , sqrt , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- SUCC   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }

220 :	"*"
		- NEIGH  = { y2 , s12 , + , * , sqrt , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- SUCC   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }

220 :	"x2"
		- NEIGH  = { y2 , s12 , + , * , sqrt , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- SUCC   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }

220 :	"+"
		- NEIGH  = { y2 , s12 , + , * , sqrt , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- SUCC   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }

220 :	"y2"
		- NEIGH  = { y2 , s12 , + , * , sqrt , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- SUCC   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }

220 :	"*"
		- NEIGH  = { y2 , s12 , + , * , sqrt , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- SUCC   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }

220 :	"y2"
		- NEIGH  = { y2 , s12 , + , * , sqrt , x2 , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , / , azi1 , atan2 , y2 , x2 , }
		- SUCC   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }

221 :	"geod_direct"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"&"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"Q"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"g"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"lat1"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"lon1"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"azi1"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"s12"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"&"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"lat2"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"&"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"lon2"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"&"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

221 :	"azi2"
		- NEIGH  = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { y2 , s12 , + , * , sqrt , x2 , }
		- SUCC   = { DEG_TO_RAD , * , lat2 , phi , lp , }

222 :	"lp"
		- NEIGH  = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- SUCC   = { DEG_TO_RAD , lon2 , * , lam , lp , }

222 :	"phi"
		- NEIGH  = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- SUCC   = { DEG_TO_RAD , lon2 , * , lam , lp , }

222 :	"lat2"
		- NEIGH  = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- SUCC   = { DEG_TO_RAD , lon2 , * , lam , lp , }

222 :	"*"
		- NEIGH  = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- SUCC   = { DEG_TO_RAD , lon2 , * , lam , lp , }

222 :	"DEG_TO_RAD"
		- NEIGH  = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { azi2 , lat2 , lon2 , s12 , Q , & , azi1 , lon1 , lat1 , g , geod_direct , }
		- SUCC   = { DEG_TO_RAD , lon2 , * , lam , lp , }

223 :	"lp"
		- NEIGH  = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- SUCC   = { P , -= , lam0 , lam , lp , }

223 :	"lam"
		- NEIGH  = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- SUCC   = { P , -= , lam0 , lam , lp , }

223 :	"lon2"
		- NEIGH  = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- SUCC   = { P , -= , lam0 , lam , lp , }

223 :	"*"
		- NEIGH  = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- SUCC   = { P , -= , lam0 , lam , lp , }

223 :	"DEG_TO_RAD"
		- NEIGH  = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , * , lat2 , phi , lp , }
		- SUCC   = { P , -= , lam0 , lam , lp , }

224 :	"lp"
		- NEIGH  = { P , -= , lam0 , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- SUCC   = { }

224 :	"lam"
		- NEIGH  = { P , -= , lam0 , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- SUCC   = { }

224 :	"-="
		- NEIGH  = { P , -= , lam0 , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- SUCC   = { }

224 :	"P"
		- NEIGH  = { P , -= , lam0 , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- SUCC   = { }

224 :	"lam0"
		- NEIGH  = { P , -= , lam0 , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { DEG_TO_RAD , lon2 , * , lam , lp , }
		- SUCC   = { }

226 :	"lp"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"phi"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"pj_inv_mlfn"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"P"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"ctx"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"Q"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"mode"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"=="
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"N_POLE"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"Q"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"Mp"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"-"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"c"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"Q"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"Mp"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"+"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

226 :	"c"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

227 :	"P"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

227 :	"es"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

227 :	"Q"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

227 :	"en"
		- NEIGH  = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }

228 :	"lp"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"lam"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"atan2"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"xy"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"x"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"Q"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"mode"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"=="
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"N_POLE"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"-"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"xy"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"y"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"xy"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

228 :	"y"
		- NEIGH  = { y , N_POLE , == , mode , Q , x , xy , lam , - , atan2 , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { en , + , c , - , Mp , pj_inv_mlfn , N_POLE , phi , == , mode , P , Q , es , ctx , lp , }
		- SUCC   = { }

230 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- SUCC   = { }

230 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- SUCC   = { }

234 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"aeqd_s_inverse"
		- NEIGH  = { aeqd_s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

234 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

235 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

235 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

236 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

236 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

236 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

236 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

236 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

236 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

236 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

236 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

236 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

236 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { sinc , c_rh , cosc , }

237 :	"cosc"
		- NEIGH  = { sinc , c_rh , cosc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { hypot , y , x , xy , c_rh , }

237 :	"c_rh"
		- NEIGH  = { sinc , c_rh , cosc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { hypot , y , x , xy , c_rh , }

237 :	"sinc"
		- NEIGH  = { sinc , c_rh , cosc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { hypot , y , x , xy , c_rh , }

239 :	"c_rh"
		- NEIGH  = { hypot , y , x , xy , c_rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinc , c_rh , cosc , }
		- SUCC   = { > , M_PI , c_rh , if , }

239 :	"hypot"
		- NEIGH  = { hypot , y , x , xy , c_rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinc , c_rh , cosc , }
		- SUCC   = { > , M_PI , c_rh , if , }

239 :	"xy"
		- NEIGH  = { hypot , y , x , xy , c_rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinc , c_rh , cosc , }
		- SUCC   = { > , M_PI , c_rh , if , }

239 :	"x"
		- NEIGH  = { hypot , y , x , xy , c_rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinc , c_rh , cosc , }
		- SUCC   = { > , M_PI , c_rh , if , }

239 :	"xy"
		- NEIGH  = { hypot , y , x , xy , c_rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinc , c_rh , cosc , }
		- SUCC   = { > , M_PI , c_rh , if , }

239 :	"y"
		- NEIGH  = { hypot , y , x , xy , c_rh , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinc , c_rh , cosc , }
		- SUCC   = { > , M_PI , c_rh , if , }

240 :	"if"
		- NEIGH  = { > , M_PI , c_rh , if , }
		- PARENT = { }
		- CHILD  = { < , > , - , M_PI , c_rh , if , }
		- PRED   = { hypot , y , x , xy , c_rh , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

240 :	"c_rh"
		- NEIGH  = { > , M_PI , c_rh , if , }
		- PARENT = { }
		- CHILD  = { < , > , - , M_PI , c_rh , if , }
		- PRED   = { hypot , y , x , xy , c_rh , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

240 :	">"
		- NEIGH  = { > , M_PI , c_rh , if , }
		- PARENT = { }
		- CHILD  = { < , > , - , M_PI , c_rh , if , }
		- PRED   = { hypot , y , x , xy , c_rh , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

240 :	"M_PI"
		- NEIGH  = { > , M_PI , c_rh , if , }
		- PARENT = { }
		- CHILD  = { < , > , - , M_PI , c_rh , if , }
		- PRED   = { hypot , y , x , xy , c_rh , }
		- SUCC   = { EQUIT , || , == , mode , OBLIQ , Q , if , }

241 :	"if"
		- NEIGH  = { > , - , M_PI , c_rh , if , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { M_PI , c_rh , }

241 :	"c_rh"
		- NEIGH  = { > , - , M_PI , c_rh , if , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { M_PI , c_rh , }

241 :	"-"
		- NEIGH  = { > , - , M_PI , c_rh , if , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { M_PI , c_rh , }

241 :	">"
		- NEIGH  = { > , - , M_PI , c_rh , if , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { M_PI , c_rh , }

241 :	"M_PI"
		- NEIGH  = { > , - , M_PI , c_rh , if , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { M_PI , c_rh , }

242 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , - , M_PI , c_rh , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

242 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , - , M_PI , c_rh , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

242 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { > , - , M_PI , c_rh , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

243 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { > , - , M_PI , c_rh , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

243 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { > , - , M_PI , c_rh , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

245 :	"c_rh"
		- NEIGH  = { M_PI , c_rh , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { }
		- PRED   = { > , - , M_PI , c_rh , if , }
		- SUCC   = { }

245 :	"M_PI"
		- NEIGH  = { M_PI , c_rh , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { }
		- PRED   = { > , - , M_PI , c_rh , if , }
		- SUCC   = { }

246 :	"if"
		- NEIGH  = { < , c_rh , if , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

246 :	"c_rh"
		- NEIGH  = { < , c_rh , if , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

246 :	"<"
		- NEIGH  = { < , c_rh , if , }
		- PARENT = { > , M_PI , c_rh , if , }
		- CHILD  = { return , P , lam , phi0 , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

247 :	"lp"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { < , c_rh , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

247 :	"phi"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { < , c_rh , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

247 :	"P"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { < , c_rh , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

247 :	"phi0"
		- NEIGH  = { phi0 , P , phi , lp , }
		- PARENT = { < , c_rh , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lam , lp , }

248 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { < , c_rh , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { lp , return , }

248 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { < , c_rh , if , }
		- CHILD  = { }
		- PRED   = { phi0 , P , phi , lp , }
		- SUCC   = { lp , return , }

249 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { < , c_rh , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

249 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { < , c_rh , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

251 :	"if"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

251 :	"Q"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

251 :	"mode"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

251 :	"=="
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

251 :	"OBLIQ"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

251 :	"||"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

251 :	"Q"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

251 :	"mode"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

251 :	"=="
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

251 :	"EQUIT"
		- NEIGH  = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- PARENT = { }
		- CHILD  = { x , y , xy , lam , lp , atan2 , EQUIT , sin , if , sinc , cosc , Q , c_rh , N_POLE , cos , == , mode , }
		- PRED   = { > , M_PI , c_rh , if , }
		- SUCC   = { lp , return , }

252 :	"sinc"
		- NEIGH  = { c_rh , sin , sinc , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c_rh , cos , cosc , }

252 :	"sin"
		- NEIGH  = { c_rh , sin , sinc , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c_rh , cos , cosc , }

252 :	"c_rh"
		- NEIGH  = { c_rh , sin , sinc , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { c_rh , cos , cosc , }

253 :	"cosc"
		- NEIGH  = { c_rh , cos , cosc , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , sin , sinc , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

253 :	"cos"
		- NEIGH  = { c_rh , cos , cosc , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , sin , sinc , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

253 :	"c_rh"
		- NEIGH  = { c_rh , cos , cosc , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , sin , sinc , }
		- SUCC   = { EQUIT , == , mode , Q , if , }

254 :	"if"
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { sin , cosph0 , + , sinph0 , Q , cosc , x , sinc , ctx , * , - , y , xy , P , aasin , c_rh , *= , / , phi , lp , }
		- PRED   = { c_rh , cos , cosc , }
		- SUCC   = { x , atan2 , == , y , xy , lam , lp , }

254 :	"Q"
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { sin , cosph0 , + , sinph0 , Q , cosc , x , sinc , ctx , * , - , y , xy , P , aasin , c_rh , *= , / , phi , lp , }
		- PRED   = { c_rh , cos , cosc , }
		- SUCC   = { x , atan2 , == , y , xy , lam , lp , }

254 :	"mode"
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { sin , cosph0 , + , sinph0 , Q , cosc , x , sinc , ctx , * , - , y , xy , P , aasin , c_rh , *= , / , phi , lp , }
		- PRED   = { c_rh , cos , cosc , }
		- SUCC   = { x , atan2 , == , y , xy , lam , lp , }

254 :	"=="
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { sin , cosph0 , + , sinph0 , Q , cosc , x , sinc , ctx , * , - , y , xy , P , aasin , c_rh , *= , / , phi , lp , }
		- PRED   = { c_rh , cos , cosc , }
		- SUCC   = { x , atan2 , == , y , xy , lam , lp , }

254 :	"EQUIT"
		- NEIGH  = { EQUIT , == , mode , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { sin , cosph0 , + , sinph0 , Q , cosc , x , sinc , ctx , * , - , y , xy , P , aasin , c_rh , *= , / , phi , lp , }
		- PRED   = { c_rh , cos , cosc , }
		- SUCC   = { x , atan2 , == , y , xy , lam , lp , }

255 :	"lp"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"phi"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"aasin"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"P"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"ctx"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"xy"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"y"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"*"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"sinc"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"/"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

255 :	"c_rh"
		- NEIGH  = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinc , *= , x , xy , }

256 :	"xy"
		- NEIGH  = { sinc , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- SUCC   = { cosc , c_rh , * , y , xy , }

256 :	"x"
		- NEIGH  = { sinc , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- SUCC   = { cosc , c_rh , * , y , xy , }

256 :	"*="
		- NEIGH  = { sinc , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- SUCC   = { cosc , c_rh , * , y , xy , }

256 :	"sinc"
		- NEIGH  = { sinc , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { sinc , * , y , xy , P , aasin , c_rh , ctx , / , phi , lp , }
		- SUCC   = { cosc , c_rh , * , y , xy , }

257 :	"xy"
		- NEIGH  = { cosc , c_rh , * , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { }

257 :	"y"
		- NEIGH  = { cosc , c_rh , * , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { }

257 :	"cosc"
		- NEIGH  = { cosc , c_rh , * , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { }

257 :	"*"
		- NEIGH  = { cosc , c_rh , * , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { }

257 :	"c_rh"
		- NEIGH  = { cosc , c_rh , * , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { sinc , *= , x , xy , }
		- SUCC   = { }

259 :	"lp"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"phi"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"aasin"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"P"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"ctx"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"cosc"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"*"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"Q"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"sinph0"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"+"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"xy"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"y"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"*"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"sinc"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"*"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"Q"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"cosph0"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

259 :	"/"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

260 :	"c_rh"
		- NEIGH  = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }

261 :	"xy"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"y"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"cosc"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"-"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"Q"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"sinph0"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"*"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"sin"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"lp"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"phi"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"*"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

261 :	"c_rh"
		- NEIGH  = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , / , cosph0 , sinc , y , xy , + , sinph0 , ctx , * , cosc , P , aasin , Q , phi , lp , }
		- SUCC   = { cosph0 , Q , sinc , * , *= , x , xy , }

262 :	"xy"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- SUCC   = { }

262 :	"x"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- SUCC   = { }

262 :	"*="
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- SUCC   = { }

262 :	"sinc"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- SUCC   = { }

262 :	"*"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- SUCC   = { }

262 :	"Q"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- SUCC   = { }

262 :	"cosph0"
		- NEIGH  = { cosph0 , Q , sinc , * , *= , x , xy , }
		- PARENT = { EQUIT , == , mode , Q , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , sin , sinph0 , c_rh , Q , - , * , cosc , y , xy , }
		- SUCC   = { }

264 :	"lp"
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

264 :	"lam"
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

264 :	"xy"
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

264 :	"y"
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

264 :	"=="
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

264 :	"atan2"
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

264 :	"xy"
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

264 :	"x"
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

264 :	"xy"
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

264 :	"y"
		- NEIGH  = { x , atan2 , == , y , xy , lam , lp , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , == , mode , Q , if , }
		- SUCC   = { }

265 :	"if"
		- NEIGH  = { == , mode , N_POLE , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { y , x , lam , c_rh , xy , M_HALFPI , atan2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

265 :	"Q"
		- NEIGH  = { == , mode , N_POLE , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { y , x , lam , c_rh , xy , M_HALFPI , atan2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

265 :	"mode"
		- NEIGH  = { == , mode , N_POLE , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { y , x , lam , c_rh , xy , M_HALFPI , atan2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

265 :	"=="
		- NEIGH  = { == , mode , N_POLE , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { y , x , lam , c_rh , xy , M_HALFPI , atan2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

265 :	"N_POLE"
		- NEIGH  = { == , mode , N_POLE , Q , if , }
		- PARENT = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- CHILD  = { y , x , lam , c_rh , xy , M_HALFPI , atan2 , - , phi , lp , }
		- PRED   = { }
		- SUCC   = { }

266 :	"lp"
		- NEIGH  = { c_rh , M_HALFPI , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , - , atan2 , lp , }

266 :	"phi"
		- NEIGH  = { c_rh , M_HALFPI , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , - , atan2 , lp , }

266 :	"M_HALFPI"
		- NEIGH  = { c_rh , M_HALFPI , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , - , atan2 , lp , }

266 :	"-"
		- NEIGH  = { c_rh , M_HALFPI , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , - , atan2 , lp , }

266 :	"c_rh"
		- NEIGH  = { c_rh , M_HALFPI , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , - , atan2 , lp , }

267 :	"lp"
		- NEIGH  = { y , x , xy , lam , - , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , M_HALFPI , - , phi , lp , }
		- SUCC   = { }

267 :	"lam"
		- NEIGH  = { y , x , xy , lam , - , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , M_HALFPI , - , phi , lp , }
		- SUCC   = { }

267 :	"atan2"
		- NEIGH  = { y , x , xy , lam , - , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , M_HALFPI , - , phi , lp , }
		- SUCC   = { }

267 :	"xy"
		- NEIGH  = { y , x , xy , lam , - , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , M_HALFPI , - , phi , lp , }
		- SUCC   = { }

267 :	"x"
		- NEIGH  = { y , x , xy , lam , - , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , M_HALFPI , - , phi , lp , }
		- SUCC   = { }

267 :	"-"
		- NEIGH  = { y , x , xy , lam , - , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , M_HALFPI , - , phi , lp , }
		- SUCC   = { }

267 :	"xy"
		- NEIGH  = { y , x , xy , lam , - , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , M_HALFPI , - , phi , lp , }
		- SUCC   = { }

267 :	"y"
		- NEIGH  = { y , x , xy , lam , - , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { c_rh , M_HALFPI , - , phi , lp , }
		- SUCC   = { }

269 :	"lp"
		- NEIGH  = { M_HALFPI , c_rh , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

269 :	"phi"
		- NEIGH  = { M_HALFPI , c_rh , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

269 :	"c_rh"
		- NEIGH  = { M_HALFPI , c_rh , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

269 :	"-"
		- NEIGH  = { M_HALFPI , c_rh , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

269 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , c_rh , - , phi , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { y , x , xy , lam , atan2 , lp , }

270 :	"lp"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , c_rh , - , phi , lp , }
		- SUCC   = { }

270 :	"lam"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , c_rh , - , phi , lp , }
		- SUCC   = { }

270 :	"atan2"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , c_rh , - , phi , lp , }
		- SUCC   = { }

270 :	"xy"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , c_rh , - , phi , lp , }
		- SUCC   = { }

270 :	"x"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , c_rh , - , phi , lp , }
		- SUCC   = { }

270 :	"xy"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , c_rh , - , phi , lp , }
		- SUCC   = { }

270 :	"y"
		- NEIGH  = { y , x , xy , lam , atan2 , lp , }
		- PARENT = { == , mode , N_POLE , Q , if , }
		- CHILD  = { }
		- PRED   = { M_HALFPI , c_rh , - , phi , lp , }
		- SUCC   = { }

272 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- SUCC   = { }

272 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EQUIT , || , == , mode , OBLIQ , Q , if , }
		- SUCC   = { }

276 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"aeqd"
		- NEIGH  = { aeqd , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

277 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

277 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

277 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

277 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

277 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

277 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

277 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

277 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

277 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

277 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

278 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

278 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

278 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

279 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

279 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

279 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

279 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

280 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

280 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

280 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { destructor , P , }

281 :	"P"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }

281 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }

281 :	"destructor"
		- NEIGH  = { destructor , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }

283 :	"geod_init"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"&"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"Q"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"g"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"P"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"a"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"P"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"es"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"/"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"+"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"sqrt"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"P"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

283 :	"one_es"
		- NEIGH  = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { destructor , P , }
		- SUCC   = { < , M_HALFPI , - , if , phi0 , P , fabs , }

285 :	"if"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { fabs , - , sinph0 , if , N_POLE , S_POLE , phi0 , < , mode , cosph0 , P , Q , }
		- PRED   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- SUCC   = { == , es , P , if , }

285 :	"fabs"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { fabs , - , sinph0 , if , N_POLE , S_POLE , phi0 , < , mode , cosph0 , P , Q , }
		- PRED   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- SUCC   = { == , es , P , if , }

285 :	"fabs"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { fabs , - , sinph0 , if , N_POLE , S_POLE , phi0 , < , mode , cosph0 , P , Q , }
		- PRED   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- SUCC   = { == , es , P , if , }

285 :	"P"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { fabs , - , sinph0 , if , N_POLE , S_POLE , phi0 , < , mode , cosph0 , P , Q , }
		- PRED   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- SUCC   = { == , es , P , if , }

285 :	"phi0"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { fabs , - , sinph0 , if , N_POLE , S_POLE , phi0 , < , mode , cosph0 , P , Q , }
		- PRED   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- SUCC   = { == , es , P , if , }

285 :	"-"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { fabs , - , sinph0 , if , N_POLE , S_POLE , phi0 , < , mode , cosph0 , P , Q , }
		- PRED   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- SUCC   = { == , es , P , if , }

285 :	"M_HALFPI"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { fabs , - , sinph0 , if , N_POLE , S_POLE , phi0 , < , mode , cosph0 , P , Q , }
		- PRED   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- SUCC   = { == , es , P , if , }

285 :	"<"
		- NEIGH  = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- PARENT = { }
		- CHILD  = { fabs , - , sinph0 , if , N_POLE , S_POLE , phi0 , < , mode , cosph0 , P , Q , }
		- PRED   = { + , es , a , P , sqrt , Q , & , / , g , one_es , geod_init , }
		- SUCC   = { == , es , P , if , }

286 :	"Q"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi0 , sinph0 , P , Q , }

286 :	"mode"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi0 , sinph0 , P , Q , }

286 :	"P"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi0 , sinph0 , P , Q , }

286 :	"phi0"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi0 , sinph0 , P , Q , }

286 :	"<"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi0 , sinph0 , P , Q , }

286 :	"S_POLE"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi0 , sinph0 , P , Q , }

286 :	"N_POLE"
		- NEIGH  = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , < , phi0 , sinph0 , P , Q , }

287 :	"Q"
		- NEIGH  = { - , < , phi0 , sinph0 , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- SUCC   = { cosph0 , Q , }

287 :	"sinph0"
		- NEIGH  = { - , < , phi0 , sinph0 , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- SUCC   = { cosph0 , Q , }

287 :	"P"
		- NEIGH  = { - , < , phi0 , sinph0 , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- SUCC   = { cosph0 , Q , }

287 :	"phi0"
		- NEIGH  = { - , < , phi0 , sinph0 , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- SUCC   = { cosph0 , Q , }

287 :	"<"
		- NEIGH  = { - , < , phi0 , sinph0 , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- SUCC   = { cosph0 , Q , }

287 :	"-"
		- NEIGH  = { - , < , phi0 , sinph0 , P , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { N_POLE , phi0 , < , S_POLE , mode , P , Q , }
		- SUCC   = { cosph0 , Q , }

288 :	"Q"
		- NEIGH  = { cosph0 , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { - , < , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

288 :	"cosph0"
		- NEIGH  = { cosph0 , Q , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { }
		- PRED   = { - , < , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

289 :	"if"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , P , OBLIQ , cosph0 , sin , mode , Q , }
		- PRED   = { }
		- SUCC   = { }

289 :	"fabs"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , P , OBLIQ , cosph0 , sin , mode , Q , }
		- PRED   = { }
		- SUCC   = { }

289 :	"P"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , P , OBLIQ , cosph0 , sin , mode , Q , }
		- PRED   = { }
		- SUCC   = { }

289 :	"phi0"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , P , OBLIQ , cosph0 , sin , mode , Q , }
		- PRED   = { }
		- SUCC   = { }

289 :	"<"
		- NEIGH  = { phi0 , P , < , fabs , if , }
		- PARENT = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- CHILD  = { cos , phi0 , sinph0 , EQUIT , P , OBLIQ , cosph0 , sin , mode , Q , }
		- PRED   = { }
		- SUCC   = { }

290 :	"Q"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinph0 , Q , }

290 :	"mode"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinph0 , Q , }

290 :	"EQUIT"
		- NEIGH  = { EQUIT , mode , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sinph0 , Q , }

291 :	"Q"
		- NEIGH  = { sinph0 , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , mode , Q , }
		- SUCC   = { cosph0 , Q , }

291 :	"sinph0"
		- NEIGH  = { sinph0 , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { EQUIT , mode , Q , }
		- SUCC   = { cosph0 , Q , }

292 :	"Q"
		- NEIGH  = { cosph0 , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , Q , }
		- SUCC   = { }

292 :	"cosph0"
		- NEIGH  = { cosph0 , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sinph0 , Q , }
		- SUCC   = { }

294 :	"Q"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

294 :	"mode"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

294 :	"OBLIQ"
		- NEIGH  = { mode , OBLIQ , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { sin , phi0 , sinph0 , P , Q , }

295 :	"Q"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

295 :	"sinph0"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

295 :	"sin"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

295 :	"P"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

295 :	"phi0"
		- NEIGH  = { sin , phi0 , sinph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { mode , OBLIQ , Q , }
		- SUCC   = { phi0 , cos , cosph0 , P , Q , }

296 :	"Q"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

296 :	"cosph0"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

296 :	"cos"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

296 :	"P"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

296 :	"phi0"
		- NEIGH  = { phi0 , cos , cosph0 , P , Q , }
		- PARENT = { phi0 , P , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { sin , phi0 , sinph0 , P , Q , }
		- SUCC   = { }

298 :	"if"
		- NEIGH  = { == , es , P , if , }
		- PARENT = { }
		- CHILD  = { i , params , ctx , es , pj_enfn , en , pj_param , P , ! , if , Q , aeqd_s_forward , fwd , aeqd_s_inverse , inv , }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { P , return , }

298 :	"P"
		- NEIGH  = { == , es , P , if , }
		- PARENT = { }
		- CHILD  = { i , params , ctx , es , pj_enfn , en , pj_param , P , ! , if , Q , aeqd_s_forward , fwd , aeqd_s_inverse , inv , }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { P , return , }

298 :	"es"
		- NEIGH  = { == , es , P , if , }
		- PARENT = { }
		- CHILD  = { i , params , ctx , es , pj_enfn , en , pj_param , P , ! , if , Q , aeqd_s_forward , fwd , aeqd_s_inverse , inv , }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { P , return , }

298 :	"=="
		- NEIGH  = { == , es , P , if , }
		- PARENT = { }
		- CHILD  = { i , params , ctx , es , pj_enfn , en , pj_param , P , ! , if , Q , aeqd_s_forward , fwd , aeqd_s_inverse , inv , }
		- PRED   = { < , M_HALFPI , - , if , phi0 , P , fabs , }
		- SUCC   = { P , return , }

299 :	"P"
		- NEIGH  = { aeqd_s_inverse , inv , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aeqd_s_forward , fwd , P , }

299 :	"inv"
		- NEIGH  = { aeqd_s_inverse , inv , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aeqd_s_forward , fwd , P , }

299 :	"aeqd_s_inverse"
		- NEIGH  = { aeqd_s_inverse , inv , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aeqd_s_forward , fwd , P , }

300 :	"P"
		- NEIGH  = { aeqd_s_forward , fwd , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { aeqd_s_inverse , inv , P , }
		- SUCC   = { }

300 :	"fwd"
		- NEIGH  = { aeqd_s_forward , fwd , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { aeqd_s_inverse , inv , P , }
		- SUCC   = { }

300 :	"aeqd_s_forward"
		- NEIGH  = { aeqd_s_forward , fwd , P , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { }
		- PRED   = { aeqd_s_inverse , inv , P , }
		- SUCC   = { }

302 :	"if"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

302 :	"!"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

302 :	"Q"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

302 :	"en"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

302 :	"pj_enfn"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

302 :	"P"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

302 :	"es"
		- NEIGH  = { es , P , pj_enfn , en , Q , ! , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

303 :	"return"
		- NEIGH  = { P , pj_default_destructor , return , }
		- PARENT = { es , P , pj_enfn , en , Q , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"pj_default_destructor"
		- NEIGH  = { P , pj_default_destructor , return , }
		- PARENT = { es , P , pj_enfn , en , Q , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

303 :	"P"
		- NEIGH  = { P , pj_default_destructor , return , }
		- PARENT = { es , P , pj_enfn , en , Q , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

304 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { aeqd_e_forward , mode , switch , e_guam_fwd , e_guam_inv , en , aeqd_e_inverse , sinph0 , inv , M1 , pj_mlfn , phi0 , cosph0 , P , fwd , Q , }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { }

304 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { aeqd_e_forward , mode , switch , e_guam_fwd , e_guam_inv , en , aeqd_e_inverse , sinph0 , inv , M1 , pj_mlfn , phi0 , cosph0 , P , fwd , Q , }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { }

304 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { aeqd_e_forward , mode , switch , e_guam_fwd , e_guam_inv , en , aeqd_e_inverse , sinph0 , inv , M1 , pj_mlfn , phi0 , cosph0 , P , fwd , Q , }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { }

304 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { aeqd_e_forward , mode , switch , e_guam_fwd , e_guam_inv , en , aeqd_e_inverse , sinph0 , inv , M1 , pj_mlfn , phi0 , cosph0 , P , fwd , Q , }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { }

304 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { aeqd_e_forward , mode , switch , e_guam_fwd , e_guam_inv , en , aeqd_e_inverse , sinph0 , inv , M1 , pj_mlfn , phi0 , cosph0 , P , fwd , Q , }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { }

304 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { aeqd_e_forward , mode , switch , e_guam_fwd , e_guam_inv , en , aeqd_e_inverse , sinph0 , inv , M1 , pj_mlfn , phi0 , cosph0 , P , fwd , Q , }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { }

304 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { == , es , P , if , }
		- CHILD  = { aeqd_e_forward , mode , switch , e_guam_fwd , e_guam_inv , en , aeqd_e_inverse , sinph0 , inv , M1 , pj_mlfn , phi0 , cosph0 , P , fwd , Q , }
		- PRED   = { es , P , pj_enfn , en , Q , ! , if , }
		- SUCC   = { }

305 :	"Q"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"M1"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"pj_mlfn"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"P"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"phi0"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"Q"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"sinph0"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"Q"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"cosph0"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"Q"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

305 :	"en"
		- NEIGH  = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { inv , e_guam_inv , P , }

306 :	"P"
		- NEIGH  = { inv , e_guam_inv , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- SUCC   = { e_guam_fwd , fwd , P , }

306 :	"inv"
		- NEIGH  = { inv , e_guam_inv , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- SUCC   = { e_guam_fwd , fwd , P , }

306 :	"e_guam_inv"
		- NEIGH  = { inv , e_guam_inv , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { en , sinph0 , M1 , pj_mlfn , phi0 , cosph0 , P , Q , }
		- SUCC   = { e_guam_fwd , fwd , P , }

307 :	"P"
		- NEIGH  = { e_guam_fwd , fwd , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { inv , e_guam_inv , P , }
		- SUCC   = { }

307 :	"fwd"
		- NEIGH  = { e_guam_fwd , fwd , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { inv , e_guam_inv , P , }
		- SUCC   = { }

307 :	"e_guam_fwd"
		- NEIGH  = { e_guam_fwd , fwd , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { inv , e_guam_inv , P , }
		- SUCC   = { }

309 :	"switch"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { G , sinph0 , e , N1 , P , EQUIT , *= , * , OBLIQ , es , sqrt , N_POLE , one_es , He , cosph0 , pj_mlfn , S_POLE , Q , - , break , / , en , M_HALFPI , Mp , }
		- PRED   = { }
		- SUCC   = { aeqd_e_inverse , inv , P , }

309 :	"Q"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { G , sinph0 , e , N1 , P , EQUIT , *= , * , OBLIQ , es , sqrt , N_POLE , one_es , He , cosph0 , pj_mlfn , S_POLE , Q , - , break , / , en , M_HALFPI , Mp , }
		- PRED   = { }
		- SUCC   = { aeqd_e_inverse , inv , P , }

309 :	"mode"
		- NEIGH  = { mode , Q , switch , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { G , sinph0 , e , N1 , P , EQUIT , *= , * , OBLIQ , es , sqrt , N_POLE , one_es , He , cosph0 , pj_mlfn , S_POLE , Q , - , break , / , en , M_HALFPI , Mp , }
		- PRED   = { }
		- SUCC   = { aeqd_e_inverse , inv , P , }

310 :	"N_POLE"
		- NEIGH  = { N_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { en , M_HALFPI , pj_mlfn , Mp , Q , }

311 :	"Q"
		- NEIGH  = { en , M_HALFPI , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

311 :	"Mp"
		- NEIGH  = { en , M_HALFPI , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

311 :	"pj_mlfn"
		- NEIGH  = { en , M_HALFPI , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

311 :	"M_HALFPI"
		- NEIGH  = { en , M_HALFPI , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

311 :	"Q"
		- NEIGH  = { en , M_HALFPI , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

311 :	"en"
		- NEIGH  = { en , M_HALFPI , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { N_POLE , }
		- SUCC   = { break , }

312 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { en , M_HALFPI , pj_mlfn , Mp , Q , }
		- SUCC   = { S_POLE , }

313 :	"S_POLE"
		- NEIGH  = { S_POLE , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }

314 :	"Q"
		- NEIGH  = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

314 :	"Mp"
		- NEIGH  = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

314 :	"pj_mlfn"
		- NEIGH  = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

314 :	"-"
		- NEIGH  = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

314 :	"M_HALFPI"
		- NEIGH  = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

314 :	"-"
		- NEIGH  = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

314 :	"Q"
		- NEIGH  = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

314 :	"en"
		- NEIGH  = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { S_POLE , }
		- SUCC   = { break , }

315 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { en , M_HALFPI , - , pj_mlfn , Mp , Q , }
		- SUCC   = { EQUIT , }

316 :	"EQUIT"
		- NEIGH  = { EQUIT , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { OBLIQ , }

317 :	"OBLIQ"
		- NEIGH  = { OBLIQ , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { EQUIT , }
		- SUCC   = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }

318 :	"Q"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"N1"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"/"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"sqrt"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"-"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"P"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"es"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"*"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"Q"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"sinph0"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"*"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"Q"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

318 :	"sinph0"
		- NEIGH  = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { OBLIQ , }
		- SUCC   = { one_es , e , / , P , He , sqrt , Q , }

319 :	"Q"
		- NEIGH  = { one_es , e , / , P , He , sqrt , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- SUCC   = { * , sinph0 , He , G , Q , }

319 :	"He"
		- NEIGH  = { one_es , e , / , P , He , sqrt , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- SUCC   = { * , sinph0 , He , G , Q , }

319 :	"P"
		- NEIGH  = { one_es , e , / , P , He , sqrt , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- SUCC   = { * , sinph0 , He , G , Q , }

319 :	"e"
		- NEIGH  = { one_es , e , / , P , He , sqrt , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- SUCC   = { * , sinph0 , He , G , Q , }

319 :	"/"
		- NEIGH  = { one_es , e , / , P , He , sqrt , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- SUCC   = { * , sinph0 , He , G , Q , }

319 :	"sqrt"
		- NEIGH  = { one_es , e , / , P , He , sqrt , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- SUCC   = { * , sinph0 , He , G , Q , }

319 :	"P"
		- NEIGH  = { one_es , e , / , P , He , sqrt , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- SUCC   = { * , sinph0 , He , G , Q , }

319 :	"one_es"
		- NEIGH  = { one_es , e , / , P , He , sqrt , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , es , P , Q , sqrt , - , N1 , / , }
		- SUCC   = { * , sinph0 , He , G , Q , }

320 :	"Q"
		- NEIGH  = { * , sinph0 , He , G , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { one_es , e , / , P , He , sqrt , Q , }
		- SUCC   = { cosph0 , *= , He , Q , }

320 :	"G"
		- NEIGH  = { * , sinph0 , He , G , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { one_es , e , / , P , He , sqrt , Q , }
		- SUCC   = { cosph0 , *= , He , Q , }

320 :	"Q"
		- NEIGH  = { * , sinph0 , He , G , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { one_es , e , / , P , He , sqrt , Q , }
		- SUCC   = { cosph0 , *= , He , Q , }

320 :	"sinph0"
		- NEIGH  = { * , sinph0 , He , G , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { one_es , e , / , P , He , sqrt , Q , }
		- SUCC   = { cosph0 , *= , He , Q , }

320 :	"*"
		- NEIGH  = { * , sinph0 , He , G , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { one_es , e , / , P , He , sqrt , Q , }
		- SUCC   = { cosph0 , *= , He , Q , }

320 :	"Q"
		- NEIGH  = { * , sinph0 , He , G , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { one_es , e , / , P , He , sqrt , Q , }
		- SUCC   = { cosph0 , *= , He , Q , }

320 :	"He"
		- NEIGH  = { * , sinph0 , He , G , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { one_es , e , / , P , He , sqrt , Q , }
		- SUCC   = { cosph0 , *= , He , Q , }

321 :	"Q"
		- NEIGH  = { cosph0 , *= , He , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , He , G , Q , }
		- SUCC   = { break , }

321 :	"He"
		- NEIGH  = { cosph0 , *= , He , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , He , G , Q , }
		- SUCC   = { break , }

321 :	"*="
		- NEIGH  = { cosph0 , *= , He , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , He , G , Q , }
		- SUCC   = { break , }

321 :	"Q"
		- NEIGH  = { cosph0 , *= , He , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , He , G , Q , }
		- SUCC   = { break , }

321 :	"cosph0"
		- NEIGH  = { cosph0 , *= , He , Q , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { * , sinph0 , He , G , Q , }
		- SUCC   = { break , }

322 :	"break"
		- NEIGH  = { break , }
		- PARENT = { mode , Q , switch , }
		- CHILD  = { }
		- PRED   = { cosph0 , *= , He , Q , }
		- SUCC   = { }

324 :	"P"
		- NEIGH  = { aeqd_e_inverse , inv , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { aeqd_e_forward , fwd , P , }

324 :	"inv"
		- NEIGH  = { aeqd_e_inverse , inv , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { aeqd_e_forward , fwd , P , }

324 :	"aeqd_e_inverse"
		- NEIGH  = { aeqd_e_inverse , inv , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { mode , Q , switch , }
		- SUCC   = { aeqd_e_forward , fwd , P , }

325 :	"P"
		- NEIGH  = { aeqd_e_forward , fwd , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { aeqd_e_inverse , inv , P , }
		- SUCC   = { }

325 :	"fwd"
		- NEIGH  = { aeqd_e_forward , fwd , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { aeqd_e_inverse , inv , P , }
		- SUCC   = { }

325 :	"aeqd_e_forward"
		- NEIGH  = { aeqd_e_forward , fwd , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { aeqd_e_inverse , inv , P , }
		- SUCC   = { }

329 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , es , P , if , }
		- SUCC   = { }

329 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , es , P , if , }
		- SUCC   = { }

