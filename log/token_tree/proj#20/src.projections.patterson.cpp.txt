48 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"patterson"
		- NEIGH  = { patterson , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"patterson_s_forward"
		- NEIGH  = { patterson_s_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi2 , }

65 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { phi2 , }

66 :	"phi2"
		- NEIGH  = { phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { P , }

67 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi2 , }
		- SUCC   = { * , phi , lp , phi2 , }

69 :	"phi2"
		- NEIGH  = { * , phi , lp , phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { lp , lam , x , xy , }

69 :	"lp"
		- NEIGH  = { * , phi , lp , phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { lp , lam , x , xy , }

69 :	"phi"
		- NEIGH  = { * , phi , lp , phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { lp , lam , x , xy , }

69 :	"*"
		- NEIGH  = { * , phi , lp , phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { lp , lam , x , xy , }

69 :	"lp"
		- NEIGH  = { * , phi , lp , phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { lp , lam , x , xy , }

69 :	"phi"
		- NEIGH  = { * , phi , lp , phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { lp , lam , x , xy , }

70 :	"xy"
		- NEIGH  = { lp , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , phi2 , }
		- SUCC   = { - , phi2 , + , phi , lp , * , y , xy , }

70 :	"x"
		- NEIGH  = { lp , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , phi2 , }
		- SUCC   = { - , phi2 , + , phi , lp , * , y , xy , }

70 :	"lp"
		- NEIGH  = { lp , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , phi2 , }
		- SUCC   = { - , phi2 , + , phi , lp , * , y , xy , }

70 :	"lam"
		- NEIGH  = { lp , lam , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , phi , lp , phi2 , }
		- SUCC   = { - , phi2 , + , phi , lp , * , y , xy , }

71 :	"xy"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"y"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"lp"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"phi"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"*"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"+"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"phi2"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"*"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"phi2"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"*"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"+"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"phi2"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"*"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"-"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"+"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"*"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

71 :	"phi2"
		- NEIGH  = { - , phi2 , + , phi , lp , * , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , lam , x , xy , }
		- SUCC   = { xy , return , }

73 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , phi2 , + , phi , lp , * , y , xy , }
		- SUCC   = { }

73 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , phi2 , + , phi , lp , * , y , xy , }
		- SUCC   = { }

77 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"patterson_s_inverse"
		- NEIGH  = { patterson_s_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { yc , }

78 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { yc , }

79 :	"yc"
		- NEIGH  = { yc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { i , }

80 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { yc , }
		- SUCC   = { P , }

81 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { y , xy , yc , }

83 :	"yc"
		- NEIGH  = { y , xy , yc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { > , y , xy , if , }

83 :	"xy"
		- NEIGH  = { y , xy , yc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { > , y , xy , if , }

83 :	"y"
		- NEIGH  = { y , xy , yc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , }
		- SUCC   = { > , y , xy , if , }

86 :	"if"
		- NEIGH  = { > , y , xy , if , }
		- PARENT = { }
		- CHILD  = { - , < , if , y , xy , }
		- PRED   = { y , xy , yc , }
		- SUCC   = { -- , i , for , }

86 :	"xy"
		- NEIGH  = { > , y , xy , if , }
		- PARENT = { }
		- CHILD  = { - , < , if , y , xy , }
		- PRED   = { y , xy , yc , }
		- SUCC   = { -- , i , for , }

86 :	"y"
		- NEIGH  = { > , y , xy , if , }
		- PARENT = { }
		- CHILD  = { - , < , if , y , xy , }
		- PRED   = { y , xy , yc , }
		- SUCC   = { -- , i , for , }

86 :	">"
		- NEIGH  = { > , y , xy , if , }
		- PARENT = { }
		- CHILD  = { - , < , if , y , xy , }
		- PRED   = { y , xy , yc , }
		- SUCC   = { -- , i , for , }

87 :	"xy"
		- NEIGH  = { y , xy , }
		- PARENT = { > , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"y"
		- NEIGH  = { y , xy , }
		- PARENT = { > , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

88 :	"if"
		- NEIGH  = { - , < , y , xy , if , }
		- PARENT = { > , y , xy , if , }
		- CHILD  = { - , y , xy , }
		- PRED   = { }
		- SUCC   = { }

88 :	"xy"
		- NEIGH  = { - , < , y , xy , if , }
		- PARENT = { > , y , xy , if , }
		- CHILD  = { - , y , xy , }
		- PRED   = { }
		- SUCC   = { }

88 :	"y"
		- NEIGH  = { - , < , y , xy , if , }
		- PARENT = { > , y , xy , if , }
		- CHILD  = { - , y , xy , }
		- PRED   = { }
		- SUCC   = { }

88 :	"<"
		- NEIGH  = { - , < , y , xy , if , }
		- PARENT = { > , y , xy , if , }
		- CHILD  = { - , y , xy , }
		- PRED   = { }
		- SUCC   = { }

88 :	"-"
		- NEIGH  = { - , < , y , xy , if , }
		- PARENT = { > , y , xy , if , }
		- CHILD  = { - , y , xy , }
		- PRED   = { }
		- SUCC   = { }

89 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { - , < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

89 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { - , < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

89 :	"-"
		- NEIGH  = { - , y , xy , }
		- PARENT = { - , < , y , xy , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

92 :	"for"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , -= , / , tol , fder , y , - , + , f , * , < , xy , if , yc , y2 , }
		- PRED   = { > , y , xy , if , }
		- SUCC   = { == , i , if , }

92 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , -= , / , tol , fder , y , - , + , f , * , < , xy , if , yc , y2 , }
		- PRED   = { > , y , xy , if , }
		- SUCC   = { == , i , if , }

92 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , -= , / , tol , fder , y , - , + , f , * , < , xy , if , yc , y2 , }
		- PRED   = { > , y , xy , if , }
		- SUCC   = { == , i , if , }

92 :	"--"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , -= , / , tol , fder , y , - , + , f , * , < , xy , if , yc , y2 , }
		- PRED   = { > , y , xy , if , }
		- SUCC   = { == , i , if , }

92 :	"i"
		- NEIGH  = { -- , i , for , }
		- PARENT = { }
		- CHILD  = { fabs , -= , / , tol , fder , y , - , + , f , * , < , xy , if , yc , y2 , }
		- PRED   = { > , y , xy , if , }
		- SUCC   = { == , i , if , }

93 :	"y2"
		- NEIGH  = { * , yc , y2 , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , y2 , + , y , * , xy , yc , f , }

93 :	"yc"
		- NEIGH  = { * , yc , y2 , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , y2 , + , y , * , xy , yc , f , }

93 :	"*"
		- NEIGH  = { * , yc , y2 , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , y2 , + , y , * , xy , yc , f , }

93 :	"yc"
		- NEIGH  = { * , yc , y2 , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , y2 , + , y , * , xy , yc , f , }

94 :	"f"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"yc"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"*"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"+"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"y2"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"*"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"y2"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"*"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"+"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"y2"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"*"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"-"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"+"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"*"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"y2"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"-"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"xy"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

94 :	"y"
		- NEIGH  = { - , y2 , + , y , * , xy , yc , f , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { * , yc , y2 , }
		- SUCC   = { - , y2 , + , * , fder , }

95 :	"fder"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"+"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"y2"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"*"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"y2"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"*"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"*"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"+"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"y2"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"*"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"*"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"-"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"+"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"*"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"*"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

95 :	"y2"
		- NEIGH  = { - , y2 , + , * , fder , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , y , * , xy , yc , f , }
		- SUCC   = { / , f , fder , tol , }

96 :	"tol"
		- NEIGH  = { / , f , fder , tol , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , * , fder , }
		- SUCC   = { tol , -= , yc , }

96 :	"f"
		- NEIGH  = { / , f , fder , tol , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , * , fder , }
		- SUCC   = { tol , -= , yc , }

96 :	"/"
		- NEIGH  = { / , f , fder , tol , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , * , fder , }
		- SUCC   = { tol , -= , yc , }

96 :	"fder"
		- NEIGH  = { / , f , fder , tol , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { - , y2 , + , * , fder , }
		- SUCC   = { tol , -= , yc , }

97 :	"yc"
		- NEIGH  = { tol , -= , yc , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { / , f , fder , tol , }
		- SUCC   = { tol , < , fabs , if , }

97 :	"-="
		- NEIGH  = { tol , -= , yc , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { / , f , fder , tol , }
		- SUCC   = { tol , < , fabs , if , }

97 :	"tol"
		- NEIGH  = { tol , -= , yc , }
		- PARENT = { -- , i , for , }
		- CHILD  = { }
		- PRED   = { / , f , fder , tol , }
		- SUCC   = { tol , < , fabs , if , }

98 :	"if"
		- NEIGH  = { tol , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { tol , -= , yc , }
		- SUCC   = { }

98 :	"fabs"
		- NEIGH  = { tol , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { tol , -= , yc , }
		- SUCC   = { }

98 :	"tol"
		- NEIGH  = { tol , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { tol , -= , yc , }
		- SUCC   = { }

98 :	"<"
		- NEIGH  = { tol , < , fabs , if , }
		- PARENT = { -- , i , for , }
		- CHILD  = { break , }
		- PRED   = { tol , -= , yc , }
		- SUCC   = { }

99 :	"break"
		- NEIGH  = { break , }
		- PARENT = { tol , < , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

102 :	"if"
		- NEIGH  = { == , i , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PRED   = { -- , i , for , }
		- SUCC   = { yc , phi , lp , }

102 :	"i"
		- NEIGH  = { == , i , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PRED   = { -- , i , for , }
		- SUCC   = { yc , phi , lp , }

102 :	"=="
		- NEIGH  = { == , i , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PRED   = { -- , i , for , }
		- SUCC   = { yc , phi , lp , }

103 :	"pj_ctx_set_errno"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"P"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"ctx"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"PJD_ERR_NON_CONVERGENT"
		- NEIGH  = { PJD_ERR_NON_CONVERGENT , ctx , P , pj_ctx_set_errno , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"lp"
		- NEIGH  = { yc , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , i , if , }
		- SUCC   = { x , xy , lam , lp , }

104 :	"phi"
		- NEIGH  = { yc , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , i , if , }
		- SUCC   = { x , xy , lam , lp , }

104 :	"yc"
		- NEIGH  = { yc , phi , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , i , if , }
		- SUCC   = { x , xy , lam , lp , }

107 :	"lp"
		- NEIGH  = { x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { yc , phi , lp , }
		- SUCC   = { lp , return , }

107 :	"lam"
		- NEIGH  = { x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { yc , phi , lp , }
		- SUCC   = { lp , return , }

107 :	"xy"
		- NEIGH  = { x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { yc , phi , lp , }
		- SUCC   = { lp , return , }

107 :	"x"
		- NEIGH  = { x , xy , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { yc , phi , lp , }
		- SUCC   = { lp , return , }

109 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , xy , lam , lp , }
		- SUCC   = { }

109 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , xy , lam , lp , }
		- SUCC   = { }

113 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

113 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

113 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

113 :	"patterson"
		- NEIGH  = { patterson , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

114 :	"P"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { patterson_s_inverse , inv , P , }

114 :	"es"
		- NEIGH  = { es , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { patterson_s_inverse , inv , P , }

115 :	"P"
		- NEIGH  = { patterson_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { patterson_s_forward , fwd , P , }

115 :	"inv"
		- NEIGH  = { patterson_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { patterson_s_forward , fwd , P , }

115 :	"patterson_s_inverse"
		- NEIGH  = { patterson_s_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { es , P , }
		- SUCC   = { patterson_s_forward , fwd , P , }

116 :	"P"
		- NEIGH  = { patterson_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { patterson_s_inverse , inv , P , }
		- SUCC   = { P , return , }

116 :	"fwd"
		- NEIGH  = { patterson_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { patterson_s_inverse , inv , P , }
		- SUCC   = { P , return , }

116 :	"patterson_s_forward"
		- NEIGH  = { patterson_s_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { patterson_s_inverse , inv , P , }
		- SUCC   = { P , return , }

118 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { patterson_s_forward , fwd , P , }
		- SUCC   = { }

118 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { patterson_s_forward , fwd , P , }
		- SUCC   = { }

