13 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"nad_cvt"
		- NEIGH  = { nad_cvt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"in"
		- NEIGH  = { in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"inverse"
		- NEIGH  = { inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"CTABLE"
		- NEIGH  = { CTABLE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"ct"
		- NEIGH  = { ct , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

14 :	"PJ_LP"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

14 :	"t"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

14 :	"tb"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

14 :	"del"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

14 :	"dif"
		- NEIGH  = { del , dif , tb , t , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , }

15 :	"i"
		- NEIGH  = { i , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { del , dif , tb , t , PJ_LP , }
		- SUCC   = { * , toltol , }

16 :	"toltol"
		- NEIGH  = { * , toltol , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , HUGE_VAL , lam , in , if , }

16 :	"*"
		- NEIGH  = { * , toltol , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { i , }
		- SUCC   = { == , HUGE_VAL , lam , in , if , }

18 :	"if"
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

18 :	"in"
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

18 :	"lam"
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

18 :	"=="
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

18 :	"HUGE_VAL"
		- NEIGH  = { == , HUGE_VAL , lam , in , if , }
		- PARENT = { }
		- CHILD  = { in , return , }
		- PRED   = { * , toltol , }
		- SUCC   = { in , tb , }

19 :	"return"
		- NEIGH  = { in , return , }
		- PARENT = { == , HUGE_VAL , lam , in , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

19 :	"in"
		- NEIGH  = { in , return , }
		- PARENT = { == , HUGE_VAL , lam , in , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

22 :	"tb"
		- NEIGH  = { in , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , in , if , }
		- SUCC   = { ct , ll , -= , lam , tb , }

22 :	"in"
		- NEIGH  = { in , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , in , if , }
		- SUCC   = { ct , ll , -= , lam , tb , }

23 :	"tb"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

23 :	"lam"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

23 :	"-="
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

23 :	"ct"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

23 :	"ll"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

23 :	"lam"
		- NEIGH  = { ct , ll , -= , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { in , tb , }
		- SUCC   = { ct , ll , -= , phi , tb , }

24 :	"tb"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

24 :	"phi"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

24 :	"-="
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

24 :	"ct"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

24 :	"ll"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

24 :	"phi"
		- NEIGH  = { ct , ll , -= , phi , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , lam , tb , }
		- SUCC   = { - , + , adjlon , M_PI , lam , tb , }

25 :	"tb"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

25 :	"lam"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

25 :	"adjlon"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

25 :	"tb"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

25 :	"lam"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

25 :	"-"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

25 :	"M_PI"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

25 :	"+"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

25 :	"M_PI"
		- NEIGH  = { - , + , adjlon , M_PI , lam , tb , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ct , ll , -= , phi , tb , }
		- SUCC   = { tb , nad_intr , ct , t , }

27 :	"t"
		- NEIGH  = { tb , nad_intr , ct , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { HUGE_VAL , lam , == , t , if , }

27 :	"nad_intr"
		- NEIGH  = { tb , nad_intr , ct , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { HUGE_VAL , lam , == , t , if , }

27 :	"tb"
		- NEIGH  = { tb , nad_intr , ct , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { HUGE_VAL , lam , == , t , if , }

27 :	"ct"
		- NEIGH  = { tb , nad_intr , ct , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , + , adjlon , M_PI , lam , tb , }
		- SUCC   = { HUGE_VAL , lam , == , t , if , }

28 :	"if"
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

28 :	"t"
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

28 :	"lam"
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

28 :	"=="
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

28 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , lam , == , t , if , }
		- PARENT = { }
		- CHILD  = { t , return , }
		- PRED   = { tb , nad_intr , ct , t , }
		- SUCC   = { ! , inverse , if , }

29 :	"return"
		- NEIGH  = { t , return , }
		- PARENT = { HUGE_VAL , lam , == , t , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

29 :	"t"
		- NEIGH  = { t , return , }
		- PARENT = { HUGE_VAL , lam , == , t , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

31 :	"if"
		- NEIGH  = { ! , inverse , if , }
		- PARENT = { }
		- CHILD  = { return , += , phi , t , lam , -= , in , }
		- PRED   = { HUGE_VAL , lam , == , t , if , }
		- SUCC   = { + , tb , lam , t , }

31 :	"!"
		- NEIGH  = { ! , inverse , if , }
		- PARENT = { }
		- CHILD  = { return , += , phi , t , lam , -= , in , }
		- PRED   = { HUGE_VAL , lam , == , t , if , }
		- SUCC   = { + , tb , lam , t , }

31 :	"inverse"
		- NEIGH  = { ! , inverse , if , }
		- PARENT = { }
		- CHILD  = { return , += , phi , t , lam , -= , in , }
		- PRED   = { HUGE_VAL , lam , == , t , if , }
		- SUCC   = { + , tb , lam , t , }

32 :	"in"
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

32 :	"lam"
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

32 :	"-="
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

32 :	"t"
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

32 :	"lam"
		- NEIGH  = { t , lam , -= , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { t , += , phi , in , }

33 :	"in"
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

33 :	"phi"
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

33 :	"+="
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

33 :	"t"
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

33 :	"phi"
		- NEIGH  = { t , += , phi , in , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , lam , -= , in , }
		- SUCC   = { in , return , }

34 :	"return"
		- NEIGH  = { in , return , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , += , phi , in , }
		- SUCC   = { }

34 :	"in"
		- NEIGH  = { in , return , }
		- PARENT = { ! , inverse , if , }
		- CHILD  = { }
		- PRED   = { t , += , phi , in , }
		- SUCC   = { }

37 :	"t"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

37 :	"lam"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

37 :	"tb"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

37 :	"lam"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

37 :	"+"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

37 :	"t"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

37 :	"lam"
		- NEIGH  = { + , tb , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , inverse , if , }
		- SUCC   = { tb , - , phi , t , }

38 :	"t"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

38 :	"phi"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

38 :	"tb"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

38 :	"phi"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

38 :	"-"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

38 :	"t"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

38 :	"phi"
		- NEIGH  = { tb , - , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , tb , lam , t , }
		- SUCC   = { ct , t , nad_intr , del , }

41 :	"del"
		- NEIGH  = { ct , t , nad_intr , del , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , phi , t , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

41 :	"nad_intr"
		- NEIGH  = { ct , t , nad_intr , del , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , phi , t , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

41 :	"t"
		- NEIGH  = { ct , t , nad_intr , del , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , phi , t , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

41 :	"ct"
		- NEIGH  = { ct , t , nad_intr , del , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , phi , t , }
		- SUCC   = { == , HUGE_VAL , lam , del , if , }

52 :	"if"
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { tb , del , - , t , lam , dif , }

52 :	"del"
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { tb , del , - , t , lam , dif , }

52 :	"lam"
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { tb , del , - , t , lam , dif , }

52 :	"=="
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { tb , del , - , t , lam , dif , }

52 :	"HUGE_VAL"
		- NEIGH  = { == , HUGE_VAL , lam , del , if , }
		- PARENT = { }
		- CHILD  = { break , }
		- PRED   = { ct , t , nad_intr , del , }
		- SUCC   = { tb , del , - , t , lam , dif , }

53 :	"break"
		- NEIGH  = { break , }
		- PARENT = { == , HUGE_VAL , lam , del , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

55 :	"dif"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

55 :	"lam"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

55 :	"t"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

55 :	"lam"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

55 :	"-"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

55 :	"del"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

55 :	"lam"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

55 :	"-"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

55 :	"tb"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

55 :	"lam"
		- NEIGH  = { tb , del , - , t , lam , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , HUGE_VAL , lam , del , if , }
		- SUCC   = { tb , - , del , + , t , phi , dif , }

56 :	"dif"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

56 :	"phi"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

56 :	"t"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

56 :	"phi"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

56 :	"+"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

56 :	"del"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

56 :	"phi"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

56 :	"-"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

56 :	"tb"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

56 :	"phi"
		- NEIGH  = { tb , - , del , + , t , phi , dif , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , del , - , t , lam , dif , }
		- SUCC   = { -= , dif , lam , t , }

57 :	"t"
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

57 :	"lam"
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

57 :	"-="
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

57 :	"dif"
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

57 :	"lam"
		- NEIGH  = { -= , dif , lam , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tb , - , del , + , t , phi , dif , }
		- SUCC   = { dif , -= , phi , t , }

58 :	"t"
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

58 :	"phi"
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

58 :	"-="
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

58 :	"dif"
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

58 :	"phi"
		- NEIGH  = { dif , -= , phi , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { -= , dif , lam , t , }
		- SUCC   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }

60 :	"while"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"--"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"i"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"&&"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"dif"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"lam"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"*"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"dif"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"lam"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"+"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"dif"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"phi"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"*"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"dif"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"phi"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	">"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

60 :	"toltol"
		- NEIGH  = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dif , -= , phi , t , }
		- SUCC   = { == , i , if , }

62 :	"if"
		- NEIGH  = { == , i , if , }
		- PARENT = { }
		- CHILD  = { return , HUGE_VAL , getenv , lam , t , phi , if , }
		- PRED   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- SUCC   = { && , == , HUGE_VAL , getenv , lam , del , if , }

62 :	"i"
		- NEIGH  = { == , i , if , }
		- PARENT = { }
		- CHILD  = { return , HUGE_VAL , getenv , lam , t , phi , if , }
		- PRED   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- SUCC   = { && , == , HUGE_VAL , getenv , lam , del , if , }

62 :	"=="
		- NEIGH  = { == , i , if , }
		- PARENT = { }
		- CHILD  = { return , HUGE_VAL , getenv , lam , t , phi , if , }
		- PRED   = { > , phi , + , toltol , * , lam , while , dif , && , i , -- , }
		- SUCC   = { && , == , HUGE_VAL , getenv , lam , del , if , }

64 :	"if"
		- NEIGH  = { getenv , if , }
		- PARENT = { == , i , if , }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { }
		- SUCC   = { phi , HUGE_VAL , lam , t , }

64 :	"getenv"
		- NEIGH  = { getenv , if , }
		- PARENT = { == , i , if , }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { }
		- SUCC   = { phi , HUGE_VAL , lam , t , }

65 :	"fprintf"
		- NEIGH  = { stderr , fprintf , }
		- PARENT = { getenv , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"stderr"
		- NEIGH  = { stderr , fprintf , }
		- PARENT = { getenv , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"t"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

66 :	"lam"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

66 :	"t"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

66 :	"phi"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

66 :	"HUGE_VAL"
		- NEIGH  = { phi , HUGE_VAL , lam , t , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { getenv , if , }
		- SUCC   = { t , return , }

67 :	"return"
		- NEIGH  = { t , return , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { phi , HUGE_VAL , lam , t , }
		- SUCC   = { }

67 :	"t"
		- NEIGH  = { t , return , }
		- PARENT = { == , i , if , }
		- CHILD  = { }
		- PRED   = { phi , HUGE_VAL , lam , t , }
		- SUCC   = { }

71 :	"if"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

71 :	"del"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

71 :	"lam"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

71 :	"=="
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

71 :	"HUGE_VAL"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

71 :	"&&"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

71 :	"getenv"
		- NEIGH  = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- PARENT = { }
		- CHILD  = { stderr , fprintf , }
		- PRED   = { == , i , if , }
		- SUCC   = { ll , t , + , adjlon , ct , lam , in , }

72 :	"fprintf"
		- NEIGH  = { stderr , fprintf , }
		- PARENT = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"stderr"
		- NEIGH  = { stderr , fprintf , }
		- PARENT = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

74 :	"in"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

74 :	"lam"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

74 :	"adjlon"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

74 :	"t"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

74 :	"lam"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

74 :	"+"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

74 :	"ct"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

74 :	"ll"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

74 :	"lam"
		- NEIGH  = { ll , t , + , adjlon , ct , lam , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , == , HUGE_VAL , getenv , lam , del , if , }
		- SUCC   = { ll , ct , t , phi , + , in , }

75 :	"in"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

75 :	"phi"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

75 :	"t"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

75 :	"phi"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

75 :	"+"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

75 :	"ct"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

75 :	"ll"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

75 :	"phi"
		- NEIGH  = { ll , ct , t , phi , + , in , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , t , + , adjlon , ct , lam , in , }
		- SUCC   = { in , return , }

76 :	"return"
		- NEIGH  = { in , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , ct , t , phi , + , in , }
		- SUCC   = { }

76 :	"in"
		- NEIGH  = { in , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ll , ct , t , phi , + , in , }
		- SUCC   = { }

