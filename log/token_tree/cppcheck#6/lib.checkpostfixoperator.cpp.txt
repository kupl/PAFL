38 :	"CheckPostfixOperator"
		- NEIGH  = { CheckPostfixOperator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

38 :	"instance"
		- NEIGH  = { instance , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"CWE"
		- NEIGH  = { CWE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

43 :	"CWE398"
		- NEIGH  = { CWE398 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"CheckPostfixOperator"
		- NEIGH  = { CheckPostfixOperator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"postfixOperator"
		- NEIGH  = { postfixOperator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

48 :	"if"
		- NEIGH  = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }

48 :	"!"
		- NEIGH  = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }

48 :	"mSettings"
		- NEIGH  = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }

48 :	"isEnabled"
		- NEIGH  = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }

48 :	"Settings"
		- NEIGH  = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }

48 :	"PERFORMANCE"
		- NEIGH  = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }

49 :	"return"
		- NEIGH  = { return , }
		- PARENT = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

51 :	"SymbolDatabase"
		- NEIGH  = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- SUCC   = { symbolDatabase , functionScopes , * , scope , Scope , for , }

51 :	"*"
		- NEIGH  = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- SUCC   = { symbolDatabase , functionScopes , * , scope , Scope , for , }

51 :	"symbolDatabase"
		- NEIGH  = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- SUCC   = { symbolDatabase , functionScopes , * , scope , Scope , for , }

51 :	"mTokenizer"
		- NEIGH  = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- SUCC   = { symbolDatabase , functionScopes , * , scope , Scope , for , }

51 :	"getSymbolDatabase"
		- NEIGH  = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PERFORMANCE , Settings , isEnabled , mSettings , ! , if , }
		- SUCC   = { symbolDatabase , functionScopes , * , scope , Scope , for , }

53 :	"for"
		- NEIGH  = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- PARENT = { }
		- CHILD  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PRED   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- SUCC   = { }

53 :	"Scope"
		- NEIGH  = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- PARENT = { }
		- CHILD  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PRED   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- SUCC   = { }

53 :	"*"
		- NEIGH  = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- PARENT = { }
		- CHILD  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PRED   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- SUCC   = { }

53 :	"scope"
		- NEIGH  = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- PARENT = { }
		- CHILD  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PRED   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- SUCC   = { }

53 :	"symbolDatabase"
		- NEIGH  = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- PARENT = { }
		- CHILD  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PRED   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- SUCC   = { }

53 :	"functionScopes"
		- NEIGH  = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- PARENT = { }
		- CHILD  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PRED   = { getSymbolDatabase , mTokenizer , symbolDatabase , * , SymbolDatabase , }
		- SUCC   = { }

54 :	"for"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"Token"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"*"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"tok"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"scope"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"bodyStart"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"next"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"tok"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"!="
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"scope"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"bodyEnd"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"tok"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"tok"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

54 :	"next"
		- NEIGH  = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- PARENT = { symbolDatabase , functionScopes , * , scope , Scope , for , }
		- CHILD  = { && , == , next , parent , Match , ! , Token , || , str , if , var , != , astParent , variable , Variable , tok , * , }
		- PRED   = { }
		- SUCC   = { }

55 :	"Variable"
		- NEIGH  = { variable , tok , * , var , Variable , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tok , Match , Token , || , if , ! , var , }

55 :	"*"
		- NEIGH  = { variable , tok , * , var , Variable , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tok , Match , Token , || , if , ! , var , }

55 :	"var"
		- NEIGH  = { variable , tok , * , var , Variable , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tok , Match , Token , || , if , ! , var , }

55 :	"tok"
		- NEIGH  = { variable , tok , * , var , Variable , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tok , Match , Token , || , if , ! , var , }

55 :	"variable"
		- NEIGH  = { variable , tok , * , var , Variable , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { tok , Match , Token , || , if , ! , var , }

56 :	"if"
		- NEIGH  = { tok , Match , Token , || , if , ! , var , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { continue , }
		- PRED   = { variable , tok , * , var , Variable , }
		- SUCC   = { astParent , Token , next , tok , parent , * , }

56 :	"!"
		- NEIGH  = { tok , Match , Token , || , if , ! , var , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { continue , }
		- PRED   = { variable , tok , * , var , Variable , }
		- SUCC   = { astParent , Token , next , tok , parent , * , }

56 :	"var"
		- NEIGH  = { tok , Match , Token , || , if , ! , var , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { continue , }
		- PRED   = { variable , tok , * , var , Variable , }
		- SUCC   = { astParent , Token , next , tok , parent , * , }

56 :	"||"
		- NEIGH  = { tok , Match , Token , || , if , ! , var , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { continue , }
		- PRED   = { variable , tok , * , var , Variable , }
		- SUCC   = { astParent , Token , next , tok , parent , * , }

56 :	"!"
		- NEIGH  = { tok , Match , Token , || , if , ! , var , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { continue , }
		- PRED   = { variable , tok , * , var , Variable , }
		- SUCC   = { astParent , Token , next , tok , parent , * , }

56 :	"Token"
		- NEIGH  = { tok , Match , Token , || , if , ! , var , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { continue , }
		- PRED   = { variable , tok , * , var , Variable , }
		- SUCC   = { astParent , Token , next , tok , parent , * , }

56 :	"Match"
		- NEIGH  = { tok , Match , Token , || , if , ! , var , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { continue , }
		- PRED   = { variable , tok , * , var , Variable , }
		- SUCC   = { astParent , Token , next , tok , parent , * , }

56 :	"tok"
		- NEIGH  = { tok , Match , Token , || , if , ! , var , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { continue , }
		- PRED   = { variable , tok , * , var , Variable , }
		- SUCC   = { astParent , Token , next , tok , parent , * , }

57 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { tok , Match , Token , || , if , ! , var , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

59 :	"Token"
		- NEIGH  = { astParent , Token , next , tok , parent , * , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { tok , Match , Token , || , if , ! , var , }
		- SUCC   = { != , astParent , && , == , str , || , parent , ! , if , }

59 :	"*"
		- NEIGH  = { astParent , Token , next , tok , parent , * , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { tok , Match , Token , || , if , ! , var , }
		- SUCC   = { != , astParent , && , == , str , || , parent , ! , if , }

59 :	"parent"
		- NEIGH  = { astParent , Token , next , tok , parent , * , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { tok , Match , Token , || , if , ! , var , }
		- SUCC   = { != , astParent , && , == , str , || , parent , ! , if , }

59 :	"tok"
		- NEIGH  = { astParent , Token , next , tok , parent , * , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { tok , Match , Token , || , if , ! , var , }
		- SUCC   = { != , astParent , && , == , str , || , parent , ! , if , }

59 :	"next"
		- NEIGH  = { astParent , Token , next , tok , parent , * , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { tok , Match , Token , || , if , ! , var , }
		- SUCC   = { != , astParent , && , == , str , || , parent , ! , if , }

59 :	"astParent"
		- NEIGH  = { astParent , Token , next , tok , parent , * , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { }
		- PRED   = { tok , Match , Token , || , if , ! , var , }
		- SUCC   = { != , astParent , && , == , str , || , parent , ! , if , }

60 :	"if"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"!"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"parent"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"||"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"parent"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"str"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"=="
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"||"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"parent"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"str"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"=="
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"&&"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"!"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"parent"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"astParent"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"||"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"parent"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"astParent"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"str"
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

60 :	"!="
		- NEIGH  = { != , astParent , && , == , str , || , parent , ! , if , }
		- PARENT = { scope , bodyEnd , != , tok , bodyStart , * , next , Token , for , }
		- CHILD  = { Match , Token , isPointer , isArray , || , previous , var , nameToken , if , }
		- PRED   = { astParent , Token , next , tok , parent , * , }
		- SUCC   = { }

61 :	"if"
		- NEIGH  = { isArray , || , isPointer , var , if , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { continue , }
		- PRED   = { }
		- SUCC   = { if , nameToken , Token , previous , var , Match , }

61 :	"var"
		- NEIGH  = { isArray , || , isPointer , var , if , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { continue , }
		- PRED   = { }
		- SUCC   = { if , nameToken , Token , previous , var , Match , }

61 :	"isPointer"
		- NEIGH  = { isArray , || , isPointer , var , if , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { continue , }
		- PRED   = { }
		- SUCC   = { if , nameToken , Token , previous , var , Match , }

61 :	"||"
		- NEIGH  = { isArray , || , isPointer , var , if , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { continue , }
		- PRED   = { }
		- SUCC   = { if , nameToken , Token , previous , var , Match , }

61 :	"var"
		- NEIGH  = { isArray , || , isPointer , var , if , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { continue , }
		- PRED   = { }
		- SUCC   = { if , nameToken , Token , previous , var , Match , }

61 :	"isArray"
		- NEIGH  = { isArray , || , isPointer , var , if , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { continue , }
		- PRED   = { }
		- SUCC   = { if , nameToken , Token , previous , var , Match , }

62 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { isArray , || , isPointer , var , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"if"
		- NEIGH  = { if , nameToken , Token , previous , var , Match , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { var , if , type , tok , postfixOperatorError , }
		- PRED   = { isArray , || , isPointer , var , if , }
		- SUCC   = { }

64 :	"Token"
		- NEIGH  = { if , nameToken , Token , previous , var , Match , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { var , if , type , tok , postfixOperatorError , }
		- PRED   = { isArray , || , isPointer , var , if , }
		- SUCC   = { }

64 :	"Match"
		- NEIGH  = { if , nameToken , Token , previous , var , Match , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { var , if , type , tok , postfixOperatorError , }
		- PRED   = { isArray , || , isPointer , var , if , }
		- SUCC   = { }

64 :	"var"
		- NEIGH  = { if , nameToken , Token , previous , var , Match , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { var , if , type , tok , postfixOperatorError , }
		- PRED   = { isArray , || , isPointer , var , if , }
		- SUCC   = { }

64 :	"nameToken"
		- NEIGH  = { if , nameToken , Token , previous , var , Match , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { var , if , type , tok , postfixOperatorError , }
		- PRED   = { isArray , || , isPointer , var , if , }
		- SUCC   = { }

64 :	"previous"
		- NEIGH  = { if , nameToken , Token , previous , var , Match , }
		- PARENT = { != , astParent , && , == , str , || , parent , ! , if , }
		- CHILD  = { var , if , type , tok , postfixOperatorError , }
		- PRED   = { isArray , || , isPointer , var , if , }
		- SUCC   = { }

66 :	"postfixOperatorError"
		- NEIGH  = { tok , postfixOperatorError , }
		- PARENT = { if , nameToken , Token , previous , var , Match , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"tok"
		- NEIGH  = { tok , postfixOperatorError , }
		- PARENT = { if , nameToken , Token , previous , var , Match , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"if"
		- NEIGH  = { type , var , if , }
		- PARENT = { if , nameToken , Token , previous , var , Match , }
		- CHILD  = { tok , postfixOperatorError , }
		- PRED   = { }
		- SUCC   = { }

67 :	"var"
		- NEIGH  = { type , var , if , }
		- PARENT = { if , nameToken , Token , previous , var , Match , }
		- CHILD  = { tok , postfixOperatorError , }
		- PRED   = { }
		- SUCC   = { }

67 :	"type"
		- NEIGH  = { type , var , if , }
		- PARENT = { if , nameToken , Token , previous , var , Match , }
		- CHILD  = { tok , postfixOperatorError , }
		- PRED   = { }
		- SUCC   = { }

69 :	"postfixOperatorError"
		- NEIGH  = { tok , postfixOperatorError , }
		- PARENT = { type , var , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

69 :	"tok"
		- NEIGH  = { tok , postfixOperatorError , }
		- PARENT = { type , var , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"CheckPostfixOperator"
		- NEIGH  = { CheckPostfixOperator , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"postfixOperatorError"
		- NEIGH  = { postfixOperatorError , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"Token"
		- NEIGH  = { Token , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"tok"
		- NEIGH  = { tok , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"reportError"
		- NEIGH  = { CWE398 , performance , tok , Severity , reportError , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"tok"
		- NEIGH  = { CWE398 , performance , tok , Severity , reportError , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"Severity"
		- NEIGH  = { CWE398 , performance , tok , Severity , reportError , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"performance"
		- NEIGH  = { CWE398 , performance , tok , Severity , reportError , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"CWE398"
		- NEIGH  = { CWE398 , performance , tok , Severity , reportError , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

