61 :	"Face"
		- NEIGH  = { Face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

62 :	"FACE_FRONT"
		- NEIGH  = { FACE_FRONT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"FACE_RIGHT"
		- NEIGH  = { FACE_RIGHT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

64 :	"FACE_TOP"
		- NEIGH  = { FACE_TOP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

65 :	"FACE_BACK"
		- NEIGH  = { FACE_BACK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

66 :	"FACE_LEFT"
		- NEIGH  = { FACE_LEFT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

67 :	"FACE_BOTTOM"
		- NEIGH  = { FACE_BOTTOM , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"S2ProjectionType"
		- NEIGH  = { S2ProjectionType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"Linear"
		- NEIGH  = { Linear , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"Quadratic"
		- NEIGH  = { Quadratic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"Tangent"
		- NEIGH  = { Tangent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"NoUVtoST"
		- NEIGH  = { NoUVtoST , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"map"
		- NEIGH  = { map , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"S2ProjectionType"
		- NEIGH  = { S2ProjectionType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"stringToS2ProjectionType"
		- NEIGH  = { stringToS2ProjectionType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"Linear"
		- NEIGH  = { Tangent , Quadratic , NoUVtoST , Linear , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"Quadratic"
		- NEIGH  = { Tangent , Quadratic , NoUVtoST , Linear , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"Tangent"
		- NEIGH  = { Tangent , Quadratic , NoUVtoST , Linear , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

72 :	"NoUVtoST"
		- NEIGH  = { Tangent , Quadratic , NoUVtoST , Linear , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

75 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"Face"
		- NEIGH  = { Face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

76 :	"face"
		- NEIGH  = { face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

77 :	"a_squared"
		- NEIGH  = { a_squared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

78 :	"one_minus_f"
		- NEIGH  = { one_minus_f , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

79 :	"one_minus_f_squared"
		- NEIGH  = { one_minus_f_squared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"S2ProjectionType"
		- NEIGH  = { S2ProjectionType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"UVtoST"
		- NEIGH  = { UVtoST , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

83 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

83 :	"s2"
		- NEIGH  = { s2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

90 :	"Area"
		- NEIGH  = { Area , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

91 :	"AREA_0"
		- NEIGH  = { AREA_0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

92 :	"AREA_1"
		- NEIGH  = { AREA_1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

93 :	"AREA_2"
		- NEIGH  = { AREA_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

94 :	"AREA_3"
		- NEIGH  = { AREA_3 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"Abs"
		- NEIGH  = { Abs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

103 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"return"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"std"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"fabs"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"p"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"x"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"std"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"fabs"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"p"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"y"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"std"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"fabs"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"p"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

104 :	"z"
		- NEIGH  = { z , y , x , p , fabs , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

107 :	"LargestAbsComponent"
		- NEIGH  = { LargestAbsComponent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

107 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

107 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

107 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

108 :	"PJ_XYZ"
		- NEIGH  = { p , Abs , temp , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { z , y , x , > , temp , return , }

108 :	"temp"
		- NEIGH  = { p , Abs , temp , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { z , y , x , > , temp , return , }

108 :	"Abs"
		- NEIGH  = { p , Abs , temp , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { z , y , x , > , temp , return , }

108 :	"p"
		- NEIGH  = { p , Abs , temp , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { z , y , x , > , temp , return , }

109 :	"return"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

109 :	"temp"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

109 :	"x"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

109 :	">"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

109 :	"temp"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

109 :	"y"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

110 :	"temp"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

110 :	"x"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

110 :	">"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

110 :	"temp"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

110 :	"z"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

111 :	"temp"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

111 :	"y"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

111 :	">"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

111 :	"temp"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

111 :	"z"
		- NEIGH  = { z , y , x , > , temp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { p , Abs , temp , PJ_XYZ , }
		- SUCC   = { }

126 :	"STtoUV"
		- NEIGH  = { STtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

126 :	"s"
		- NEIGH  = { s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

126 :	"S2ProjectionType"
		- NEIGH  = { S2ProjectionType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

126 :	"s2_projection"
		- NEIGH  = { s2_projection , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"switch"
		- NEIGH  = { s2_projection , switch , }
		- PARENT = { }
		- CHILD  = { << , int64_t , < , / , M_PI_4 , M_PI_2 , tan , static_cast , Linear , if , Tangent , Quadratic , + , std , > , >= , break , return , - , s , * , }
		- PRED   = { }
		- SUCC   = { }

127 :	"s2_projection"
		- NEIGH  = { s2_projection , switch , }
		- PARENT = { }
		- CHILD  = { << , int64_t , < , / , M_PI_4 , M_PI_2 , tan , static_cast , Linear , if , Tangent , Quadratic , + , std , > , >= , break , return , - , s , * , }
		- PRED   = { }
		- SUCC   = { }

128 :	"Linear"
		- NEIGH  = { Linear , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , s , * , return , }

129 :	"return"
		- NEIGH  = { - , s , * , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Linear , }
		- SUCC   = { break , }

129 :	"*"
		- NEIGH  = { - , s , * , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Linear , }
		- SUCC   = { break , }

129 :	"s"
		- NEIGH  = { - , s , * , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Linear , }
		- SUCC   = { break , }

129 :	"-"
		- NEIGH  = { - , s , * , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Linear , }
		- SUCC   = { break , }

130 :	"break"
		- NEIGH  = { break , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { - , s , * , return , }
		- SUCC   = { Quadratic , }

131 :	"Quadratic"
		- NEIGH  = { Quadratic , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { >= , s , if , }

132 :	"if"
		- NEIGH  = { >= , s , if , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { - , s , * , / , return , }
		- PRED   = { Quadratic , }
		- SUCC   = { break , }

132 :	"s"
		- NEIGH  = { >= , s , if , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { - , s , * , / , return , }
		- PRED   = { Quadratic , }
		- SUCC   = { break , }

132 :	">="
		- NEIGH  = { >= , s , if , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { - , s , * , / , return , }
		- PRED   = { Quadratic , }
		- SUCC   = { break , }

132 :	"return"
		- NEIGH  = { - , s , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

132 :	"/"
		- NEIGH  = { - , s , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

132 :	"*"
		- NEIGH  = { - , s , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

132 :	"*"
		- NEIGH  = { - , s , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

132 :	"s"
		- NEIGH  = { - , s , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

132 :	"*"
		- NEIGH  = { - , s , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

132 :	"s"
		- NEIGH  = { - , s , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

132 :	"-"
		- NEIGH  = { - , s , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"return"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"/"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"*"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"-"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"*"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"-"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"s"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"*"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"-"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"s"
		- NEIGH  = { s , - , * , / , return , }
		- PARENT = { >= , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

134 :	"break"
		- NEIGH  = { break , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { >= , s , if , }
		- SUCC   = { Tangent , }

135 :	"Tangent"
		- NEIGH  = { Tangent , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }

136 :	"s"
		- NEIGH  = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }

136 :	"std"
		- NEIGH  = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }

136 :	"tan"
		- NEIGH  = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }

136 :	"M_PI_2"
		- NEIGH  = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }

136 :	"*"
		- NEIGH  = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }

136 :	"s"
		- NEIGH  = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }

136 :	"-"
		- NEIGH  = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }

136 :	"M_PI_4"
		- NEIGH  = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }

137 :	"return"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"s"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"+"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"/"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"static_cast"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"<"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	">"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"static_cast"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"<"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"std"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"int64_t"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	">"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"<<"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"*"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

137 :	"s"
		- NEIGH  = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { M_PI_4 , * , M_PI_2 , - , tan , std , s , }
		- SUCC   = { break , }

138 :	"break"
		- NEIGH  = { break , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { * , << , int64_t , < , + , static_cast , > , s , / , std , return , }
		- SUCC   = { }

140 :	"return"
		- NEIGH  = { s , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"s"
		- NEIGH  = { s , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

144 :	"UVtoST"
		- NEIGH  = { UVtoST , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

144 :	"u"
		- NEIGH  = { u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

144 :	"S2ProjectionType"
		- NEIGH  = { S2ProjectionType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

144 :	"s2_projection"
		- NEIGH  = { s2_projection , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

145 :	"switch"
		- NEIGH  = { s2_projection , switch , }
		- PARENT = { }
		- CHILD  = { M_PI_4 , M_1_PI , atan , Tangent , Quadratic , u , a , * , Linear , if , std , + , >= , break , return , }
		- PRED   = { }
		- SUCC   = { }

145 :	"s2_projection"
		- NEIGH  = { s2_projection , switch , }
		- PARENT = { }
		- CHILD  = { M_PI_4 , M_1_PI , atan , Tangent , Quadratic , u , a , * , Linear , if , std , + , >= , break , return , }
		- PRED   = { }
		- SUCC   = { }

146 :	"Linear"
		- NEIGH  = { Linear , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { u , * , + , return , }

147 :	"return"
		- NEIGH  = { u , * , + , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Linear , }
		- SUCC   = { break , }

147 :	"*"
		- NEIGH  = { u , * , + , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Linear , }
		- SUCC   = { break , }

147 :	"u"
		- NEIGH  = { u , * , + , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Linear , }
		- SUCC   = { break , }

147 :	"+"
		- NEIGH  = { u , * , + , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Linear , }
		- SUCC   = { break , }

148 :	"break"
		- NEIGH  = { break , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { u , * , + , return , }
		- SUCC   = { Quadratic , }

149 :	"Quadratic"
		- NEIGH  = { Quadratic , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { >= , u , if , }

150 :	"if"
		- NEIGH  = { >= , u , if , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { u , - , return , std , sqrt , * , + , }
		- PRED   = { Quadratic , }
		- SUCC   = { break , }

150 :	"u"
		- NEIGH  = { >= , u , if , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { u , - , return , std , sqrt , * , + , }
		- PRED   = { Quadratic , }
		- SUCC   = { break , }

150 :	">="
		- NEIGH  = { >= , u , if , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { u , - , return , std , sqrt , * , + , }
		- PRED   = { Quadratic , }
		- SUCC   = { break , }

150 :	"return"
		- NEIGH  = { u , return , std , sqrt , * , + , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"*"
		- NEIGH  = { u , return , std , sqrt , * , + , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"std"
		- NEIGH  = { u , return , std , sqrt , * , + , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"sqrt"
		- NEIGH  = { u , return , std , sqrt , * , + , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"+"
		- NEIGH  = { u , return , std , sqrt , * , + , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"*"
		- NEIGH  = { u , return , std , sqrt , * , + , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

150 :	"u"
		- NEIGH  = { u , return , std , sqrt , * , + , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"return"
		- NEIGH  = { u , return , - , std , sqrt , * , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"-"
		- NEIGH  = { u , return , - , std , sqrt , * , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"*"
		- NEIGH  = { u , return , - , std , sqrt , * , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"std"
		- NEIGH  = { u , return , - , std , sqrt , * , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"sqrt"
		- NEIGH  = { u , return , - , std , sqrt , * , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"-"
		- NEIGH  = { u , return , - , std , sqrt , * , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"*"
		- NEIGH  = { u , return , - , std , sqrt , * , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

151 :	"u"
		- NEIGH  = { u , return , - , std , sqrt , * , }
		- PARENT = { >= , u , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

152 :	"break"
		- NEIGH  = { break , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { >= , u , if , }
		- SUCC   = { Tangent , }

153 :	"Tangent"
		- NEIGH  = { Tangent , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { break , }
		- SUCC   = { u , atan , std , a , }

155 :	"a"
		- NEIGH  = { u , atan , std , a , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { return , a , M_1_PI , * , M_PI_4 , + , }

155 :	"std"
		- NEIGH  = { u , atan , std , a , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { return , a , M_1_PI , * , M_PI_4 , + , }

155 :	"atan"
		- NEIGH  = { u , atan , std , a , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { return , a , M_1_PI , * , M_PI_4 , + , }

155 :	"u"
		- NEIGH  = { u , atan , std , a , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { Tangent , }
		- SUCC   = { return , a , M_1_PI , * , M_PI_4 , + , }

156 :	"return"
		- NEIGH  = { return , a , M_1_PI , * , M_PI_4 , + , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { u , atan , std , a , }
		- SUCC   = { break , }

156 :	"*"
		- NEIGH  = { return , a , M_1_PI , * , M_PI_4 , + , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { u , atan , std , a , }
		- SUCC   = { break , }

156 :	"M_1_PI"
		- NEIGH  = { return , a , M_1_PI , * , M_PI_4 , + , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { u , atan , std , a , }
		- SUCC   = { break , }

156 :	"*"
		- NEIGH  = { return , a , M_1_PI , * , M_PI_4 , + , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { u , atan , std , a , }
		- SUCC   = { break , }

156 :	"a"
		- NEIGH  = { return , a , M_1_PI , * , M_PI_4 , + , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { u , atan , std , a , }
		- SUCC   = { break , }

156 :	"+"
		- NEIGH  = { return , a , M_1_PI , * , M_PI_4 , + , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { u , atan , std , a , }
		- SUCC   = { break , }

156 :	"M_PI_4"
		- NEIGH  = { return , a , M_1_PI , * , M_PI_4 , + , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { u , atan , std , a , }
		- SUCC   = { break , }

158 :	"break"
		- NEIGH  = { break , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { return , a , M_1_PI , * , M_PI_4 , + , }
		- SUCC   = { }

160 :	"return"
		- NEIGH  = { u , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

160 :	"u"
		- NEIGH  = { u , return , }
		- PARENT = { s2_projection , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"FaceUVtoXYZ"
		- NEIGH  = { FaceUVtoXYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"face"
		- NEIGH  = { face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"u"
		- NEIGH  = { u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

164 :	"v"
		- NEIGH  = { v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

165 :	"switch"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { v , - , u , return , }
		- PRED   = { }
		- SUCC   = { }

165 :	"face"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { v , - , u , return , }
		- PRED   = { }
		- SUCC   = { }

166 :	"return"
		- NEIGH  = { v , u , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

166 :	"u"
		- NEIGH  = { v , u , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

166 :	"v"
		- NEIGH  = { v , u , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"return"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"-"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"u"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

167 :	"v"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

168 :	"return"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

168 :	"-"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

168 :	"u"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

168 :	"-"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

168 :	"v"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"return"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"-"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"-"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"v"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"-"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

169 :	"u"
		- NEIGH  = { v , u , - , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"return"
		- NEIGH  = { u , - , v , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"v"
		- NEIGH  = { u , - , v , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"-"
		- NEIGH  = { u , - , v , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"-"
		- NEIGH  = { u , - , v , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"u"
		- NEIGH  = { u , - , v , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

171 :	"return"
		- NEIGH  = { - , u , v , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

171 :	"v"
		- NEIGH  = { - , u , v , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

171 :	"u"
		- NEIGH  = { - , u , v , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

171 :	"-"
		- NEIGH  = { - , u , v , return , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

175 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

175 :	"FaceUVtoXYZ"
		- NEIGH  = { FaceUVtoXYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

175 :	"face"
		- NEIGH  = { face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

175 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

175 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

175 :	"uv"
		- NEIGH  = { uv , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"return"
		- NEIGH  = { y , uv , x , face , FaceUVtoXYZ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"FaceUVtoXYZ"
		- NEIGH  = { y , uv , x , face , FaceUVtoXYZ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"face"
		- NEIGH  = { y , uv , x , face , FaceUVtoXYZ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"uv"
		- NEIGH  = { y , uv , x , face , FaceUVtoXYZ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"x"
		- NEIGH  = { y , uv , x , face , FaceUVtoXYZ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"uv"
		- NEIGH  = { y , uv , x , face , FaceUVtoXYZ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"y"
		- NEIGH  = { y , uv , x , face , FaceUVtoXYZ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

179 :	"ValidFaceXYZtoUV"
		- NEIGH  = { ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

179 :	"face"
		- NEIGH  = { face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

179 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

179 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

179 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

180 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

180 :	"pu"
		- NEIGH  = { pu , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

180 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

180 :	"pv"
		- NEIGH  = { pv , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

181 :	"switch"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { x , pv , / , z , * , y , p , - , break , pu , }
		- PRED   = { }
		- SUCC   = { }

181 :	"face"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { x , pv , / , z , * , y , p , - , break , pu , }
		- PRED   = { }
		- SUCC   = { }

182 :	"*"
		- NEIGH  = { x , / , * , y , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , z , p , }

182 :	"pu"
		- NEIGH  = { x , / , * , y , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , z , p , }

182 :	"p"
		- NEIGH  = { x , / , * , y , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , z , p , }

182 :	"y"
		- NEIGH  = { x , / , * , y , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , z , p , }

182 :	"/"
		- NEIGH  = { x , / , * , y , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , z , p , }

182 :	"p"
		- NEIGH  = { x , / , * , y , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , z , p , }

182 :	"x"
		- NEIGH  = { x , / , * , y , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , z , p , }

182 :	"*"
		- NEIGH  = { x , / , pv , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , y , p , pu , }
		- SUCC   = { break , }

182 :	"pv"
		- NEIGH  = { x , / , pv , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , y , p , pu , }
		- SUCC   = { break , }

182 :	"p"
		- NEIGH  = { x , / , pv , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , y , p , pu , }
		- SUCC   = { break , }

182 :	"z"
		- NEIGH  = { x , / , pv , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , y , p , pu , }
		- SUCC   = { break , }

182 :	"/"
		- NEIGH  = { x , / , pv , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , y , p , pu , }
		- SUCC   = { break , }

182 :	"p"
		- NEIGH  = { x , / , pv , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , y , p , pu , }
		- SUCC   = { break , }

182 :	"x"
		- NEIGH  = { x , / , pv , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , y , p , pu , }
		- SUCC   = { break , }

182 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , pv , * , z , p , }
		- SUCC   = { }

183 :	"*"
		- NEIGH  = { / , pu , - , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , pv , y , * , z , p , }

183 :	"pu"
		- NEIGH  = { / , pu , - , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , pv , y , * , z , p , }

183 :	"-"
		- NEIGH  = { / , pu , - , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , pv , y , * , z , p , }

183 :	"p"
		- NEIGH  = { / , pu , - , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , pv , y , * , z , p , }

183 :	"x"
		- NEIGH  = { / , pu , - , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , pv , y , * , z , p , }

183 :	"/"
		- NEIGH  = { / , pu , - , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , pv , y , * , z , p , }

183 :	"p"
		- NEIGH  = { / , pu , - , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , pv , y , * , z , p , }

183 :	"y"
		- NEIGH  = { / , pu , - , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , pv , y , * , z , p , }

183 :	"*"
		- NEIGH  = { / , pv , y , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , y , * , }
		- SUCC   = { break , }

183 :	"pv"
		- NEIGH  = { / , pv , y , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , y , * , }
		- SUCC   = { break , }

183 :	"p"
		- NEIGH  = { / , pv , y , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , y , * , }
		- SUCC   = { break , }

183 :	"z"
		- NEIGH  = { / , pv , y , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , y , * , }
		- SUCC   = { break , }

183 :	"/"
		- NEIGH  = { / , pv , y , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , y , * , }
		- SUCC   = { break , }

183 :	"p"
		- NEIGH  = { / , pv , y , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , y , * , }
		- SUCC   = { break , }

183 :	"y"
		- NEIGH  = { / , pv , y , * , z , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , y , * , }
		- SUCC   = { break , }

183 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pv , y , * , z , p , }
		- SUCC   = { }

184 :	"*"
		- NEIGH  = { / , pu , - , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , z , * , y , p , }

184 :	"pu"
		- NEIGH  = { / , pu , - , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , z , * , y , p , }

184 :	"-"
		- NEIGH  = { / , pu , - , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , z , * , y , p , }

184 :	"p"
		- NEIGH  = { / , pu , - , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , z , * , y , p , }

184 :	"x"
		- NEIGH  = { / , pu , - , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , z , * , y , p , }

184 :	"/"
		- NEIGH  = { / , pu , - , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , z , * , y , p , }

184 :	"p"
		- NEIGH  = { / , pu , - , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , z , * , y , p , }

184 :	"z"
		- NEIGH  = { / , pu , - , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , z , * , y , p , }

184 :	"*"
		- NEIGH  = { - , / , pv , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , z , * , }
		- SUCC   = { break , }

184 :	"pv"
		- NEIGH  = { - , / , pv , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , z , * , }
		- SUCC   = { break , }

184 :	"-"
		- NEIGH  = { - , / , pv , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , z , * , }
		- SUCC   = { break , }

184 :	"p"
		- NEIGH  = { - , / , pv , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , z , * , }
		- SUCC   = { break , }

184 :	"y"
		- NEIGH  = { - , / , pv , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , z , * , }
		- SUCC   = { break , }

184 :	"/"
		- NEIGH  = { - , / , pv , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , z , * , }
		- SUCC   = { break , }

184 :	"p"
		- NEIGH  = { - , / , pv , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , z , * , }
		- SUCC   = { break , }

184 :	"z"
		- NEIGH  = { - , / , pv , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , x , p , z , * , }
		- SUCC   = { break , }

184 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { - , / , pv , z , * , y , p , }
		- SUCC   = { }

185 :	"*"
		- NEIGH  = { x , / , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , y , p , }

185 :	"pu"
		- NEIGH  = { x , / , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , y , p , }

185 :	"p"
		- NEIGH  = { x , / , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , y , p , }

185 :	"z"
		- NEIGH  = { x , / , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , y , p , }

185 :	"/"
		- NEIGH  = { x , / , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , y , p , }

185 :	"p"
		- NEIGH  = { x , / , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , y , p , }

185 :	"x"
		- NEIGH  = { x , / , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { x , / , pv , * , y , p , }

185 :	"*"
		- NEIGH  = { x , / , pv , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , z , p , pu , }
		- SUCC   = { break , }

185 :	"pv"
		- NEIGH  = { x , / , pv , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , z , p , pu , }
		- SUCC   = { break , }

185 :	"p"
		- NEIGH  = { x , / , pv , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , z , p , pu , }
		- SUCC   = { break , }

185 :	"y"
		- NEIGH  = { x , / , pv , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , z , p , pu , }
		- SUCC   = { break , }

185 :	"/"
		- NEIGH  = { x , / , pv , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , z , p , pu , }
		- SUCC   = { break , }

185 :	"p"
		- NEIGH  = { x , / , pv , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , z , p , pu , }
		- SUCC   = { break , }

185 :	"x"
		- NEIGH  = { x , / , pv , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , * , z , p , pu , }
		- SUCC   = { break , }

185 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , / , pv , * , y , p , }
		- SUCC   = { }

186 :	"*"
		- NEIGH  = { / , y , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , y , * , }

186 :	"pu"
		- NEIGH  = { / , y , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , y , * , }

186 :	"p"
		- NEIGH  = { / , y , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , y , * , }

186 :	"z"
		- NEIGH  = { / , y , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , y , * , }

186 :	"/"
		- NEIGH  = { / , y , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , y , * , }

186 :	"p"
		- NEIGH  = { / , y , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , y , * , }

186 :	"y"
		- NEIGH  = { / , y , * , z , p , pu , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , y , * , }

186 :	"*"
		- NEIGH  = { - , / , pv , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , y , * , z , p , pu , }
		- SUCC   = { break , }

186 :	"pv"
		- NEIGH  = { - , / , pv , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , y , * , z , p , pu , }
		- SUCC   = { break , }

186 :	"-"
		- NEIGH  = { - , / , pv , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , y , * , z , p , pu , }
		- SUCC   = { break , }

186 :	"p"
		- NEIGH  = { - , / , pv , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , y , * , z , p , pu , }
		- SUCC   = { break , }

186 :	"x"
		- NEIGH  = { - , / , pv , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , y , * , z , p , pu , }
		- SUCC   = { break , }

186 :	"/"
		- NEIGH  = { - , / , pv , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , y , * , z , p , pu , }
		- SUCC   = { break , }

186 :	"p"
		- NEIGH  = { - , / , pv , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , y , * , z , p , pu , }
		- SUCC   = { break , }

186 :	"y"
		- NEIGH  = { - , / , pv , x , p , y , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , y , * , z , p , pu , }
		- SUCC   = { break , }

186 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { - , / , pv , x , p , y , * , }
		- SUCC   = { }

187 :	"*"
		- NEIGH  = { / , pu , - , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , z , * , }

187 :	"pu"
		- NEIGH  = { / , pu , - , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , z , * , }

187 :	"-"
		- NEIGH  = { / , pu , - , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , z , * , }

187 :	"p"
		- NEIGH  = { / , pu , - , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , z , * , }

187 :	"y"
		- NEIGH  = { / , pu , - , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , z , * , }

187 :	"/"
		- NEIGH  = { / , pu , - , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , z , * , }

187 :	"p"
		- NEIGH  = { / , pu , - , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , z , * , }

187 :	"z"
		- NEIGH  = { / , pu , - , z , * , y , p , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , / , pv , x , p , z , * , }

187 :	"*"
		- NEIGH  = { - , / , pv , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , z , * , y , p , }
		- SUCC   = { break , }

187 :	"pv"
		- NEIGH  = { - , / , pv , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , z , * , y , p , }
		- SUCC   = { break , }

187 :	"-"
		- NEIGH  = { - , / , pv , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , z , * , y , p , }
		- SUCC   = { break , }

187 :	"p"
		- NEIGH  = { - , / , pv , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , z , * , y , p , }
		- SUCC   = { break , }

187 :	"x"
		- NEIGH  = { - , / , pv , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , z , * , y , p , }
		- SUCC   = { break , }

187 :	"/"
		- NEIGH  = { - , / , pv , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , z , * , y , p , }
		- SUCC   = { break , }

187 :	"p"
		- NEIGH  = { - , / , pv , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , z , * , y , p , }
		- SUCC   = { break , }

187 :	"z"
		- NEIGH  = { - , / , pv , x , p , z , * , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { / , pu , - , z , * , y , p , }
		- SUCC   = { break , }

187 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { - , / , pv , x , p , z , * , }
		- SUCC   = { }

191 :	"ValidFaceXYZtoUV"
		- NEIGH  = { ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"face"
		- NEIGH  = { face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"puv"
		- NEIGH  = { puv , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"ValidFaceXYZtoUV"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"face"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"p"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"&"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"*"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"puv"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"x"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"&"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"*"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"puv"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

192 :	"y"
		- NEIGH  = { x , puv , p , & , y , * , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

195 :	"GetFace"
		- NEIGH  = { GetFace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

195 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

195 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

195 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

196 :	"face"
		- NEIGH  = { LargestAbsComponent , p , face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pFace , }

196 :	"LargestAbsComponent"
		- NEIGH  = { LargestAbsComponent , p , face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pFace , }

196 :	"p"
		- NEIGH  = { LargestAbsComponent , p , face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pFace , }

197 :	"pFace"
		- NEIGH  = { pFace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { LargestAbsComponent , p , face , }
		- SUCC   = { face , switch , }

198 :	"switch"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { break , z , y , x , p , pFace , }
		- PRED   = { pFace , }
		- SUCC   = { < , pFace , if , }

198 :	"face"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { break , z , y , x , p , pFace , }
		- PRED   = { pFace , }
		- SUCC   = { < , pFace , if , }

199 :	"pFace"
		- NEIGH  = { x , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

199 :	"p"
		- NEIGH  = { x , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

199 :	"x"
		- NEIGH  = { x , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

199 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , p , pFace , }
		- SUCC   = { }

200 :	"pFace"
		- NEIGH  = { y , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

200 :	"p"
		- NEIGH  = { y , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

200 :	"y"
		- NEIGH  = { y , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

200 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { y , p , pFace , }
		- SUCC   = { }

201 :	"pFace"
		- NEIGH  = { z , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

201 :	"p"
		- NEIGH  = { z , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

201 :	"z"
		- NEIGH  = { z , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

201 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { z , p , pFace , }
		- SUCC   = { }

203 :	"if"
		- NEIGH  = { < , pFace , if , }
		- PARENT = { }
		- CHILD  = { += , face , }
		- PRED   = { face , switch , }
		- SUCC   = { face , return , }

203 :	"pFace"
		- NEIGH  = { < , pFace , if , }
		- PARENT = { }
		- CHILD  = { += , face , }
		- PRED   = { face , switch , }
		- SUCC   = { face , return , }

203 :	"<"
		- NEIGH  = { < , pFace , if , }
		- PARENT = { }
		- CHILD  = { += , face , }
		- PRED   = { face , switch , }
		- SUCC   = { face , return , }

203 :	"face"
		- NEIGH  = { += , face , }
		- PARENT = { < , pFace , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

203 :	"+="
		- NEIGH  = { += , face , }
		- PARENT = { < , pFace , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"return"
		- NEIGH  = { face , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , pFace , if , }
		- SUCC   = { }

204 :	"face"
		- NEIGH  = { face , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , pFace , if , }
		- SUCC   = { }

207 :	"XYZtoFaceUV"
		- NEIGH  = { XYZtoFaceUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"pu"
		- NEIGH  = { pu , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

207 :	"pv"
		- NEIGH  = { pv , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

208 :	"face"
		- NEIGH  = { GetFace , p , face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pv , pu , p , face , ValidFaceXYZtoUV , }

208 :	"GetFace"
		- NEIGH  = { GetFace , p , face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pv , pu , p , face , ValidFaceXYZtoUV , }

208 :	"p"
		- NEIGH  = { GetFace , p , face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pv , pu , p , face , ValidFaceXYZtoUV , }

209 :	"ValidFaceXYZtoUV"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GetFace , p , face , }
		- SUCC   = { face , return , }

209 :	"face"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GetFace , p , face , }
		- SUCC   = { face , return , }

209 :	"p"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GetFace , p , face , }
		- SUCC   = { face , return , }

209 :	"pu"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GetFace , p , face , }
		- SUCC   = { face , return , }

209 :	"pv"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GetFace , p , face , }
		- SUCC   = { face , return , }

210 :	"return"
		- NEIGH  = { face , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- SUCC   = { }

210 :	"face"
		- NEIGH  = { face , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- SUCC   = { }

213 :	"XYZtoFaceUV"
		- NEIGH  = { XYZtoFaceUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

213 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

213 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

213 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

213 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

213 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

213 :	"puv"
		- NEIGH  = { puv , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"return"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"XYZtoFaceUV"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"p"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"&"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"*"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"puv"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"x"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"&"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"*"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"puv"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

214 :	"y"
		- NEIGH  = { x , puv , p , & , y , * , XYZtoFaceUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"FaceXYZtoUV"
		- NEIGH  = { FaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"face"
		- NEIGH  = { face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

217 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"pu"
		- NEIGH  = { pu , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

218 :	"pv"
		- NEIGH  = { pv , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

219 :	"pFace"
		- NEIGH  = { pFace , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { face , switch , }

220 :	"switch"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { break , z , y , x , p , pFace , }
		- PRED   = { pFace , }
		- SUCC   = { < , face , if , }

220 :	"face"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { break , z , y , x , p , pFace , }
		- PRED   = { pFace , }
		- SUCC   = { < , face , if , }

221 :	"pFace"
		- NEIGH  = { x , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

221 :	"p"
		- NEIGH  = { x , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

221 :	"x"
		- NEIGH  = { x , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

221 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , p , pFace , }
		- SUCC   = { }

222 :	"pFace"
		- NEIGH  = { y , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

222 :	"p"
		- NEIGH  = { y , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

222 :	"y"
		- NEIGH  = { y , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

222 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { y , p , pFace , }
		- SUCC   = { }

223 :	"pFace"
		- NEIGH  = { z , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

223 :	"p"
		- NEIGH  = { z , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

223 :	"z"
		- NEIGH  = { z , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

223 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { z , p , pFace , }
		- SUCC   = { }

224 :	"pFace"
		- NEIGH  = { x , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

224 :	"p"
		- NEIGH  = { x , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

224 :	"x"
		- NEIGH  = { x , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

224 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { x , p , pFace , }
		- SUCC   = { }

225 :	"pFace"
		- NEIGH  = { y , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

225 :	"p"
		- NEIGH  = { y , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

225 :	"y"
		- NEIGH  = { y , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

225 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { y , p , pFace , }
		- SUCC   = { }

226 :	"pFace"
		- NEIGH  = { z , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

226 :	"p"
		- NEIGH  = { z , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

226 :	"z"
		- NEIGH  = { z , p , pFace , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

226 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { z , p , pFace , }
		- SUCC   = { }

228 :	"if"
		- NEIGH  = { < , face , if , }
		- PARENT = { }
		- CHILD  = { >= , <= , pFace , if , }
		- PRED   = { face , switch , }
		- SUCC   = { pv , pu , p , face , ValidFaceXYZtoUV , }

228 :	"face"
		- NEIGH  = { < , face , if , }
		- PARENT = { }
		- CHILD  = { >= , <= , pFace , if , }
		- PRED   = { face , switch , }
		- SUCC   = { pv , pu , p , face , ValidFaceXYZtoUV , }

228 :	"<"
		- NEIGH  = { < , face , if , }
		- PARENT = { }
		- CHILD  = { >= , <= , pFace , if , }
		- PRED   = { face , switch , }
		- SUCC   = { pv , pu , p , face , ValidFaceXYZtoUV , }

229 :	"if"
		- NEIGH  = { <= , pFace , if , }
		- PARENT = { < , face , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

229 :	"pFace"
		- NEIGH  = { <= , pFace , if , }
		- PARENT = { < , face , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

229 :	"<="
		- NEIGH  = { <= , pFace , if , }
		- PARENT = { < , face , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

229 :	"return"
		- NEIGH  = { return , }
		- PARENT = { <= , pFace , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

231 :	"if"
		- NEIGH  = { >= , pFace , if , }
		- PARENT = { < , face , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

231 :	"pFace"
		- NEIGH  = { >= , pFace , if , }
		- PARENT = { < , face , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

231 :	">="
		- NEIGH  = { >= , pFace , if , }
		- PARENT = { < , face , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

231 :	"return"
		- NEIGH  = { return , }
		- PARENT = { >= , pFace , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

233 :	"ValidFaceXYZtoUV"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , face , if , }
		- SUCC   = { return , }

233 :	"face"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , face , if , }
		- SUCC   = { return , }

233 :	"p"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , face , if , }
		- SUCC   = { return , }

233 :	"pu"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , face , if , }
		- SUCC   = { return , }

233 :	"pv"
		- NEIGH  = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , face , if , }
		- SUCC   = { return , }

234 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pv , pu , p , face , ValidFaceXYZtoUV , }
		- SUCC   = { }

237 :	"FaceXYZtoUV"
		- NEIGH  = { FaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"face"
		- NEIGH  = { face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"p"
		- NEIGH  = { p , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

237 :	"puv"
		- NEIGH  = { puv , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"return"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"FaceXYZtoUV"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"face"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"p"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"&"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"*"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"puv"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"x"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"&"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"*"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"puv"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"y"
		- NEIGH  = { x , puv , y , * , & , p , face , FaceXYZtoUV , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"UVtoSphereXYZ"
		- NEIGH  = { UVtoSphereXYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"face"
		- NEIGH  = { face , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"u"
		- NEIGH  = { u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"v"
		- NEIGH  = { v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"PJ_XYZ"
		- NEIGH  = { PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

242 :	"xyz"
		- NEIGH  = { xyz , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"major_coord"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"/"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"sqrt"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"+"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"u"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"*"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"u"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"+"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"v"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"*"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

243 :	"v"
		- NEIGH  = { v , * , u , sqrt , major_coord , + , / , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , * , u , minor_coord_1 , }

244 :	"minor_coord_1"
		- NEIGH  = { major_coord , * , u , minor_coord_1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , * , u , sqrt , major_coord , + , / , }
		- SUCC   = { major_coord , * , v , minor_coord_2 , }

244 :	"u"
		- NEIGH  = { major_coord , * , u , minor_coord_1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , * , u , sqrt , major_coord , + , / , }
		- SUCC   = { major_coord , * , v , minor_coord_2 , }

244 :	"*"
		- NEIGH  = { major_coord , * , u , minor_coord_1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , * , u , sqrt , major_coord , + , / , }
		- SUCC   = { major_coord , * , v , minor_coord_2 , }

244 :	"major_coord"
		- NEIGH  = { major_coord , * , u , minor_coord_1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { v , * , u , sqrt , major_coord , + , / , }
		- SUCC   = { major_coord , * , v , minor_coord_2 , }

245 :	"minor_coord_2"
		- NEIGH  = { major_coord , * , v , minor_coord_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { major_coord , * , u , minor_coord_1 , }
		- SUCC   = { face , switch , }

245 :	"v"
		- NEIGH  = { major_coord , * , v , minor_coord_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { major_coord , * , u , minor_coord_1 , }
		- SUCC   = { face , switch , }

245 :	"*"
		- NEIGH  = { major_coord , * , v , minor_coord_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { major_coord , * , u , minor_coord_1 , }
		- SUCC   = { face , switch , }

245 :	"major_coord"
		- NEIGH  = { major_coord , * , v , minor_coord_2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { major_coord , * , u , minor_coord_1 , }
		- SUCC   = { face , switch , }

247 :	"switch"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { - , break , minor_coord_1 , major_coord , minor_coord_2 , z , y , x , xyz , }
		- PRED   = { major_coord , * , v , minor_coord_2 , }
		- SUCC   = { return , }

247 :	"face"
		- NEIGH  = { face , switch , }
		- PARENT = { }
		- CHILD  = { - , break , minor_coord_1 , major_coord , minor_coord_2 , z , y , x , xyz , }
		- PRED   = { major_coord , * , v , minor_coord_2 , }
		- SUCC   = { return , }

248 :	"xyz"
		- NEIGH  = { major_coord , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_1 , y , xyz , }

248 :	"x"
		- NEIGH  = { major_coord , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_1 , y , xyz , }

248 :	"major_coord"
		- NEIGH  = { major_coord , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_1 , y , xyz , }

249 :	"xyz"
		- NEIGH  = { minor_coord_1 , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , x , xyz , }
		- SUCC   = { minor_coord_2 , z , xyz , }

249 :	"y"
		- NEIGH  = { minor_coord_1 , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , x , xyz , }
		- SUCC   = { minor_coord_2 , z , xyz , }

249 :	"minor_coord_1"
		- NEIGH  = { minor_coord_1 , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , x , xyz , }
		- SUCC   = { minor_coord_2 , z , xyz , }

250 :	"xyz"
		- NEIGH  = { minor_coord_2 , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , y , xyz , }
		- SUCC   = { break , }

250 :	"z"
		- NEIGH  = { minor_coord_2 , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , y , xyz , }
		- SUCC   = { break , }

250 :	"minor_coord_2"
		- NEIGH  = { minor_coord_2 , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , y , xyz , }
		- SUCC   = { break , }

250 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , z , xyz , }
		- SUCC   = { }

251 :	"xyz"
		- NEIGH  = { minor_coord_1 , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , y , xyz , }

251 :	"x"
		- NEIGH  = { minor_coord_1 , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , y , xyz , }

251 :	"-"
		- NEIGH  = { minor_coord_1 , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , y , xyz , }

251 :	"minor_coord_1"
		- NEIGH  = { minor_coord_1 , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , y , xyz , }

252 :	"xyz"
		- NEIGH  = { major_coord , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , - , x , xyz , }
		- SUCC   = { minor_coord_2 , z , xyz , }

252 :	"y"
		- NEIGH  = { major_coord , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , - , x , xyz , }
		- SUCC   = { minor_coord_2 , z , xyz , }

252 :	"major_coord"
		- NEIGH  = { major_coord , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , - , x , xyz , }
		- SUCC   = { minor_coord_2 , z , xyz , }

253 :	"xyz"
		- NEIGH  = { minor_coord_2 , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , y , xyz , }
		- SUCC   = { break , }

253 :	"z"
		- NEIGH  = { minor_coord_2 , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , y , xyz , }
		- SUCC   = { break , }

253 :	"minor_coord_2"
		- NEIGH  = { minor_coord_2 , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , y , xyz , }
		- SUCC   = { break , }

253 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , z , xyz , }
		- SUCC   = { }

254 :	"xyz"
		- NEIGH  = { minor_coord_1 , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_2 , - , y , xyz , }

254 :	"x"
		- NEIGH  = { minor_coord_1 , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_2 , - , y , xyz , }

254 :	"-"
		- NEIGH  = { minor_coord_1 , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_2 , - , y , xyz , }

254 :	"minor_coord_1"
		- NEIGH  = { minor_coord_1 , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_2 , - , y , xyz , }

255 :	"xyz"
		- NEIGH  = { minor_coord_2 , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , - , x , xyz , }
		- SUCC   = { major_coord , z , xyz , }

255 :	"y"
		- NEIGH  = { minor_coord_2 , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , - , x , xyz , }
		- SUCC   = { major_coord , z , xyz , }

255 :	"-"
		- NEIGH  = { minor_coord_2 , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , - , x , xyz , }
		- SUCC   = { major_coord , z , xyz , }

255 :	"minor_coord_2"
		- NEIGH  = { minor_coord_2 , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , - , x , xyz , }
		- SUCC   = { major_coord , z , xyz , }

256 :	"xyz"
		- NEIGH  = { major_coord , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , - , y , xyz , }
		- SUCC   = { break , }

256 :	"z"
		- NEIGH  = { major_coord , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , - , y , xyz , }
		- SUCC   = { break , }

256 :	"major_coord"
		- NEIGH  = { major_coord , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , - , y , xyz , }
		- SUCC   = { break , }

256 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , z , xyz , }
		- SUCC   = { }

257 :	"xyz"
		- NEIGH  = { major_coord , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_2 , - , y , xyz , }

257 :	"x"
		- NEIGH  = { major_coord , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_2 , - , y , xyz , }

257 :	"-"
		- NEIGH  = { major_coord , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_2 , - , y , xyz , }

257 :	"major_coord"
		- NEIGH  = { major_coord , - , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_2 , - , y , xyz , }

258 :	"xyz"
		- NEIGH  = { minor_coord_2 , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , - , x , xyz , }
		- SUCC   = { minor_coord_1 , - , z , xyz , }

258 :	"y"
		- NEIGH  = { minor_coord_2 , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , - , x , xyz , }
		- SUCC   = { minor_coord_1 , - , z , xyz , }

258 :	"-"
		- NEIGH  = { minor_coord_2 , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , - , x , xyz , }
		- SUCC   = { minor_coord_1 , - , z , xyz , }

258 :	"minor_coord_2"
		- NEIGH  = { minor_coord_2 , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , - , x , xyz , }
		- SUCC   = { minor_coord_1 , - , z , xyz , }

259 :	"xyz"
		- NEIGH  = { minor_coord_1 , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , - , y , xyz , }
		- SUCC   = { break , }

259 :	"z"
		- NEIGH  = { minor_coord_1 , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , - , y , xyz , }
		- SUCC   = { break , }

259 :	"-"
		- NEIGH  = { minor_coord_1 , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , - , y , xyz , }
		- SUCC   = { break , }

259 :	"minor_coord_1"
		- NEIGH  = { minor_coord_1 , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , - , y , xyz , }
		- SUCC   = { break , }

259 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , - , z , xyz , }
		- SUCC   = { }

260 :	"xyz"
		- NEIGH  = { minor_coord_2 , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , - , y , xyz , }

260 :	"x"
		- NEIGH  = { minor_coord_2 , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , - , y , xyz , }

260 :	"minor_coord_2"
		- NEIGH  = { minor_coord_2 , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { major_coord , - , y , xyz , }

261 :	"xyz"
		- NEIGH  = { major_coord , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , x , xyz , }
		- SUCC   = { minor_coord_1 , - , z , xyz , }

261 :	"y"
		- NEIGH  = { major_coord , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , x , xyz , }
		- SUCC   = { minor_coord_1 , - , z , xyz , }

261 :	"-"
		- NEIGH  = { major_coord , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , x , xyz , }
		- SUCC   = { minor_coord_1 , - , z , xyz , }

261 :	"major_coord"
		- NEIGH  = { major_coord , - , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , x , xyz , }
		- SUCC   = { minor_coord_1 , - , z , xyz , }

262 :	"xyz"
		- NEIGH  = { minor_coord_1 , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , - , y , xyz , }
		- SUCC   = { break , }

262 :	"z"
		- NEIGH  = { minor_coord_1 , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , - , y , xyz , }
		- SUCC   = { break , }

262 :	"-"
		- NEIGH  = { minor_coord_1 , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , - , y , xyz , }
		- SUCC   = { break , }

262 :	"minor_coord_1"
		- NEIGH  = { minor_coord_1 , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , - , y , xyz , }
		- SUCC   = { break , }

262 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , - , z , xyz , }
		- SUCC   = { }

263 :	"xyz"
		- NEIGH  = { minor_coord_2 , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_1 , y , xyz , }

263 :	"x"
		- NEIGH  = { minor_coord_2 , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_1 , y , xyz , }

263 :	"minor_coord_2"
		- NEIGH  = { minor_coord_2 , x , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { minor_coord_1 , y , xyz , }

264 :	"xyz"
		- NEIGH  = { minor_coord_1 , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , x , xyz , }
		- SUCC   = { major_coord , - , z , xyz , }

264 :	"y"
		- NEIGH  = { minor_coord_1 , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , x , xyz , }
		- SUCC   = { major_coord , - , z , xyz , }

264 :	"minor_coord_1"
		- NEIGH  = { minor_coord_1 , y , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_2 , x , xyz , }
		- SUCC   = { major_coord , - , z , xyz , }

265 :	"xyz"
		- NEIGH  = { major_coord , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , y , xyz , }
		- SUCC   = { break , }

265 :	"z"
		- NEIGH  = { major_coord , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , y , xyz , }
		- SUCC   = { break , }

265 :	"-"
		- NEIGH  = { major_coord , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , y , xyz , }
		- SUCC   = { break , }

265 :	"major_coord"
		- NEIGH  = { major_coord , - , z , xyz , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { minor_coord_1 , y , xyz , }
		- SUCC   = { break , }

265 :	"break"
		- NEIGH  = { break , }
		- PARENT = { face , switch , }
		- CHILD  = { }
		- PRED   = { major_coord , - , z , xyz , }
		- SUCC   = { }

268 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { face , switch , }
		- SUCC   = { }

276 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"s2_forward"
		- NEIGH  = { s2_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

276 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

277 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

277 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

277 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

277 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

277 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

277 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

277 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

277 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

277 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

277 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lon , lat , }

278 :	"lat"
		- NEIGH  = { lon , lat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { != , es , P , if , }

278 :	"lon"
		- NEIGH  = { lon , lat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { != , es , P , if , }

283 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PRED   = { lon , lat , }
		- SUCC   = { lam , lp , lon , }

283 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PRED   = { lon , lat , }
		- SUCC   = { lam , lp , lon , }

283 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PRED   = { lon , lat , }
		- SUCC   = { lam , lp , lon , }

283 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PRED   = { lon , lat , }
		- SUCC   = { lam , lp , lon , }

284 :	"lat"
		- NEIGH  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"atan"
		- NEIGH  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"Q"
		- NEIGH  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"one_minus_f_squared"
		- NEIGH  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"*"
		- NEIGH  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"tan"
		- NEIGH  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"lp"
		- NEIGH  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

284 :	"phi"
		- NEIGH  = { phi , tan , * , one_minus_f_squared , Q , lp , atan , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

286 :	"lat"
		- NEIGH  = { phi , lp , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

286 :	"lp"
		- NEIGH  = { phi , lp , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

286 :	"phi"
		- NEIGH  = { phi , lp , lat , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

288 :	"lon"
		- NEIGH  = { lam , lp , lon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { z , y , x , }

288 :	"lp"
		- NEIGH  = { lam , lp , lon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { z , y , x , }

288 :	"lam"
		- NEIGH  = { lam , lp , lon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { z , y , x , }

291 :	"x"
		- NEIGH  = { z , y , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , lon , }
		- SUCC   = { coslat , sinlat , }

291 :	"y"
		- NEIGH  = { z , y , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , lon , }
		- SUCC   = { coslat , sinlat , }

291 :	"z"
		- NEIGH  = { z , y , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , lon , }
		- SUCC   = { coslat , sinlat , }

292 :	"sinlat"
		- NEIGH  = { coslat , sinlat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , y , x , }
		- SUCC   = { coslon , sinlon , }

292 :	"coslat"
		- NEIGH  = { coslat , sinlat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , y , x , }
		- SUCC   = { coslon , sinlon , }

293 :	"sinlon"
		- NEIGH  = { coslon , sinlon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslat , sinlat , }
		- SUCC   = { lat , sin , sinlat , }

293 :	"coslon"
		- NEIGH  = { coslon , sinlon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslat , sinlat , }
		- SUCC   = { lat , sin , sinlat , }

295 :	"sinlat"
		- NEIGH  = { lat , sin , sinlat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslon , sinlon , }
		- SUCC   = { lat , cos , coslat , }

295 :	"sin"
		- NEIGH  = { lat , sin , sinlat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslon , sinlon , }
		- SUCC   = { lat , cos , coslat , }

295 :	"lat"
		- NEIGH  = { lat , sin , sinlat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslon , sinlon , }
		- SUCC   = { lat , cos , coslat , }

296 :	"coslat"
		- NEIGH  = { lat , cos , coslat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , sin , sinlat , }
		- SUCC   = { sin , lon , sinlon , }

296 :	"cos"
		- NEIGH  = { lat , cos , coslat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , sin , sinlat , }
		- SUCC   = { sin , lon , sinlon , }

296 :	"lat"
		- NEIGH  = { lat , cos , coslat , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , sin , sinlat , }
		- SUCC   = { sin , lon , sinlon , }

297 :	"sinlon"
		- NEIGH  = { sin , lon , sinlon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , cos , coslat , }
		- SUCC   = { lon , cos , coslon , }

297 :	"sin"
		- NEIGH  = { sin , lon , sinlon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , cos , coslat , }
		- SUCC   = { lon , cos , coslon , }

297 :	"lon"
		- NEIGH  = { sin , lon , sinlon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lat , cos , coslat , }
		- SUCC   = { lon , cos , coslon , }

298 :	"coslon"
		- NEIGH  = { lon , cos , coslon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , lon , sinlon , }
		- SUCC   = { coslat , coslon , * , x , }

298 :	"cos"
		- NEIGH  = { lon , cos , coslon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , lon , sinlon , }
		- SUCC   = { coslat , coslon , * , x , }

298 :	"lon"
		- NEIGH  = { lon , cos , coslon , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sin , lon , sinlon , }
		- SUCC   = { coslat , coslon , * , x , }

299 :	"x"
		- NEIGH  = { coslat , coslon , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , cos , coslon , }
		- SUCC   = { sinlon , coslat , * , y , }

299 :	"coslat"
		- NEIGH  = { coslat , coslon , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , cos , coslon , }
		- SUCC   = { sinlon , coslat , * , y , }

299 :	"*"
		- NEIGH  = { coslat , coslon , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , cos , coslon , }
		- SUCC   = { sinlon , coslat , * , y , }

299 :	"coslon"
		- NEIGH  = { coslat , coslon , * , x , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lon , cos , coslon , }
		- SUCC   = { sinlon , coslat , * , y , }

300 :	"y"
		- NEIGH  = { sinlon , coslat , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslat , coslon , * , x , }
		- SUCC   = { sinlat , z , }

300 :	"coslat"
		- NEIGH  = { sinlon , coslat , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslat , coslon , * , x , }
		- SUCC   = { sinlat , z , }

300 :	"*"
		- NEIGH  = { sinlon , coslat , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslat , coslon , * , x , }
		- SUCC   = { sinlat , z , }

300 :	"sinlon"
		- NEIGH  = { sinlon , coslat , * , y , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coslat , coslon , * , x , }
		- SUCC   = { sinlat , z , }

301 :	"z"
		- NEIGH  = { sinlat , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlon , coslat , * , y , }
		- SUCC   = { z , y , x , spherePoint , PJ_XYZ , }

301 :	"sinlat"
		- NEIGH  = { sinlat , z , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlon , coslat , * , y , }
		- SUCC   = { z , y , x , spherePoint , PJ_XYZ , }

303 :	"PJ_XYZ"
		- NEIGH  = { z , y , x , spherePoint , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlat , z , }
		- SUCC   = { uvCoords , PJ_XY , }

303 :	"spherePoint"
		- NEIGH  = { z , y , x , spherePoint , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlat , z , }
		- SUCC   = { uvCoords , PJ_XY , }

303 :	"x"
		- NEIGH  = { z , y , x , spherePoint , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlat , z , }
		- SUCC   = { uvCoords , PJ_XY , }

303 :	"y"
		- NEIGH  = { z , y , x , spherePoint , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlat , z , }
		- SUCC   = { uvCoords , PJ_XY , }

303 :	"z"
		- NEIGH  = { z , y , x , spherePoint , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinlat , z , }
		- SUCC   = { uvCoords , PJ_XY , }

304 :	"PJ_XY"
		- NEIGH  = { uvCoords , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , y , x , spherePoint , PJ_XYZ , }
		- SUCC   = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }

304 :	"uvCoords"
		- NEIGH  = { uvCoords , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , y , x , spherePoint , PJ_XYZ , }
		- SUCC   = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }

306 :	"ValidFaceXYZtoUV"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

306 :	"Q"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

306 :	"face"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

306 :	"spherePoint"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

306 :	"&"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

306 :	"uvCoords"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

306 :	"x"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

306 :	"&"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

306 :	"uvCoords"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

306 :	"y"
		- NEIGH  = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { uvCoords , PJ_XY , }
		- SUCC   = { Q , x , UVtoST , uvCoords , s , }

307 :	"s"
		- NEIGH  = { Q , x , UVtoST , uvCoords , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- SUCC   = { Q , uvCoords , y , UVtoST , t , }

307 :	"UVtoST"
		- NEIGH  = { Q , x , UVtoST , uvCoords , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- SUCC   = { Q , uvCoords , y , UVtoST , t , }

307 :	"uvCoords"
		- NEIGH  = { Q , x , UVtoST , uvCoords , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- SUCC   = { Q , uvCoords , y , UVtoST , t , }

307 :	"x"
		- NEIGH  = { Q , x , UVtoST , uvCoords , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- SUCC   = { Q , uvCoords , y , UVtoST , t , }

307 :	"Q"
		- NEIGH  = { Q , x , UVtoST , uvCoords , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- SUCC   = { Q , uvCoords , y , UVtoST , t , }

307 :	"UVtoST"
		- NEIGH  = { Q , x , UVtoST , uvCoords , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , x , uvCoords , Q , & , spherePoint , face , ValidFaceXYZtoUV , }
		- SUCC   = { Q , uvCoords , y , UVtoST , t , }

308 :	"t"
		- NEIGH  = { Q , uvCoords , y , UVtoST , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , x , UVtoST , uvCoords , s , }
		- SUCC   = { t , s , return , }

308 :	"UVtoST"
		- NEIGH  = { Q , uvCoords , y , UVtoST , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , x , UVtoST , uvCoords , s , }
		- SUCC   = { t , s , return , }

308 :	"uvCoords"
		- NEIGH  = { Q , uvCoords , y , UVtoST , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , x , UVtoST , uvCoords , s , }
		- SUCC   = { t , s , return , }

308 :	"y"
		- NEIGH  = { Q , uvCoords , y , UVtoST , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , x , UVtoST , uvCoords , s , }
		- SUCC   = { t , s , return , }

308 :	"Q"
		- NEIGH  = { Q , uvCoords , y , UVtoST , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , x , UVtoST , uvCoords , s , }
		- SUCC   = { t , s , return , }

308 :	"UVtoST"
		- NEIGH  = { Q , uvCoords , y , UVtoST , t , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , x , UVtoST , uvCoords , s , }
		- SUCC   = { t , s , return , }

309 :	"return"
		- NEIGH  = { t , s , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , uvCoords , y , UVtoST , t , }
		- SUCC   = { }

309 :	"s"
		- NEIGH  = { t , s , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , uvCoords , y , UVtoST , t , }
		- SUCC   = { }

309 :	"t"
		- NEIGH  = { t , s , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , uvCoords , y , UVtoST , t , }
		- SUCC   = { }

312 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"s2_inverse"
		- NEIGH  = { s2_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

313 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

313 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

314 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

314 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

314 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

314 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

314 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

314 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

314 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

314 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

314 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

314 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { UVtoST , Q , x , xy , STtoUV , u , }

317 :	"u"
		- NEIGH  = { UVtoST , Q , x , xy , STtoUV , u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { UVtoST , Q , xy , STtoUV , y , v , }

317 :	"STtoUV"
		- NEIGH  = { UVtoST , Q , x , xy , STtoUV , u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { UVtoST , Q , xy , STtoUV , y , v , }

317 :	"xy"
		- NEIGH  = { UVtoST , Q , x , xy , STtoUV , u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { UVtoST , Q , xy , STtoUV , y , v , }

317 :	"x"
		- NEIGH  = { UVtoST , Q , x , xy , STtoUV , u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { UVtoST , Q , xy , STtoUV , y , v , }

317 :	"Q"
		- NEIGH  = { UVtoST , Q , x , xy , STtoUV , u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { UVtoST , Q , xy , STtoUV , y , v , }

317 :	"UVtoST"
		- NEIGH  = { UVtoST , Q , x , xy , STtoUV , u , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { UVtoST , Q , xy , STtoUV , y , v , }

318 :	"v"
		- NEIGH  = { UVtoST , Q , xy , STtoUV , y , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UVtoST , Q , x , xy , STtoUV , u , }
		- SUCC   = { sphereCoords , PJ_XYZ , }

318 :	"STtoUV"
		- NEIGH  = { UVtoST , Q , xy , STtoUV , y , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UVtoST , Q , x , xy , STtoUV , u , }
		- SUCC   = { sphereCoords , PJ_XYZ , }

318 :	"xy"
		- NEIGH  = { UVtoST , Q , xy , STtoUV , y , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UVtoST , Q , x , xy , STtoUV , u , }
		- SUCC   = { sphereCoords , PJ_XYZ , }

318 :	"y"
		- NEIGH  = { UVtoST , Q , xy , STtoUV , y , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UVtoST , Q , x , xy , STtoUV , u , }
		- SUCC   = { sphereCoords , PJ_XYZ , }

318 :	"Q"
		- NEIGH  = { UVtoST , Q , xy , STtoUV , y , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UVtoST , Q , x , xy , STtoUV , u , }
		- SUCC   = { sphereCoords , PJ_XYZ , }

318 :	"UVtoST"
		- NEIGH  = { UVtoST , Q , xy , STtoUV , y , v , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UVtoST , Q , x , xy , STtoUV , u , }
		- SUCC   = { sphereCoords , PJ_XYZ , }

320 :	"PJ_XYZ"
		- NEIGH  = { sphereCoords , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UVtoST , Q , xy , STtoUV , y , v , }
		- SUCC   = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }

320 :	"sphereCoords"
		- NEIGH  = { sphereCoords , PJ_XYZ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UVtoST , Q , xy , STtoUV , y , v , }
		- SUCC   = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }

321 :	"UVtoSphereXYZ"
		- NEIGH  = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , PJ_XYZ , }
		- SUCC   = { x , sphereCoords , q , }

321 :	"Q"
		- NEIGH  = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , PJ_XYZ , }
		- SUCC   = { x , sphereCoords , q , }

321 :	"face"
		- NEIGH  = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , PJ_XYZ , }
		- SUCC   = { x , sphereCoords , q , }

321 :	"u"
		- NEIGH  = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , PJ_XYZ , }
		- SUCC   = { x , sphereCoords , q , }

321 :	"v"
		- NEIGH  = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , PJ_XYZ , }
		- SUCC   = { x , sphereCoords , q , }

321 :	"&"
		- NEIGH  = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , PJ_XYZ , }
		- SUCC   = { x , sphereCoords , q , }

321 :	"sphereCoords"
		- NEIGH  = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , PJ_XYZ , }
		- SUCC   = { x , sphereCoords , q , }

322 :	"q"
		- NEIGH  = { x , sphereCoords , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- SUCC   = { y , sphereCoords , r , }

322 :	"sphereCoords"
		- NEIGH  = { x , sphereCoords , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- SUCC   = { y , sphereCoords , r , }

322 :	"x"
		- NEIGH  = { x , sphereCoords , q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sphereCoords , u , v , UVtoSphereXYZ , face , & , Q , }
		- SUCC   = { y , sphereCoords , r , }

323 :	"r"
		- NEIGH  = { y , sphereCoords , r , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , sphereCoords , q , }
		- SUCC   = { z , sphereCoords , s , }

323 :	"sphereCoords"
		- NEIGH  = { y , sphereCoords , r , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , sphereCoords , q , }
		- SUCC   = { z , sphereCoords , s , }

323 :	"y"
		- NEIGH  = { y , sphereCoords , r , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { x , sphereCoords , q , }
		- SUCC   = { z , sphereCoords , s , }

324 :	"s"
		- NEIGH  = { z , sphereCoords , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , sphereCoords , r , }
		- SUCC   = { M_HALFPI , phi , s , - , acos , lp , }

324 :	"sphereCoords"
		- NEIGH  = { z , sphereCoords , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , sphereCoords , r , }
		- SUCC   = { M_HALFPI , phi , s , - , acos , lp , }

324 :	"z"
		- NEIGH  = { z , sphereCoords , s , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { y , sphereCoords , r , }
		- SUCC   = { M_HALFPI , phi , s , - , acos , lp , }

327 :	"lp"
		- NEIGH  = { M_HALFPI , phi , s , - , acos , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sphereCoords , s , }
		- SUCC   = { r , lam , q , atan2 , lp , }

327 :	"phi"
		- NEIGH  = { M_HALFPI , phi , s , - , acos , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sphereCoords , s , }
		- SUCC   = { r , lam , q , atan2 , lp , }

327 :	"acos"
		- NEIGH  = { M_HALFPI , phi , s , - , acos , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sphereCoords , s , }
		- SUCC   = { r , lam , q , atan2 , lp , }

327 :	"-"
		- NEIGH  = { M_HALFPI , phi , s , - , acos , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sphereCoords , s , }
		- SUCC   = { r , lam , q , atan2 , lp , }

327 :	"s"
		- NEIGH  = { M_HALFPI , phi , s , - , acos , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sphereCoords , s , }
		- SUCC   = { r , lam , q , atan2 , lp , }

327 :	"-"
		- NEIGH  = { M_HALFPI , phi , s , - , acos , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sphereCoords , s , }
		- SUCC   = { r , lam , q , atan2 , lp , }

327 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , phi , s , - , acos , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { z , sphereCoords , s , }
		- SUCC   = { r , lam , q , atan2 , lp , }

328 :	"lp"
		- NEIGH  = { r , lam , q , atan2 , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , phi , s , - , acos , lp , }
		- SUCC   = { != , es , P , if , }

328 :	"lam"
		- NEIGH  = { r , lam , q , atan2 , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , phi , s , - , acos , lp , }
		- SUCC   = { != , es , P , if , }

328 :	"atan2"
		- NEIGH  = { r , lam , q , atan2 , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , phi , s , - , acos , lp , }
		- SUCC   = { != , es , P , if , }

328 :	"r"
		- NEIGH  = { r , lam , q , atan2 , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , phi , s , - , acos , lp , }
		- SUCC   = { != , es , P , if , }

328 :	"q"
		- NEIGH  = { r , lam , q , atan2 , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { M_HALFPI , phi , s , - , acos , lp , }
		- SUCC   = { != , es , P , if , }

332 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { if , - , one_minus_f , atan , one_minus_f_squared , + , * , sqrt , b , P , tan , / , invert_sign , phi , a_squared , lp , tanphi , < , Q , xa , }
		- PRED   = { r , lam , q , atan2 , lp , }
		- SUCC   = { lp , return , }

332 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { if , - , one_minus_f , atan , one_minus_f_squared , + , * , sqrt , b , P , tan , / , invert_sign , phi , a_squared , lp , tanphi , < , Q , xa , }
		- PRED   = { r , lam , q , atan2 , lp , }
		- SUCC   = { lp , return , }

332 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { if , - , one_minus_f , atan , one_minus_f_squared , + , * , sqrt , b , P , tan , / , invert_sign , phi , a_squared , lp , tanphi , < , Q , xa , }
		- PRED   = { r , lam , q , atan2 , lp , }
		- SUCC   = { lp , return , }

332 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { if , - , one_minus_f , atan , one_minus_f_squared , + , * , sqrt , b , P , tan , / , invert_sign , phi , a_squared , lp , tanphi , < , Q , xa , }
		- PRED   = { r , lam , q , atan2 , lp , }
		- SUCC   = { lp , return , }

333 :	"invert_sign"
		- NEIGH  = { invert_sign , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xa , tanphi , }

334 :	"tanphi"
		- NEIGH  = { xa , tanphi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { invert_sign , }
		- SUCC   = { < , phi , lp , invert_sign , }

334 :	"xa"
		- NEIGH  = { xa , tanphi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { invert_sign , }
		- SUCC   = { < , phi , lp , invert_sign , }

335 :	"invert_sign"
		- NEIGH  = { < , phi , lp , invert_sign , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { xa , tanphi , }
		- SUCC   = { phi , lp , tan , tanphi , }

335 :	"lp"
		- NEIGH  = { < , phi , lp , invert_sign , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { xa , tanphi , }
		- SUCC   = { phi , lp , tan , tanphi , }

335 :	"phi"
		- NEIGH  = { < , phi , lp , invert_sign , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { xa , tanphi , }
		- SUCC   = { phi , lp , tan , tanphi , }

335 :	"<"
		- NEIGH  = { < , phi , lp , invert_sign , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { xa , tanphi , }
		- SUCC   = { phi , lp , tan , tanphi , }

336 :	"tanphi"
		- NEIGH  = { phi , lp , tan , tanphi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { < , phi , lp , invert_sign , }
		- SUCC   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }

336 :	"tan"
		- NEIGH  = { phi , lp , tan , tanphi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { < , phi , lp , invert_sign , }
		- SUCC   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }

336 :	"lp"
		- NEIGH  = { phi , lp , tan , tanphi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { < , phi , lp , invert_sign , }
		- SUCC   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }

336 :	"phi"
		- NEIGH  = { phi , lp , tan , tanphi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { < , phi , lp , invert_sign , }
		- SUCC   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }

337 :	"xa"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"P"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"b"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"/"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"sqrt"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"tanphi"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"*"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"tanphi"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"+"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"Q"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

337 :	"one_minus_f_squared"
		- NEIGH  = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { phi , lp , tan , tanphi , }
		- SUCC   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }

338 :	"lp"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"phi"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"atan"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"sqrt"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"Q"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"a_squared"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"-"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"xa"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"*"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"xa"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"/"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"Q"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"one_minus_f"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"*"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

338 :	"xa"
		- NEIGH  = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { + , * , tanphi , Q , sqrt , / , P , one_minus_f_squared , b , xa , }
		- SUCC   = { invert_sign , if , }

339 :	"if"
		- NEIGH  = { invert_sign , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { - , phi , lp , }
		- PRED   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- SUCC   = { }

339 :	"invert_sign"
		- NEIGH  = { invert_sign , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { - , phi , lp , }
		- PRED   = { xa , - , * , a_squared , sqrt , Q , one_minus_f , lp , atan , / , phi , }
		- SUCC   = { }

340 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { invert_sign , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { invert_sign , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"-"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { invert_sign , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"lp"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { invert_sign , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"phi"
		- NEIGH  = { - , phi , lp , }
		- PARENT = { invert_sign , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

344 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

344 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

347 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

347 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

347 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

347 :	"s2"
		- NEIGH  = { s2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

348 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

348 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

348 :	"Q"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

348 :	"static_cast"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

348 :	"<"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

348 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

348 :	"*"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

348 :	">"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

348 :	"calloc"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

348 :	"pj_opaque"
		- NEIGH  = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { Q , == , if , }

349 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

349 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

349 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PRED   = { > , calloc , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

350 :	"return"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

350 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

350 :	"P"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

350 :	"PROJ_ERR_OTHER"
		- NEIGH  = { PROJ_ERR_OTHER , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

351 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }

351 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }

351 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }

354 :	"PROJVALUE"
		- NEIGH  = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { maybeUVtoST , != , s , if , }

354 :	"maybeUVtoST"
		- NEIGH  = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { maybeUVtoST , != , s , if , }

354 :	"pj_param"
		- NEIGH  = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { maybeUVtoST , != , s , if , }

354 :	"P"
		- NEIGH  = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { maybeUVtoST , != , s , if , }

354 :	"ctx"
		- NEIGH  = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { maybeUVtoST , != , s , if , }

354 :	"P"
		- NEIGH  = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { maybeUVtoST , != , s , if , }

354 :	"params"
		- NEIGH  = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { maybeUVtoST , != , s , if , }

355 :	"if"
		- NEIGH  = { maybeUVtoST , != , s , if , }
		- PARENT = { }
		- CHILD  = { Quadratic , s , & , Q , UVtoST , at , maybeUVtoST , out_of_range , std , catch , stringToS2ProjectionType , }
		- PRED   = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- SUCC   = { PJ_IO_UNITS_RADIANS , left , P , }

355 :	"!="
		- NEIGH  = { maybeUVtoST , != , s , if , }
		- PARENT = { }
		- CHILD  = { Quadratic , s , & , Q , UVtoST , at , maybeUVtoST , out_of_range , std , catch , stringToS2ProjectionType , }
		- PRED   = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- SUCC   = { PJ_IO_UNITS_RADIANS , left , P , }

355 :	"maybeUVtoST"
		- NEIGH  = { maybeUVtoST , != , s , if , }
		- PARENT = { }
		- CHILD  = { Quadratic , s , & , Q , UVtoST , at , maybeUVtoST , out_of_range , std , catch , stringToS2ProjectionType , }
		- PRED   = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- SUCC   = { PJ_IO_UNITS_RADIANS , left , P , }

355 :	"s"
		- NEIGH  = { maybeUVtoST , != , s , if , }
		- PARENT = { }
		- CHILD  = { Quadratic , s , & , Q , UVtoST , at , maybeUVtoST , out_of_range , std , catch , stringToS2ProjectionType , }
		- PRED   = { params , ctx , pj_param , maybeUVtoST , P , PROJVALUE , }
		- SUCC   = { PJ_IO_UNITS_RADIANS , left , P , }

357 :	"Q"
		- NEIGH  = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , std , out_of_range , catch , }

357 :	"UVtoST"
		- NEIGH  = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , std , out_of_range , catch , }

357 :	"stringToS2ProjectionType"
		- NEIGH  = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , std , out_of_range , catch , }

357 :	"at"
		- NEIGH  = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , std , out_of_range , catch , }

357 :	"maybeUVtoST"
		- NEIGH  = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , std , out_of_range , catch , }

357 :	"s"
		- NEIGH  = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , std , out_of_range , catch , }

358 :	"catch"
		- NEIGH  = { & , std , out_of_range , catch , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- SUCC   = { }

358 :	"std"
		- NEIGH  = { & , std , out_of_range , catch , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- SUCC   = { }

358 :	"out_of_range"
		- NEIGH  = { & , std , out_of_range , catch , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- SUCC   = { }

358 :	"&"
		- NEIGH  = { & , std , out_of_range , catch , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { P , _ , pj_default_destructor , PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , return , proj_log_error , }
		- PRED   = { s , Q , UVtoST , at , maybeUVtoST , stringToS2ProjectionType , }
		- SUCC   = { }

359 :	"proj_log_error"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { & , std , out_of_range , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

359 :	"P"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { & , std , out_of_range , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

359 :	"_"
		- NEIGH  = { _ , P , proj_log_error , }
		- PARENT = { & , std , out_of_range , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }

360 :	"return"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { & , std , out_of_range , catch , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

360 :	"pj_default_destructor"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { & , std , out_of_range , catch , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

360 :	"P"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { & , std , out_of_range , catch , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

360 :	"PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE"
		- NEIGH  = { PROJ_ERR_INVALID_OP_ILLEGAL_ARG_VALUE , P , pj_default_destructor , return , }
		- PARENT = { & , std , out_of_range , catch , }
		- CHILD  = { }
		- PRED   = { _ , P , proj_log_error , }
		- SUCC   = { }

363 :	"Q"
		- NEIGH  = { Quadratic , UVtoST , Q , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

363 :	"UVtoST"
		- NEIGH  = { Quadratic , UVtoST , Q , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

363 :	"Quadratic"
		- NEIGH  = { Quadratic , UVtoST , Q , }
		- PARENT = { maybeUVtoST , != , s , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

366 :	"P"
		- NEIGH  = { PJ_IO_UNITS_RADIANS , left , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { maybeUVtoST , != , s , if , }
		- SUCC   = { right , PJ_IO_UNITS_PROJECTED , P , }

366 :	"left"
		- NEIGH  = { PJ_IO_UNITS_RADIANS , left , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { maybeUVtoST , != , s , if , }
		- SUCC   = { right , PJ_IO_UNITS_PROJECTED , P , }

366 :	"PJ_IO_UNITS_RADIANS"
		- NEIGH  = { PJ_IO_UNITS_RADIANS , left , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { maybeUVtoST , != , s , if , }
		- SUCC   = { right , PJ_IO_UNITS_PROJECTED , P , }

367 :	"P"
		- NEIGH  = { right , PJ_IO_UNITS_PROJECTED , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_IO_UNITS_RADIANS , left , P , }
		- SUCC   = { lam0 , - , from_greenwich , P , }

367 :	"right"
		- NEIGH  = { right , PJ_IO_UNITS_PROJECTED , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_IO_UNITS_RADIANS , left , P , }
		- SUCC   = { lam0 , - , from_greenwich , P , }

367 :	"PJ_IO_UNITS_PROJECTED"
		- NEIGH  = { right , PJ_IO_UNITS_PROJECTED , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PJ_IO_UNITS_RADIANS , left , P , }
		- SUCC   = { lam0 , - , from_greenwich , P , }

368 :	"P"
		- NEIGH  = { lam0 , - , from_greenwich , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , PJ_IO_UNITS_PROJECTED , P , }
		- SUCC   = { s2_inverse , inv , P , }

368 :	"from_greenwich"
		- NEIGH  = { lam0 , - , from_greenwich , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , PJ_IO_UNITS_PROJECTED , P , }
		- SUCC   = { s2_inverse , inv , P , }

368 :	"-"
		- NEIGH  = { lam0 , - , from_greenwich , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , PJ_IO_UNITS_PROJECTED , P , }
		- SUCC   = { s2_inverse , inv , P , }

368 :	"P"
		- NEIGH  = { lam0 , - , from_greenwich , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , PJ_IO_UNITS_PROJECTED , P , }
		- SUCC   = { s2_inverse , inv , P , }

368 :	"lam0"
		- NEIGH  = { lam0 , - , from_greenwich , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { right , PJ_IO_UNITS_PROJECTED , P , }
		- SUCC   = { s2_inverse , inv , P , }

370 :	"P"
		- NEIGH  = { s2_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam0 , - , from_greenwich , P , }
		- SUCC   = { s2_forward , fwd , P , }

370 :	"inv"
		- NEIGH  = { s2_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam0 , - , from_greenwich , P , }
		- SUCC   = { s2_forward , fwd , P , }

370 :	"s2_inverse"
		- NEIGH  = { s2_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam0 , - , from_greenwich , P , }
		- SUCC   = { s2_forward , fwd , P , }

371 :	"P"
		- NEIGH  = { s2_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s2_inverse , inv , P , }
		- SUCC   = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }

371 :	"fwd"
		- NEIGH  = { s2_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s2_inverse , inv , P , }
		- SUCC   = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }

371 :	"s2_forward"
		- NEIGH  = { s2_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { s2_inverse , inv , P , }
		- SUCC   = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }

374 :	"if"
		- NEIGH  = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , - , / , <= , M_FORTPI , phi0 , if , FACE_TOP , face , P , Q , }
		- PRED   = { s2_forward , fwd , P , }
		- SUCC   = { != , es , P , if , }

374 :	"P"
		- NEIGH  = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , - , / , <= , M_FORTPI , phi0 , if , FACE_TOP , face , P , Q , }
		- PRED   = { s2_forward , fwd , P , }
		- SUCC   = { != , es , P , if , }

374 :	"phi0"
		- NEIGH  = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , - , / , <= , M_FORTPI , phi0 , if , FACE_TOP , face , P , Q , }
		- PRED   = { s2_forward , fwd , P , }
		- SUCC   = { != , es , P , if , }

374 :	">="
		- NEIGH  = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , - , / , <= , M_FORTPI , phi0 , if , FACE_TOP , face , P , Q , }
		- PRED   = { s2_forward , fwd , P , }
		- SUCC   = { != , es , P , if , }

374 :	"M_HALFPI"
		- NEIGH  = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , - , / , <= , M_FORTPI , phi0 , if , FACE_TOP , face , P , Q , }
		- PRED   = { s2_forward , fwd , P , }
		- SUCC   = { != , es , P , if , }

374 :	"-"
		- NEIGH  = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , - , / , <= , M_FORTPI , phi0 , if , FACE_TOP , face , P , Q , }
		- PRED   = { s2_forward , fwd , P , }
		- SUCC   = { != , es , P , if , }

374 :	"M_FORTPI"
		- NEIGH  = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , - , / , <= , M_FORTPI , phi0 , if , FACE_TOP , face , P , Q , }
		- PRED   = { s2_forward , fwd , P , }
		- SUCC   = { != , es , P , if , }

374 :	"/"
		- NEIGH  = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , - , / , <= , M_FORTPI , phi0 , if , FACE_TOP , face , P , Q , }
		- PRED   = { s2_forward , fwd , P , }
		- SUCC   = { != , es , P , if , }

375 :	"Q"
		- NEIGH  = { FACE_TOP , face , Q , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

375 :	"face"
		- NEIGH  = { FACE_TOP , face , Q , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

375 :	"FACE_TOP"
		- NEIGH  = { FACE_TOP , face , Q , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

376 :	"if"
		- NEIGH  = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { lam0 , P , fabs , M_FORTPI , face , if , <= , FACE_BOTTOM , Q , }
		- PRED   = { }
		- SUCC   = { }

376 :	"P"
		- NEIGH  = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { lam0 , P , fabs , M_FORTPI , face , if , <= , FACE_BOTTOM , Q , }
		- PRED   = { }
		- SUCC   = { }

376 :	"phi0"
		- NEIGH  = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { lam0 , P , fabs , M_FORTPI , face , if , <= , FACE_BOTTOM , Q , }
		- PRED   = { }
		- SUCC   = { }

376 :	"<="
		- NEIGH  = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { lam0 , P , fabs , M_FORTPI , face , if , <= , FACE_BOTTOM , Q , }
		- PRED   = { }
		- SUCC   = { }

376 :	"-"
		- NEIGH  = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { lam0 , P , fabs , M_FORTPI , face , if , <= , FACE_BOTTOM , Q , }
		- PRED   = { }
		- SUCC   = { }

376 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { lam0 , P , fabs , M_FORTPI , face , if , <= , FACE_BOTTOM , Q , }
		- PRED   = { }
		- SUCC   = { }

376 :	"-"
		- NEIGH  = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { lam0 , P , fabs , M_FORTPI , face , if , <= , FACE_BOTTOM , Q , }
		- PRED   = { }
		- SUCC   = { }

376 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { lam0 , P , fabs , M_FORTPI , face , if , <= , FACE_BOTTOM , Q , }
		- PRED   = { }
		- SUCC   = { }

376 :	"/"
		- NEIGH  = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- PARENT = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- CHILD  = { lam0 , P , fabs , M_FORTPI , face , if , <= , FACE_BOTTOM , Q , }
		- PRED   = { }
		- SUCC   = { }

377 :	"Q"
		- NEIGH  = { FACE_BOTTOM , face , Q , }
		- PARENT = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

377 :	"face"
		- NEIGH  = { FACE_BOTTOM , face , Q , }
		- PARENT = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

377 :	"FACE_BOTTOM"
		- NEIGH  = { FACE_BOTTOM , face , Q , }
		- PARENT = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

378 :	"if"
		- NEIGH  = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- PARENT = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- CHILD  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , face , FACE_FRONT , Q , }
		- PRED   = { }
		- SUCC   = { }

378 :	"fabs"
		- NEIGH  = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- PARENT = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- CHILD  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , face , FACE_FRONT , Q , }
		- PRED   = { }
		- SUCC   = { }

378 :	"P"
		- NEIGH  = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- PARENT = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- CHILD  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , face , FACE_FRONT , Q , }
		- PRED   = { }
		- SUCC   = { }

378 :	"lam0"
		- NEIGH  = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- PARENT = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- CHILD  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , face , FACE_FRONT , Q , }
		- PRED   = { }
		- SUCC   = { }

378 :	"<="
		- NEIGH  = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- PARENT = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- CHILD  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , face , FACE_FRONT , Q , }
		- PRED   = { }
		- SUCC   = { }

378 :	"M_FORTPI"
		- NEIGH  = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- PARENT = { M_HALFPI , - , / , <= , M_FORTPI , if , phi0 , P , }
		- CHILD  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , face , FACE_FRONT , Q , }
		- PRED   = { }
		- SUCC   = { }

379 :	"Q"
		- NEIGH  = { face , FACE_FRONT , Q , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

379 :	"face"
		- NEIGH  = { face , FACE_FRONT , Q , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

379 :	"FACE_FRONT"
		- NEIGH  = { face , FACE_FRONT , Q , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

380 :	"if"
		- NEIGH  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { FACE_BACK , FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PRED   = { }
		- SUCC   = { }

380 :	"fabs"
		- NEIGH  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { FACE_BACK , FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PRED   = { }
		- SUCC   = { }

380 :	"P"
		- NEIGH  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { FACE_BACK , FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PRED   = { }
		- SUCC   = { }

380 :	"lam0"
		- NEIGH  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { FACE_BACK , FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PRED   = { }
		- SUCC   = { }

380 :	"<="
		- NEIGH  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { FACE_BACK , FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PRED   = { }
		- SUCC   = { }

380 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { FACE_BACK , FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PRED   = { }
		- SUCC   = { }

380 :	"+"
		- NEIGH  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { FACE_BACK , FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PRED   = { }
		- SUCC   = { }

380 :	"M_FORTPI"
		- NEIGH  = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- PARENT = { <= , lam0 , P , fabs , M_FORTPI , if , }
		- CHILD  = { FACE_BACK , FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PRED   = { }
		- SUCC   = { }

381 :	"Q"
		- NEIGH  = { FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	"face"
		- NEIGH  = { FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	"P"
		- NEIGH  = { FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	"lam0"
		- NEIGH  = { FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	">"
		- NEIGH  = { FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	"FACE_RIGHT"
		- NEIGH  = { FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

381 :	"FACE_LEFT"
		- NEIGH  = { FACE_RIGHT , P , lam0 , FACE_LEFT , face , > , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

383 :	"Q"
		- NEIGH  = { FACE_BACK , face , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

383 :	"face"
		- NEIGH  = { FACE_BACK , face , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

383 :	"FACE_BACK"
		- NEIGH  = { FACE_BACK , face , Q , }
		- PARENT = { M_HALFPI , <= , lam0 , P , fabs , M_FORTPI , + , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

387 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { / , one_minus_f_squared , b , one_minus_f , a_squared , * , - , a , P , Q , }
		- PRED   = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- SUCC   = { P , return , }

387 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { / , one_minus_f_squared , b , one_minus_f , a_squared , * , - , a , P , Q , }
		- PRED   = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- SUCC   = { P , return , }

387 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { / , one_minus_f_squared , b , one_minus_f , a_squared , * , - , a , P , Q , }
		- PRED   = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- SUCC   = { P , return , }

387 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { / , one_minus_f_squared , b , one_minus_f , a_squared , * , - , a , P , Q , }
		- PRED   = { / , M_HALFPI , M_FORTPI , if , phi0 , - , >= , P , }
		- SUCC   = { P , return , }

388 :	"Q"
		- NEIGH  = { * , a , P , a_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , b , a , - , one_minus_f , P , Q , }

388 :	"a_squared"
		- NEIGH  = { * , a , P , a_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , b , a , - , one_minus_f , P , Q , }

388 :	"P"
		- NEIGH  = { * , a , P , a_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , b , a , - , one_minus_f , P , Q , }

388 :	"a"
		- NEIGH  = { * , a , P , a_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , b , a , - , one_minus_f , P , Q , }

388 :	"*"
		- NEIGH  = { * , a , P , a_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , b , a , - , one_minus_f , P , Q , }

388 :	"P"
		- NEIGH  = { * , a , P , a_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , b , a , - , one_minus_f , P , Q , }

388 :	"a"
		- NEIGH  = { * , a , P , a_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { / , b , a , - , one_minus_f , P , Q , }

389 :	"Q"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"one_minus_f"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"-"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"P"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"a"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"-"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"P"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"b"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"/"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"P"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

389 :	"a"
		- NEIGH  = { / , b , a , - , one_minus_f , P , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { * , a , P , a_squared , Q , }
		- SUCC   = { one_minus_f , * , one_minus_f_squared , Q , }

390 :	"Q"
		- NEIGH  = { one_minus_f , * , one_minus_f_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , b , a , - , one_minus_f , P , Q , }
		- SUCC   = { }

390 :	"one_minus_f_squared"
		- NEIGH  = { one_minus_f , * , one_minus_f_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , b , a , - , one_minus_f , P , Q , }
		- SUCC   = { }

390 :	"Q"
		- NEIGH  = { one_minus_f , * , one_minus_f_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , b , a , - , one_minus_f , P , Q , }
		- SUCC   = { }

390 :	"one_minus_f"
		- NEIGH  = { one_minus_f , * , one_minus_f_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , b , a , - , one_minus_f , P , Q , }
		- SUCC   = { }

390 :	"*"
		- NEIGH  = { one_minus_f , * , one_minus_f_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , b , a , - , one_minus_f , P , Q , }
		- SUCC   = { }

390 :	"Q"
		- NEIGH  = { one_minus_f , * , one_minus_f_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , b , a , - , one_minus_f , P , Q , }
		- SUCC   = { }

390 :	"one_minus_f"
		- NEIGH  = { one_minus_f , * , one_minus_f_squared , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , b , a , - , one_minus_f , P , Q , }
		- SUCC   = { }

393 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

393 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

