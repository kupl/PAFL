63 :	"NS_PROJ"
		- NEIGH  = { NS_PROJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

63 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

89 :	"NS_PROJ_START"
		- NEIGH  = { NS_PROJ_START , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

91 :	"crs"
		- NEIGH  = { crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

96 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"BoundCRSPtr"
		- NEIGH  = { canonicalBoundCRS_ , BoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extensionProj4_ , string , std , }

97 :	"canonicalBoundCRS_"
		- NEIGH  = { canonicalBoundCRS_ , BoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extensionProj4_ , string , std , }

98 :	"std"
		- NEIGH  = { extensionProj4_ , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { canonicalBoundCRS_ , BoundCRSPtr , }
		- SUCC   = { implicitCS_ , }

98 :	"string"
		- NEIGH  = { extensionProj4_ , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { canonicalBoundCRS_ , BoundCRSPtr , }
		- SUCC   = { implicitCS_ , }

98 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { canonicalBoundCRS_ , BoundCRSPtr , }
		- SUCC   = { implicitCS_ , }

99 :	"implicitCS_"
		- NEIGH  = { implicitCS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extensionProj4_ , string , std , }
		- SUCC   = { allowNonConformantWKT1Export_ , }

101 :	"allowNonConformantWKT1Export_"
		- NEIGH  = { allowNonConformantWKT1Export_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { implicitCS_ , }
		- SUCC   = { originalCompoundCRS_ , CompoundCRSPtr , }

104 :	"CompoundCRSPtr"
		- NEIGH  = { originalCompoundCRS_ , CompoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { allowNonConformantWKT1Export_ , }
		- SUCC   = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }

104 :	"originalCompoundCRS_"
		- NEIGH  = { originalCompoundCRS_ , CompoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { allowNonConformantWKT1Export_ , }
		- SUCC   = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }

106 :	"setImplicitCS"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

106 :	"util"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

106 :	"PropertyMap"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

106 :	"&"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

106 :	"properties"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

107 :	"pVal"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

107 :	"properties"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

107 :	"get"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

108 :	"if"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

108 :	"pVal"
		- NEIGH  = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- PARENT = { }
		- CHILD  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PRED   = { originalCompoundCRS_ , CompoundCRSPtr , }
		- SUCC   = { }

109 :	"if"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

109 :	"genVal"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

110 :	"dynamic_cast"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

110 :	"<"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

110 :	"util"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

110 :	"BoxedValue"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

110 :	"*"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

110 :	">"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

110 :	"pVal"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

110 :	"get"
		- NEIGH  = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- PARENT = { if , pVal , PropertyMap , get , util , properties , & , setImplicitCS , }
		- CHILD  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PRED   = { }
		- SUCC   = { }

111 :	"if"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

111 :	"genVal"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

111 :	"type"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

111 :	"=="
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

111 :	"util"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

111 :	"BoxedValue"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

111 :	"Type"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

111 :	"BOOLEAN"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

111 :	"&&"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

112 :	"genVal"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

112 :	"booleanValue"
		- NEIGH  = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- PARENT = { pVal , > , < , BoxedValue , if , genVal , get , util , * , dynamic_cast , }
		- CHILD  = { implicitCS_ , }
		- PRED   = { }
		- SUCC   = { }

113 :	"implicitCS_"
		- NEIGH  = { implicitCS_ , }
		- PARENT = { booleanValue , && , Type , == , type , BOOLEAN , BoxedValue , if , genVal , util , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

123 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"ObjectUsage"
		- NEIGH  = { ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

128 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

133 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"hasImplicitCS"
		- NEIGH  = { hasImplicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"return"
		- NEIGH  = { implicitCS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"d"
		- NEIGH  = { implicitCS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"implicitCS_"
		- NEIGH  = { implicitCS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

156 :	"BoundCRSPtr"
		- NEIGH  = { BoundCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

156 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

156 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

156 :	"canonicalBoundCRS"
		- NEIGH  = { canonicalBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

156 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

157 :	"return"
		- NEIGH  = { canonicalBoundCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

157 :	"d"
		- NEIGH  = { canonicalBoundCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

157 :	"canonicalBoundCRS_"
		- NEIGH  = { canonicalBoundCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"GeodeticCRSPtr"
		- NEIGH  = { GeodeticCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

170 :	"extractGeodeticCRS"
		- NEIGH  = { extractGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

171 :	"raw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

171 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

172 :	"if"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

172 :	"raw"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

173 :	"return"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

173 :	"std"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

173 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

173 :	"<"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

173 :	"GeodeticCRS"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

173 :	">"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"raw"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"shared_from_this"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

174 :	"as_nullable"
		- NEIGH  = { shared_from_this , raw , > , < , dynamic_pointer_cast , GeodeticCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

176 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { raw , if , }
		- SUCC   = { }

182 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

182 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

182 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

182 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

183 :	"geodCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

183 :	"dynamic_cast"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

183 :	"<"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

183 :	"GeodeticCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

183 :	"*"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

183 :	">"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

183 :	"this"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

184 :	"if"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { geodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

184 :	"geodCRS"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { geodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

185 :	"return"
		- NEIGH  = { geodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

185 :	"geodCRS"
		- NEIGH  = { geodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

187 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

187 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

187 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

187 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

187 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

187 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

187 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

188 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

188 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

189 :	"return"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"projCRS"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"baseCRS"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

189 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , projCRS , baseCRS , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

191 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

191 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

191 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

191 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

191 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

191 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

191 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

192 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

192 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

193 :	"for"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

193 :	"&"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

193 :	"subCrs"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

193 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

193 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { if , subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PRED   = { }
		- SUCC   = { }

194 :	"retGeogCRS"
		- NEIGH  = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retGeogCRS , if , }

194 :	"subCrs"
		- NEIGH  = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retGeogCRS , if , }

194 :	"extractGeodeticCRSRaw"
		- NEIGH  = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retGeogCRS , if , }

195 :	"if"
		- NEIGH  = { retGeogCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retGeogCRS , return , }
		- PRED   = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- SUCC   = { }

195 :	"retGeogCRS"
		- NEIGH  = { retGeogCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retGeogCRS , return , }
		- PRED   = { subCrs , extractGeodeticCRSRaw , retGeogCRS , }
		- SUCC   = { }

196 :	"return"
		- NEIGH  = { retGeogCRS , return , }
		- PARENT = { retGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

196 :	"retGeogCRS"
		- NEIGH  = { retGeogCRS , return , }
		- PARENT = { retGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

200 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

200 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

200 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

200 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

200 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

200 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

200 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

201 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

201 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

202 :	"return"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"boundCRS"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"baseCRS"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

202 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

204 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

211 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

211 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

211 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

211 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

211 :	"getExtensionProj4"
		- NEIGH  = { getExtensionProj4 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

212 :	"return"
		- NEIGH  = { extensionProj4_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

212 :	"d"
		- NEIGH  = { extensionProj4_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

212 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

226 :	"GeographicCRSPtr"
		- NEIGH  = { GeographicCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

226 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

226 :	"extractGeographicCRS"
		- NEIGH  = { extractGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

227 :	"raw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

227 :	"extractGeodeticCRSRaw"
		- NEIGH  = { extractGeodeticCRSRaw , raw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { raw , if , }

228 :	"if"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

228 :	"raw"
		- NEIGH  = { raw , if , }
		- PARENT = { }
		- CHILD  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PRED   = { extractGeodeticCRSRaw , raw , }
		- SUCC   = { return , }

229 :	"return"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

229 :	"std"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

229 :	"dynamic_pointer_cast"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

229 :	"<"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

229 :	"GeographicCRS"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

229 :	">"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

230 :	"raw"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

230 :	"shared_from_this"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

230 :	"as_nullable"
		- NEIGH  = { raw , > , < , dynamic_pointer_cast , shared_from_this , GeographicCRS , as_nullable , std , return , }
		- PARENT = { raw , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

232 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { raw , if , }
		- SUCC   = { }

238 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

238 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"createPropertyMap"
		- NEIGH  = { createPropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

239 :	"obj"
		- NEIGH  = { obj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

240 :	"props"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

240 :	"util"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

240 :	"PropertyMap"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

240 :	"set"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

240 :	"common"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

240 :	"IdentifiedObject"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

240 :	"NAME_KEY"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

241 :	"obj"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

241 :	"nameStr"
		- NEIGH  = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isDeprecated , obj , if , }

242 :	"if"
		- NEIGH  = { isDeprecated , obj , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PRED   = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { props , return , }

242 :	"obj"
		- NEIGH  = { isDeprecated , obj , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PRED   = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { props , return , }

242 :	"isDeprecated"
		- NEIGH  = { isDeprecated , obj , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PRED   = { nameStr , obj , IdentifiedObject , util , common , PropertyMap , set , NAME_KEY , props , }
		- SUCC   = { props , return , }

243 :	"props"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"set"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"common"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

243 :	"DEPRECATED_KEY"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { isDeprecated , obj , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

245 :	"return"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , obj , if , }
		- SUCC   = { }

245 :	"props"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , obj , if , }
		- SUCC   = { }

253 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

253 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

253 :	"alterGeodeticCRS"
		- NEIGH  = { alterGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

253 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

253 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

253 :	"newGeodCRS"
		- NEIGH  = { newGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

254 :	"geodCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

254 :	"dynamic_cast"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

254 :	"<"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

254 :	"GeodeticCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

254 :	"*"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

254 :	">"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

254 :	"this"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geodCRS , if , }

255 :	"if"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { newGeodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

255 :	"geodCRS"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { }
		- CHILD  = { newGeodCRS , return , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

256 :	"return"
		- NEIGH  = { newGeodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

256 :	"newGeodCRS"
		- NEIGH  = { newGeodCRS , return , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

259 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

259 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

259 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

259 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

259 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

259 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

259 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodCRS , if , }
		- SUCC   = { projCRS , if , }

260 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

260 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

261 :	"return"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"create"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"createPropertyMap"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"this"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

261 :	"newGeodCRS"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

262 :	"projCRS"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

262 :	"derivingConversion"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

263 :	"projCRS"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

263 :	"coordinateSystem"
		- NEIGH  = { derivingConversion , projCRS , newGeodCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

266 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

266 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

266 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

266 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

266 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

266 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

266 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { compoundCRS , if , }

267 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { createPropertyMap , CompoundCRS , this , return , compoundCRS , componentReferenceSystems , subCrs , & , for , components , vector , > , create , CRSNNPtr , < , std , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

267 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { createPropertyMap , CompoundCRS , this , return , compoundCRS , componentReferenceSystems , subCrs , & , for , components , vector , > , create , CRSNNPtr , < , std , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

268 :	"std"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

268 :	"vector"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

268 :	"<"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

268 :	"CRSNNPtr"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

268 :	">"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

268 :	"components"
		- NEIGH  = { components , > , CRSNNPtr , < , vector , std , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }

269 :	"for"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

269 :	"&"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

269 :	"subCrs"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

269 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

269 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PRED   = { components , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { this , components , create , CompoundCRS , createPropertyMap , return , }

270 :	"components"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

270 :	"emplace_back"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

270 :	"subCrs"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

270 :	"alterGeodeticCRS"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

270 :	"newGeodCRS"
		- NEIGH  = { newGeodCRS , subCrs , emplace_back , alterGeodeticCRS , components , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

272 :	"return"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

272 :	"CompoundCRS"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

272 :	"create"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

272 :	"createPropertyMap"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

272 :	"this"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

272 :	"components"
		- NEIGH  = { this , components , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- SUCC   = { }

275 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

275 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

276 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

276 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

276 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

276 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

276 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

276 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

276 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

283 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

283 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

283 :	"alterCSLinearUnit"
		- NEIGH  = { alterCSLinearUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

283 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

283 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

283 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

283 :	"unit"
		- NEIGH  = { unit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

285 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

285 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

285 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

285 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

285 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

285 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

285 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

286 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }

286 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }

287 :	"return"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

287 :	"ProjectedCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

287 :	"create"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

288 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

288 :	"this"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

288 :	"projCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

288 :	"baseCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

289 :	"projCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

289 :	"derivingConversion"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"projCRS"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"coordinateSystem"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

290 :	"unit"
		- NEIGH  = { unit , alterUnit , derivingConversion , baseCRS , projCRS , this , create , ProjectedCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

295 :	"geodCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

295 :	"dynamic_cast"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

295 :	"<"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

295 :	"GeodeticCRS"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

295 :	"*"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

295 :	">"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

295 :	"this"
		- NEIGH  = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { isGeocentric , && , geodCRS , if , }

296 :	"if"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

296 :	"geodCRS"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

296 :	"&&"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

296 :	"geodCRS"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

296 :	"isGeocentric"
		- NEIGH  = { isGeocentric , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , createPropertyMap , create , get , this , return , datum , coordinateSystem , GeodeticCRS , geodCRS , > , assert , cs , < , dynamic_cast , * , CartesianCS , }
		- PRED   = { > , < , this , GeodeticCRS , dynamic_cast , * , geodCRS , }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

297 :	"cs"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

297 :	"dynamic_cast"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

297 :	"<"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

297 :	"cs"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

297 :	"CartesianCS"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

297 :	"*"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

297 :	">"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

298 :	"geodCRS"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

298 :	"coordinateSystem"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

298 :	"get"
		- NEIGH  = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs , assert , }

299 :	"assert"
		- NEIGH  = { cs , assert , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- SUCC   = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }

299 :	"cs"
		- NEIGH  = { cs , assert , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { get , coordinateSystem , geodCRS , dynamic_cast , * , > , CartesianCS , < , cs , }
		- SUCC   = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }

300 :	"return"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

300 :	"GeodeticCRS"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

300 :	"create"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

301 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

301 :	"this"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

301 :	"geodCRS"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

301 :	"datum"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

302 :	"geodCRS"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

302 :	"datumEnsemble"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

302 :	"cs"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

302 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

302 :	"unit"
		- NEIGH  = { unit , alterUnit , cs , datumEnsemble , datum , geodCRS , GeodeticCRS , this , create , createPropertyMap , return , }
		- PARENT = { isGeocentric , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { cs , assert , }
		- SUCC   = { }

307 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

307 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

307 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

307 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

307 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

307 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

307 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , && , geodCRS , if , }
		- SUCC   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }

308 :	"if"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

308 :	"geogCRS"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

308 :	"&&"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

308 :	"geogCRS"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

308 :	"coordinateSystem"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

308 :	"axisList"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

308 :	"size"
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

308 :	"=="
		- NEIGH  = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

309 :	"return"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

309 :	"GeographicCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

309 :	"create"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

310 :	"createPropertyMap"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

310 :	"this"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

310 :	"geogCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

310 :	"datum"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

311 :	"geogCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

311 :	"datumEnsemble"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"geogCRS"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"coordinateSystem"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"alterLinearUnit"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

312 :	"unit"
		- NEIGH  = { unit , alterLinearUnit , datumEnsemble , datum , geogCRS , this , create , GeographicCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

317 :	"vertCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

317 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

317 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

317 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

317 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

317 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

317 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , size , axisList , coordinateSystem , geogCRS , if , }
		- SUCC   = { vertCRS , if , }

318 :	"if"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }

318 :	"vertCRS"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }

319 :	"return"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

319 :	"VerticalCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

319 :	"create"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"this"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"vertCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

320 :	"datum"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"vertCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

321 :	"datumEnsemble"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

322 :	"vertCRS"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

322 :	"coordinateSystem"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

322 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

322 :	"unit"
		- NEIGH  = { unit , alterUnit , datumEnsemble , datum , this , create , vertCRS , VerticalCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

327 :	"engCRS"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

327 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

327 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

327 :	"EngineeringCRS"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

327 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

327 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

327 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { engCRS , if , }

328 :	"if"
		- NEIGH  = { engCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PRED   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

328 :	"engCRS"
		- NEIGH  = { engCRS , if , }
		- PARENT = { }
		- CHILD  = { if , coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PRED   = { > , this , dynamic_cast , * , engCRS , < , EngineeringCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

329 :	"cartCS"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

329 :	"util"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

329 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

329 :	"<"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

329 :	"cs"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

329 :	"CartesianCS"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

329 :	">"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

330 :	"engCRS"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

330 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- PARENT = { engCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cartCS , if , }

331 :	"if"
		- NEIGH  = { cartCS , if , }
		- PARENT = { engCRS , if , }
		- CHILD  = { if , > , nn_dynamic_pointer_cast , VerticalCS , cs , < , util , unit , alterUnit , create , vertCS , EngineeringCRS , cartCS , coordinateSystem , datum , engCRS , return , this , createPropertyMap , }
		- PRED   = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- SUCC   = { }

331 :	"cartCS"
		- NEIGH  = { cartCS , if , }
		- PARENT = { engCRS , if , }
		- CHILD  = { if , > , nn_dynamic_pointer_cast , VerticalCS , cs , < , util , unit , alterUnit , create , vertCS , EngineeringCRS , cartCS , coordinateSystem , datum , engCRS , return , this , createPropertyMap , }
		- PRED   = { coordinateSystem , > , CartesianCS , engCRS , < , cs , nn_dynamic_pointer_cast , util , cartCS , }
		- SUCC   = { }

332 :	"return"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"EngineeringCRS"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"create"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

332 :	"this"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

333 :	"engCRS"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

333 :	"datum"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

334 :	"cartCS"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

334 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

334 :	"unit"
		- NEIGH  = { unit , alterUnit , cartCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

336 :	"vertCS"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

336 :	"util"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

336 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

336 :	"<"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

336 :	"cs"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

336 :	"VerticalCS"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

336 :	">"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

337 :	"engCRS"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

337 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- PARENT = { cartCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCS , if , }

338 :	"if"
		- NEIGH  = { vertCS , if , }
		- PARENT = { cartCS , if , }
		- CHILD  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PRED   = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- SUCC   = { }

338 :	"vertCS"
		- NEIGH  = { vertCS , if , }
		- PARENT = { cartCS , if , }
		- CHILD  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PRED   = { coordinateSystem , > , VerticalCS , engCRS , < , util , cs , nn_dynamic_pointer_cast , vertCS , }
		- SUCC   = { }

339 :	"return"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

339 :	"EngineeringCRS"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

339 :	"create"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

339 :	"createPropertyMap"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

339 :	"this"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"engCRS"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

340 :	"datum"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

341 :	"vertCS"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

341 :	"alterUnit"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

341 :	"unit"
		- NEIGH  = { unit , alterUnit , vertCS , datum , engCRS , this , create , createPropertyMap , EngineeringCRS , return , }
		- PARENT = { vertCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

347 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

347 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

348 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

348 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

348 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

348 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

348 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

348 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

348 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { engCRS , if , }
		- SUCC   = { }

361 :	"VerticalCRSPtr"
		- NEIGH  = { VerticalCRSPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

361 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

361 :	"extractVerticalCRS"
		- NEIGH  = { extractVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

362 :	"vertCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

362 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

362 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

362 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

362 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

362 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

362 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { vertCRS , if , }

363 :	"if"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

363 :	"vertCRS"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

364 :	"return"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

364 :	"std"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

364 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

364 :	"<"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

364 :	"VerticalCRS"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

364 :	">"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

365 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

365 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , VerticalCRS , < , dynamic_pointer_cast , as_nullable , std , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

367 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

367 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

367 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

367 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

367 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

367 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

367 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { compoundCRS , if , }

368 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

368 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

369 :	"for"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

369 :	"&"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

369 :	"subCrs"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

369 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

369 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { extractVerticalCRS , subCrs , if , retVertCRS , }
		- PRED   = { }
		- SUCC   = { }

370 :	"retVertCRS"
		- NEIGH  = { extractVerticalCRS , subCrs , retVertCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retVertCRS , if , }

370 :	"subCrs"
		- NEIGH  = { extractVerticalCRS , subCrs , retVertCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retVertCRS , if , }

370 :	"extractVerticalCRS"
		- NEIGH  = { extractVerticalCRS , subCrs , retVertCRS , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { retVertCRS , if , }

371 :	"if"
		- NEIGH  = { retVertCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retVertCRS , return , }
		- PRED   = { extractVerticalCRS , subCrs , retVertCRS , }
		- SUCC   = { }

371 :	"retVertCRS"
		- NEIGH  = { retVertCRS , if , }
		- PARENT = { componentReferenceSystems , compoundCRS , subCrs , & , for , }
		- CHILD  = { retVertCRS , return , }
		- PRED   = { extractVerticalCRS , subCrs , retVertCRS , }
		- SUCC   = { }

372 :	"return"
		- NEIGH  = { retVertCRS , return , }
		- PARENT = { retVertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

372 :	"retVertCRS"
		- NEIGH  = { retVertCRS , return , }
		- PARENT = { retVertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

376 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

376 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

376 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

376 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

376 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

376 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

376 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { boundCRS , if , }

377 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

377 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { return , }

378 :	"return"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

378 :	"boundCRS"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

378 :	"baseCRS"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

378 :	"extractVerticalCRS"
		- NEIGH  = { extractVerticalCRS , boundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

380 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

399 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

399 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

399 :	"createBoundCRSToWGS84IfPossible"
		- NEIGH  = { createBoundCRSToWGS84IfPossible , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

400 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

400 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

400 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

400 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

401 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

401 :	"CoordinateOperationContext"
		- NEIGH  = { CoordinateOperationContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

401 :	"IntermediateCRSUse"
		- NEIGH  = { IntermediateCRSUse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

402 :	"allowIntermediateCRSUse"
		- NEIGH  = { allowIntermediateCRSUse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

403 :	"thisAsCRS"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

403 :	"NN_NO_CHECK"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

404 :	"std"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

404 :	"static_pointer_cast"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

404 :	"<"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

404 :	"CRS"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

404 :	">"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

404 :	"shared_from_this"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

404 :	"as_nullable"
		- NEIGH  = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }

405 :	"boundCRS"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

405 :	"util"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

405 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

405 :	"<"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

405 :	"BoundCRS"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

405 :	">"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

405 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRS , < , static_pointer_cast , as_nullable , std , NN_NO_CHECK , shared_from_this , thisAsCRS , }
		- SUCC   = { boundCRS , ! , if , }

406 :	"if"
		- NEIGH  = { boundCRS , ! , if , }
		- PARENT = { }
		- CHILD  = { canonicalBoundCRS , boundCRS , }
		- PRED   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- SUCC   = { boundCRS , if , }

406 :	"!"
		- NEIGH  = { boundCRS , ! , if , }
		- PARENT = { }
		- CHILD  = { canonicalBoundCRS , boundCRS , }
		- PRED   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- SUCC   = { boundCRS , if , }

406 :	"boundCRS"
		- NEIGH  = { boundCRS , ! , if , }
		- PARENT = { }
		- CHILD  = { canonicalBoundCRS , boundCRS , }
		- PRED   = { thisAsCRS , > , < , BoundCRS , util , nn_dynamic_pointer_cast , boundCRS , }
		- SUCC   = { boundCRS , if , }

407 :	"boundCRS"
		- NEIGH  = { canonicalBoundCRS , boundCRS , }
		- PARENT = { boundCRS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

407 :	"canonicalBoundCRS"
		- NEIGH  = { canonicalBoundCRS , boundCRS , }
		- PARENT = { boundCRS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

409 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PRED   = { boundCRS , ! , if , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

409 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PRED   = { boundCRS , ! , if , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

410 :	"if"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

410 :	"boundCRS"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

410 :	"hubCRS"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

410 :	"_isEquivalentTo"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

411 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

411 :	"EPSG_4326"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

411 :	"get"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

412 :	"util"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

412 :	"IComparable"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

412 :	"Criterion"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

412 :	"EQUIVALENT"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

412 :	"dbContext"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { boundCRS , NN_NO_CHECK , return , }
		- PRED   = { }
		- SUCC   = { }

413 :	"return"
		- NEIGH  = { boundCRS , NN_NO_CHECK , return , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

413 :	"NN_NO_CHECK"
		- NEIGH  = { boundCRS , NN_NO_CHECK , return , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

413 :	"boundCRS"
		- NEIGH  = { boundCRS , NN_NO_CHECK , return , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , boundCRS , _isEquivalentTo , hubCRS , EPSG_4326 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

417 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

417 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

417 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

417 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

417 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

417 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

417 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

418 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { return , == , size , if , componentReferenceSystems , thisAsCRS , & , comps , compoundCRS , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { dbContext , ! , if , }

418 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { return , == , size , if , componentReferenceSystems , thisAsCRS , & , comps , compoundCRS , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { dbContext , ! , if , }

419 :	"&"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , comps , if , }

419 :	"comps"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , comps , if , }

419 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , comps , if , }

419 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , comps , if , }

420 :	"if"
		- NEIGH  = { size , == , comps , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { != , || , get , if , vert , allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , horiz , dbContext , comps , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { thisAsCRS , return , }

420 :	"comps"
		- NEIGH  = { size , == , comps , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { != , || , get , if , vert , allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , horiz , dbContext , comps , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { thisAsCRS , return , }

420 :	"size"
		- NEIGH  = { size , == , comps , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { != , || , get , if , vert , allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , horiz , dbContext , comps , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { thisAsCRS , return , }

420 :	"=="
		- NEIGH  = { size , == , comps , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { != , || , get , if , vert , allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , horiz , dbContext , comps , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { thisAsCRS , return , }

421 :	"horiz"
		- NEIGH  = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }

421 :	"comps"
		- NEIGH  = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }

421 :	"createBoundCRSToWGS84IfPossible"
		- NEIGH  = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }

422 :	"dbContext"
		- NEIGH  = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }

422 :	"allowIntermediateCRSUse"
		- NEIGH  = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }

423 :	"vert"
		- NEIGH  = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- SUCC   = { || , get , comps , != , horiz , vert , if , }

423 :	"comps"
		- NEIGH  = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- SUCC   = { || , get , comps , != , horiz , vert , if , }

423 :	"createBoundCRSToWGS84IfPossible"
		- NEIGH  = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- SUCC   = { || , get , comps , != , horiz , vert , if , }

424 :	"dbContext"
		- NEIGH  = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- SUCC   = { || , get , comps , != , horiz , vert , if , }

424 :	"allowIntermediateCRSUse"
		- NEIGH  = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , createBoundCRSToWGS84IfPossible , dbContext , comps , horiz , }
		- SUCC   = { || , get , comps , != , horiz , vert , if , }

425 :	"if"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"horiz"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"get"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"!="
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"comps"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"get"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"||"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"vert"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"get"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"!="
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"comps"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

425 :	"get"
		- NEIGH  = { || , get , comps , != , horiz , vert , if , }
		- PARENT = { size , == , comps , if , }
		- CHILD  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PRED   = { allowIntermediateCRSUse , dbContext , comps , createBoundCRSToWGS84IfPossible , vert , }
		- SUCC   = { }

426 :	"return"
		- NEIGH  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { || , get , comps , != , horiz , vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

426 :	"CompoundCRS"
		- NEIGH  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { || , get , comps , != , horiz , vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

426 :	"create"
		- NEIGH  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { || , get , comps , != , horiz , vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

426 :	"createPropertyMap"
		- NEIGH  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { || , get , comps , != , horiz , vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

426 :	"this"
		- NEIGH  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { || , get , comps , != , horiz , vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

427 :	"horiz"
		- NEIGH  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { || , get , comps , != , horiz , vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

427 :	"vert"
		- NEIGH  = { horiz , this , vert , create , CompoundCRS , createPropertyMap , return , }
		- PARENT = { || , get , comps , != , horiz , vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

430 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { size , == , comps , if , }
		- SUCC   = { }

430 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { size , == , comps , if , }
		- SUCC   = { }

433 :	"if"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { l_domains , domains , & , }

433 :	"!"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { l_domains , domains , & , }

433 :	"dbContext"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { l_domains , domains , & , }

434 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

434 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

437 :	"&"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { extent , ExtentPtr , metadata , }

437 :	"l_domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { extent , ExtentPtr , metadata , }

437 :	"domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { extent , ExtentPtr , metadata , }

438 :	"metadata"
		- NEIGH  = { extent , ExtentPtr , metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { empty , ! , l_domains , if , }

438 :	"ExtentPtr"
		- NEIGH  = { extent , ExtentPtr , metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { empty , ! , l_domains , if , }

438 :	"extent"
		- NEIGH  = { extent , ExtentPtr , metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { empty , ! , l_domains , if , }

439 :	"if"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

439 :	"!"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

439 :	"l_domains"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

439 :	"empty"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , domainOfValidity , extent , }
		- PRED   = { extent , ExtentPtr , metadata , }
		- SUCC   = { crs_authority , string , std , }

440 :	"extent"
		- NEIGH  = { l_domains , domainOfValidity , extent , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

440 :	"l_domains"
		- NEIGH  = { l_domains , domainOfValidity , extent , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

440 :	"domainOfValidity"
		- NEIGH  = { l_domains , domainOfValidity , extent , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

443 :	"std"
		- NEIGH  = { crs_authority , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { identifiers , l_identifiers , & , }

443 :	"string"
		- NEIGH  = { crs_authority , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { identifiers , l_identifiers , & , }

443 :	"crs_authority"
		- NEIGH  = { crs_authority , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { identifiers , l_identifiers , & , }

444 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_authority , string , std , }
		- SUCC   = { empty , l_identifiers , ! , if , }

444 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_authority , string , std , }
		- SUCC   = { empty , l_identifiers , ! , if , }

444 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_authority , string , std , }
		- SUCC   = { empty , l_identifiers , ! , if , }

448 :	"if"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }

448 :	"!"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }

448 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }

448 :	"empty"
		- NEIGH  = { empty , l_identifiers , ! , if , }
		- PARENT = { }
		- CHILD  = { codeSpace , l_identifiers , * , crs_authority , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }

449 :	"crs_authority"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

449 :	"*"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

449 :	"l_identifiers"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

449 :	"codeSpace"
		- NEIGH  = { codeSpace , l_identifiers , * , crs_authority , }
		- PARENT = { empty , l_identifiers , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

452 :	"authorities"
		- NEIGH  = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

452 :	"dbContext"
		- NEIGH  = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

452 :	"getAllowedAuthorities"
		- NEIGH  = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

453 :	"crs_authority"
		- NEIGH  = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

453 :	"metadata"
		- NEIGH  = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

453 :	"Identifier"
		- NEIGH  = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

453 :	"EPSG"
		- NEIGH  = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , ! , if , }
		- SUCC   = { empty , authorities , if , }

454 :	"if"
		- NEIGH  = { empty , authorities , if , }
		- PARENT = { }
		- CHILD  = { emplace_back , authorities , }
		- PRED   = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

454 :	"authorities"
		- NEIGH  = { empty , authorities , if , }
		- PARENT = { }
		- CHILD  = { emplace_back , authorities , }
		- PRED   = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

454 :	"empty"
		- NEIGH  = { empty , authorities , if , }
		- PARENT = { }
		- CHILD  = { emplace_back , authorities , }
		- PRED   = { Identifier , crs_authority , getAllowedAuthorities , EPSG , metadata , dbContext , authorities , }
		- SUCC   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }

455 :	"authorities"
		- NEIGH  = { emplace_back , authorities , }
		- PARENT = { empty , authorities , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

455 :	"emplace_back"
		- NEIGH  = { emplace_back , authorities , }
		- PARENT = { empty , authorities , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

459 :	"vertCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { vertCRS , if , }

459 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { vertCRS , if , }

459 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { vertCRS , if , }

459 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { vertCRS , if , }

459 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { vertCRS , if , }

459 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { vertCRS , if , }

459 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , authorities , if , }
		- SUCC   = { vertCRS , if , }

460 :	"if"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , authority , for , return , EPSG_4979 , & , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , authorities , hubCRS , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }

460 :	"vertCRS"
		- NEIGH  = { vertCRS , if , }
		- PARENT = { }
		- CHILD  = { thisAsCRS , authority , for , return , EPSG_4979 , & , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , authorities , hubCRS , }
		- PRED   = { > , this , dynamic_cast , * , vertCRS , VerticalCRS , < , }
		- SUCC   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }

461 :	"hubCRS"
		- NEIGH  = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorities , authority , & , for , }

462 :	"util"
		- NEIGH  = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorities , authority , & , for , }

462 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorities , authority , & , for , }

462 :	"<"
		- NEIGH  = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorities , authority , & , for , }

462 :	"CRS"
		- NEIGH  = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorities , authority , & , for , }

462 :	">"
		- NEIGH  = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorities , authority , & , for , }

462 :	"GeographicCRS"
		- NEIGH  = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorities , authority , & , for , }

462 :	"EPSG_4979"
		- NEIGH  = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorities , authority , & , for , }

463 :	"for"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { exception , if , op , for , setAllowUseIntermediateCRS , thisAsCRS , candidateBoundCRS , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , catch , CRSPtr , ctxt , operation , dbContext , NN_NO_CHECK , create , authFactory , allowIntermediateCRSUse , io , AuthorityFactory , }
		- PRED   = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { thisAsCRS , return , }

463 :	"&"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { exception , if , op , for , setAllowUseIntermediateCRS , thisAsCRS , candidateBoundCRS , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , catch , CRSPtr , ctxt , operation , dbContext , NN_NO_CHECK , create , authFactory , allowIntermediateCRSUse , io , AuthorityFactory , }
		- PRED   = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { thisAsCRS , return , }

463 :	"authority"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { exception , if , op , for , setAllowUseIntermediateCRS , thisAsCRS , candidateBoundCRS , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , catch , CRSPtr , ctxt , operation , dbContext , NN_NO_CHECK , create , authFactory , allowIntermediateCRSUse , io , AuthorityFactory , }
		- PRED   = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { thisAsCRS , return , }

463 :	"authorities"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { exception , if , op , for , setAllowUseIntermediateCRS , thisAsCRS , candidateBoundCRS , & , hubCRS , createOperations , CoordinateOperationFactory , extent , CoordinateOperationContext , list , string , authority , std , == , catch , CRSPtr , ctxt , operation , dbContext , NN_NO_CHECK , create , authFactory , allowIntermediateCRSUse , io , AuthorityFactory , }
		- PRED   = { EPSG_4979 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { thisAsCRS , return , }

466 :	"authFactory"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

466 :	"io"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

466 :	"AuthorityFactory"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

466 :	"create"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

467 :	"NN_NO_CHECK"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

467 :	"dbContext"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

468 :	"authority"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

468 :	"=="
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

468 :	"std"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

468 :	"string"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

468 :	"authority"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }

469 :	"ctxt"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

469 :	"operation"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

469 :	"CoordinateOperationContext"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

469 :	"create"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

470 :	"authFactory"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

470 :	"extent"
		- NEIGH  = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

471 :	"ctxt"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- SUCC   = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }

471 :	"setAllowUseIntermediateCRS"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- SUCC   = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }

471 :	"allowIntermediateCRSUse"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , extent , CoordinateOperationContext , operation , ctxt , }
		- SUCC   = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }

474 :	"list"
		- NEIGH  = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

474 :	"operation"
		- NEIGH  = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

474 :	"CoordinateOperationFactory"
		- NEIGH  = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

474 :	"create"
		- NEIGH  = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

475 :	"createOperations"
		- NEIGH  = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

475 :	"hubCRS"
		- NEIGH  = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

475 :	"thisAsCRS"
		- NEIGH  = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

475 :	"ctxt"
		- NEIGH  = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

476 :	"CRSPtr"
		- NEIGH  = { candidateBoundCRS , CRSPtr , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { list , op , & , for , }

476 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , CRSPtr , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { ctxt , thisAsCRS , hubCRS , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { list , op , & , for , }

477 :	"for"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { hasBallparkTransformation , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , transf , }
		- PRED   = { candidateBoundCRS , CRSPtr , }
		- SUCC   = { candidateBoundCRS , if , }

477 :	"&"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { hasBallparkTransformation , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , transf , }
		- PRED   = { candidateBoundCRS , CRSPtr , }
		- SUCC   = { candidateBoundCRS , if , }

477 :	"op"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { hasBallparkTransformation , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , transf , }
		- PRED   = { candidateBoundCRS , CRSPtr , }
		- SUCC   = { candidateBoundCRS , if , }

477 :	"list"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { hasBallparkTransformation , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , transf , }
		- PRED   = { candidateBoundCRS , CRSPtr , }
		- SUCC   = { candidateBoundCRS , if , }

478 :	"transf"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , hasBallparkTransformation , && , transf , if , }

478 :	"util"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , hasBallparkTransformation , && , transf , if , }

478 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , hasBallparkTransformation , && , transf , if , }

478 :	"<"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , hasBallparkTransformation , && , transf , if , }

479 :	"operation"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , hasBallparkTransformation , && , transf , if , }

479 :	"Transformation"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , hasBallparkTransformation , && , transf , if , }

479 :	">"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , hasBallparkTransformation , && , transf , if , }

479 :	"op"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ! , hasBallparkTransformation , && , transf , if , }

481 :	"if"
		- NEIGH  = { ! , hasBallparkTransformation , && , transf , if , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { gridDesc , & , for , if , ! , transf , gridsKnown , dbContext , empty , gridsNeeded , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

481 :	"transf"
		- NEIGH  = { ! , hasBallparkTransformation , && , transf , if , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { gridDesc , & , for , if , ! , transf , gridsKnown , dbContext , empty , gridsNeeded , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

481 :	"&&"
		- NEIGH  = { ! , hasBallparkTransformation , && , transf , if , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { gridDesc , & , for , if , ! , transf , gridsKnown , dbContext , empty , gridsNeeded , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

481 :	"!"
		- NEIGH  = { ! , hasBallparkTransformation , && , transf , if , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { gridDesc , & , for , if , ! , transf , gridsKnown , dbContext , empty , gridsNeeded , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

481 :	"transf"
		- NEIGH  = { ! , hasBallparkTransformation , && , transf , if , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { gridDesc , & , for , if , ! , transf , gridsKnown , dbContext , empty , gridsNeeded , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

481 :	"hasBallparkTransformation"
		- NEIGH  = { ! , hasBallparkTransformation , && , transf , if , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { gridDesc , & , for , if , ! , transf , gridsKnown , dbContext , empty , gridsNeeded , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

482 :	"gridsNeeded"
		- NEIGH  = { dbContext , transf , gridsNeeded , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gridsNeeded , ! , empty , gridsKnown , }

482 :	"transf"
		- NEIGH  = { dbContext , transf , gridsNeeded , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gridsNeeded , ! , empty , gridsKnown , }

482 :	"gridsNeeded"
		- NEIGH  = { dbContext , transf , gridsNeeded , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gridsNeeded , ! , empty , gridsKnown , }

482 :	"dbContext"
		- NEIGH  = { dbContext , transf , gridsNeeded , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gridsNeeded , ! , empty , gridsKnown , }

483 :	"gridsKnown"
		- NEIGH  = { gridsNeeded , ! , empty , gridsKnown , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { }
		- PRED   = { dbContext , transf , gridsNeeded , }
		- SUCC   = { gridDesc , & , gridsNeeded , for , }

483 :	"!"
		- NEIGH  = { gridsNeeded , ! , empty , gridsKnown , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { }
		- PRED   = { dbContext , transf , gridsNeeded , }
		- SUCC   = { gridDesc , & , gridsNeeded , for , }

483 :	"gridsNeeded"
		- NEIGH  = { gridsNeeded , ! , empty , gridsKnown , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { }
		- PRED   = { dbContext , transf , gridsNeeded , }
		- SUCC   = { gridDesc , & , gridsNeeded , for , }

483 :	"empty"
		- NEIGH  = { gridsNeeded , ! , empty , gridsKnown , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { }
		- PRED   = { dbContext , transf , gridsNeeded , }
		- SUCC   = { gridDesc , & , gridsNeeded , for , }

484 :	"for"
		- NEIGH  = { gridDesc , & , gridsNeeded , for , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PRED   = { gridsNeeded , ! , empty , gridsKnown , }
		- SUCC   = { gridsKnown , if , }

484 :	"&"
		- NEIGH  = { gridDesc , & , gridsNeeded , for , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PRED   = { gridsNeeded , ! , empty , gridsKnown , }
		- SUCC   = { gridsKnown , if , }

484 :	"gridDesc"
		- NEIGH  = { gridDesc , & , gridsNeeded , for , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PRED   = { gridsNeeded , ! , empty , gridsKnown , }
		- SUCC   = { gridsKnown , if , }

484 :	"gridsNeeded"
		- NEIGH  = { gridDesc , & , gridsNeeded , for , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PRED   = { gridsNeeded , ! , empty , gridsKnown , }
		- SUCC   = { gridsKnown , if , }

485 :	"if"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

485 :	"gridDesc"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

485 :	"packageName"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

485 :	"empty"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

485 :	"&&"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

486 :	"!"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

486 :	"!"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

486 :	"gridDesc"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

486 :	"url"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

486 :	"empty"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

486 :	"&&"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

487 :	"gridDesc"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

487 :	"openLicense"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

487 :	"&&"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

488 :	"!"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

488 :	"gridDesc"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

488 :	"available"
		- NEIGH  = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- PARENT = { gridDesc , & , gridsNeeded , for , }
		- CHILD  = { break , gridsKnown , }
		- PRED   = { }
		- SUCC   = { }

489 :	"gridsKnown"
		- NEIGH  = { gridsKnown , }
		- PARENT = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

490 :	"break"
		- NEIGH  = { break , }
		- PARENT = { available , openLicense , url , empty , && , packageName , gridDesc , ! , if , }
		- CHILD  = { }
		- PRED   = { gridsKnown , }
		- SUCC   = { }

493 :	"if"
		- NEIGH  = { gridsKnown , if , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { as_nullable , transf , NN_NO_CHECK , hubCRS , if , BoundCRS , create , thisAsCRS , candidateBoundCRS , }
		- PRED   = { gridDesc , & , gridsNeeded , for , }
		- SUCC   = { }

493 :	"gridsKnown"
		- NEIGH  = { gridsKnown , if , }
		- PARENT = { ! , hasBallparkTransformation , && , transf , if , }
		- CHILD  = { as_nullable , transf , NN_NO_CHECK , hubCRS , if , BoundCRS , create , thisAsCRS , candidateBoundCRS , }
		- PRED   = { gridDesc , & , gridsNeeded , for , }
		- SUCC   = { }

494 :	"if"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { break , candidateBoundCRS , }
		- PRED   = { }
		- SUCC   = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }

494 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { break , candidateBoundCRS , }
		- PRED   = { }
		- SUCC   = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }

495 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

496 :	"break"
		- NEIGH  = { break , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , }
		- SUCC   = { }

498 :	"candidateBoundCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

499 :	"BoundCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

499 :	"create"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

499 :	"thisAsCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

499 :	"hubCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

500 :	"NN_NO_CHECK"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

500 :	"transf"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

501 :	"as_nullable"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { gridsKnown , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

505 :	"if"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PRED   = { list , op , & , for , }
		- SUCC   = { & , exception , std , catch , }

505 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PRED   = { list , op , & , for , }
		- SUCC   = { & , exception , std , catch , }

506 :	"return"
		- NEIGH  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

506 :	"NN_NO_CHECK"
		- NEIGH  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

506 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

508 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

508 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

508 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

508 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

511 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { authorities , authority , & , for , }
		- SUCC   = { }

511 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { vertCRS , if , }
		- CHILD  = { }
		- PRED   = { authorities , authority , & , for , }
		- SUCC   = { }

515 :	"geodCRS"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

515 :	"util"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

515 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

515 :	"<"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

515 :	"GeodeticCRS"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

515 :	">"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

515 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { vertCRS , if , }
		- SUCC   = { extractGeographicCRS , geogCRS , }

516 :	"geogCRS"
		- NEIGH  = { extractGeographicCRS , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- SUCC   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

516 :	"extractGeographicCRS"
		- NEIGH  = { extractGeographicCRS , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisAsCRS , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , geodCRS , }
		- SUCC   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

517 :	"hubCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

517 :	"util"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

517 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

517 :	"<"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

517 :	"CRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

517 :	">"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

517 :	"GeographicCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

517 :	"EPSG_4326"
		- NEIGH  = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , geogCRS , }
		- SUCC   = { geogCRS , ! , && , geodCRS , if , }

518 :	"if"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { authorities , authority , & , for , }

518 :	"geodCRS"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { authorities , authority , & , for , }

518 :	"&&"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { authorities , authority , & , for , }

518 :	"!"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { authorities , authority , & , for , }

518 :	"geogCRS"
		- NEIGH  = { geogCRS , ! , && , geodCRS , if , }
		- PARENT = { }
		- CHILD  = { EPSG_4326 , || , > , geogCRS , CRS , nn_static_pointer_cast , hubCRS , if , dbContext , GeographicCRS , EQUIVALENT , EPSG_4978 , IComparable , Criterion , < , util , get , ! , GeodeticCRS , _isEquivalentTo , geodCRS , }
		- PRED   = { EPSG_4326 , GeographicCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- SUCC   = { authorities , authority , & , for , }

519 :	"if"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

519 :	"geodCRS"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

519 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

519 :	"GeographicCRS"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

519 :	"EPSG_4978"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

519 :	"get"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

520 :	"util"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

520 :	"IComparable"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

520 :	"Criterion"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

520 :	"EQUIVALENT"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

521 :	"dbContext"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }

522 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

522 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

524 :	"hubCRS"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

524 :	"util"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

524 :	"nn_static_pointer_cast"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

524 :	"<"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

524 :	"CRS"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

524 :	">"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

524 :	"GeodeticCRS"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

524 :	"EPSG_4978"
		- NEIGH  = { EPSG_4978 , GeodeticCRS , CRS , < , util , > , nn_static_pointer_cast , hubCRS , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , if , EPSG_4978 , _isEquivalentTo , geodCRS , GeographicCRS , }
		- SUCC   = { }

525 :	"if"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

525 :	"!"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

525 :	"geogCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

525 :	"||"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

526 :	"geogCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

526 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

527 :	"GeographicCRS"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

527 :	"EPSG_4326"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

527 :	"get"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

528 :	"util"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

528 :	"IComparable"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

528 :	"Criterion"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

528 :	"EQUIVALENT"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

528 :	"dbContext"
		- NEIGH  = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- PARENT = { geogCRS , ! , && , geodCRS , if , }
		- CHILD  = { geogCRS , geodCRS , thisAsCRS , return , }
		- PRED   = { }
		- SUCC   = { }

529 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

529 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

531 :	"geodCRS"
		- NEIGH  = { geogCRS , geodCRS , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

531 :	"geogCRS"
		- NEIGH  = { geogCRS , geodCRS , }
		- PARENT = { IComparable , EPSG_4326 , EQUIVALENT , GeographicCRS , ! , _isEquivalentTo , geogCRS , Criterion , util , get , || , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

534 :	"for"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , op , for , candidateBoundCRS , catch , CRSPtr , & , hubCRS , createOperations , CoordinateOperationFactory , ctxt , CoordinateOperationContext , extent , NN_NO_CHECK , extentResolved , ExtentPtr , metadata , list , string , authority , std , == , operation , if , dbContext , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , geodCRS , io , ! , AuthorityFactory , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { thisAsCRS , return , }

534 :	"&"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , op , for , candidateBoundCRS , catch , CRSPtr , & , hubCRS , createOperations , CoordinateOperationFactory , ctxt , CoordinateOperationContext , extent , NN_NO_CHECK , extentResolved , ExtentPtr , metadata , list , string , authority , std , == , operation , if , dbContext , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , geodCRS , io , ! , AuthorityFactory , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { thisAsCRS , return , }

534 :	"authority"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , op , for , candidateBoundCRS , catch , CRSPtr , & , hubCRS , createOperations , CoordinateOperationFactory , ctxt , CoordinateOperationContext , extent , NN_NO_CHECK , extentResolved , ExtentPtr , metadata , list , string , authority , std , == , operation , if , dbContext , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , geodCRS , io , ! , AuthorityFactory , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { thisAsCRS , return , }

534 :	"authorities"
		- NEIGH  = { authorities , authority , & , for , }
		- PARENT = { }
		- CHILD  = { exception , op , for , candidateBoundCRS , catch , CRSPtr , & , hubCRS , createOperations , CoordinateOperationFactory , ctxt , CoordinateOperationContext , extent , NN_NO_CHECK , extentResolved , ExtentPtr , metadata , list , string , authority , std , == , operation , if , dbContext , setAllowUseIntermediateCRS , create , authFactory , allowIntermediateCRSUse , geodCRS , io , ! , AuthorityFactory , }
		- PRED   = { geogCRS , ! , && , geodCRS , if , }
		- SUCC   = { thisAsCRS , return , }

537 :	"authFactory"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

537 :	"io"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

537 :	"AuthorityFactory"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

537 :	"create"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

538 :	"NN_NO_CHECK"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

538 :	"dbContext"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

539 :	"authority"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

539 :	"=="
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

539 :	"std"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

539 :	"string"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

539 :	"authority"
		- NEIGH  = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , extentResolved , ExtentPtr , metadata , }

540 :	"metadata"
		- NEIGH  = { extent , extentResolved , ExtentPtr , metadata , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { extent , ! , if , }

540 :	"ExtentPtr"
		- NEIGH  = { extent , extentResolved , ExtentPtr , metadata , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { extent , ! , if , }

540 :	"extentResolved"
		- NEIGH  = { extent , extentResolved , ExtentPtr , metadata , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { extent , ! , if , }

540 :	"extent"
		- NEIGH  = { extent , extentResolved , ExtentPtr , metadata , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { std , == , dbContext , NN_NO_CHECK , authority , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { extent , ! , if , }

541 :	"if"
		- NEIGH  = { extent , ! , if , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { extentResolved , authFactory , thisAsCRS , getResolvedCRS , }
		- PRED   = { extent , extentResolved , ExtentPtr , metadata , }
		- SUCC   = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }

541 :	"!"
		- NEIGH  = { extent , ! , if , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { extentResolved , authFactory , thisAsCRS , getResolvedCRS , }
		- PRED   = { extent , extentResolved , ExtentPtr , metadata , }
		- SUCC   = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }

541 :	"extent"
		- NEIGH  = { extent , ! , if , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { extentResolved , authFactory , thisAsCRS , getResolvedCRS , }
		- PRED   = { extent , extentResolved , ExtentPtr , metadata , }
		- SUCC   = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }

542 :	"getResolvedCRS"
		- NEIGH  = { extentResolved , authFactory , thisAsCRS , getResolvedCRS , }
		- PARENT = { extent , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

542 :	"thisAsCRS"
		- NEIGH  = { extentResolved , authFactory , thisAsCRS , getResolvedCRS , }
		- PARENT = { extent , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

542 :	"authFactory"
		- NEIGH  = { extentResolved , authFactory , thisAsCRS , getResolvedCRS , }
		- PARENT = { extent , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

542 :	"extentResolved"
		- NEIGH  = { extentResolved , authFactory , thisAsCRS , getResolvedCRS , }
		- PARENT = { extent , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

544 :	"ctxt"
		- NEIGH  = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { extent , ! , if , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

544 :	"operation"
		- NEIGH  = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { extent , ! , if , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

544 :	"CoordinateOperationContext"
		- NEIGH  = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { extent , ! , if , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

544 :	"create"
		- NEIGH  = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { extent , ! , if , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

545 :	"authFactory"
		- NEIGH  = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { extent , ! , if , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

545 :	"extentResolved"
		- NEIGH  = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { extent , ! , if , }
		- SUCC   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }

546 :	"ctxt"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }
		- SUCC   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }

546 :	"setAllowUseIntermediateCRS"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }
		- SUCC   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }

546 :	"allowIntermediateCRSUse"
		- NEIGH  = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { authFactory , create , CoordinateOperationContext , operation , extentResolved , ctxt , }
		- SUCC   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }

549 :	"list"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

550 :	"operation"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

550 :	"CoordinateOperationFactory"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

550 :	"create"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

551 :	"createOperations"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

551 :	"NN_NO_CHECK"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

551 :	"geodCRS"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

551 :	"hubCRS"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

551 :	"ctxt"
		- NEIGH  = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { allowIntermediateCRSUse , setAllowUseIntermediateCRS , ctxt , }
		- SUCC   = { candidateBoundCRS , CRSPtr , }

552 :	"CRSPtr"
		- NEIGH  = { candidateBoundCRS , CRSPtr , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { list , op , & , for , }

552 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , CRSPtr , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { hubCRS , geodCRS , ctxt , NN_NO_CHECK , createOperations , CoordinateOperationFactory , operation , create , list , }
		- SUCC   = { list , op , & , for , }

553 :	"for"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { candidateBoundCRS , CRSPtr , }
		- SUCC   = { candidateBoundCRS , if , }

553 :	"&"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { candidateBoundCRS , CRSPtr , }
		- SUCC   = { candidateBoundCRS , if , }

553 :	"op"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { candidateBoundCRS , CRSPtr , }
		- SUCC   = { candidateBoundCRS , if , }

553 :	"list"
		- NEIGH  = { list , op , & , for , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { starts_with , ! , operation , if , op , nn_dynamic_pointer_cast , Transformation , > , && , util , < , nameStr , transf , }
		- PRED   = { candidateBoundCRS , CRSPtr , }
		- SUCC   = { candidateBoundCRS , if , }

554 :	"transf"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

555 :	"util"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

555 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

555 :	"<"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

555 :	"operation"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

555 :	"Transformation"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

555 :	">"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

556 :	"op"
		- NEIGH  = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

557 :	"if"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { get , > , < , dynamic_cast , concatenated , as_nullable , create , catch , BoundCRS , operation , if , thisAsCRS , op , ConcatenatedOperation , & , exception , std , hubCRS , candidateBoundCRS , * , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

557 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { get , > , < , dynamic_cast , concatenated , as_nullable , create , catch , BoundCRS , operation , if , thisAsCRS , op , ConcatenatedOperation , & , exception , std , hubCRS , candidateBoundCRS , * , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

557 :	"&&"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { get , > , < , dynamic_cast , concatenated , as_nullable , create , catch , BoundCRS , operation , if , thisAsCRS , op , ConcatenatedOperation , & , exception , std , hubCRS , candidateBoundCRS , * , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

557 :	"!"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { get , > , < , dynamic_cast , concatenated , as_nullable , create , catch , BoundCRS , operation , if , thisAsCRS , op , ConcatenatedOperation , & , exception , std , hubCRS , candidateBoundCRS , * , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

557 :	"starts_with"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { get , > , < , dynamic_cast , concatenated , as_nullable , create , catch , BoundCRS , operation , if , thisAsCRS , op , ConcatenatedOperation , & , exception , std , hubCRS , candidateBoundCRS , * , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

557 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { get , > , < , dynamic_cast , concatenated , as_nullable , create , catch , BoundCRS , operation , if , thisAsCRS , op , ConcatenatedOperation , & , exception , std , hubCRS , candidateBoundCRS , * , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

557 :	"nameStr"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { list , op , & , for , }
		- CHILD  = { get , > , < , dynamic_cast , concatenated , as_nullable , create , catch , BoundCRS , operation , if , thisAsCRS , op , ConcatenatedOperation , & , exception , std , hubCRS , candidateBoundCRS , * , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { op , Transformation , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

559 :	"transf"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

559 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

560 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { candidateBoundCRS , if , }

560 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { candidateBoundCRS , if , }

560 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { candidateBoundCRS , if , }

560 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { candidateBoundCRS , if , }

561 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

563 :	"if"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { break , candidateBoundCRS , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }

563 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { break , candidateBoundCRS , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }

564 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

565 :	"break"
		- NEIGH  = { break , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , }
		- SUCC   = { }

567 :	"candidateBoundCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

568 :	"BoundCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

568 :	"create"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

568 :	"thisAsCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

568 :	"hubCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

568 :	"NN_NO_CHECK"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

568 :	"transf"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

569 :	"as_nullable"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

571 :	"concatenated"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

572 :	"dynamic_cast"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

572 :	"<"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

572 :	"operation"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

572 :	"ConcatenatedOperation"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

572 :	"*"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

572 :	">"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

573 :	"op"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

573 :	"get"
		- NEIGH  = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { concatenated , if , }

574 :	"if"
		- NEIGH  = { concatenated , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { size , if , operations , == , subops , concatenated , & , }
		- PRED   = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- SUCC   = { }

574 :	"concatenated"
		- NEIGH  = { concatenated , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { size , if , operations , == , subops , concatenated , & , }
		- PRED   = { get , op , > , ConcatenatedOperation , operation , < , * , dynamic_cast , concatenated , }
		- SUCC   = { }

578 :	"&"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

578 :	"subops"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

578 :	"concatenated"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

578 :	"operations"
		- NEIGH  = { operations , subops , concatenated , & , }
		- PARENT = { concatenated , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , subops , if , }

579 :	"if"
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

579 :	"subops"
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

579 :	"size"
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

579 :	"=="
		- NEIGH  = { == , size , subops , if , }
		- PARENT = { concatenated , if , }
		- CHILD  = { thisAsCRS , DerivedCRS , || , isLongitudeRotation , firstOpIsConversion , get , * , subops , && , > , if , operation , Conversion , Transformation , < , dynamic_cast , firstOpIsTransformation , }
		- PRED   = { operations , subops , concatenated , & , }
		- SUCC   = { }

580 :	"firstOpIsTransformation"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

581 :	"dynamic_cast"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

581 :	"<"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

581 :	"operation"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

581 :	"Transformation"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

581 :	"*"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

581 :	">"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

582 :	"subops"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

582 :	"get"
		- NEIGH  = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }

583 :	"firstOpIsConversion"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

584 :	"dynamic_cast"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

584 :	"<"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

584 :	"operation"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

584 :	"Conversion"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

584 :	"*"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

584 :	">"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

585 :	"subops"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

585 :	"get"
		- NEIGH  = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { }
		- PRED   = { get , subops , > , Transformation , < , * , dynamic_cast , operation , firstOpIsTransformation , }
		- SUCC   = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }

586 :	"if"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

586 :	"firstOpIsTransformation"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

586 :	"&&"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

587 :	"firstOpIsTransformation"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

588 :	"isLongitudeRotation"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

588 :	"||"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

589 :	"dynamic_cast"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

589 :	"<"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

589 :	"DerivedCRS"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

589 :	"*"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

589 :	">"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

589 :	"thisAsCRS"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

589 :	"get"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

589 :	"&&"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

590 :	"firstOpIsConversion"
		- NEIGH  = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- PARENT = { == , size , subops , if , }
		- CHILD  = { starts_with , ! , operation , if , nn_dynamic_pointer_cast , Transformation , > , && , subops , util , < , nameStr , transf , }
		- PRED   = { get , subops , > , Conversion , < , * , dynamic_cast , operation , firstOpIsConversion , }
		- SUCC   = { }

591 :	"transf"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

591 :	"util"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

591 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

591 :	"<"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

592 :	"operation"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

592 :	"Transformation"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

592 :	">"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

592 :	"subops"
		- NEIGH  = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { starts_with , if , ! , nameStr , && , transf , }

593 :	"if"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { as_nullable , create , catch , BoundCRS , if , thisAsCRS , & , exception , std , hubCRS , candidateBoundCRS , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

593 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { as_nullable , create , catch , BoundCRS , if , thisAsCRS , & , exception , std , hubCRS , candidateBoundCRS , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

593 :	"&&"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { as_nullable , create , catch , BoundCRS , if , thisAsCRS , & , exception , std , hubCRS , candidateBoundCRS , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

593 :	"!"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { as_nullable , create , catch , BoundCRS , if , thisAsCRS , & , exception , std , hubCRS , candidateBoundCRS , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

593 :	"starts_with"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { as_nullable , create , catch , BoundCRS , if , thisAsCRS , & , exception , std , hubCRS , candidateBoundCRS , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

593 :	"transf"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { as_nullable , create , catch , BoundCRS , if , thisAsCRS , & , exception , std , hubCRS , candidateBoundCRS , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

593 :	"nameStr"
		- NEIGH  = { starts_with , if , ! , nameStr , && , transf , }
		- PARENT = { firstOpIsConversion , get , thisAsCRS , && , > , DerivedCRS , dynamic_cast , < , * , isLongitudeRotation , || , firstOpIsTransformation , if , }
		- CHILD  = { as_nullable , create , catch , BoundCRS , if , thisAsCRS , & , exception , std , hubCRS , candidateBoundCRS , NN_NO_CHECK , getTOWGS84Parameters , transf , }
		- PRED   = { Transformation , operation , subops , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

596 :	"transf"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

596 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { & , exception , std , catch , }

597 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { candidateBoundCRS , if , }

597 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { candidateBoundCRS , if , }

597 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { candidateBoundCRS , if , }

597 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { continue , }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { candidateBoundCRS , if , }

598 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { & , exception , std , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

600 :	"if"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { break , candidateBoundCRS , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }

600 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { break , candidateBoundCRS , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }

601 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

602 :	"break"
		- NEIGH  = { break , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , }
		- SUCC   = { }

604 :	"candidateBoundCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

605 :	"BoundCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

605 :	"create"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

605 :	"thisAsCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

605 :	"hubCRS"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

606 :	"NN_NO_CHECK"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

606 :	"transf"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

607 :	"as_nullable"
		- NEIGH  = { as_nullable , transf , NN_NO_CHECK , hubCRS , create , BoundCRS , thisAsCRS , candidateBoundCRS , }
		- PARENT = { starts_with , if , ! , nameStr , && , transf , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

614 :	"if"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PRED   = { list , op , & , for , }
		- SUCC   = { & , exception , std , catch , }

614 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , if , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PRED   = { list , op , & , for , }
		- SUCC   = { & , exception , std , catch , }

615 :	"return"
		- NEIGH  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

615 :	"NN_NO_CHECK"
		- NEIGH  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

615 :	"candidateBoundCRS"
		- NEIGH  = { candidateBoundCRS , NN_NO_CHECK , return , }
		- PARENT = { candidateBoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

617 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

617 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

617 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

617 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorities , authority , & , for , }
		- CHILD  = { }
		- PRED   = { candidateBoundCRS , if , }
		- SUCC   = { }

620 :	"return"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorities , authority , & , for , }
		- SUCC   = { }

620 :	"thisAsCRS"
		- NEIGH  = { thisAsCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorities , authority , & , for , }
		- SUCC   = { }

630 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

630 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

630 :	"stripVerticalComponent"
		- NEIGH  = { stripVerticalComponent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

631 :	"self"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

631 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

632 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

632 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

632 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

632 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

632 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

632 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

632 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

634 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

634 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

634 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

634 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

634 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

634 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

634 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { geogCRS , if , }

635 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

635 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

636 :	"&"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

636 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

636 :	"geogCRS"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

636 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

636 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

637 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

637 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

637 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

637 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , NAME_KEY , common , set , geogCRS , CRS , cs , util , < , > , nameStr , nn_static_pointer_cast , return , axisList , datumEnsemble , IdentifiedObject , EllipsoidalCS , PropertyMap , GeographicCRS , create , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

638 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

638 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

638 :	"EllipsoidalCS"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

638 :	"create"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

638 :	"util"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

638 :	"PropertyMap"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

639 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

639 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }

640 :	"return"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

640 :	"util"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

640 :	"nn_static_pointer_cast"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

640 :	"<"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

640 :	"CRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

640 :	">"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

640 :	"GeographicCRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

640 :	"create"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

641 :	"util"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

641 :	"PropertyMap"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

641 :	"set"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

641 :	"common"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

641 :	"IdentifiedObject"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

641 :	"NAME_KEY"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

642 :	"nameStr"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

643 :	"geogCRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

643 :	"datum"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

643 :	"geogCRS"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

643 :	"datumEnsemble"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

643 :	"cs"
		- NEIGH  = { datum , NAME_KEY , set , datumEnsemble , IdentifiedObject , PropertyMap , create , GeographicCRS , cs , util , < , > , nameStr , nn_static_pointer_cast , common , geogCRS , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

646 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

646 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

646 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

646 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

646 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

646 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

646 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

647 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { self , return , }

647 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { self , return , }

648 :	"&"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

648 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

648 :	"projCRS"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

648 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

648 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

649 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

649 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

649 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

649 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , NAME_KEY , common , set , CRS , projCRS , cs , util , < , return , axisList , create , IdentifiedObject , PropertyMap , ProjectedCRS , > , nameStr , nn_static_pointer_cast , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

650 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

650 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

650 :	"CartesianCS"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

650 :	"create"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

650 :	"util"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

650 :	"PropertyMap"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

650 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

651 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }

652 :	"return"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

652 :	"util"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

652 :	"nn_static_pointer_cast"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

652 :	"<"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

652 :	"CRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

652 :	">"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

652 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

652 :	"create"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

653 :	"util"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

653 :	"PropertyMap"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

653 :	"set"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

653 :	"common"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

653 :	"IdentifiedObject"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

653 :	"NAME_KEY"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

654 :	"nameStr"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

655 :	"projCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

655 :	"baseCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

655 :	"projCRS"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

655 :	"derivingConversion"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

655 :	"cs"
		- NEIGH  = { derivingConversion , baseCRS , NAME_KEY , IdentifiedObject , PropertyMap , create , set , > , ProjectedCRS , cs , projCRS , util , < , nameStr , nn_static_pointer_cast , common , CRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

658 :	"return"
		- NEIGH  = { self , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

658 :	"self"
		- NEIGH  = { self , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

666 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

666 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

666 :	"shallowClone"
		- NEIGH  = { shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

666 :	"return"
		- NEIGH  = { _shallowClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

666 :	"_shallowClone"
		- NEIGH  = { _shallowClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

674 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

674 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

674 :	"allowNonConformantWKT1Export"
		- NEIGH  = { allowNonConformantWKT1Export , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

675 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

675 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

675 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

675 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

675 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

675 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

675 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

676 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shallowClone , crs , }

676 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shallowClone , crs , }

677 :	"return"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

677 :	"BoundCRS"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

677 :	"create"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

678 :	"boundCRS"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

678 :	"baseCRS"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

678 :	"allowNonConformantWKT1Export"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

679 :	"boundCRS"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

679 :	"hubCRS"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

679 :	"boundCRS"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

679 :	"transformation"
		- NEIGH  = { transformation , hubCRS , allowNonConformantWKT1Export , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

681 :	"crs"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { allowNonConformantWKT1Export_ , d , crs , }

681 :	"shallowClone"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { allowNonConformantWKT1Export_ , d , crs , }

682 :	"crs"
		- NEIGH  = { allowNonConformantWKT1Export_ , d , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { crs , return , }

682 :	"d"
		- NEIGH  = { allowNonConformantWKT1Export_ , d , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { crs , return , }

682 :	"allowNonConformantWKT1Export_"
		- NEIGH  = { allowNonConformantWKT1Export_ , d , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { crs , return , }

683 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { allowNonConformantWKT1Export_ , d , crs , }
		- SUCC   = { }

683 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { allowNonConformantWKT1Export_ , d , crs , }
		- SUCC   = { }

692 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

693 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

693 :	"attachOriginalCompoundCRS"
		- NEIGH  = { attachOriginalCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

693 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

693 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

693 :	"compoundCRS"
		- NEIGH  = { compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

695 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

695 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

695 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

695 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

695 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

695 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

695 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { boundCRS , if , }

696 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shallowClone , crs , }

696 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shallowClone , crs , }

697 :	"return"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

697 :	"BoundCRS"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

697 :	"create"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

698 :	"boundCRS"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

698 :	"baseCRS"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

698 :	"attachOriginalCompoundCRS"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

698 :	"compoundCRS"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

699 :	"boundCRS"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

699 :	"hubCRS"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

699 :	"boundCRS"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

699 :	"transformation"
		- NEIGH  = { transformation , hubCRS , compoundCRS , attachOriginalCompoundCRS , boundCRS , create , BoundCRS , baseCRS , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

702 :	"crs"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { as_nullable , compoundCRS , originalCompoundCRS_ , d , crs , }

702 :	"shallowClone"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { as_nullable , compoundCRS , originalCompoundCRS_ , d , crs , }

703 :	"crs"
		- NEIGH  = { as_nullable , compoundCRS , originalCompoundCRS_ , d , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { crs , return , }

703 :	"d"
		- NEIGH  = { as_nullable , compoundCRS , originalCompoundCRS_ , d , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { crs , return , }

703 :	"originalCompoundCRS_"
		- NEIGH  = { as_nullable , compoundCRS , originalCompoundCRS_ , d , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { crs , return , }

703 :	"compoundCRS"
		- NEIGH  = { as_nullable , compoundCRS , originalCompoundCRS_ , d , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { crs , return , }

703 :	"as_nullable"
		- NEIGH  = { as_nullable , compoundCRS , originalCompoundCRS_ , d , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { crs , return , }

704 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , compoundCRS , originalCompoundCRS_ , d , crs , }
		- SUCC   = { }

704 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , compoundCRS , originalCompoundCRS_ , d , crs , }
		- SUCC   = { }

713 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

713 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

713 :	"alterName"
		- NEIGH  = { alterName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

713 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

713 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

713 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

713 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

714 :	"crs"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newName , newNameMod , }

714 :	"shallowClone"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newName , newNameMod , }

715 :	"newNameMod"
		- NEIGH  = { newName , newNameMod , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { PropertyMap , util , props , }

715 :	"newName"
		- NEIGH  = { newName , newNameMod , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { PropertyMap , util , props , }

716 :	"props"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , newNameMod , }
		- SUCC   = { newNameMod , ends_with , if , }

716 :	"util"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , newNameMod , }
		- SUCC   = { newNameMod , ends_with , if , }

716 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , newNameMod , }
		- SUCC   = { newNameMod , ends_with , if , }

717 :	"if"
		- NEIGH  = { newNameMod , ends_with , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , props , - , resize , size , DEPRECATED_KEY , strlen , set , newNameMod , }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }

717 :	"ends_with"
		- NEIGH  = { newNameMod , ends_with , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , props , - , resize , size , DEPRECATED_KEY , strlen , set , newNameMod , }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }

717 :	"newNameMod"
		- NEIGH  = { newNameMod , ends_with , if , }
		- PARENT = { }
		- CHILD  = { IdentifiedObject , common , props , - , resize , size , DEPRECATED_KEY , strlen , set , newNameMod , }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }

718 :	"newNameMod"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

718 :	"resize"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

718 :	"newNameMod"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

718 :	"size"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

718 :	"-"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

718 :	"strlen"
		- NEIGH  = { - , size , strlen , resize , newNameMod , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }

719 :	"props"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

719 :	"set"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

719 :	"common"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

719 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

719 :	"DEPRECATED_KEY"
		- NEIGH  = { IdentifiedObject , common , set , DEPRECATED_KEY , props , }
		- PARENT = { newNameMod , ends_with , if , }
		- CHILD  = { }
		- PRED   = { - , size , strlen , resize , newNameMod , }
		- SUCC   = { }

721 :	"props"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

721 :	"set"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

721 :	"common"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

721 :	"IdentifiedObject"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

721 :	"NAME_KEY"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

721 :	"newNameMod"
		- NEIGH  = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newNameMod , ends_with , if , }
		- SUCC   = { props , setProperties , crs , }

722 :	"crs"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- SUCC   = { crs , return , }

722 :	"setProperties"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- SUCC   = { crs , return , }

722 :	"props"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , NAME_KEY , IdentifiedObject , common , newNameMod , set , }
		- SUCC   = { crs , return , }

723 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

723 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

732 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

732 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

732 :	"alterId"
		- NEIGH  = { alterId , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

732 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

732 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

732 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

732 :	"authName"
		- NEIGH  = { authName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

733 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

733 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

733 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

733 :	"code"
		- NEIGH  = { code , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

734 :	"crs"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PropertyMap , util , props , }

734 :	"shallowClone"
		- NEIGH  = { shallowClone , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { PropertyMap , util , props , }

735 :	"props"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }

735 :	"util"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }

735 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowClone , crs , }
		- SUCC   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }

736 :	"props"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

736 :	"set"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

736 :	"metadata"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

736 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

736 :	"CODESPACE_KEY"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

736 :	"authName"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

737 :	"set"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

737 :	"metadata"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

737 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

737 :	"CODE_KEY"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

737 :	"code"
		- NEIGH  = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , props , }
		- SUCC   = { props , setProperties , crs , }

738 :	"crs"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- SUCC   = { crs , return , }

738 :	"setProperties"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- SUCC   = { crs , return , }

738 :	"props"
		- NEIGH  = { props , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { code , CODE_KEY , metadata , CODESPACE_KEY , authName , Identifier , set , props , }
		- SUCC   = { crs , return , }

739 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

739 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { props , setProperties , crs , }
		- SUCC   = { }

748 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualizationInternal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

749 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

749 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

749 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

749 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

749 :	"CoordinateSystemAxisNNPtr"
		- NEIGH  = { CoordinateSystemAxisNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

749 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

749 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

749 :	"axisList"
		- NEIGH  = { axisList , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

750 :	"&"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

750 :	"dir0"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

750 :	"axisList"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

750 :	"direction"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

751 :	"&"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

751 :	"dir1"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

751 :	"axisList"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

751 :	"direction"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

752 :	"if"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

752 :	"&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

752 :	"dir0"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

752 :	"=="
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

752 :	"&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

752 :	"cs"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

752 :	"AxisDirection"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

752 :	"NORTH"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

752 :	"&&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

753 :	"&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

753 :	"dir1"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

753 :	"=="
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

753 :	"&"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

753 :	"cs"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

753 :	"AxisDirection"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

753 :	"EAST"
		- NEIGH  = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }

754 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

758 :	"if"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

758 :	"&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

758 :	"dir0"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

758 :	"=="
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

758 :	"&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

758 :	"cs"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

758 :	"AxisDirection"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

758 :	"SOUTH"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

758 :	"&&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

759 :	"&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

759 :	"dir1"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

759 :	"=="
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

759 :	"&"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

759 :	"cs"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

759 :	"AxisDirection"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

759 :	"SOUTH"
		- NEIGH  = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , EAST , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }

760 :	"&"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

760 :	"meridian0"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

760 :	"axisList"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

760 :	"meridian"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

761 :	"&"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

761 :	"meridian1"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

761 :	"axisList"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

761 :	"meridian"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

762 :	"return"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

762 :	"meridian0"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

762 :	"!="
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

762 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

762 :	"meridian1"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

762 :	"!="
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

762 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

763 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

763 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

763 :	"meridian0"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

763 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

763 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

764 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

764 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

764 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

764 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

765 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

765 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

766 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

766 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

766 :	"meridian1"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

766 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

766 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

767 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

767 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

767 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

767 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

768 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

771 :	"if"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

771 :	"&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

771 :	"dir0"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

771 :	"=="
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

771 :	"&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

771 :	"cs"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

771 :	"AxisDirection"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

771 :	"NORTH"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

771 :	"&&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

772 :	"&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

772 :	"dir1"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

772 :	"=="
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

772 :	"&"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

772 :	"cs"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

772 :	"AxisDirection"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

772 :	"NORTH"
		- NEIGH  = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- PARENT = { }
		- CHILD  = { UnitOfMeasure , < , convertToUnit , common , != , DEGREE , std , || , - , meridian0 , return , axisList , abs , meridian1 , meridian , longitude , && , & , }
		- PRED   = { dir1 , SOUTH , AxisDirection , && , == , cs , & , dir0 , if , }
		- SUCC   = { return , }

773 :	"&"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

773 :	"meridian0"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

773 :	"axisList"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

773 :	"meridian"
		- NEIGH  = { meridian , axisList , meridian0 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { meridian , axisList , meridian1 , & , }

774 :	"&"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

774 :	"meridian1"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

774 :	"axisList"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

774 :	"meridian"
		- NEIGH  = { meridian , axisList , meridian1 , & , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian0 , & , }
		- SUCC   = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }

775 :	"return"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

775 :	"meridian0"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

775 :	"!="
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

775 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

775 :	"meridian1"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

775 :	"!="
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

775 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

778 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

778 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

778 :	"meridian0"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

778 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

778 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

779 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

779 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

779 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

779 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

780 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

780 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

781 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

781 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

781 :	"meridian1"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

781 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

781 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

782 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

782 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

782 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

782 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

783 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

783 :	"||"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

785 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

785 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

785 :	"meridian0"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

785 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

785 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

786 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

786 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

786 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

786 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

787 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

787 :	"&&"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

788 :	"std"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

788 :	"abs"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

788 :	"meridian1"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

788 :	"longitude"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

788 :	"convertToUnit"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

789 :	"common"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

789 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

789 :	"DEGREE"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

789 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

790 :	"-"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

790 :	"<"
		- NEIGH  = { UnitOfMeasure , != , common , meridian1 , abs , longitude , || , - , return , meridian0 , && , < , convertToUnit , DEGREE , std , }
		- PARENT = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- CHILD  = { }
		- PRED   = { meridian , axisList , meridian1 , & , }
		- SUCC   = { }

793 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dir1 , AxisDirection , && , == , cs , NORTH , & , dir0 , if , }
		- SUCC   = { }

797 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

797 :	"mustAxisOrderBeSwitchedForVisualization"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

799 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

799 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

799 :	"compoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

799 :	"dynamic_cast"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

799 :	"<"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

799 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

799 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

799 :	">"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

799 :	"this"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { compoundCRS , if , }

800 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

800 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , componentReferenceSystems , & , comps , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

801 :	"&"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

801 :	"comps"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

801 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

801 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , comps , ! , if , }

802 :	"if"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

802 :	"!"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

802 :	"comps"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

802 :	"empty"
		- NEIGH  = { empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

803 :	"return"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

803 :	"comps"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

803 :	"mustAxisOrderBeSwitchedForVisualization"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , comps , return , }
		- PARENT = { empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

807 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

807 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

807 :	"geogCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

807 :	"dynamic_cast"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

807 :	"<"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

807 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

807 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

807 :	">"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

807 :	"this"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

808 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

808 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

809 :	"return"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

809 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

810 :	"geogCRS"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

810 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

810 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , geogCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

813 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

813 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

813 :	"projCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

813 :	"dynamic_cast"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

813 :	"<"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

813 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

813 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

813 :	">"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

813 :	"this"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

814 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { return , }

814 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { return , }

815 :	"return"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

815 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

816 :	"projCRS"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

816 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

816 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , projCRS , mustAxisOrderBeSwitchedForVisualizationInternal , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

819 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

828 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

828 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

828 :	"normalizeForVisualization"
		- NEIGH  = { normalizeForVisualization , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

830 :	"createProperties"
		- NEIGH  = { & , string , std , newName , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

830 :	"this"
		- NEIGH  = { & , string , std , newName , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

830 :	"std"
		- NEIGH  = { & , string , std , newName , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

830 :	"string"
		- NEIGH  = { & , string , std , newName , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

830 :	"&"
		- NEIGH  = { & , string , std , newName , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

830 :	"newName"
		- NEIGH  = { & , string , std , newName , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

831 :	"std"
		- NEIGH  = { & , string , std , newName , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

831 :	"string"
		- NEIGH  = { & , string , std , newName , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }

832 :	"props"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

832 :	"util"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

832 :	"PropertyMap"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

832 :	"set"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

833 :	"common"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

833 :	"IdentifiedObject"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

833 :	"NAME_KEY"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

834 :	"!"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

834 :	"newName"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

834 :	"empty"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

835 :	"newName"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

836 :	"nameStr"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

836 :	"+"
		- NEIGH  = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

838 :	"&"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- SUCC   = { empty , ! , l_domains , if , }

838 :	"l_domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- SUCC   = { empty , ! , l_domains , if , }

838 :	"domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { + , nameStr , ! , PropertyMap , IdentifiedObject , util , common , newName , set , empty , NAME_KEY , props , }
		- SUCC   = { empty , ! , l_domains , if , }

839 :	"if"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , empty , domain , & , ! , if , array , create , ArrayOfBaseObject , for , util , }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { identifiers , l_identifiers , & , }

839 :	"!"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , empty , domain , & , ! , if , array , create , ArrayOfBaseObject , for , util , }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { identifiers , l_identifiers , & , }

839 :	"l_domains"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , empty , domain , & , ! , if , array , create , ArrayOfBaseObject , for , util , }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { identifiers , l_identifiers , & , }

839 :	"empty"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , empty , domain , & , ! , if , array , create , ArrayOfBaseObject , for , util , }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { identifiers , l_identifiers , & , }

840 :	"array"
		- NEIGH  = { create , ArrayOfBaseObject , util , array , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { domain , & , l_domains , for , }

840 :	"util"
		- NEIGH  = { create , ArrayOfBaseObject , util , array , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { domain , & , l_domains , for , }

840 :	"ArrayOfBaseObject"
		- NEIGH  = { create , ArrayOfBaseObject , util , array , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { domain , & , l_domains , for , }

840 :	"create"
		- NEIGH  = { create , ArrayOfBaseObject , util , array , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { domain , & , l_domains , for , }

841 :	"for"
		- NEIGH  = { domain , & , l_domains , for , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { domain , add , array , }
		- PRED   = { create , ArrayOfBaseObject , util , array , }
		- SUCC   = { empty , array , ! , if , }

841 :	"&"
		- NEIGH  = { domain , & , l_domains , for , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { domain , add , array , }
		- PRED   = { create , ArrayOfBaseObject , util , array , }
		- SUCC   = { empty , array , ! , if , }

841 :	"domain"
		- NEIGH  = { domain , & , l_domains , for , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { domain , add , array , }
		- PRED   = { create , ArrayOfBaseObject , util , array , }
		- SUCC   = { empty , array , ! , if , }

841 :	"l_domains"
		- NEIGH  = { domain , & , l_domains , for , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { domain , add , array , }
		- PRED   = { create , ArrayOfBaseObject , util , array , }
		- SUCC   = { empty , array , ! , if , }

842 :	"array"
		- NEIGH  = { domain , add , array , }
		- PARENT = { domain , & , l_domains , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

842 :	"add"
		- NEIGH  = { domain , add , array , }
		- PARENT = { domain , & , l_domains , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

842 :	"domain"
		- NEIGH  = { domain , add , array , }
		- PARENT = { domain , & , l_domains , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

844 :	"if"
		- NEIGH  = { empty , array , ! , if , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PRED   = { domain , & , l_domains , for , }
		- SUCC   = { }

844 :	"!"
		- NEIGH  = { empty , array , ! , if , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PRED   = { domain , & , l_domains , for , }
		- SUCC   = { }

844 :	"array"
		- NEIGH  = { empty , array , ! , if , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PRED   = { domain , & , l_domains , for , }
		- SUCC   = { }

844 :	"empty"
		- NEIGH  = { empty , array , ! , if , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PRED   = { domain , & , l_domains , for , }
		- SUCC   = { }

845 :	"props"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

845 :	"set"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

845 :	"common"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

845 :	"ObjectUsage"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

845 :	"OBJECT_DOMAIN_KEY"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

845 :	"array"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

848 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { remarks , l_remarks , & , }

848 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { remarks , l_remarks , & , }

848 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { remarks , l_remarks , & , }

849 :	"&"
		- NEIGH  = { remarks , l_remarks , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { == , size , l_identifiers , if , }

849 :	"l_remarks"
		- NEIGH  = { remarks , l_remarks , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { == , size , l_identifiers , if , }

849 :	"remarks"
		- NEIGH  = { remarks , l_remarks , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { == , size , l_identifiers , if , }

850 :	"if"
		- NEIGH  = { == , size , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { REMARKS_KEY , IdentifiedObject , common , props , string , ! , set , if , code , remarks , * , std , codeSpace , += , empty , l_remarks , l_identifiers , }
		- PRED   = { remarks , l_remarks , & , }
		- SUCC   = { props , return , }

850 :	"l_identifiers"
		- NEIGH  = { == , size , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { REMARKS_KEY , IdentifiedObject , common , props , string , ! , set , if , code , remarks , * , std , codeSpace , += , empty , l_remarks , l_identifiers , }
		- PRED   = { remarks , l_remarks , & , }
		- SUCC   = { props , return , }

850 :	"size"
		- NEIGH  = { == , size , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { REMARKS_KEY , IdentifiedObject , common , props , string , ! , set , if , code , remarks , * , std , codeSpace , += , empty , l_remarks , l_identifiers , }
		- PRED   = { remarks , l_remarks , & , }
		- SUCC   = { props , return , }

850 :	"=="
		- NEIGH  = { == , size , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { REMARKS_KEY , IdentifiedObject , common , props , string , ! , set , if , code , remarks , * , std , codeSpace , += , empty , l_remarks , l_identifiers , }
		- PRED   = { remarks , l_remarks , & , }
		- SUCC   = { props , return , }

851 :	"std"
		- NEIGH  = { string , remarks , std , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_identifiers , * , += , codeSpace , remarks , }

851 :	"string"
		- NEIGH  = { string , remarks , std , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_identifiers , * , += , codeSpace , remarks , }

851 :	"remarks"
		- NEIGH  = { string , remarks , std , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_identifiers , * , += , codeSpace , remarks , }

852 :	"remarks"
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

852 :	"+="
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

852 :	"*"
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

852 :	"l_identifiers"
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

852 :	"codeSpace"
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

853 :	"remarks"
		- NEIGH  = { += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , += , codeSpace , remarks , }
		- SUCC   = { code , l_identifiers , += , remarks , }

853 :	"+="
		- NEIGH  = { += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , += , codeSpace , remarks , }
		- SUCC   = { code , l_identifiers , += , remarks , }

854 :	"remarks"
		- NEIGH  = { code , l_identifiers , += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { empty , ! , l_remarks , if , }

854 :	"+="
		- NEIGH  = { code , l_identifiers , += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { empty , ! , l_remarks , if , }

854 :	"l_identifiers"
		- NEIGH  = { code , l_identifiers , += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { empty , ! , l_remarks , if , }

854 :	"code"
		- NEIGH  = { code , l_identifiers , += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { empty , ! , l_remarks , if , }

855 :	"if"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { += , l_remarks , remarks , }
		- PRED   = { code , l_identifiers , += , remarks , }
		- SUCC   = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }

855 :	"!"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { += , l_remarks , remarks , }
		- PRED   = { code , l_identifiers , += , remarks , }
		- SUCC   = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }

855 :	"l_remarks"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { += , l_remarks , remarks , }
		- PRED   = { code , l_identifiers , += , remarks , }
		- SUCC   = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }

855 :	"empty"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { += , l_remarks , remarks , }
		- PRED   = { code , l_identifiers , += , remarks , }
		- SUCC   = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }

856 :	"remarks"
		- NEIGH  = { += , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , l_remarks , remarks , }

856 :	"+="
		- NEIGH  = { += , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , l_remarks , remarks , }

857 :	"remarks"
		- NEIGH  = { += , l_remarks , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { }

857 :	"+="
		- NEIGH  = { += , l_remarks , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { }

857 :	"l_remarks"
		- NEIGH  = { += , l_remarks , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { }

859 :	"props"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

859 :	"set"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

859 :	"common"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

859 :	"IdentifiedObject"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

859 :	"REMARKS_KEY"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

859 :	"remarks"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

860 :	"if"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PRED   = { }
		- SUCC   = { }

860 :	"!"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PRED   = { }
		- SUCC   = { }

860 :	"l_remarks"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PRED   = { }
		- SUCC   = { }

860 :	"empty"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PRED   = { }
		- SUCC   = { }

861 :	"props"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

861 :	"set"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

861 :	"common"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

861 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

861 :	"REMARKS_KEY"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

861 :	"l_remarks"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

863 :	"return"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , size , l_identifiers , if , }
		- SUCC   = { }

863 :	"props"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , size , l_identifiers , if , }
		- SUCC   = { }

866 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , string , std , newName , this , createProperties , }
		- SUCC   = { compoundCRS , if , }

866 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , string , std , newName , this , createProperties , }
		- SUCC   = { compoundCRS , if , }

866 :	"compoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , string , std , newName , this , createProperties , }
		- SUCC   = { compoundCRS , if , }

866 :	"dynamic_cast"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , string , std , newName , this , createProperties , }
		- SUCC   = { compoundCRS , if , }

866 :	"<"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , string , std , newName , this , createProperties , }
		- SUCC   = { compoundCRS , if , }

866 :	"CompoundCRS"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , string , std , newName , this , createProperties , }
		- SUCC   = { compoundCRS , if , }

866 :	"*"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , string , std , newName , this , createProperties , }
		- SUCC   = { compoundCRS , if , }

866 :	">"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , string , std , newName , this , createProperties , }
		- SUCC   = { compoundCRS , if , }

866 :	"this"
		- NEIGH  = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { & , string , std , newName , this , createProperties , }
		- SUCC   = { compoundCRS , if , }

867 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { && , empty , ! , if , componentReferenceSystems , & , comps , mustAxisOrderBeSwitchedForVisualization , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

867 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { && , empty , ! , if , componentReferenceSystems , & , comps , mustAxisOrderBeSwitchedForVisualization , compoundCRS , }
		- PRED   = { > , < , this , dynamic_cast , compoundCRS , * , CompoundCRS , }
		- SUCC   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }

868 :	"&"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }

868 :	"comps"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }

868 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }

868 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , comps , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }

869 :	"if"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { createProperties , size , return , ++ , CRS , i , nn_static_pointer_cast , nameStr , size_t , create , back , < , l_name , CompoundCRS , newComps , normalizeForVisualization , string , comps , vector , emplace_back , > , CRSNNPtr , for , util , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

869 :	"!"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { createProperties , size , return , ++ , CRS , i , nn_static_pointer_cast , nameStr , size_t , create , back , < , l_name , CompoundCRS , newComps , normalizeForVisualization , string , comps , vector , emplace_back , > , CRSNNPtr , for , util , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

869 :	"comps"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { createProperties , size , return , ++ , CRS , i , nn_static_pointer_cast , nameStr , size_t , create , back , < , l_name , CompoundCRS , newComps , normalizeForVisualization , string , comps , vector , emplace_back , > , CRSNNPtr , for , util , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

869 :	"empty"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { createProperties , size , return , ++ , CRS , i , nn_static_pointer_cast , nameStr , size_t , create , back , < , l_name , CompoundCRS , newComps , normalizeForVisualization , string , comps , vector , emplace_back , > , CRSNNPtr , for , util , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

869 :	"&&"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { createProperties , size , return , ++ , CRS , i , nn_static_pointer_cast , nameStr , size_t , create , back , < , l_name , CompoundCRS , newComps , normalizeForVisualization , string , comps , vector , emplace_back , > , CRSNNPtr , for , util , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

870 :	"comps"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { createProperties , size , return , ++ , CRS , i , nn_static_pointer_cast , nameStr , size_t , create , back , < , l_name , CompoundCRS , newComps , normalizeForVisualization , string , comps , vector , emplace_back , > , CRSNNPtr , for , util , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

870 :	"mustAxisOrderBeSwitchedForVisualization"
		- NEIGH  = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { createProperties , size , return , ++ , CRS , i , nn_static_pointer_cast , nameStr , size_t , create , back , < , l_name , CompoundCRS , newComps , normalizeForVisualization , string , comps , vector , emplace_back , > , CRSNNPtr , for , util , std , }
		- PRED   = { componentReferenceSystems , comps , compoundCRS , & , }
		- SUCC   = { }

871 :	"std"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

871 :	"vector"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

871 :	"<"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

871 :	"CRSNNPtr"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

871 :	">"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

871 :	"newComps"
		- NEIGH  = { newComps , > , CRSNNPtr , < , vector , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { normalizeForVisualization , emplace_back , comps , newComps , }

872 :	"newComps"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { nameStr , newComps , string , l_name , back , std , }

872 :	"emplace_back"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { nameStr , newComps , string , l_name , back , std , }

872 :	"comps"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { nameStr , newComps , string , l_name , back , std , }

872 :	"normalizeForVisualization"
		- NEIGH  = { normalizeForVisualization , emplace_back , comps , newComps , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { newComps , > , CRSNNPtr , < , vector , std , }
		- SUCC   = { nameStr , newComps , string , l_name , back , std , }

873 :	"std"
		- NEIGH  = { nameStr , newComps , string , l_name , back , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

873 :	"string"
		- NEIGH  = { nameStr , newComps , string , l_name , back , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

873 :	"l_name"
		- NEIGH  = { nameStr , newComps , string , l_name , back , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

873 :	"newComps"
		- NEIGH  = { nameStr , newComps , string , l_name , back , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

873 :	"back"
		- NEIGH  = { nameStr , newComps , string , l_name , back , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

873 :	"nameStr"
		- NEIGH  = { nameStr , newComps , string , l_name , back , std , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , emplace_back , comps , newComps , }
		- SUCC   = { ++ , size_t , i , comps , < , size , for , }

874 :	"for"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { back , += , l_name , i , nameStr , emplace_back , comps , newComps , }
		- PRED   = { nameStr , newComps , string , l_name , back , std , }
		- SUCC   = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }

874 :	"size_t"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { back , += , l_name , i , nameStr , emplace_back , comps , newComps , }
		- PRED   = { nameStr , newComps , string , l_name , back , std , }
		- SUCC   = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }

874 :	"i"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { back , += , l_name , i , nameStr , emplace_back , comps , newComps , }
		- PRED   = { nameStr , newComps , string , l_name , back , std , }
		- SUCC   = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }

874 :	"i"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { back , += , l_name , i , nameStr , emplace_back , comps , newComps , }
		- PRED   = { nameStr , newComps , string , l_name , back , std , }
		- SUCC   = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }

874 :	"<"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { back , += , l_name , i , nameStr , emplace_back , comps , newComps , }
		- PRED   = { nameStr , newComps , string , l_name , back , std , }
		- SUCC   = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }

874 :	"comps"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { back , += , l_name , i , nameStr , emplace_back , comps , newComps , }
		- PRED   = { nameStr , newComps , string , l_name , back , std , }
		- SUCC   = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }

874 :	"size"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { back , += , l_name , i , nameStr , emplace_back , comps , newComps , }
		- PRED   = { nameStr , newComps , string , l_name , back , std , }
		- SUCC   = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }

874 :	"i"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { back , += , l_name , i , nameStr , emplace_back , comps , newComps , }
		- PRED   = { nameStr , newComps , string , l_name , back , std , }
		- SUCC   = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }

874 :	"++"
		- NEIGH  = { ++ , size_t , i , comps , < , size , for , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { back , += , l_name , i , nameStr , emplace_back , comps , newComps , }
		- PRED   = { nameStr , newComps , string , l_name , back , std , }
		- SUCC   = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }

875 :	"newComps"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , l_name , }

875 :	"emplace_back"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , l_name , }

875 :	"comps"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , l_name , }

875 :	"i"
		- NEIGH  = { i , emplace_back , comps , newComps , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , l_name , }

876 :	"l_name"
		- NEIGH  = { += , l_name , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { i , emplace_back , comps , newComps , }
		- SUCC   = { back , nameStr , newComps , += , l_name , }

876 :	"+="
		- NEIGH  = { += , l_name , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { i , emplace_back , comps , newComps , }
		- SUCC   = { back , nameStr , newComps , += , l_name , }

877 :	"l_name"
		- NEIGH  = { back , nameStr , newComps , += , l_name , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { += , l_name , }
		- SUCC   = { }

877 :	"+="
		- NEIGH  = { back , nameStr , newComps , += , l_name , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { += , l_name , }
		- SUCC   = { }

877 :	"newComps"
		- NEIGH  = { back , nameStr , newComps , += , l_name , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { += , l_name , }
		- SUCC   = { }

877 :	"back"
		- NEIGH  = { back , nameStr , newComps , += , l_name , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { += , l_name , }
		- SUCC   = { }

877 :	"nameStr"
		- NEIGH  = { back , nameStr , newComps , += , l_name , }
		- PARENT = { ++ , size_t , i , comps , < , size , for , }
		- CHILD  = { }
		- PRED   = { += , l_name , }
		- SUCC   = { }

879 :	"return"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

879 :	"util"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

879 :	"nn_static_pointer_cast"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

879 :	"<"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

879 :	"CRS"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

879 :	">"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

880 :	"CompoundCRS"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

880 :	"create"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

880 :	"createProperties"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

880 :	"l_name"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

880 :	"newComps"
		- NEIGH  = { l_name , create , newComps , CompoundCRS , < , createProperties , > , nn_static_pointer_cast , util , CRS , return , }
		- PARENT = { mustAxisOrderBeSwitchedForVisualization , && , empty , comps , ! , if , }
		- CHILD  = { }
		- PRED   = { ++ , size_t , i , comps , < , size , for , }
		- SUCC   = { }

884 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

884 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

884 :	"geogCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

884 :	"dynamic_cast"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

884 :	"<"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

884 :	"GeographicCRS"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

884 :	"*"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

884 :	">"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

884 :	"this"
		- NEIGH  = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { geogCRS , if , }

885 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualizationInternal , if , coordinateSystem , geogCRS , axisList , & , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

885 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualizationInternal , if , coordinateSystem , geogCRS , axisList , & , }
		- PRED   = { > , < , geogCRS , this , * , dynamic_cast , GeographicCRS , }
		- SUCC   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }

886 :	"&"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

886 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

886 :	"geogCRS"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

886 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

886 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

887 :	"if"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , createProperties , > , geogCRS , CRS , cs , util , < , size , nn_static_pointer_cast , return , datumEnsemble , EllipsoidalCS , == , PropertyMap , GeographicCRS , create , axisList , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

887 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , createProperties , > , geogCRS , CRS , cs , util , < , size , nn_static_pointer_cast , return , datumEnsemble , EllipsoidalCS , == , PropertyMap , GeographicCRS , create , axisList , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

887 :	"axisList"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datum , createProperties , > , geogCRS , CRS , cs , util , < , size , nn_static_pointer_cast , return , datumEnsemble , EllipsoidalCS , == , PropertyMap , GeographicCRS , create , axisList , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

888 :	"cs"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

888 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

888 :	"size"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

888 :	"=="
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

889 :	"cs"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

889 :	"EllipsoidalCS"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

889 :	"create"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

889 :	"util"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

889 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

890 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

890 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

891 :	"cs"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

891 :	"EllipsoidalCS"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

891 :	"create"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

891 :	"util"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

891 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

892 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

892 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

893 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

894 :	"return"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

894 :	"util"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

894 :	"nn_static_pointer_cast"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

894 :	"<"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

894 :	"CRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

894 :	">"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

895 :	"GeographicCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

895 :	"create"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

895 :	"createProperties"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

895 :	"geogCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

895 :	"datum"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

896 :	"geogCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

896 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

896 :	"cs"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , cs , == , EllipsoidalCS , size , axisList , }
		- SUCC   = { }

900 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

900 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

900 :	"projCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

900 :	"dynamic_cast"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

900 :	"<"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

900 :	"ProjectedCRS"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

900 :	"*"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

900 :	">"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

900 :	"this"
		- NEIGH  = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

901 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualizationInternal , if , coordinateSystem , axisList , projCRS , & , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

901 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { mustAxisOrderBeSwitchedForVisualizationInternal , if , coordinateSystem , axisList , projCRS , & , }
		- PRED   = { > , this , * , dynamic_cast , projCRS , < , ProjectedCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

902 :	"&"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

902 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

902 :	"projCRS"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

902 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

902 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }

903 :	"if"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , ProjectedCRS , > , CRS , projCRS , cs , util , < , return , == , PropertyMap , create , size , nn_static_pointer_cast , createProperties , CartesianCS , axisList , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

903 :	"mustAxisOrderBeSwitchedForVisualizationInternal"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , ProjectedCRS , > , CRS , projCRS , cs , util , < , return , == , PropertyMap , create , size , nn_static_pointer_cast , createProperties , CartesianCS , axisList , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

903 :	"axisList"
		- NEIGH  = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { derivingConversion , baseCRS , ProjectedCRS , > , CRS , projCRS , cs , util , < , return , == , PropertyMap , create , size , nn_static_pointer_cast , createProperties , CartesianCS , axisList , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

904 :	"cs"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

905 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

905 :	"size"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

905 :	"=="
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

906 :	"cs"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

906 :	"CartesianCS"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

906 :	"create"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

906 :	"util"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

906 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

906 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

907 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

908 :	"cs"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

908 :	"CartesianCS"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

908 :	"create"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

908 :	"util"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

908 :	"PropertyMap"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

908 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

909 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

909 :	"axisList"
		- NEIGH  = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }

910 :	"return"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

910 :	"util"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

910 :	"nn_static_pointer_cast"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

910 :	"<"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

910 :	"CRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

910 :	">"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

911 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

911 :	"create"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

911 :	"createProperties"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

911 :	"projCRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

911 :	"baseCRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

912 :	"projCRS"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

912 :	"derivingConversion"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

912 :	"cs"
		- NEIGH  = { derivingConversion , create , > , ProjectedCRS , cs , util , projCRS , < , baseCRS , createProperties , nn_static_pointer_cast , CRS , return , }
		- PARENT = { axisList , mustAxisOrderBeSwitchedForVisualizationInternal , if , }
		- CHILD  = { }
		- PRED   = { PropertyMap , util , create , CartesianCS , axisList , size , == , cs , }
		- SUCC   = { }

916 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

916 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

917 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

917 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

917 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

917 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

917 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

917 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

917 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { }

969 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

969 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

969 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

969 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

969 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

969 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

969 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

969 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

970 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

970 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

970 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

970 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

970 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

970 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

971 :	"return"
		- NEIGH  = { authorityFactory , _identify , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

971 :	"_identify"
		- NEIGH  = { authorityFactory , _identify , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

971 :	"authorityFactory"
		- NEIGH  = { authorityFactory , _identify , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

978 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"getNonDeprecated"
		- NEIGH  = { getNonDeprecated , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"DatabaseContextNNPtr"
		- NEIGH  = { DatabaseContextNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

979 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

980 :	"std"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

980 :	"list"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

980 :	"<"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

980 :	"CRSNNPtr"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

980 :	">"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

980 :	"res"
		- NEIGH  = { res , > , CRSNNPtr , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

981 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , CRSNNPtr , < , list , std , }
		- SUCC   = { empty , l_identifiers , if , }

981 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , CRSNNPtr , < , list , std , }
		- SUCC   = { empty , l_identifiers , if , }

981 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , CRSNNPtr , < , list , std , }
		- SUCC   = { empty , l_identifiers , if , }

982 :	"if"
		- NEIGH  = { empty , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { tableName , * , }

982 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { tableName , * , }

982 :	"empty"
		- NEIGH  = { empty , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { tableName , * , }

983 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { empty , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

983 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { empty , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

985 :	"*"
		- NEIGH  = { tableName , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , if , }
		- SUCC   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }

985 :	"tableName"
		- NEIGH  = { tableName , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , if , }
		- SUCC   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }

986 :	"if"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

986 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

986 :	"<"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

986 :	"GeodeticCRS"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

986 :	"*"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

986 :	">"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

986 :	"this"
		- NEIGH  = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- PARENT = { }
		- CHILD  = { > , tableName , ProjectedCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { tableName , * , }
		- SUCC   = { ! , tableName , if , }

987 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

988 :	"if"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

988 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

988 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

988 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

988 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

988 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

988 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- CHILD  = { > , VerticalCRS , < , this , * , dynamic_cast , if , tableName , }
		- PRED   = { }
		- SUCC   = { }

989 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

990 :	"if"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

990 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

990 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

990 :	"VerticalCRS"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

990 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

990 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

990 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , ProjectedCRS , < , if , }
		- CHILD  = { > , tableName , CompoundCRS , < , this , * , dynamic_cast , if , }
		- PRED   = { }
		- SUCC   = { }

991 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

992 :	"if"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

992 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

992 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

992 :	"CompoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

992 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

992 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

992 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- PARENT = { > , this , dynamic_cast , * , VerticalCRS , < , if , }
		- CHILD  = { tableName , }
		- PRED   = { }
		- SUCC   = { }

993 :	"tableName"
		- NEIGH  = { tableName , }
		- PARENT = { > , this , dynamic_cast , * , CompoundCRS , < , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

995 :	"if"
		- NEIGH  = { ! , tableName , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- SUCC   = { l_identifiers , id , & , }

995 :	"!"
		- NEIGH  = { ! , tableName , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- SUCC   = { l_identifiers , id , & , }

995 :	"tableName"
		- NEIGH  = { ! , tableName , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { > , this , dynamic_cast , GeodeticCRS , * , < , if , }
		- SUCC   = { l_identifiers , id , & , }

996 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { ! , tableName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

996 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { ! , tableName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

998 :	"&"
		- NEIGH  = { l_identifiers , id , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , tableName , if , }
		- SUCC   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }

998 :	"id"
		- NEIGH  = { l_identifiers , id , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , tableName , if , }
		- SUCC   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }

998 :	"l_identifiers"
		- NEIGH  = { l_identifiers , id , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , tableName , if , }
		- SUCC   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }

999 :	"tmpRes"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

1000 :	"dbContext"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

1000 :	"getNonDeprecated"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

1000 :	"tableName"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

1000 :	"*"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

1000 :	"id"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

1000 :	"codeSpace"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

1000 :	"id"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

1000 :	"code"
		- NEIGH  = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_identifiers , id , & , }
		- SUCC   = { tmpRes , pair , & , for , }

1001 :	"for"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

1001 :	"&"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

1001 :	"pair"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

1001 :	"tmpRes"
		- NEIGH  = { tmpRes , pair , & , for , }
		- PARENT = { }
		- CHILD  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PRED   = { code , codeSpace , tableName , id , getNonDeprecated , dbContext , * , tmpRes , }
		- SUCC   = { res , return , }

1002 :	"res"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1002 :	"emplace_back"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1002 :	"io"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1002 :	"AuthorityFactory"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1002 :	"create"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1002 :	"dbContext"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1002 :	"pair"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1002 :	"first"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1003 :	"createCoordinateReferenceSystem"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1003 :	"pair"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1003 :	"second"
		- NEIGH  = { second , createCoordinateReferenceSystem , first , dbContext , AuthorityFactory , create , res , io , pair , emplace_back , }
		- PARENT = { tmpRes , pair , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1005 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tmpRes , pair , & , for , }
		- SUCC   = { }

1005 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { tmpRes , pair , & , for , }
		- SUCC   = { }

1023 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"promoteTo3D"
		- NEIGH  = { promoteTo3D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1023 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1024 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1024 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1024 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1024 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1025 :	"upAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1025 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1025 :	"CoordinateSystemAxis"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1025 :	"create"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1026 :	"util"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1026 :	"PropertyMap"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1026 :	"set"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1026 :	"IdentifiedObject"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1026 :	"NAME_KEY"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1027 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1027 :	"AxisName"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1027 :	"Ellipsoidal_height"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1028 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1028 :	"AxisAbbreviation"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1028 :	"h"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1028 :	"cs"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1028 :	"AxisDirection"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1028 :	"UP"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1029 :	"common"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1029 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1029 :	"METRE"
		- NEIGH  = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { upAxis , dbContext , newName , promoteTo3D , return , }

1030 :	"return"
		- NEIGH  = { upAxis , dbContext , newName , promoteTo3D , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { }

1030 :	"promoteTo3D"
		- NEIGH  = { upAxis , dbContext , newName , promoteTo3D , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { }

1030 :	"newName"
		- NEIGH  = { upAxis , dbContext , newName , promoteTo3D , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { }

1030 :	"dbContext"
		- NEIGH  = { upAxis , dbContext , newName , promoteTo3D , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { }

1030 :	"upAxis"
		- NEIGH  = { upAxis , dbContext , newName , promoteTo3D , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { UnitOfMeasure , METRE , common , h , AxisAbbreviation , NAME_KEY , AxisName , AxisDirection , Ellipsoidal_height , set , UP , IdentifiedObject , PropertyMap , cs , util , upAxis , create , CoordinateSystemAxis , }
		- SUCC   = { }

1037 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"promoteTo3D"
		- NEIGH  = { promoteTo3D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1037 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1038 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1038 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1038 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1038 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1039 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1039 :	"CoordinateSystemAxisNNPtr"
		- NEIGH  = { CoordinateSystemAxisNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1040 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1040 :	"verticalAxisIfNotAlreadyPresent"
		- NEIGH  = { verticalAxisIfNotAlreadyPresent , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1042 :	"createProperties"
		- NEIGH  = { newName , & , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

1042 :	"this"
		- NEIGH  = { newName , & , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

1042 :	"&"
		- NEIGH  = { newName , & , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

1042 :	"newName"
		- NEIGH  = { newName , & , this , createProperties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }

1043 :	"props"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1044 :	"util"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1044 :	"PropertyMap"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1044 :	"set"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1044 :	"common"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1044 :	"IdentifiedObject"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1044 :	"NAME_KEY"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1045 :	"!"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1045 :	"newName"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1045 :	"empty"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1045 :	"newName"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1045 :	"nameStr"
		- NEIGH  = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_domains , domains , & , }

1046 :	"&"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- SUCC   = { empty , ! , l_domains , if , }

1046 :	"l_domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- SUCC   = { empty , ! , l_domains , if , }

1046 :	"domains"
		- NEIGH  = { l_domains , domains , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , ! , IdentifiedObject , util , common , newName , PropertyMap , set , empty , NAME_KEY , props , }
		- SUCC   = { empty , ! , l_domains , if , }

1047 :	"if"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , empty , domain , & , ! , if , array , create , ArrayOfBaseObject , for , util , }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { identifiers , l_identifiers , & , }

1047 :	"!"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , empty , domain , & , ! , if , array , create , ArrayOfBaseObject , for , util , }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { identifiers , l_identifiers , & , }

1047 :	"l_domains"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , empty , domain , & , ! , if , array , create , ArrayOfBaseObject , for , util , }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { identifiers , l_identifiers , & , }

1047 :	"empty"
		- NEIGH  = { empty , ! , l_domains , if , }
		- PARENT = { }
		- CHILD  = { l_domains , empty , domain , & , ! , if , array , create , ArrayOfBaseObject , for , util , }
		- PRED   = { l_domains , domains , & , }
		- SUCC   = { identifiers , l_identifiers , & , }

1048 :	"array"
		- NEIGH  = { create , ArrayOfBaseObject , util , array , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { domain , & , l_domains , for , }

1048 :	"util"
		- NEIGH  = { create , ArrayOfBaseObject , util , array , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { domain , & , l_domains , for , }

1048 :	"ArrayOfBaseObject"
		- NEIGH  = { create , ArrayOfBaseObject , util , array , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { domain , & , l_domains , for , }

1048 :	"create"
		- NEIGH  = { create , ArrayOfBaseObject , util , array , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { domain , & , l_domains , for , }

1049 :	"for"
		- NEIGH  = { domain , & , l_domains , for , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { if , domain , domainOfValidity , extent , }
		- PRED   = { create , ArrayOfBaseObject , util , array , }
		- SUCC   = { empty , array , ! , if , }

1049 :	"&"
		- NEIGH  = { domain , & , l_domains , for , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { if , domain , domainOfValidity , extent , }
		- PRED   = { create , ArrayOfBaseObject , util , array , }
		- SUCC   = { empty , array , ! , if , }

1049 :	"domain"
		- NEIGH  = { domain , & , l_domains , for , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { if , domain , domainOfValidity , extent , }
		- PRED   = { create , ArrayOfBaseObject , util , array , }
		- SUCC   = { empty , array , ! , if , }

1049 :	"l_domains"
		- NEIGH  = { domain , & , l_domains , for , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { if , domain , domainOfValidity , extent , }
		- PRED   = { create , ArrayOfBaseObject , util , array , }
		- SUCC   = { empty , array , ! , if , }

1050 :	"extent"
		- NEIGH  = { domain , domainOfValidity , extent , }
		- PARENT = { domain , & , l_domains , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , if , }

1050 :	"domain"
		- NEIGH  = { domain , domainOfValidity , extent , }
		- PARENT = { domain , & , l_domains , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , if , }

1050 :	"domainOfValidity"
		- NEIGH  = { domain , domainOfValidity , extent , }
		- PARENT = { domain , & , l_domains , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { extent , if , }

1051 :	"if"
		- NEIGH  = { extent , if , }
		- PARENT = { domain , & , l_domains , for , }
		- CHILD  = { add , > , array , string , std , newDomain , util , < , optional , create , extent , ObjectDomain , common , }
		- PRED   = { domain , domainOfValidity , extent , }
		- SUCC   = { }

1051 :	"extent"
		- NEIGH  = { extent , if , }
		- PARENT = { domain , & , l_domains , for , }
		- CHILD  = { add , > , array , string , std , newDomain , util , < , optional , create , extent , ObjectDomain , common , }
		- PRED   = { domain , domainOfValidity , extent , }
		- SUCC   = { }

1055 :	"newDomain"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1055 :	"common"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1055 :	"ObjectDomain"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1055 :	"create"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1056 :	"util"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1056 :	"optional"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1056 :	"<"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1056 :	"std"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1056 :	"string"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1056 :	">"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1056 :	"extent"
		- NEIGH  = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { newDomain , add , array , }

1057 :	"array"
		- NEIGH  = { newDomain , add , array , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- SUCC   = { }

1057 :	"add"
		- NEIGH  = { newDomain , add , array , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- SUCC   = { }

1057 :	"newDomain"
		- NEIGH  = { newDomain , add , array , }
		- PARENT = { extent , if , }
		- CHILD  = { }
		- PRED   = { > , string , std , < , optional , create , extent , ObjectDomain , common , util , newDomain , }
		- SUCC   = { }

1060 :	"if"
		- NEIGH  = { empty , array , ! , if , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PRED   = { domain , & , l_domains , for , }
		- SUCC   = { }

1060 :	"!"
		- NEIGH  = { empty , array , ! , if , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PRED   = { domain , & , l_domains , for , }
		- SUCC   = { }

1060 :	"array"
		- NEIGH  = { empty , array , ! , if , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PRED   = { domain , & , l_domains , for , }
		- SUCC   = { }

1060 :	"empty"
		- NEIGH  = { empty , array , ! , if , }
		- PARENT = { empty , ! , l_domains , if , }
		- CHILD  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PRED   = { domain , & , l_domains , for , }
		- SUCC   = { }

1061 :	"props"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1061 :	"set"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1061 :	"common"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1061 :	"ObjectUsage"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1061 :	"OBJECT_DOMAIN_KEY"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1061 :	"array"
		- NEIGH  = { array , OBJECT_DOMAIN_KEY , set , ObjectUsage , common , props , }
		- PARENT = { empty , array , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1064 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { remarks , l_remarks , & , }

1064 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { remarks , l_remarks , & , }

1064 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , l_domains , if , }
		- SUCC   = { remarks , l_remarks , & , }

1065 :	"&"
		- NEIGH  = { remarks , l_remarks , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { == , size , l_identifiers , if , }

1065 :	"l_remarks"
		- NEIGH  = { remarks , l_remarks , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { == , size , l_identifiers , if , }

1065 :	"remarks"
		- NEIGH  = { remarks , l_remarks , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { == , size , l_identifiers , if , }

1066 :	"if"
		- NEIGH  = { == , size , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { REMARKS_KEY , IdentifiedObject , common , props , string , ! , set , if , code , remarks , * , std , codeSpace , += , empty , l_remarks , l_identifiers , }
		- PRED   = { remarks , l_remarks , & , }
		- SUCC   = { props , return , }

1066 :	"l_identifiers"
		- NEIGH  = { == , size , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { REMARKS_KEY , IdentifiedObject , common , props , string , ! , set , if , code , remarks , * , std , codeSpace , += , empty , l_remarks , l_identifiers , }
		- PRED   = { remarks , l_remarks , & , }
		- SUCC   = { props , return , }

1066 :	"size"
		- NEIGH  = { == , size , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { REMARKS_KEY , IdentifiedObject , common , props , string , ! , set , if , code , remarks , * , std , codeSpace , += , empty , l_remarks , l_identifiers , }
		- PRED   = { remarks , l_remarks , & , }
		- SUCC   = { props , return , }

1066 :	"=="
		- NEIGH  = { == , size , l_identifiers , if , }
		- PARENT = { }
		- CHILD  = { REMARKS_KEY , IdentifiedObject , common , props , string , ! , set , if , code , remarks , * , std , codeSpace , += , empty , l_remarks , l_identifiers , }
		- PRED   = { remarks , l_remarks , & , }
		- SUCC   = { props , return , }

1067 :	"std"
		- NEIGH  = { string , remarks , std , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_identifiers , * , += , codeSpace , remarks , }

1067 :	"string"
		- NEIGH  = { string , remarks , std , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_identifiers , * , += , codeSpace , remarks , }

1067 :	"remarks"
		- NEIGH  = { string , remarks , std , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_identifiers , * , += , codeSpace , remarks , }

1068 :	"remarks"
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

1068 :	"+="
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

1068 :	"*"
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

1068 :	"l_identifiers"
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

1068 :	"codeSpace"
		- NEIGH  = { l_identifiers , * , += , codeSpace , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { string , remarks , std , }
		- SUCC   = { += , remarks , }

1069 :	"remarks"
		- NEIGH  = { += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , += , codeSpace , remarks , }
		- SUCC   = { code , l_identifiers , += , remarks , }

1069 :	"+="
		- NEIGH  = { += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , += , codeSpace , remarks , }
		- SUCC   = { code , l_identifiers , += , remarks , }

1070 :	"remarks"
		- NEIGH  = { code , l_identifiers , += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { empty , ! , l_remarks , if , }

1070 :	"+="
		- NEIGH  = { code , l_identifiers , += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { empty , ! , l_remarks , if , }

1070 :	"l_identifiers"
		- NEIGH  = { code , l_identifiers , += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { empty , ! , l_remarks , if , }

1070 :	"code"
		- NEIGH  = { code , l_identifiers , += , remarks , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { empty , ! , l_remarks , if , }

1071 :	"if"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { += , l_remarks , remarks , }
		- PRED   = { code , l_identifiers , += , remarks , }
		- SUCC   = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }

1071 :	"!"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { += , l_remarks , remarks , }
		- PRED   = { code , l_identifiers , += , remarks , }
		- SUCC   = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }

1071 :	"l_remarks"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { += , l_remarks , remarks , }
		- PRED   = { code , l_identifiers , += , remarks , }
		- SUCC   = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }

1071 :	"empty"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { += , l_remarks , remarks , }
		- PRED   = { code , l_identifiers , += , remarks , }
		- SUCC   = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }

1072 :	"remarks"
		- NEIGH  = { += , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , l_remarks , remarks , }

1072 :	"+="
		- NEIGH  = { += , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { += , l_remarks , remarks , }

1073 :	"remarks"
		- NEIGH  = { += , l_remarks , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { }

1073 :	"+="
		- NEIGH  = { += , l_remarks , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { }

1073 :	"l_remarks"
		- NEIGH  = { += , l_remarks , remarks , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { += , remarks , }
		- SUCC   = { }

1075 :	"props"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

1075 :	"set"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

1075 :	"common"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

1075 :	"IdentifiedObject"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

1075 :	"REMARKS_KEY"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

1075 :	"remarks"
		- NEIGH  = { remarks , IdentifiedObject , REMARKS_KEY , common , set , props , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { }
		- PRED   = { empty , ! , l_remarks , if , }
		- SUCC   = { }

1076 :	"if"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PRED   = { }
		- SUCC   = { }

1076 :	"!"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PRED   = { }
		- SUCC   = { }

1076 :	"l_remarks"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PRED   = { }
		- SUCC   = { }

1076 :	"empty"
		- NEIGH  = { empty , ! , l_remarks , if , }
		- PARENT = { == , size , l_identifiers , if , }
		- CHILD  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PRED   = { }
		- SUCC   = { }

1077 :	"props"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1077 :	"set"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1077 :	"common"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1077 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1077 :	"REMARKS_KEY"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1077 :	"l_remarks"
		- NEIGH  = { IdentifiedObject , l_remarks , REMARKS_KEY , common , set , props , }
		- PARENT = { empty , ! , l_remarks , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1079 :	"return"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , size , l_identifiers , if , }
		- SUCC   = { }

1079 :	"props"
		- NEIGH  = { props , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , size , l_identifiers , if , }
		- SUCC   = { }

1082 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , & , this , createProperties , }
		- SUCC   = { geogCRS , if , }

1082 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , & , this , createProperties , }
		- SUCC   = { geogCRS , if , }

1082 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , & , this , createProperties , }
		- SUCC   = { geogCRS , if , }

1082 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , & , this , createProperties , }
		- SUCC   = { geogCRS , if , }

1082 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , & , this , createProperties , }
		- SUCC   = { geogCRS , if , }

1082 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , & , this , createProperties , }
		- SUCC   = { geogCRS , if , }

1082 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { newName , & , this , createProperties , }
		- SUCC   = { geogCRS , if , }

1083 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

1083 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , geogCRS , size , axisList , & , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

1084 :	"&"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1084 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1084 :	"geogCRS"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1084 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1084 :	"axisList"
		- NEIGH  = { coordinateSystem , geogCRS , axisList , & , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1085 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , createProperties , geogCRS , CRS , size , return , verticalAxisIfNotAlreadyPresent , axisList , nn_static_pointer_cast , PropertyMap , == , EllipsoidalCS , datum , < , && , util , cs , > , identifiers , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

1085 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , createProperties , geogCRS , CRS , size , return , verticalAxisIfNotAlreadyPresent , axisList , nn_static_pointer_cast , PropertyMap , == , EllipsoidalCS , datum , < , && , util , cs , > , identifiers , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

1085 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , createProperties , geogCRS , CRS , size , return , verticalAxisIfNotAlreadyPresent , axisList , nn_static_pointer_cast , PropertyMap , == , EllipsoidalCS , datum , < , && , util , cs , > , identifiers , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

1085 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { datumEnsemble , createProperties , geogCRS , CRS , size , return , verticalAxisIfNotAlreadyPresent , axisList , nn_static_pointer_cast , PropertyMap , == , EllipsoidalCS , datum , < , && , util , cs , > , identifiers , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , geogCRS , axisList , & , }
		- SUCC   = { }

1086 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

1086 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

1086 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

1090 :	"if"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }

1090 :	"dbContext"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }

1090 :	"&&"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }

1090 :	"l_identifiers"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }

1090 :	"size"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }

1090 :	"=="
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , GEOGRAPHIC_3D_CRS , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }

1091 :	"authFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

1091 :	"io"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

1091 :	"AuthorityFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

1091 :	"create"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

1092 :	"NN_NO_CHECK"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

1092 :	"dbContext"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

1092 :	"*"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

1092 :	"l_identifiers"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

1092 :	"codeSpace"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

1093 :	"res"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

1093 :	"authFactory"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

1093 :	"createObjectsFromName"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

1094 :	"nameStr"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

1095 :	"io"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

1095 :	"AuthorityFactory"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

1095 :	"ObjectType"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

1095 :	"GEOGRAPHIC_3D_CRS"
		- NEIGH  = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

1097 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { dbContext , NN_NO_CHECK , axisList , Criterion , IComparable , _isEquivalentTo , if , coordinateSystem , firstResAxisList , get , && , util , dynamic_cast , < , * , EQUIVALENT , firstResGeog , GeographicCRS , & , geogCRS , firstRes , verticalAxisIfNotAlreadyPresent , front , is2DPartOf3D , > , res , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

1097 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { dbContext , NN_NO_CHECK , axisList , Criterion , IComparable , _isEquivalentTo , if , coordinateSystem , firstResAxisList , get , && , util , dynamic_cast , < , * , EQUIVALENT , firstResGeog , GeographicCRS , & , geogCRS , firstRes , verticalAxisIfNotAlreadyPresent , front , is2DPartOf3D , > , res , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

1097 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { dbContext , NN_NO_CHECK , axisList , Criterion , IComparable , _isEquivalentTo , if , coordinateSystem , firstResAxisList , get , && , util , dynamic_cast , < , * , EQUIVALENT , firstResGeog , GeographicCRS , & , geogCRS , firstRes , verticalAxisIfNotAlreadyPresent , front , is2DPartOf3D , > , res , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

1097 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { dbContext , NN_NO_CHECK , axisList , Criterion , IComparable , _isEquivalentTo , if , coordinateSystem , firstResAxisList , get , && , util , dynamic_cast , < , * , EQUIVALENT , firstResGeog , GeographicCRS , & , geogCRS , firstRes , verticalAxisIfNotAlreadyPresent , front , is2DPartOf3D , > , res , }
		- PRED   = { GEOGRAPHIC_3D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

1098 :	"&"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }

1098 :	"firstRes"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }

1098 :	"res"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }

1098 :	"front"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }

1099 :	"firstResGeog"
		- NEIGH  = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }

1100 :	"dynamic_cast"
		- NEIGH  = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }

1100 :	"<"
		- NEIGH  = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }

1100 :	"GeographicCRS"
		- NEIGH  = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }

1100 :	"*"
		- NEIGH  = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }

1100 :	">"
		- NEIGH  = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }

1100 :	"firstRes"
		- NEIGH  = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }

1100 :	"get"
		- NEIGH  = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }

1101 :	"&"
		- NEIGH  = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- SUCC   = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }

1101 :	"firstResAxisList"
		- NEIGH  = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- SUCC   = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }

1102 :	"firstResGeog"
		- NEIGH  = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- SUCC   = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }

1102 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- SUCC   = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }

1102 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { get , firstRes , > , dynamic_cast , * , < , GeographicCRS , firstResGeog , }
		- SUCC   = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }

1103 :	"if"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1103 :	"firstResAxisList"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1103 :	"_isEquivalentTo"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1104 :	"verticalAxisIfNotAlreadyPresent"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1104 :	"get"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1105 :	"util"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1105 :	"IComparable"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1105 :	"Criterion"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1105 :	"EQUIVALENT"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1105 :	"&&"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1106 :	"geogCRS"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1106 :	"is2DPartOf3D"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1106 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1106 :	"firstResGeog"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1107 :	"dbContext"
		- NEIGH  = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PRED   = { axisList , coordinateSystem , firstResGeog , firstResAxisList , & , }
		- SUCC   = { }

1108 :	"return"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1108 :	"NN_NO_CHECK"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1109 :	"util"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1109 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1109 :	"<"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1109 :	"CRS"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1109 :	">"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1109 :	"firstRes"
		- NEIGH  = { > , firstRes , CRS , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , return , }
		- PARENT = { NN_NO_CHECK , is2DPartOf3D , firstResGeog , geogCRS , EQUIVALENT , IComparable , Criterion , util , get , verticalAxisIfNotAlreadyPresent , && , _isEquivalentTo , firstResAxisList , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1114 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

1114 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

1114 :	"EllipsoidalCS"
		- NEIGH  = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

1114 :	"create"
		- NEIGH  = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

1115 :	"util"
		- NEIGH  = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

1115 :	"PropertyMap"
		- NEIGH  = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

1115 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

1115 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

1116 :	"verticalAxisIfNotAlreadyPresent"
		- NEIGH  = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }

1117 :	"return"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1117 :	"util"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1117 :	"nn_static_pointer_cast"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1117 :	"<"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1117 :	"CRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1117 :	">"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1118 :	"GeographicCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1118 :	"create"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1118 :	"createProperties"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1118 :	"geogCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1118 :	"datum"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1119 :	"geogCRS"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1119 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1119 :	"cs"
		- NEIGH  = { datumEnsemble , create , GeographicCRS , datum , CRS , geogCRS , cs , util , < , createProperties , > , nn_static_pointer_cast , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , verticalAxisIfNotAlreadyPresent , util , EllipsoidalCS , cs , }
		- SUCC   = { }

1123 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1123 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1123 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1123 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1123 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1123 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1123 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1124 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

1124 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { == , if , coordinateSystem , size , axisList , projCRS , & , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

1125 :	"&"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1125 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1125 :	"projCRS"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1125 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1125 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , projCRS , & , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

1126 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { nn_dynamic_pointer_cast , createProperties , NN_NO_CHECK , return , CartesianCS , ProjectedCRS , projCRS , > , CRS , verticalAxisIfNotAlreadyPresent , derivingConversion , axisList , PropertyMap , < , cs , util , create , dbContext , GeodeticCRS , string , std , nn_static_pointer_cast , promoteTo3D , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

1126 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { nn_dynamic_pointer_cast , createProperties , NN_NO_CHECK , return , CartesianCS , ProjectedCRS , projCRS , > , CRS , verticalAxisIfNotAlreadyPresent , derivingConversion , axisList , PropertyMap , < , cs , util , create , dbContext , GeodeticCRS , string , std , nn_static_pointer_cast , promoteTo3D , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

1126 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { nn_dynamic_pointer_cast , createProperties , NN_NO_CHECK , return , CartesianCS , ProjectedCRS , projCRS , > , CRS , verticalAxisIfNotAlreadyPresent , derivingConversion , axisList , PropertyMap , < , cs , util , create , dbContext , GeodeticCRS , string , std , nn_static_pointer_cast , promoteTo3D , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

1126 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { projCRS , if , }
		- CHILD  = { nn_dynamic_pointer_cast , createProperties , NN_NO_CHECK , return , CartesianCS , ProjectedCRS , projCRS , > , CRS , verticalAxisIfNotAlreadyPresent , derivingConversion , axisList , PropertyMap , < , cs , util , create , dbContext , GeodeticCRS , string , std , nn_static_pointer_cast , promoteTo3D , baseCRS , base3DCRS , }
		- PRED   = { coordinateSystem , axisList , projCRS , & , }
		- SUCC   = { }

1127 :	"base3DCRS"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }

1128 :	"projCRS"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }

1128 :	"baseCRS"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }

1128 :	"promoteTo3D"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }

1128 :	"std"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }

1128 :	"string"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }

1128 :	"dbContext"
		- NEIGH  = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }

1129 :	"cs"
		- NEIGH  = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }

1129 :	"cs"
		- NEIGH  = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }

1129 :	"CartesianCS"
		- NEIGH  = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }

1129 :	"create"
		- NEIGH  = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }

1129 :	"util"
		- NEIGH  = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }

1129 :	"PropertyMap"
		- NEIGH  = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }

1129 :	"axisList"
		- NEIGH  = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }

1130 :	"axisList"
		- NEIGH  = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }

1131 :	"verticalAxisIfNotAlreadyPresent"
		- NEIGH  = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { dbContext , string , std , promoteTo3D , baseCRS , projCRS , base3DCRS , }
		- SUCC   = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }

1132 :	"return"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1132 :	"util"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1132 :	"nn_static_pointer_cast"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1132 :	"<"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1132 :	"CRS"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1132 :	">"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1132 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1132 :	"create"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1133 :	"createProperties"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1134 :	"NN_NO_CHECK"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1135 :	"util"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1135 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1135 :	"<"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1135 :	"GeodeticCRS"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1135 :	">"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1135 :	"base3DCRS"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1136 :	"projCRS"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1136 :	"derivingConversion"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1136 :	"cs"
		- NEIGH  = { derivingConversion , GeodeticCRS , nn_dynamic_pointer_cast , NN_NO_CHECK , create , > , ProjectedCRS , cs , projCRS , util , < , createProperties , nn_static_pointer_cast , CRS , base3DCRS , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , verticalAxisIfNotAlreadyPresent , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { }

1140 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1140 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1140 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1140 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1140 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1140 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1140 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1141 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { & , FormattingException , string , std , create , catch , BoundCRS , io , base3DCRS , return , hubCRS , verticalAxisIfNotAlreadyPresent , dbContext , newName , getTOWGS84Parameters , transformation , promoteTo3D , transf , baseCRS , boundCRS , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

1141 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { & , FormattingException , string , std , create , catch , BoundCRS , io , base3DCRS , return , hubCRS , verticalAxisIfNotAlreadyPresent , dbContext , newName , getTOWGS84Parameters , transformation , promoteTo3D , transf , baseCRS , boundCRS , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

1142 :	"base3DCRS"
		- NEIGH  = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1142 :	"boundCRS"
		- NEIGH  = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1142 :	"baseCRS"
		- NEIGH  = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1142 :	"promoteTo3D"
		- NEIGH  = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1143 :	"newName"
		- NEIGH  = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1143 :	"dbContext"
		- NEIGH  = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1143 :	"verticalAxisIfNotAlreadyPresent"
		- NEIGH  = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1144 :	"transf"
		- NEIGH  = { transformation , boundCRS , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- SUCC   = { getTOWGS84Parameters , transf , }

1144 :	"boundCRS"
		- NEIGH  = { transformation , boundCRS , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- SUCC   = { getTOWGS84Parameters , transf , }

1144 :	"transformation"
		- NEIGH  = { transformation , boundCRS , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { verticalAxisIfNotAlreadyPresent , dbContext , newName , promoteTo3D , baseCRS , boundCRS , base3DCRS , }
		- SUCC   = { getTOWGS84Parameters , transf , }

1146 :	"transf"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { transformation , boundCRS , transf , }
		- SUCC   = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }

1146 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { transformation , boundCRS , transf , }
		- SUCC   = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }

1147 :	"return"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1147 :	"BoundCRS"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1147 :	"create"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1148 :	"base3DCRS"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1149 :	"boundCRS"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1149 :	"hubCRS"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1149 :	"promoteTo3D"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1149 :	"std"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1149 :	"string"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1149 :	"dbContext"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1150 :	"transf"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1150 :	"promoteTo3D"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1150 :	"std"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1150 :	"string"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1150 :	"dbContext"
		- NEIGH  = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1151 :	"catch"
		- NEIGH  = { & , FormattingException , io , catch , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PRED   = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- SUCC   = { }

1151 :	"io"
		- NEIGH  = { & , FormattingException , io , catch , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PRED   = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- SUCC   = { }

1151 :	"FormattingException"
		- NEIGH  = { & , FormattingException , io , catch , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PRED   = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- SUCC   = { }

1151 :	"&"
		- NEIGH  = { & , FormattingException , io , catch , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PRED   = { transf , dbContext , string , promoteTo3D , hubCRS , boundCRS , base3DCRS , create , BoundCRS , std , return , }
		- SUCC   = { }

1152 :	"return"
		- NEIGH  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"BoundCRS"
		- NEIGH  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"create"
		- NEIGH  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"base3DCRS"
		- NEIGH  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"boundCRS"
		- NEIGH  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"hubCRS"
		- NEIGH  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1152 :	"transf"
		- NEIGH  = { transf , hubCRS , boundCRS , base3DCRS , create , BoundCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1156 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

1156 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

1157 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

1157 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

1157 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

1157 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

1157 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

1157 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

1157 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { }

1175 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"demoteTo2D"
		- NEIGH  = { demoteTo2D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1175 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1176 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1176 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1176 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1176 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1177 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1177 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1177 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1177 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1177 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1177 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1177 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

1178 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

1178 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { }
		- CHILD  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }

1179 :	"return"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1179 :	"geogCRS"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1179 :	"demoteTo2D"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1179 :	"newName"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1179 :	"dbContext"
		- NEIGH  = { newName , dbContext , geogCRS , demoteTo2D , return , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1182 :	"projCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1182 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1182 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1182 :	"ProjectedCRS"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1182 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1182 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1182 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geogCRS , if , }
		- SUCC   = { projCRS , if , }

1183 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

1183 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PRED   = { > , this , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }

1184 :	"return"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1184 :	"projCRS"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1184 :	"demoteTo2D"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1184 :	"newName"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1184 :	"dbContext"
		- NEIGH  = { dbContext , newName , projCRS , demoteTo2D , return , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1187 :	"boundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1187 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1187 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1187 :	"BoundCRS"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1187 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1187 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1187 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { projCRS , if , }
		- SUCC   = { boundCRS , if , }

1188 :	"if"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { & , FormattingException , string , std , hubCRS , create , catch , BoundCRS , io , return , getTOWGS84Parameters , transformation , dbContext , newName , boundCRS , base2DCRS , demoteTo2D , transf , baseCRS , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

1188 :	"boundCRS"
		- NEIGH  = { boundCRS , if , }
		- PARENT = { }
		- CHILD  = { & , FormattingException , string , std , hubCRS , create , catch , BoundCRS , io , return , getTOWGS84Parameters , transformation , dbContext , newName , boundCRS , base2DCRS , demoteTo2D , transf , baseCRS , }
		- PRED   = { > , this , dynamic_cast , * , < , BoundCRS , boundCRS , }
		- SUCC   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }

1189 :	"base2DCRS"
		- NEIGH  = { dbContext , newName , boundCRS , demoteTo2D , baseCRS , base2DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1189 :	"boundCRS"
		- NEIGH  = { dbContext , newName , boundCRS , demoteTo2D , baseCRS , base2DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1189 :	"baseCRS"
		- NEIGH  = { dbContext , newName , boundCRS , demoteTo2D , baseCRS , base2DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1189 :	"demoteTo2D"
		- NEIGH  = { dbContext , newName , boundCRS , demoteTo2D , baseCRS , base2DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1189 :	"newName"
		- NEIGH  = { dbContext , newName , boundCRS , demoteTo2D , baseCRS , base2DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1189 :	"dbContext"
		- NEIGH  = { dbContext , newName , boundCRS , demoteTo2D , baseCRS , base2DCRS , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transformation , boundCRS , transf , }

1190 :	"transf"
		- NEIGH  = { transformation , boundCRS , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , newName , boundCRS , demoteTo2D , baseCRS , base2DCRS , }
		- SUCC   = { getTOWGS84Parameters , transf , }

1190 :	"boundCRS"
		- NEIGH  = { transformation , boundCRS , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , newName , boundCRS , demoteTo2D , baseCRS , base2DCRS , }
		- SUCC   = { getTOWGS84Parameters , transf , }

1190 :	"transformation"
		- NEIGH  = { transformation , boundCRS , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { dbContext , newName , boundCRS , demoteTo2D , baseCRS , base2DCRS , }
		- SUCC   = { getTOWGS84Parameters , transf , }

1192 :	"transf"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { transformation , boundCRS , transf , }
		- SUCC   = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }

1192 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transf , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { transformation , boundCRS , transf , }
		- SUCC   = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }

1193 :	"return"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1193 :	"BoundCRS"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1193 :	"create"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1194 :	"base2DCRS"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1195 :	"boundCRS"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1195 :	"hubCRS"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1195 :	"demoteTo2D"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1195 :	"std"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1195 :	"string"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1195 :	"dbContext"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1196 :	"transf"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1196 :	"demoteTo2D"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1196 :	"std"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1196 :	"string"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1196 :	"dbContext"
		- NEIGH  = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transf , }
		- SUCC   = { & , FormattingException , io , catch , }

1197 :	"catch"
		- NEIGH  = { & , FormattingException , io , catch , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PRED   = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- SUCC   = { }

1197 :	"io"
		- NEIGH  = { & , FormattingException , io , catch , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PRED   = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- SUCC   = { }

1197 :	"FormattingException"
		- NEIGH  = { & , FormattingException , io , catch , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PRED   = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- SUCC   = { }

1197 :	"&"
		- NEIGH  = { & , FormattingException , io , catch , }
		- PARENT = { boundCRS , if , }
		- CHILD  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PRED   = { transf , dbContext , string , demoteTo2D , hubCRS , boundCRS , create , BoundCRS , base2DCRS , std , return , }
		- SUCC   = { }

1198 :	"return"
		- NEIGH  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"BoundCRS"
		- NEIGH  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"create"
		- NEIGH  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"base2DCRS"
		- NEIGH  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"boundCRS"
		- NEIGH  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"hubCRS"
		- NEIGH  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1198 :	"transf"
		- NEIGH  = { transf , hubCRS , boundCRS , create , BoundCRS , base2DCRS , return , }
		- PARENT = { & , FormattingException , io , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1202 :	"compoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

1202 :	"dynamic_cast"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

1202 :	"<"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

1202 :	"CompoundCRS"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

1202 :	"*"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

1202 :	">"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

1202 :	"this"
		- NEIGH  = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { boundCRS , if , }
		- SUCC   = { compoundCRS , if , }

1203 :	"if"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { >= , size , components , if , componentReferenceSystems , compoundCRS , & , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

1203 :	"compoundCRS"
		- NEIGH  = { compoundCRS , if , }
		- PARENT = { }
		- CHILD  = { >= , size , components , if , componentReferenceSystems , compoundCRS , & , }
		- PRED   = { > , this , compoundCRS , dynamic_cast , * , CompoundCRS , < , }
		- SUCC   = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

1204 :	"&"
		- NEIGH  = { componentReferenceSystems , components , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , size , components , if , }

1204 :	"components"
		- NEIGH  = { componentReferenceSystems , components , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , size , components , if , }

1204 :	"compoundCRS"
		- NEIGH  = { componentReferenceSystems , components , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , size , components , if , }

1204 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , components , compoundCRS , & , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { >= , size , components , if , }

1205 :	"if"
		- NEIGH  = { >= , size , components , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { components , return , }
		- PRED   = { componentReferenceSystems , components , compoundCRS , & , }
		- SUCC   = { }

1205 :	"components"
		- NEIGH  = { >= , size , components , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { components , return , }
		- PRED   = { componentReferenceSystems , components , compoundCRS , & , }
		- SUCC   = { }

1205 :	"size"
		- NEIGH  = { >= , size , components , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { components , return , }
		- PRED   = { componentReferenceSystems , components , compoundCRS , & , }
		- SUCC   = { }

1205 :	">="
		- NEIGH  = { >= , size , components , if , }
		- PARENT = { compoundCRS , if , }
		- CHILD  = { components , return , }
		- PRED   = { componentReferenceSystems , components , compoundCRS , & , }
		- SUCC   = { }

1206 :	"return"
		- NEIGH  = { components , return , }
		- PARENT = { >= , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1206 :	"components"
		- NEIGH  = { components , return , }
		- PARENT = { >= , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1210 :	"return"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

1210 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

1211 :	"std"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

1211 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

1211 :	"<"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

1211 :	"CRS"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

1211 :	">"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

1211 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

1211 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CRS , < , static_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { compoundCRS , if , }
		- SUCC   = { }

1218 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1218 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1218 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1218 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1218 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1218 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1218 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1218 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1219 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1219 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1219 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1219 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1219 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1220 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1228 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1228 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1229 :	"datum"
		- NEIGH  = { DatumPtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , DatumEnsemblePtr , datum , }

1229 :	"DatumPtr"
		- NEIGH  = { DatumPtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , DatumEnsemblePtr , datum , }

1229 :	"datum"
		- NEIGH  = { DatumPtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumEnsemble , DatumEnsemblePtr , datum , }

1230 :	"datum"
		- NEIGH  = { datumEnsemble , DatumEnsemblePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DatumPtr , datum , }
		- SUCC   = { coordinateSystem , CoordinateSystemNNPtr , cs , }

1230 :	"DatumEnsemblePtr"
		- NEIGH  = { datumEnsemble , DatumEnsemblePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DatumPtr , datum , }
		- SUCC   = { coordinateSystem , CoordinateSystemNNPtr , cs , }

1230 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , DatumEnsemblePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { DatumPtr , datum , }
		- SUCC   = { coordinateSystem , CoordinateSystemNNPtr , cs , }

1231 :	"cs"
		- NEIGH  = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , DatumEnsemblePtr , datum , }
		- SUCC   = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }

1231 :	"CoordinateSystemNNPtr"
		- NEIGH  = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , DatumEnsemblePtr , datum , }
		- SUCC   = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }

1231 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , DatumEnsemblePtr , datum , }
		- SUCC   = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }

1233 :	"Private"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1233 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1233 :	"DatumPtr"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1233 :	"&"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1233 :	"datumIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1234 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1234 :	"DatumEnsemblePtr"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1234 :	"&"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1234 :	"datumEnsembleIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1235 :	"cs"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1235 :	"CoordinateSystemNNPtr"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1235 :	"&"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1235 :	"csIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1236 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1236 :	"datumIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1236 :	"datumEnsemble"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1236 :	"datumEnsembleIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1237 :	"coordinateSystem"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1237 :	"csIn"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1238 :	"if"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1238 :	"datum"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1238 :	"+"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1238 :	"datumEnsemble"
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1238 :	"!="
		- NEIGH  = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- PARENT = { }
		- CHILD  = { Exception , util , throw , }
		- PRED   = { coordinateSystem , CoordinateSystemNNPtr , cs , }
		- SUCC   = { }

1239 :	"throw"
		- NEIGH  = { Exception , util , throw , }
		- PARENT = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1239 :	"util"
		- NEIGH  = { Exception , util , throw , }
		- PARENT = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1239 :	"Exception"
		- NEIGH  = { Exception , util , throw , }
		- PARENT = { != , if , csIn , + , CoordinateSystemNNPtr , datumEnsembleIn , DatumPtr , datumEnsemble , coordinateSystem , datum , cs , DatumEnsemblePtr , datumIn , & , Private , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1247 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1247 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1247 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1247 :	"DatumPtr"
		- NEIGH  = { DatumPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1247 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1247 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1248 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1248 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1248 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1248 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1249 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1250 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1254 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1254 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1254 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1254 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1254 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1255 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1260 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1260 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"DatumPtr"
		- NEIGH  = { DatumPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"return"
		- NEIGH  = { datum , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"d"
		- NEIGH  = { datum , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1271 :	"datum"
		- NEIGH  = { datum , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1281 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1281 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1281 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1281 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1281 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1281 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1282 :	"return"
		- NEIGH  = { datumEnsemble , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1282 :	"d"
		- NEIGH  = { datumEnsemble , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1282 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1290 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1290 :	"DatumNNPtr"
		- NEIGH  = { DatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1291 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1291 :	"datumNonNull"
		- NEIGH  = { datumNonNull , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1291 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1291 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1291 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1291 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1292 :	"return"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1292 :	"d"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1292 :	"datum"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1292 :	"NN_NO_CHECK"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1292 :	"d"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1292 :	"datum"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1293 :	"d"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1293 :	"datumEnsemble"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1293 :	"asDatum"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1293 :	"dbContext"
		- NEIGH  = { asDatum , datum , datumEnsemble , dbContext , NN_NO_CHECK , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1303 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1304 :	"return"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1304 :	"d"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1304 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1309 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1309 :	"baseIsEquivalentTo"
		- NEIGH  = { baseIsEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1310 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1310 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1310 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1310 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1310 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1310 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1310 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1310 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1311 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1311 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1311 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1311 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1312 :	"otherSingleCRS"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1312 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1312 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1312 :	"SingleCRS"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1312 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1312 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1312 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

1313 :	"if"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1313 :	"otherSingleCRS"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1313 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1313 :	"||"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1314 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1314 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1314 :	"util"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1314 :	"IComparable"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1314 :	"Criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1314 :	"STRICT"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1314 :	"&&"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1315 :	"!"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1315 :	"ObjectUsage"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1315 :	"_isEquivalentTo"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1315 :	"other"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1315 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1315 :	"dbContext"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , > , dynamic_cast , * , SingleCRS , < , otherSingleCRS , }
		- SUCC   = { IComparable , == , criterion , Criterion , util , STRICT , if , }

1316 :	"return"
		- NEIGH  = { return , }
		- PARENT = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1319 :	"if"
		- NEIGH  = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- PARENT = { }
		- CHILD  = { criterion , get , datumNonNull , thisDatumEnsemble , thisDatum , otherDatum , datumEnsemble , datum , _isEquivalentTo , d , ! , otherDatumEnsemble , dbContext , if , otherSingleCRS , & , }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }

1319 :	"criterion"
		- NEIGH  = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- PARENT = { }
		- CHILD  = { criterion , get , datumNonNull , thisDatumEnsemble , thisDatum , otherDatum , datumEnsemble , datum , _isEquivalentTo , d , ! , otherDatumEnsemble , dbContext , if , otherSingleCRS , & , }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }

1319 :	"=="
		- NEIGH  = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- PARENT = { }
		- CHILD  = { criterion , get , datumNonNull , thisDatumEnsemble , thisDatum , otherDatum , datumEnsemble , datum , _isEquivalentTo , d , ! , otherDatumEnsemble , dbContext , if , otherSingleCRS , & , }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }

1319 :	"util"
		- NEIGH  = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- PARENT = { }
		- CHILD  = { criterion , get , datumNonNull , thisDatumEnsemble , thisDatum , otherDatum , datumEnsemble , datum , _isEquivalentTo , d , ! , otherDatumEnsemble , dbContext , if , otherSingleCRS , & , }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }

1319 :	"IComparable"
		- NEIGH  = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- PARENT = { }
		- CHILD  = { criterion , get , datumNonNull , thisDatumEnsemble , thisDatum , otherDatum , datumEnsemble , datum , _isEquivalentTo , d , ! , otherDatumEnsemble , dbContext , if , otherSingleCRS , & , }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }

1319 :	"Criterion"
		- NEIGH  = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- PARENT = { }
		- CHILD  = { criterion , get , datumNonNull , thisDatumEnsemble , thisDatum , otherDatum , datumEnsemble , datum , _isEquivalentTo , d , ! , otherDatumEnsemble , dbContext , if , otherSingleCRS , & , }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }

1319 :	"STRICT"
		- NEIGH  = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- PARENT = { }
		- CHILD  = { criterion , get , datumNonNull , thisDatumEnsemble , thisDatum , otherDatum , datumEnsemble , datum , _isEquivalentTo , d , ! , otherDatumEnsemble , dbContext , if , otherSingleCRS , & , }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherSingleCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }

1320 :	"&"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

1320 :	"thisDatum"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

1320 :	"d"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

1320 :	"datum"
		- NEIGH  = { datum , d , thisDatum , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { otherSingleCRS , datum , d , otherDatum , & , }

1321 :	"&"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1321 :	"otherDatum"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1321 :	"otherSingleCRS"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1321 :	"d"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1321 :	"datum"
		- NEIGH  = { otherSingleCRS , datum , d , otherDatum , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datum , d , thisDatum , & , }
		- SUCC   = { thisDatum , if , }

1322 :	"if"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PRED   = { otherSingleCRS , datum , d , otherDatum , & , }
		- SUCC   = { datumEnsemble , d , thisDatumEnsemble , & , }

1322 :	"thisDatum"
		- NEIGH  = { thisDatum , if , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PRED   = { otherSingleCRS , datum , d , otherDatum , & , }
		- SUCC   = { datumEnsemble , d , thisDatumEnsemble , & , }

1323 :	"if"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1323 :	"!"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1323 :	"thisDatum"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1323 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1323 :	"otherDatum"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1323 :	"get"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1323 :	"criterion"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1324 :	"dbContext"
		- NEIGH  = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1325 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dbContext , criterion , get , otherDatum , _isEquivalentTo , thisDatum , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1328 :	"if"
		- NEIGH  = { otherDatum , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1328 :	"otherDatum"
		- NEIGH  = { otherDatum , if , }
		- PARENT = { thisDatum , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1329 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherDatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1333 :	"&"
		- NEIGH  = { datumEnsemble , d , thisDatumEnsemble , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }

1333 :	"thisDatumEnsemble"
		- NEIGH  = { datumEnsemble , d , thisDatumEnsemble , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }

1333 :	"d"
		- NEIGH  = { datumEnsemble , d , thisDatumEnsemble , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }

1333 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , d , thisDatumEnsemble , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , if , }
		- SUCC   = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }

1334 :	"&"
		- NEIGH  = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , thisDatumEnsemble , & , }
		- SUCC   = { thisDatumEnsemble , if , }

1334 :	"otherDatumEnsemble"
		- NEIGH  = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , thisDatumEnsemble , & , }
		- SUCC   = { thisDatumEnsemble , if , }

1334 :	"otherSingleCRS"
		- NEIGH  = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , thisDatumEnsemble , & , }
		- SUCC   = { thisDatumEnsemble , if , }

1334 :	"d"
		- NEIGH  = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , thisDatumEnsemble , & , }
		- SUCC   = { thisDatumEnsemble , if , }

1334 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , thisDatumEnsemble , & , }
		- SUCC   = { thisDatumEnsemble , if , }

1335 :	"if"
		- NEIGH  = { thisDatumEnsemble , if , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PRED   = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }
		- SUCC   = { }

1335 :	"thisDatumEnsemble"
		- NEIGH  = { thisDatumEnsemble , if , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PRED   = { datumEnsemble , otherSingleCRS , d , otherDatumEnsemble , & , }
		- SUCC   = { }

1336 :	"if"
		- NEIGH  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1336 :	"!"
		- NEIGH  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1336 :	"thisDatumEnsemble"
		- NEIGH  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1336 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1336 :	"otherDatumEnsemble"
		- NEIGH  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1336 :	"get"
		- NEIGH  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1337 :	"criterion"
		- NEIGH  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1337 :	"dbContext"
		- NEIGH  = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1338 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dbContext , get , if , ! , otherDatumEnsemble , _isEquivalentTo , criterion , thisDatumEnsemble , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1341 :	"if"
		- NEIGH  = { otherDatumEnsemble , if , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1341 :	"otherDatumEnsemble"
		- NEIGH  = { otherDatumEnsemble , if , }
		- PARENT = { thisDatumEnsemble , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1342 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherDatumEnsemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1346 :	"if"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1346 :	"!"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1346 :	"datumNonNull"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1346 :	"dbContext"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1346 :	"_isEquivalentTo"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1347 :	"otherSingleCRS"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1347 :	"datumNonNull"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1347 :	"dbContext"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1347 :	"get"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1347 :	"criterion"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1348 :	"dbContext"
		- NEIGH  = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- PARENT = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1349 :	"return"
		- NEIGH  = { return , }
		- PARENT = { get , otherSingleCRS , _isEquivalentTo , dbContext , if , ! , criterion , datumNonNull , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1353 :	"return"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1353 :	"d"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1353 :	"coordinateSystem"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1353 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1354 :	"otherSingleCRS"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1354 :	"d"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1354 :	"coordinateSystem"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1354 :	"get"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1354 :	"criterion"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1355 :	"dbContext"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1355 :	"&&"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1356 :	"getExtensionProj4"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1356 :	"=="
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1356 :	"otherSingleCRS"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1356 :	"getExtensionProj4"
		- NEIGH  = { dbContext , get , otherSingleCRS , criterion , return , coordinateSystem , == , getExtensionProj4 , && , _isEquivalentTo , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , == , criterion , Criterion , util , STRICT , if , }
		- SUCC   = { }

1362 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1362 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1363 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1363 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1363 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1363 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1365 :	"&"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

1365 :	"l_datum"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

1365 :	"d"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

1365 :	"datum"
		- NEIGH  = { datum , d , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , if , }

1366 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , datumEnsemble , d , & , formatter , l_datumEnsemble , _exportToWKT , l_datum , }
		- PRED   = { datum , d , l_datum , & , }
		- SUCC   = { }

1366 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , datumEnsemble , d , & , formatter , l_datumEnsemble , _exportToWKT , l_datum , }
		- PRED   = { datum , d , l_datum , & , }
		- SUCC   = { }

1367 :	"l_datum"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1367 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1367 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1369 :	"&"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1369 :	"l_datumEnsemble"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1369 :	"d"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1369 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , d , l_datumEnsemble , & , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1370 :	"assert"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , l_datumEnsemble , & , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

1370 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , d , l_datumEnsemble , & , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

1371 :	"l_datumEnsemble"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

1371 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

1371 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

1379 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1379 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1380 :	"std"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1380 :	"vector"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1380 :	"<"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1380 :	"operation"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1380 :	"PointMotionOperationNNPtr"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1380 :	">"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1380 :	"velocityModel"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datum_ , GeodeticReferenceFramePtr , datum , }

1381 :	"datum"
		- NEIGH  = { datum_ , GeodeticReferenceFramePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- SUCC   = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }

1381 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { datum_ , GeodeticReferenceFramePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- SUCC   = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }

1381 :	"datum_"
		- NEIGH  = { datum_ , GeodeticReferenceFramePtr , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- SUCC   = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }

1383 :	"Private"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1383 :	"datum"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1383 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1383 :	"&"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1383 :	"datumIn"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1384 :	"datum_"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1384 :	"datumIn"
		- NEIGH  = { datum , datum_ , datumIn , & , GeodeticReferenceFramePtr , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , GeodeticReferenceFramePtr , datum , }
		- SUCC   = { }

1389 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1389 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1389 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1390 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1390 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1390 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1390 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1390 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1391 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1391 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1391 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1391 :	"ensemble"
		- NEIGH  = { ensemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1392 :	"*"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

1392 :	"msg"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

1393 :	"if"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

1393 :	"datumIn"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

1394 :	"if"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

1394 :	"!"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

1394 :	"ensemble"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

1395 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1395 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1397 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { datumIn , if , }
		- CHILD  = { }
		- PRED   = { ! , ensemble , if , }
		- SUCC   = { }

1398 :	"if"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , GeodeticReferenceFrame , & , }
		- PRED   = { }
		- SUCC   = { }

1398 :	"ensemble"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , GeodeticReferenceFrame , & , }
		- PRED   = { }
		- SUCC   = { }

1399 :	"&"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

1399 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

1399 :	"ensemble"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

1399 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

1400 :	"assert"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

1400 :	"!"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

1400 :	"datums"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

1400 :	"empty"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }

1401 :	"grfFirst"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1402 :	"dynamic_cast"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1402 :	"<"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1402 :	"datum"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1402 :	"GeodeticReferenceFrame"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1402 :	"*"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1402 :	">"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1402 :	"datums"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1402 :	"get"
		- NEIGH  = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

1403 :	"if"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- SUCC   = { msg , }

1403 :	"grfFirst"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , > , datums , GeodeticReferenceFrame , datum , < , * , dynamic_cast , grfFirst , }
		- SUCC   = { msg , }

1404 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1404 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1406 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { grfFirst , if , }
		- SUCC   = { }

1408 :	"throw"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1408 :	"util"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1408 :	"Exception"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1408 :	"msg"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

1415 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1415 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1415 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1415 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1415 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1415 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1416 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1416 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1416 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1416 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1417 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1417 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1417 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1417 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1418 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1418 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1418 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1418 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1418 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1419 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1420 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1420 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1420 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1420 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1420 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1420 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1420 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1424 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1424 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1424 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1424 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1424 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1424 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1425 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1425 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1425 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1425 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1426 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1426 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1426 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1426 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1427 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1427 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1427 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1427 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1427 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1428 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1429 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1429 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1429 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1429 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1429 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1429 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1429 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1433 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1433 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1433 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1433 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1433 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1433 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1434 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1434 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1434 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1434 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1435 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1435 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1435 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1435 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1436 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1436 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1436 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1436 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1436 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1437 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1438 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1438 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1438 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1438 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1438 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1438 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1438 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1442 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1442 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1442 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1442 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1442 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1443 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1448 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1448 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1453 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1453 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1453 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1454 :	"crs"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1454 :	"GeodeticCRS"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1454 :	"nn_make_shared"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1454 :	"<"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1454 :	"GeodeticCRS"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1454 :	">"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1454 :	"*"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1454 :	"this"
		- NEIGH  = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1455 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1455 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1455 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

1456 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

1456 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

1466 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1466 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1466 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1466 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1466 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1466 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1467 :	"return"
		- NEIGH  = { datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1467 :	"d"
		- NEIGH  = { datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1467 :	"datum_"
		- NEIGH  = { datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1475 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1475 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1476 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1476 :	"datumNonNull"
		- NEIGH  = { datumNonNull , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1476 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1476 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1476 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1476 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1477 :	"return"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1477 :	"NN_NO_CHECK"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1478 :	"d"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1478 :	"datum_"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1479 :	"d"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1479 :	"datum_"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"util"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"<"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"datum"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	"GeodeticReferenceFrame"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1480 :	">"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1481 :	"SingleCRS"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1481 :	"getPrivate"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1481 :	"datumEnsemble"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1481 :	"asDatum"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1481 :	"dbContext"
		- NEIGH  = { dbContext , asDatum , datumEnsemble , > , GeodeticReferenceFrame , NN_NO_CHECK , SingleCRS , getPrivate , datum , < , util , nn_dynamic_pointer_cast , datum_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1488 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1488 :	"GeodeticReferenceFrame"
		- NEIGH  = { GeodeticReferenceFrame , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1488 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1488 :	"oneDatum"
		- NEIGH  = { oneDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1488 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1488 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1488 :	"crs"
		- NEIGH  = { crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1489 :	"&"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1489 :	"l_datumEnsemble"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1489 :	"crs"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1489 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , crs , l_datumEnsemble , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

1490 :	"assert"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , crs , l_datumEnsemble , & , }
		- SUCC   = { l_datumEnsemble , l_datums , datums , & , }

1490 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumEnsemble , crs , l_datumEnsemble , & , }
		- SUCC   = { l_datumEnsemble , l_datums , datums , & , }

1491 :	"&"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1491 :	"l_datums"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1491 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1491 :	"datums"
		- NEIGH  = { l_datumEnsemble , l_datums , datums , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }

1492 :	"return"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1492 :	"static_cast"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1492 :	"<"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1492 :	"datum"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1492 :	"GeodeticReferenceFrame"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1492 :	"*"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1492 :	">"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1492 :	"l_datums"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1492 :	"get"
		- NEIGH  = { get , l_datums , > , * , GeodeticReferenceFrame , < , datum , static_cast , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , l_datums , datums , & , }
		- SUCC   = { }

1503 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1503 :	"PrimeMeridianNNPtr"
		- NEIGH  = { PrimeMeridianNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1503 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1503 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1503 :	"primeMeridian"
		- NEIGH  = { primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1503 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1504 :	"if"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , datum_ , d , return , }
		- PRED   = { }
		- SUCC   = { this , primeMeridian , oneDatum , return , }

1504 :	"d"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , datum_ , d , return , }
		- PRED   = { }
		- SUCC   = { this , primeMeridian , oneDatum , return , }

1504 :	"datum_"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , datum_ , d , return , }
		- PRED   = { }
		- SUCC   = { this , primeMeridian , oneDatum , return , }

1505 :	"return"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"d"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"datum_"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1505 :	"primeMeridian"
		- NEIGH  = { primeMeridian , datum_ , d , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1507 :	"return"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1507 :	"oneDatum"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1507 :	"this"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1507 :	"primeMeridian"
		- NEIGH  = { this , primeMeridian , oneDatum , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1517 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1517 :	"EllipsoidNNPtr"
		- NEIGH  = { EllipsoidNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1517 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1517 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1517 :	"ellipsoid"
		- NEIGH  = { ellipsoid , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1517 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1518 :	"if"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { datum_ , d , ellipsoid , return , }
		- PRED   = { }
		- SUCC   = { this , oneDatum , ellipsoid , return , }

1518 :	"d"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { datum_ , d , ellipsoid , return , }
		- PRED   = { }
		- SUCC   = { this , oneDatum , ellipsoid , return , }

1518 :	"datum_"
		- NEIGH  = { datum_ , d , if , }
		- PARENT = { }
		- CHILD  = { datum_ , d , ellipsoid , return , }
		- PRED   = { }
		- SUCC   = { this , oneDatum , ellipsoid , return , }

1519 :	"return"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1519 :	"d"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1519 :	"datum_"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1519 :	"ellipsoid"
		- NEIGH  = { datum_ , d , ellipsoid , return , }
		- PARENT = { datum_ , d , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1521 :	"return"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1521 :	"oneDatum"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1521 :	"this"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1521 :	"ellipsoid"
		- NEIGH  = { this , oneDatum , ellipsoid , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datum_ , d , if , }
		- SUCC   = { }

1530 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1530 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1530 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1530 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1530 :	"PointMotionOperationNNPtr"
		- NEIGH  = { PointMotionOperationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1530 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1530 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1531 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1531 :	"velocityModel"
		- NEIGH  = { velocityModel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1531 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1532 :	"return"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1532 :	"d"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1532 :	"velocityModel"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1546 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1546 :	"isGeocentric"
		- NEIGH  = { isGeocentric , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1546 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1547 :	"&"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , cs , & , }

1547 :	"cs"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , cs , & , }

1547 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , cs , & , }

1548 :	"&"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1548 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1548 :	"cs"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1548 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }

1549 :	"return"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1549 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1549 :	"size"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1549 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1549 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	"dynamic_cast"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	"<"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	"CartesianCS"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	"*"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	">"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	"get"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	"!="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1550 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1551 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1551 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1551 :	"direction"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1551 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1551 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1551 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1551 :	"AxisDirection"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1551 :	"GEOCENTRIC_X"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1551 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1552 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1552 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1552 :	"direction"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1552 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1552 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1552 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1552 :	"AxisDirection"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1552 :	"GEOCENTRIC_Y"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1552 :	"&&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1553 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1553 :	"axisList"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1553 :	"direction"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1553 :	"=="
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1553 :	"&"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1553 :	"cs"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1553 :	"AxisDirection"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1553 :	"GEOCENTRIC_Z"
		- NEIGH  = { GEOCENTRIC_Z , GEOCENTRIC_Y , direction , GEOCENTRIC_X , & , != , AxisDirection , get , && , > , CartesianCS , cs , dynamic_cast , < , * , == , axisList , size , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { }

1567 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1568 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1568 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1568 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1568 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1568 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1568 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1569 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1569 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1569 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1569 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1570 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1570 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1570 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1570 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1571 :	"return"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1571 :	"create"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1571 :	"properties"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1571 :	"datum"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1571 :	"as_nullable"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1571 :	"cs"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1588 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1589 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1589 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1589 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1589 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1589 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1589 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1590 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1590 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1590 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1590 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1591 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1591 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1591 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1591 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1592 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1592 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1592 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1592 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1593 :	"crs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1594 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1594 :	"nn_make_shared"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1594 :	"<"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1594 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1594 :	">"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1594 :	"datum"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1594 :	"datumEnsemble"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1594 :	"cs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1595 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1595 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1595 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1596 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1596 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1596 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1597 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1597 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1598 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1598 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1598 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1598 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1600 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1600 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1614 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1615 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1615 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1615 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1615 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1615 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1615 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1616 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1616 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1616 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1616 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1617 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1617 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1617 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1617 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1618 :	"return"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1618 :	"create"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1618 :	"properties"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1618 :	"datum"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1618 :	"as_nullable"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1618 :	"cs"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1635 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1636 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1637 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1637 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1637 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1637 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1638 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1638 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1638 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1638 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1639 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1639 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1639 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1639 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1640 :	"crs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1641 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1641 :	"nn_make_shared"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1641 :	"<"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1641 :	"GeodeticCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1641 :	">"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1641 :	"datum"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1641 :	"datumEnsemble"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1641 :	"cs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

1642 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1642 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1642 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeodeticCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

1643 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1643 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1643 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

1644 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1644 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1645 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1645 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1645 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1645 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

1646 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1646 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { }

1655 :	"exportAsESRIWktCompoundCRSWithEllipsoidalHeight"
		- NEIGH  = { exportAsESRIWktCompoundCRSWithEllipsoidalHeight , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"self"
		- NEIGH  = { self , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"geodCRS"
		- NEIGH  = { geodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1656 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1657 :	"&"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , ! , if , }

1657 :	"dbContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , ! , if , }

1657 :	"formatter"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , ! , if , }

1657 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , ! , if , }

1658 :	"if"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }

1658 :	"!"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }

1658 :	"dbContext"
		- NEIGH  = { dbContext , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }

1659 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dbContext , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1661 :	"l_datum"
		- NEIGH  = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }

1661 :	"geodCRS"
		- NEIGH  = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }

1661 :	"datumNonNull"
		- NEIGH  = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }

1661 :	"formatter"
		- NEIGH  = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }

1661 :	"databaseContext"
		- NEIGH  = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , ! , if , }
		- SUCC   = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }

1662 :	"l_alias"
		- NEIGH  = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- SUCC   = { empty , l_alias , if , }

1662 :	"dbContext"
		- NEIGH  = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- SUCC   = { empty , l_alias , if , }

1662 :	"getAliasFromOfficialName"
		- NEIGH  = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- SUCC   = { empty , l_alias , if , }

1663 :	"l_datum"
		- NEIGH  = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- SUCC   = { empty , l_alias , if , }

1663 :	"nameStr"
		- NEIGH  = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , datumNonNull , databaseContext , geodCRS , l_datum , }
		- SUCC   = { empty , l_alias , if , }

1664 :	"if"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }

1664 :	"l_alias"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }

1664 :	"empty"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , l_datum , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }

1665 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1667 :	"authFactory"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_alias , if , }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }

1668 :	"io"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_alias , if , }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }

1668 :	"AuthorityFactory"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_alias , if , }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }

1668 :	"create"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_alias , if , }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }

1668 :	"NN_NO_CHECK"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_alias , if , }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }

1668 :	"dbContext"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_alias , if , }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }

1668 :	"std"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_alias , if , }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }

1668 :	"string"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_alias , if , }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }

1669 :	"list"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , if , }

1669 :	"authFactory"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , if , }

1669 :	"createObjectsFromName"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , if , }

1670 :	"l_alias"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , if , }

1670 :	"io"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , if , }

1670 :	"AuthorityFactory"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , if , }

1670 :	"ObjectType"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , if , }

1670 :	"GEODETIC_REFERENCE_FRAME"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , if , }

1672 :	"if"
		- NEIGH  = { empty , list , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- SUCC   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }

1672 :	"list"
		- NEIGH  = { empty , list , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- SUCC   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }

1672 :	"empty"
		- NEIGH  = { empty , list , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , l_alias , authFactory , io , ObjectType , createObjectsFromName , list , }
		- SUCC   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }

1673 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , list , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1675 :	"gdatum"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , list , if , }
		- SUCC   = { empty , || , gdatum , == , identifiers , if , }

1675 :	"util"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , list , if , }
		- SUCC   = { empty , || , gdatum , == , identifiers , if , }

1675 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , list , if , }
		- SUCC   = { empty , || , gdatum , == , identifiers , if , }

1675 :	"<"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , list , if , }
		- SUCC   = { empty , || , gdatum , == , identifiers , if , }

1675 :	"datum"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , list , if , }
		- SUCC   = { empty , || , gdatum , == , identifiers , if , }

1675 :	"Datum"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , list , if , }
		- SUCC   = { empty , || , gdatum , == , identifiers , if , }

1675 :	">"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , list , if , }
		- SUCC   = { empty , || , gdatum , == , identifiers , if , }

1675 :	"list"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , list , if , }
		- SUCC   = { empty , || , gdatum , == , identifiers , if , }

1675 :	"front"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , list , if , }
		- SUCC   = { empty , || , gdatum , == , identifiers , if , }

1676 :	"if"
		- NEIGH  = { empty , || , gdatum , == , identifiers , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- SUCC   = { identifiers , gdatum , gdatum_ids , & , }

1676 :	"gdatum"
		- NEIGH  = { empty , || , gdatum , == , identifiers , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- SUCC   = { identifiers , gdatum , gdatum_ids , & , }

1676 :	"=="
		- NEIGH  = { empty , || , gdatum , == , identifiers , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- SUCC   = { identifiers , gdatum , gdatum_ids , & , }

1676 :	"||"
		- NEIGH  = { empty , || , gdatum , == , identifiers , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- SUCC   = { identifiers , gdatum , gdatum_ids , & , }

1676 :	"gdatum"
		- NEIGH  = { empty , || , gdatum , == , identifiers , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- SUCC   = { identifiers , gdatum , gdatum_ids , & , }

1676 :	"identifiers"
		- NEIGH  = { empty , || , gdatum , == , identifiers , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- SUCC   = { identifiers , gdatum , gdatum_ids , & , }

1676 :	"empty"
		- NEIGH  = { empty , || , gdatum , == , identifiers , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- SUCC   = { identifiers , gdatum , gdatum_ids , & , }

1677 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , || , gdatum , == , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1679 :	"&"
		- NEIGH  = { identifiers , gdatum , gdatum_ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , || , gdatum , == , identifiers , if , }
		- SUCC   = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }

1679 :	"gdatum_ids"
		- NEIGH  = { identifiers , gdatum , gdatum_ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , || , gdatum , == , identifiers , if , }
		- SUCC   = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }

1679 :	"gdatum"
		- NEIGH  = { identifiers , gdatum , gdatum_ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , || , gdatum , == , identifiers , if , }
		- SUCC   = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }

1679 :	"identifiers"
		- NEIGH  = { identifiers , gdatum , gdatum_ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , || , gdatum , == , identifiers , if , }
		- SUCC   = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }

1680 :	"vertCRSList"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1680 :	"authFactory"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1680 :	"createVerticalCRSFromDatum"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1681 :	"+"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1681 :	"*"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1681 :	"gdatum_ids"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1681 :	"codeSpace"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1681 :	"+"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1681 :	"+"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1682 :	"gdatum_ids"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1682 :	"code"
		- NEIGH  = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , gdatum , gdatum_ids , & , }
		- SUCC   = { != , size , vertCRSList , if , }

1683 :	"if"
		- NEIGH  = { != , size , vertCRSList , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- SUCC   = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }

1683 :	"vertCRSList"
		- NEIGH  = { != , size , vertCRSList , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- SUCC   = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }

1683 :	"size"
		- NEIGH  = { != , size , vertCRSList , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- SUCC   = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }

1683 :	"!="
		- NEIGH  = { != , size , vertCRSList , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { code , gdatum_ids , vertCRSList , * , + , createVerticalCRSFromDatum , codeSpace , authFactory , }
		- SUCC   = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }

1684 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , size , vertCRSList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1686 :	"self"
		- NEIGH  = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , size , vertCRSList , if , }
		- SUCC   = { formatter , _exportToWKT , front , vertCRSList , }

1686 :	"demoteTo2D"
		- NEIGH  = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , size , vertCRSList , if , }
		- SUCC   = { formatter , _exportToWKT , front , vertCRSList , }

1686 :	"std"
		- NEIGH  = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , size , vertCRSList , if , }
		- SUCC   = { formatter , _exportToWKT , front , vertCRSList , }

1686 :	"string"
		- NEIGH  = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , size , vertCRSList , if , }
		- SUCC   = { formatter , _exportToWKT , front , vertCRSList , }

1686 :	"dbContext"
		- NEIGH  = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , size , vertCRSList , if , }
		- SUCC   = { formatter , _exportToWKT , front , vertCRSList , }

1686 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , size , vertCRSList , if , }
		- SUCC   = { formatter , _exportToWKT , front , vertCRSList , }

1686 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , size , vertCRSList , if , }
		- SUCC   = { formatter , _exportToWKT , front , vertCRSList , }

1687 :	"vertCRSList"
		- NEIGH  = { formatter , _exportToWKT , front , vertCRSList , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- SUCC   = { return , }

1687 :	"front"
		- NEIGH  = { formatter , _exportToWKT , front , vertCRSList , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- SUCC   = { return , }

1687 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , front , vertCRSList , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- SUCC   = { return , }

1687 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , front , vertCRSList , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , dbContext , self , std , demoteTo2D , string , }
		- SUCC   = { return , }

1688 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , front , vertCRSList , }
		- SUCC   = { }

1695 :	"exportAsWKT1CompoundCRSWithEllipsoidalHeight"
		- NEIGH  = { exportAsWKT1CompoundCRSWithEllipsoidalHeight , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1696 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1696 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1696 :	"base2DCRS"
		- NEIGH  = { base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1697 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1697 :	"CoordinateSystemAxisNNPtr"
		- NEIGH  = { CoordinateSystemAxisNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1697 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1697 :	"verticalAxis"
		- NEIGH  = { verticalAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1698 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1698 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1698 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1698 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1699 :	"std"
		- NEIGH  = { verticalCRSName , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { name , unit , verticalAxis , += , verticalCRSName , }

1699 :	"string"
		- NEIGH  = { verticalCRSName , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { name , unit , verticalAxis , += , verticalCRSName , }

1699 :	"verticalCRSName"
		- NEIGH  = { verticalCRSName , string , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { name , unit , verticalAxis , += , verticalCRSName , }

1700 :	"verticalCRSName"
		- NEIGH  = { name , unit , verticalAxis , += , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalCRSName , string , std , }
		- SUCC   = { += , verticalCRSName , }

1700 :	"+="
		- NEIGH  = { name , unit , verticalAxis , += , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalCRSName , string , std , }
		- SUCC   = { += , verticalCRSName , }

1700 :	"verticalAxis"
		- NEIGH  = { name , unit , verticalAxis , += , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalCRSName , string , std , }
		- SUCC   = { += , verticalCRSName , }

1700 :	"unit"
		- NEIGH  = { name , unit , verticalAxis , += , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalCRSName , string , std , }
		- SUCC   = { += , verticalCRSName , }

1700 :	"name"
		- NEIGH  = { name , unit , verticalAxis , += , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalCRSName , string , std , }
		- SUCC   = { += , verticalCRSName , }

1701 :	"verticalCRSName"
		- NEIGH  = { += , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { name , unit , verticalAxis , += , verticalCRSName , }
		- SUCC   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }

1701 :	"+="
		- NEIGH  = { += , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { name , unit , verticalAxis , += , verticalCRSName , }
		- SUCC   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }

1702 :	"vertDatum"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1702 :	"datum"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1702 :	"VerticalReferenceFrame"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1702 :	"create"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1703 :	"util"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1703 :	"PropertyMap"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1704 :	"set"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1704 :	"common"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1704 :	"IdentifiedObject"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1704 :	"NAME_KEY"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1705 :	"set"
		- NEIGH  = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , verticalCRSName , }
		- SUCC   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }

1706 :	"vertCRS"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1706 :	"VerticalCRS"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1706 :	"create"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1707 :	"util"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1707 :	"PropertyMap"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1707 :	"set"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1707 :	"common"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1707 :	"IdentifiedObject"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1707 :	"NAME_KEY"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1708 :	"verticalCRSName"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1709 :	"vertDatum"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1709 :	"as_nullable"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1710 :	"cs"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1710 :	"VerticalCS"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1710 :	"create"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1710 :	"util"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1710 :	"PropertyMap"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1710 :	"verticalAxis"
		- NEIGH  = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , set , common , util , IdentifiedObject , create , PropertyMap , VerticalReferenceFrame , datum , vertDatum , }
		- SUCC   = { WKTConstants , io , COMPD_CS , startNode , formatter , }

1711 :	"formatter"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- SUCC   = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }

1711 :	"startNode"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- SUCC   = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }

1711 :	"io"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- SUCC   = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }

1711 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- SUCC   = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }

1711 :	"COMPD_CS"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalAxis , as_nullable , vertDatum , NAME_KEY , set , common , VerticalCS , cs , util , PropertyMap , IdentifiedObject , create , vertCRS , VerticalCRS , verticalCRSName , }
		- SUCC   = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }

1712 :	"formatter"
		- NEIGH  = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , base2DCRS , }

1712 :	"addQuotedString"
		- NEIGH  = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , base2DCRS , }

1712 :	"base2DCRS"
		- NEIGH  = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , base2DCRS , }

1712 :	"nameStr"
		- NEIGH  = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , base2DCRS , }

1712 :	"+"
		- NEIGH  = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , base2DCRS , }

1712 :	"+"
		- NEIGH  = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , base2DCRS , }

1712 :	"verticalCRSName"
		- NEIGH  = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , base2DCRS , }

1713 :	"base2DCRS"
		- NEIGH  = { formatter , _exportToWKT , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- SUCC   = { formatter , _exportToWKT , vertCRS , }

1713 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- SUCC   = { formatter , _exportToWKT , vertCRS , }

1713 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , base2DCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { verticalCRSName , formatter , addQuotedString , nameStr , + , base2DCRS , }
		- SUCC   = { formatter , _exportToWKT , vertCRS , }

1714 :	"vertCRS"
		- NEIGH  = { formatter , _exportToWKT , vertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , base2DCRS , }
		- SUCC   = { endNode , formatter , }

1714 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , vertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , base2DCRS , }
		- SUCC   = { endNode , formatter , }

1714 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , vertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , base2DCRS , }
		- SUCC   = { endNode , formatter , }

1715 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , vertCRS , }
		- SUCC   = { return , }

1715 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , vertCRS , }
		- SUCC   = { return , }

1716 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { }

1723 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1723 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1723 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1723 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1723 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1723 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1724 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1724 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1724 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1724 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1724 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1724 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1724 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1724 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }

1725 :	"isGeographic"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { coordinateSystem , cs , & , }

1726 :	"dynamic_cast"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { coordinateSystem , cs , & , }

1726 :	"<"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { coordinateSystem , cs , & , }

1726 :	"GeographicCRS"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { coordinateSystem , cs , & , }

1726 :	"*"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { coordinateSystem , cs , & , }

1726 :	">"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { coordinateSystem , cs , & , }

1726 :	"this"
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { coordinateSystem , cs , & , }

1726 :	"!="
		- NEIGH  = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { coordinateSystem , cs , & , }

1728 :	"&"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { axisList , cs , & , }

1728 :	"cs"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { axisList , cs , & , }

1728 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , > , < , GeographicCRS , this , dynamic_cast , * , isGeographic , }
		- SUCC   = { axisList , cs , & , }

1729 :	"&"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1729 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1729 :	"cs"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1729 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

1730 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { nameStr , l_name , }

1730 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { nameStr , l_name , }

1730 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { nameStr , l_name , }

1731 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

1731 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

1732 :	"&"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1732 :	"dbContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1732 :	"formatter"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1732 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1734 :	"if"
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1734 :	"!"
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1734 :	"isWKT2"
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1734 :	"&&"
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1734 :	"formatter"
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1734 :	"useESRIDialect"
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1734 :	"&&"
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1734 :	"axisList"
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1734 :	"size"
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1734 :	"=="
		- NEIGH  = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , dbContext , io , isGeographic , ! , if , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }

1735 :	"if"
		- NEIGH  = { isGeographic , ! , if , }
		- PARENT = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

1735 :	"!"
		- NEIGH  = { isGeographic , ! , if , }
		- PARENT = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

1735 :	"isGeographic"
		- NEIGH  = { isGeographic , ! , if , }
		- PARENT = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

1736 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeographic , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1736 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeographic , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1736 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeographic , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1741 :	"if"
		- NEIGH  = { dbContext , if , }
		- PARENT = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { isGeographic , ! , if , }
		- SUCC   = { Throw , FormattingException , io , }

1741 :	"dbContext"
		- NEIGH  = { dbContext , if , }
		- PARENT = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { isGeographic , ! , if , }
		- SUCC   = { Throw , FormattingException , io , }

1742 :	"if"
		- NEIGH  = { this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1742 :	"exportAsESRIWktCompoundCRSWithEllipsoidalHeight"
		- NEIGH  = { this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1742 :	"this"
		- NEIGH  = { this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1742 :	"this"
		- NEIGH  = { this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1743 :	"formatter"
		- NEIGH  = { this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1744 :	"return"
		- NEIGH  = { return , }
		- PARENT = { this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1747 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1747 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1747 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1751 :	"if"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1751 :	"!"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1751 :	"isWKT2"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1751 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1751 :	"formatter"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1751 :	"isStrict"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1751 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1751 :	"isGeographic"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1751 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1752 :	"axisList"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1752 :	"size"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1752 :	"!="
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1752 :	"&&"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1753 :	"oldAxisOutputRule"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1753 :	"!="
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1753 :	"io"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1753 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1753 :	"OutputAxisRule"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1753 :	"NO"
		- NEIGH  = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , isAllowedEllipsoidalHeightAsVerticalCRS , originalCompoundCRS_ , originalCompoundCRS , & , getPrivate , CRS , dbContext , geogCRS2D , if , formatter , string , allowNonConformantWKT1Export_ , std , demoteTo2D , }
		- PRED   = { size , axisList , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }

1755 :	"geogCRS2D"
		- NEIGH  = { string , std , demoteTo2D , dbContext , geogCRS2D , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

1755 :	"demoteTo2D"
		- NEIGH  = { string , std , demoteTo2D , dbContext , geogCRS2D , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

1755 :	"std"
		- NEIGH  = { string , std , demoteTo2D , dbContext , geogCRS2D , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

1755 :	"string"
		- NEIGH  = { string , std , demoteTo2D , dbContext , geogCRS2D , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

1755 :	"dbContext"
		- NEIGH  = { string , std , demoteTo2D , dbContext , geogCRS2D , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

1756 :	"if"
		- NEIGH  = { dbContext , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { == , EPSG , size , metadata , if , geogCRS2D , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , }
		- PRED   = { string , std , demoteTo2D , dbContext , geogCRS2D , }
		- SUCC   = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }

1756 :	"dbContext"
		- NEIGH  = { dbContext , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { == , EPSG , size , metadata , if , geogCRS2D , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , }
		- PRED   = { string , std , demoteTo2D , dbContext , geogCRS2D , }
		- SUCC   = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }

1757 :	"res"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1757 :	"geogCRS2D"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1757 :	"identify"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1757 :	"io"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1757 :	"AuthorityFactory"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1757 :	"create"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1758 :	"NN_NO_CHECK"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1758 :	"dbContext"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1758 :	"metadata"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1758 :	"Identifier"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1758 :	"EPSG"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

1759 :	"if"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { second , if , res , == , front , & , }
		- PRED   = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- SUCC   = { }

1759 :	"res"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { second , if , res , == , front , & , }
		- PRED   = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- SUCC   = { }

1759 :	"size"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { second , if , res , == , front , & , }
		- PRED   = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- SUCC   = { }

1759 :	"=="
		- NEIGH  = { == , size , res , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { second , if , res , == , front , & , }
		- PRED   = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , res , io , identify , AuthorityFactory , geogCRS2D , }
		- SUCC   = { }

1760 :	"&"
		- NEIGH  = { res , front , & , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , second , front , if , }

1760 :	"front"
		- NEIGH  = { res , front , & , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , second , front , if , }

1760 :	"res"
		- NEIGH  = { res , front , & , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , second , front , if , }

1760 :	"front"
		- NEIGH  = { res , front , & , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , second , front , if , }

1761 :	"if"
		- NEIGH  = { == , second , front , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { front , first , geogCRS2D , }
		- PRED   = { res , front , & , }
		- SUCC   = { }

1761 :	"front"
		- NEIGH  = { == , second , front , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { front , first , geogCRS2D , }
		- PRED   = { res , front , & , }
		- SUCC   = { }

1761 :	"second"
		- NEIGH  = { == , second , front , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { front , first , geogCRS2D , }
		- PRED   = { res , front , & , }
		- SUCC   = { }

1761 :	"=="
		- NEIGH  = { == , second , front , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { front , first , geogCRS2D , }
		- PRED   = { res , front , & , }
		- SUCC   = { }

1762 :	"geogCRS2D"
		- NEIGH  = { front , first , geogCRS2D , }
		- PARENT = { == , second , front , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1762 :	"front"
		- NEIGH  = { front , first , geogCRS2D , }
		- PARENT = { == , second , front , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1762 :	"first"
		- NEIGH  = { front , first , geogCRS2D , }
		- PARENT = { == , second , front , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1767 :	"if"
		- NEIGH  = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { setTOWGS84Parameters , getTOWGS84Parameters , oldTOWGSParameters , _exportToWKT , geogCRS2D , l_name , endNode , WKTConstants , return , io , addQuotedString , formatter , COMPD_CS , + , startNode , }
		- PRED   = { dbContext , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

1767 :	"CRS"
		- NEIGH  = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { setTOWGS84Parameters , getTOWGS84Parameters , oldTOWGSParameters , _exportToWKT , geogCRS2D , l_name , endNode , WKTConstants , return , io , addQuotedString , formatter , COMPD_CS , + , startNode , }
		- PRED   = { dbContext , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

1767 :	"getPrivate"
		- NEIGH  = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { setTOWGS84Parameters , getTOWGS84Parameters , oldTOWGSParameters , _exportToWKT , geogCRS2D , l_name , endNode , WKTConstants , return , io , addQuotedString , formatter , COMPD_CS , + , startNode , }
		- PRED   = { dbContext , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

1767 :	"allowNonConformantWKT1Export_"
		- NEIGH  = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { setTOWGS84Parameters , getTOWGS84Parameters , oldTOWGSParameters , _exportToWKT , geogCRS2D , l_name , endNode , WKTConstants , return , io , addQuotedString , formatter , COMPD_CS , + , startNode , }
		- PRED   = { dbContext , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

1768 :	"formatter"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , l_name , addQuotedString , formatter , }

1768 :	"startNode"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , l_name , addQuotedString , formatter , }

1768 :	"io"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , l_name , addQuotedString , formatter , }

1768 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , l_name , addQuotedString , formatter , }

1768 :	"COMPD_CS"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { + , l_name , addQuotedString , formatter , }

1769 :	"formatter"
		- NEIGH  = { + , l_name , addQuotedString , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , geogCRS2D , }

1769 :	"addQuotedString"
		- NEIGH  = { + , l_name , addQuotedString , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , geogCRS2D , }

1769 :	"l_name"
		- NEIGH  = { + , l_name , addQuotedString , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , geogCRS2D , }

1769 :	"+"
		- NEIGH  = { + , l_name , addQuotedString , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , geogCRS2D , }

1769 :	"+"
		- NEIGH  = { + , l_name , addQuotedString , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , geogCRS2D , }

1769 :	"l_name"
		- NEIGH  = { + , l_name , addQuotedString , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , geogCRS2D , }

1770 :	"geogCRS2D"
		- NEIGH  = { formatter , _exportToWKT , geogCRS2D , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { + , l_name , addQuotedString , formatter , }
		- SUCC   = { formatter , getTOWGS84Parameters , oldTOWGSParameters , }

1770 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , geogCRS2D , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { + , l_name , addQuotedString , formatter , }
		- SUCC   = { formatter , getTOWGS84Parameters , oldTOWGSParameters , }

1770 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , geogCRS2D , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { + , l_name , addQuotedString , formatter , }
		- SUCC   = { formatter , getTOWGS84Parameters , oldTOWGSParameters , }

1771 :	"oldTOWGSParameters"
		- NEIGH  = { formatter , getTOWGS84Parameters , oldTOWGSParameters , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , geogCRS2D , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

1771 :	"formatter"
		- NEIGH  = { formatter , getTOWGS84Parameters , oldTOWGSParameters , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , geogCRS2D , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

1771 :	"getTOWGS84Parameters"
		- NEIGH  = { formatter , getTOWGS84Parameters , oldTOWGSParameters , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , geogCRS2D , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

1772 :	"formatter"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { formatter , getTOWGS84Parameters , oldTOWGSParameters , }
		- SUCC   = { formatter , _exportToWKT , geogCRS2D , }

1772 :	"setTOWGS84Parameters"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { formatter , getTOWGS84Parameters , oldTOWGSParameters , }
		- SUCC   = { formatter , _exportToWKT , geogCRS2D , }

1773 :	"geogCRS2D"
		- NEIGH  = { formatter , _exportToWKT , geogCRS2D , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { oldTOWGSParameters , setTOWGS84Parameters , formatter , }

1773 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , geogCRS2D , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { oldTOWGSParameters , setTOWGS84Parameters , formatter , }

1773 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , geogCRS2D , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { oldTOWGSParameters , setTOWGS84Parameters , formatter , }

1774 :	"formatter"
		- NEIGH  = { oldTOWGSParameters , setTOWGS84Parameters , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , geogCRS2D , }
		- SUCC   = { endNode , formatter , }

1774 :	"setTOWGS84Parameters"
		- NEIGH  = { oldTOWGSParameters , setTOWGS84Parameters , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , geogCRS2D , }
		- SUCC   = { endNode , formatter , }

1774 :	"oldTOWGSParameters"
		- NEIGH  = { oldTOWGSParameters , setTOWGS84Parameters , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , geogCRS2D , }
		- SUCC   = { endNode , formatter , }

1775 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { oldTOWGSParameters , setTOWGS84Parameters , formatter , }
		- SUCC   = { return , }

1775 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { oldTOWGSParameters , setTOWGS84Parameters , formatter , }
		- SUCC   = { return , }

1776 :	"return"
		- NEIGH  = { return , }
		- PARENT = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { }

1779 :	"&"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- SUCC   = { originalCompoundCRS , if , }

1779 :	"originalCompoundCRS"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- SUCC   = { originalCompoundCRS , if , }

1779 :	"CRS"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- SUCC   = { originalCompoundCRS , if , }

1779 :	"getPrivate"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- SUCC   = { originalCompoundCRS , if , }

1779 :	"originalCompoundCRS_"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { CRS , allowNonConformantWKT1Export_ , getPrivate , if , }
		- SUCC   = { originalCompoundCRS , if , }

1780 :	"if"
		- NEIGH  = { originalCompoundCRS , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { return , formatter , _exportToWKT , originalCompoundCRS , }
		- PRED   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- SUCC   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }

1780 :	"originalCompoundCRS"
		- NEIGH  = { originalCompoundCRS , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { return , formatter , _exportToWKT , originalCompoundCRS , }
		- PRED   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- SUCC   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }

1781 :	"originalCompoundCRS"
		- NEIGH  = { formatter , _exportToWKT , originalCompoundCRS , }
		- PARENT = { originalCompoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

1781 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , originalCompoundCRS , }
		- PARENT = { originalCompoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

1781 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , originalCompoundCRS , }
		- PARENT = { originalCompoundCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

1782 :	"return"
		- NEIGH  = { return , }
		- PARENT = { originalCompoundCRS , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , originalCompoundCRS , }
		- SUCC   = { }

1785 :	"if"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { axisList , geogCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , if , }
		- SUCC   = { Throw , FormattingException , io , }

1785 :	"formatter"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { axisList , geogCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , if , }
		- SUCC   = { Throw , FormattingException , io , }

1785 :	"isAllowedEllipsoidalHeightAsVerticalCRS"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { axisList , geogCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , if , }
		- SUCC   = { Throw , FormattingException , io , }

1786 :	"if"
		- NEIGH  = { axisList , geogCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1786 :	"exportAsWKT1CompoundCRSWithEllipsoidalHeight"
		- NEIGH  = { axisList , geogCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1787 :	"geogCRS2D"
		- NEIGH  = { axisList , geogCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1787 :	"axisList"
		- NEIGH  = { axisList , geogCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1787 :	"formatter"
		- NEIGH  = { axisList , geogCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

1788 :	"return"
		- NEIGH  = { return , }
		- PARENT = { axisList , geogCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1792 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- SUCC   = { }

1792 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- SUCC   = { }

1792 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , if , }
		- SUCC   = { }

1796 :	"formatter"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1796 :	"startNode"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1796 :	"isWKT2"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1797 :	"formatter"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1797 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1797 :	"&&"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1797 :	"isGeographic"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1798 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1798 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1798 :	"GEOGCRS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1799 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1799 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1799 :	"GEODCRS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1800 :	"isGeocentric"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1800 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1800 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1800 :	"GEOCCS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1801 :	"io"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1801 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1801 :	"GEOGCS"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1802 :	"!"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1802 :	"identifiers"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1802 :	"empty"
		- NEIGH  = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKTFormatter , NO , OutputAxisRule , io , size , axisList , isGeographic , != , && , isStrict , ! , formatter , isWKT2 , oldAxisOutputRule , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

1804 :	"if"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { == , l_name , if , }
		- PRED   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1804 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { == , l_name , if , }
		- PRED   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1804 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { == , l_name , if , }
		- PRED   = { empty , identifiers , GEOGCS , GEOCCS , GEODCRS , io , isGeocentric , WKTConstants , isGeographic , ! , formatter , use2019Keywords , isWKT2 , && , GEOGCRS , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

1805 :	"if"
		- NEIGH  = { == , l_name , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { ! , dbContext , if , aliasFound , l_name , }
		- PRED   = { }
		- SUCC   = { }

1805 :	"l_name"
		- NEIGH  = { == , l_name , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { ! , dbContext , if , aliasFound , l_name , }
		- PRED   = { }
		- SUCC   = { }

1805 :	"=="
		- NEIGH  = { == , l_name , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { ! , dbContext , if , aliasFound , l_name , }
		- PRED   = { }
		- SUCC   = { }

1806 :	"l_name"
		- NEIGH  = { l_name , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1808 :	"aliasFound"
		- NEIGH  = { aliasFound , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

1809 :	"if"
		- NEIGH  = { dbContext , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { empty , l_name , dbContext , ! , if , getAliasFromOfficialName , l_alias , }
		- PRED   = { aliasFound , }
		- SUCC   = { aliasFound , ! , if , }

1809 :	"dbContext"
		- NEIGH  = { dbContext , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { empty , l_name , dbContext , ! , if , getAliasFromOfficialName , l_alias , }
		- PRED   = { aliasFound , }
		- SUCC   = { aliasFound , ! , if , }

1810 :	"l_alias"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1810 :	"dbContext"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1810 :	"getAliasFromOfficialName"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1811 :	"l_name"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

1812 :	"if"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1812 :	"!"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1812 :	"l_alias"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1812 :	"empty"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

1813 :	"l_name"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aliasFound , }

1813 :	"l_alias"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aliasFound , }

1814 :	"aliasFound"
		- NEIGH  = { aliasFound , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { l_alias , l_name , }
		- SUCC   = { }

1817 :	"if"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { starts_with , ! , if , io , WKTFormatter , morphNameToESRI , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1817 :	"!"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { starts_with , ! , if , io , WKTFormatter , morphNameToESRI , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1817 :	"aliasFound"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { == , l_name , if , }
		- CHILD  = { starts_with , ! , if , io , WKTFormatter , morphNameToESRI , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

1818 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1818 :	"io"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1818 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1818 :	"morphNameToESRI"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1818 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_name , starts_with , ! , if , }

1819 :	"if"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1819 :	"!"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1819 :	"starts_with"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1819 :	"l_name"
		- NEIGH  = { l_name , starts_with , ! , if , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { + , l_name , }
		- PRED   = { WKTFormatter , morphNameToESRI , io , l_name , }
		- SUCC   = { }

1820 :	"l_name"
		- NEIGH  = { + , l_name , }
		- PARENT = { l_name , starts_with , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1820 :	"+"
		- NEIGH  = { + , l_name , }
		- PARENT = { l_name , starts_with , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1820 :	"l_name"
		- NEIGH  = { + , l_name , }
		- PARENT = { l_name , starts_with , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1826 :	"if"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1826 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1826 :	"isWKT2"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1826 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1826 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1826 :	"formatter"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1826 :	"useESRIDialect"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1826 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1826 :	"isDeprecated"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

1827 :	"l_name"
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1827 :	"+="
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1829 :	"formatter"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { axisList , unit , & , }

1829 :	"addQuotedString"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { axisList , unit , & , }

1829 :	"l_name"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { axisList , unit , & , }

1831 :	"&"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1831 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1831 :	"axisList"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1831 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }

1832 :	"formatter"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1832 :	"pushAxisAngularUnit"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1832 :	"common"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1832 :	"UnitOfMeasure"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1832 :	"create"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1832 :	"unit"
		- NEIGH  = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , }

1833 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , }

1833 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , }

1834 :	"primeMeridian"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { popAxisAngularUnit , formatter , }

1834 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { popAxisAngularUnit , formatter , }

1834 :	"formatter"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- SUCC   = { popAxisAngularUnit , formatter , }

1835 :	"formatter"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , }
		- SUCC   = { isWKT2 , ! , if , }

1835 :	"popAxisAngularUnit"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , }
		- SUCC   = { isWKT2 , ! , if , }

1836 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

1836 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

1836 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

1837 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1837 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1837 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1840 :	"if"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1840 :	"oldAxisOutputRule"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1840 :	"=="
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1841 :	"io"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1841 :	"WKTFormatter"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1841 :	"OutputAxisRule"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1841 :	"WKT1_GDAL_EPSG_STYLE"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1841 :	"&&"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1842 :	"isGeocentric"
		- NEIGH  = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { formatter , _exportToWKT , cs , }

1843 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1843 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1843 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1843 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1843 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1843 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1845 :	"cs"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

1845 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

1845 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isGeocentric , OutputAxisRule , WKTFormatter , io , && , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

1846 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

1846 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

1846 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

1848 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

1848 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

1848 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

1850 :	"if"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1850 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1850 :	"isWKT2"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1850 :	"&&"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1850 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1850 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1850 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { endNode , formatter , }

1851 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1851 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1851 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1851 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1851 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1852 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1852 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1852 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1852 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { endNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

1853 :	"formatter"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1853 :	"startNode"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1853 :	"io"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1853 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1853 :	"EXTENSION"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

1854 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

1854 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

1855 :	"formatter"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

1855 :	"addQuotedString"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

1855 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

1856 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

1856 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

1860 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { }

1860 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { }

1867 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1867 :	"addGeocentricUnitConversionIntoPROJString"
		- NEIGH  = { addGeocentricUnitConversionIntoPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1868 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1868 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1868 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1868 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1870 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1870 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1870 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1870 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

1871 :	"&"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1871 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1871 :	"axisList"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1871 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }

1872 :	"if"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1872 :	"!"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1872 :	"unit"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1872 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1872 :	"common"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1872 :	"UnitOfMeasure"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1872 :	"METRE"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1873 :	"util"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1873 :	"IComparable"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1873 :	"Criterion"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1873 :	"EQUIVALENT"
		- NEIGH  = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- PARENT = { }
		- CHILD  = { toSI , unit , empty , & , projUnit , getCRSExport , addParam , conversionToSI , addStep , formatter , ! , exportToPROJString , if , }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { }

1874 :	"if"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

1874 :	"formatter"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

1874 :	"getCRSExport"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

1875 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1875 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1875 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1879 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { getCRSExport , formatter , if , }
		- SUCC   = { addParam , formatter , }

1879 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { getCRSExport , formatter , if , }
		- SUCC   = { addParam , formatter , }

1880 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { addParam , formatter , }

1880 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { addParam , formatter , }

1881 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { exportToPROJString , unit , projUnit , }

1881 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { exportToPROJString , unit , projUnit , }

1883 :	"projUnit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , ! , if , }

1883 :	"unit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , ! , if , }

1883 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , ! , if , }

1884 :	"if"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1884 :	"!"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1884 :	"projUnit"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1884 :	"empty"
		- NEIGH  = { empty , projUnit , ! , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { projUnit , return , addParam , formatter , }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { conversionToSI , unit , toSI , & , }

1885 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

1885 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

1885 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projUnit , addParam , formatter , }

1886 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { return , }

1886 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { return , }

1886 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { return , }

1887 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , projUnit , ! , if , }
		- CHILD  = { }
		- PRED   = { projUnit , addParam , formatter , }
		- SUCC   = { }

1891 :	"&"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1891 :	"toSI"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1891 :	"unit"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1891 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , toSI , & , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , projUnit , ! , if , }
		- SUCC   = { toSI , addParam , formatter , }

1892 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { conversionToSI , unit , toSI , & , }
		- SUCC   = { toSI , addParam , formatter , }

1892 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { conversionToSI , unit , toSI , & , }
		- SUCC   = { toSI , addParam , formatter , }

1892 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { conversionToSI , unit , toSI , & , }
		- SUCC   = { toSI , addParam , formatter , }

1893 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

1893 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

1893 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { }
		- PRED   = { toSI , addParam , formatter , }
		- SUCC   = { }

1894 :	"if"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

1894 :	"formatter"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

1894 :	"getCRSExport"
		- NEIGH  = { getCRSExport , formatter , if , }
		- PARENT = { IComparable , EQUIVALENT , UnitOfMeasure , Criterion , util , common , _isEquivalentTo , unit , METRE , ! , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

1895 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1895 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1903 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1903 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1904 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1904 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1904 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1904 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1906 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1906 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1906 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1906 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1906 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

1907 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1907 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1907 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1907 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { isGeocentric , ! , if , }

1908 :	"formatter"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1908 :	"ingestPROJString"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1909 :	"replaceAll"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1909 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

1910 :	"formatter"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

1910 :	"addNoDefs"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

1911 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addNoDefs , formatter , }
		- SUCC   = { }

1914 :	"if"
		- NEIGH  = { isGeocentric , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

1914 :	"!"
		- NEIGH  = { isGeocentric , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

1914 :	"isGeocentric"
		- NEIGH  = { isGeocentric , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

1915 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeocentric , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1915 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeocentric , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1915 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isGeocentric , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1920 :	"if"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1920 :	"!"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1920 :	"formatter"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1920 :	"getCRSExport"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { addStep , formatter , }
		- PRED   = { isGeocentric , ! , if , }
		- SUCC   = { formatter , addDatumInfoToPROJString , }

1921 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1921 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1923 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1923 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1925 :	"addDatumInfoToPROJString"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , getCRSExport , formatter , if , }
		- SUCC   = { formatter , addGeocentricUnitConversionIntoPROJString , }

1925 :	"formatter"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , getCRSExport , formatter , if , }
		- SUCC   = { formatter , addGeocentricUnitConversionIntoPROJString , }

1926 :	"addGeocentricUnitConversionIntoPROJString"
		- NEIGH  = { formatter , addGeocentricUnitConversionIntoPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , addDatumInfoToPROJString , }
		- SUCC   = { }

1926 :	"formatter"
		- NEIGH  = { formatter , addGeocentricUnitConversionIntoPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , addDatumInfoToPROJString , }
		- SUCC   = { }

1933 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1933 :	"addDatumInfoToPROJString"
		- NEIGH  = { addDatumInfoToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1934 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1934 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1934 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1934 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1936 :	"&"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1936 :	"TOWGS84Params"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1936 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1936 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumWritten , }

1937 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , formatter , TOWGS84Params , & , }
		- SUCC   = { getHDatumExtension , formatter , nadgrids , & , }

1938 :	"&"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { databaseContext , formatter , datumNonNull , l_datum , }

1938 :	"nadgrids"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { databaseContext , formatter , datumNonNull , l_datum , }

1938 :	"formatter"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { databaseContext , formatter , datumNonNull , l_datum , }

1938 :	"getHDatumExtension"
		- NEIGH  = { getHDatumExtension , formatter , nadgrids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { databaseContext , formatter , datumNonNull , l_datum , }

1939 :	"l_datum"
		- NEIGH  = { databaseContext , formatter , datumNonNull , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }

1939 :	"datumNonNull"
		- NEIGH  = { databaseContext , formatter , datumNonNull , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }

1939 :	"formatter"
		- NEIGH  = { databaseContext , formatter , datumNonNull , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }

1939 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , datumNonNull , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getHDatumExtension , formatter , nadgrids , & , }
		- SUCC   = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }

1940 :	"if"
		- NEIGH  = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { ! , datumWritten , if , }

1940 :	"formatter"
		- NEIGH  = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { ! , datumWritten , if , }

1940 :	"getCRSExport"
		- NEIGH  = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { ! , datumWritten , if , }

1940 :	"&&"
		- NEIGH  = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { ! , datumWritten , if , }

1940 :	"TOWGS84Params"
		- NEIGH  = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { ! , datumWritten , if , }

1940 :	"empty"
		- NEIGH  = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { ! , datumWritten , if , }

1940 :	"&&"
		- NEIGH  = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { ! , datumWritten , if , }

1941 :	"nadgrids"
		- NEIGH  = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { ! , datumWritten , if , }

1941 :	"empty"
		- NEIGH  = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- PARENT = { }
		- CHILD  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { ! , datumWritten , if , }

1942 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1942 :	"l_datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1942 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1943 :	"datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1943 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1943 :	"EPSG_6326"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1943 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1944 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1944 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1944 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1944 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- CHILD  = { EQUIVALENT , IComparable , EPSG_6267 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , if , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1945 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

1946 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1946 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1947 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1947 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1947 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1948 :	"datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1948 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1948 :	"EPSG_6267"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1948 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1949 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1949 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1949 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1949 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , util , get , Criterion , datumWritten , addParam , _isEquivalentTo , formatter , }
		- PRED   = { }
		- SUCC   = { }

1950 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

1951 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1951 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1952 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1952 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1952 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1953 :	"datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1953 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1953 :	"EPSG_6269"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1953 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1954 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1954 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1954 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1954 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6267 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { getLegacyCRSToCRSContext , formatter , if , datumWritten , }
		- PRED   = { }
		- SUCC   = { }

1955 :	"datumWritten"
		- NEIGH  = { datumWritten , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getLegacyCRSToCRSContext , formatter , if , }

1956 :	"if"
		- NEIGH  = { getLegacyCRSToCRSContext , formatter , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1956 :	"formatter"
		- NEIGH  = { getLegacyCRSToCRSContext , formatter , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1956 :	"getLegacyCRSToCRSContext"
		- NEIGH  = { getLegacyCRSToCRSContext , formatter , if , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { datumWritten , }
		- SUCC   = { }

1958 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1958 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1960 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1960 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1964 :	"if"
		- NEIGH  = { ! , datumWritten , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , formatter , _exportToPROJString , ellipsoid , }
		- PRED   = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- SUCC   = { == , size , TOWGS84Params , if , }

1964 :	"!"
		- NEIGH  = { ! , datumWritten , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , formatter , _exportToPROJString , ellipsoid , }
		- PRED   = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- SUCC   = { == , size , TOWGS84Params , if , }

1964 :	"datumWritten"
		- NEIGH  = { ! , datumWritten , if , }
		- PARENT = { }
		- CHILD  = { primeMeridian , formatter , _exportToPROJString , ellipsoid , }
		- PRED   = { nadgrids , empty , formatter , && , TOWGS84Params , getCRSExport , if , }
		- SUCC   = { == , size , TOWGS84Params , if , }

1965 :	"ellipsoid"
		- NEIGH  = { formatter , _exportToPROJString , ellipsoid , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { _exportToPROJString , formatter , primeMeridian , }

1965 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , ellipsoid , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { _exportToPROJString , formatter , primeMeridian , }

1965 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , ellipsoid , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { _exportToPROJString , formatter , primeMeridian , }

1966 :	"primeMeridian"
		- NEIGH  = { _exportToPROJString , formatter , primeMeridian , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , ellipsoid , }
		- SUCC   = { }

1966 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , formatter , primeMeridian , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , ellipsoid , }
		- SUCC   = { }

1966 :	"formatter"
		- NEIGH  = { _exportToPROJString , formatter , primeMeridian , }
		- PARENT = { ! , datumWritten , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , ellipsoid , }
		- SUCC   = { }

1968 :	"if"
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1968 :	"TOWGS84Params"
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1968 :	"size"
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1968 :	"=="
		- NEIGH  = { == , size , TOWGS84Params , if , }
		- PARENT = { }
		- CHILD  = { addParam , TOWGS84Params , formatter , }
		- PRED   = { ! , datumWritten , if , }
		- SUCC   = { empty , ! , nadgrids , if , }

1969 :	"formatter"
		- NEIGH  = { addParam , TOWGS84Params , formatter , }
		- PARENT = { == , size , TOWGS84Params , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1969 :	"addParam"
		- NEIGH  = { addParam , TOWGS84Params , formatter , }
		- PARENT = { == , size , TOWGS84Params , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1969 :	"TOWGS84Params"
		- NEIGH  = { addParam , TOWGS84Params , formatter , }
		- PARENT = { == , size , TOWGS84Params , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1971 :	"if"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1971 :	"!"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1971 :	"nadgrids"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1971 :	"empty"
		- NEIGH  = { empty , ! , nadgrids , if , }
		- PARENT = { }
		- CHILD  = { addParam , nadgrids , formatter , }
		- PRED   = { == , size , TOWGS84Params , if , }
		- SUCC   = { }

1972 :	"formatter"
		- NEIGH  = { addParam , nadgrids , formatter , }
		- PARENT = { empty , ! , nadgrids , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1972 :	"addParam"
		- NEIGH  = { addParam , nadgrids , formatter , }
		- PARENT = { empty , ! , nadgrids , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1972 :	"nadgrids"
		- NEIGH  = { addParam , nadgrids , formatter , }
		- PARENT = { empty , ! , nadgrids , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1980 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1981 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1981 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1981 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1981 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1983 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1983 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1983 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

1984 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

1985 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

1985 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

1985 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

1985 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

1985 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

1987 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

1987 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

1988 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

1988 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

1989 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

1989 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

1989 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

1990 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1990 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1992 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1992 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1992 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

1995 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

1995 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

1995 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

1996 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

1996 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

1997 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

1997 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

1998 :	"l_datum"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

1998 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

1998 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2000 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2000 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2001 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2001 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2002 :	"datumEnsemble"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2002 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2002 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2005 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2005 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2006 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2006 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2007 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2007 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2007 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2009 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2009 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2009 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2016 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2016 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2016 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2017 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2017 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2017 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2017 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2017 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"return"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"=="
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2018 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2019 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2020 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2020 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2020 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2020 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2021 :	"criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , == , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , return , criterion , IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2028 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2028 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2029 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2029 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2029 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2029 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2029 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2029 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2029 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2029 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2030 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2030 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2030 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2030 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2031 :	"if"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"other"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"=="
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"||"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"!"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"util"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"isOfExactType"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"<"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"GeodeticCRS"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	">"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"*"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2031 :	"other"
		- NEIGH  = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }

2032 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2034 :	"return"
		- NEIGH  = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- SUCC   = { }

2034 :	"_isEquivalentToNoTypeCheck"
		- NEIGH  = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- SUCC   = { }

2034 :	"other"
		- NEIGH  = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- SUCC   = { }

2034 :	"criterion"
		- NEIGH  = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- SUCC   = { }

2034 :	"dbContext"
		- NEIGH  = { dbContext , criterion , other , _isEquivalentToNoTypeCheck , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , * , GeodeticCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- SUCC   = { }

2037 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2037 :	"_isEquivalentToNoTypeCheck"
		- NEIGH  = { _isEquivalentToNoTypeCheck , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2038 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2038 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2038 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2038 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2038 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2038 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2038 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2038 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2039 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2039 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2039 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2039 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2040 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , standardCriterion , baseIsEquivalentTo , SingleCRS , return , }

2040 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , standardCriterion , baseIsEquivalentTo , SingleCRS , return , }

2040 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , standardCriterion , baseIsEquivalentTo , SingleCRS , return , }

2043 :	"return"
		- NEIGH  = { dbContext , other , standardCriterion , baseIsEquivalentTo , SingleCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

2043 :	"SingleCRS"
		- NEIGH  = { dbContext , other , standardCriterion , baseIsEquivalentTo , SingleCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

2043 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , other , standardCriterion , baseIsEquivalentTo , SingleCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

2043 :	"other"
		- NEIGH  = { dbContext , other , standardCriterion , baseIsEquivalentTo , SingleCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

2043 :	"standardCriterion"
		- NEIGH  = { dbContext , other , standardCriterion , baseIsEquivalentTo , SingleCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

2043 :	"dbContext"
		- NEIGH  = { dbContext , other , standardCriterion , baseIsEquivalentTo , SingleCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

2050 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2050 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2050 :	"createMapNameEPSGCode"
		- NEIGH  = { createMapNameEPSGCode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2050 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2050 :	"name"
		- NEIGH  = { name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2050 :	"code"
		- NEIGH  = { code , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2051 :	"return"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2051 :	"util"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2051 :	"PropertyMap"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2052 :	"set"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2052 :	"common"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2052 :	"IdentifiedObject"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2052 :	"NAME_KEY"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2052 :	"name"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2053 :	"set"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2053 :	"metadata"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2053 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2053 :	"CODESPACE_KEY"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2053 :	"metadata"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2053 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2053 :	"EPSG"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2054 :	"set"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2054 :	"metadata"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2054 :	"Identifier"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2054 :	"CODE_KEY"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2054 :	"code"
		- NEIGH  = { code , CODE_KEY , EPSG , CODESPACE_KEY , metadata , name , Identifier , PropertyMap , IdentifiedObject , util , common , set , NAME_KEY , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2060 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2060 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2060 :	"createEPSG_4978"
		- NEIGH  = { createEPSG_4978 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2061 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2061 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2062 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2063 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2063 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2063 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"CartesianCS"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"createGeocentric"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2064 :	"METRE"
		- NEIGH  = { datum , UnitOfMeasure , CartesianCS , METRE , common , EPSG_6326 , GeodeticReferenceFrame , createGeocentric , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2071 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { hasCodeCompatibleOfAuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2072 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2072 :	"IdentifiedObject"
		- NEIGH  = { IdentifiedObject , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2072 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2072 :	"obj"
		- NEIGH  = { obj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2073 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2073 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2073 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2073 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2074 :	"&"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

2074 :	"ids"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

2074 :	"obj"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

2074 :	"identifiers"
		- NEIGH  = { identifiers , obj , ids , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }

2075 :	"if"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

2075 :	"!"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

2075 :	"ids"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

2075 :	"empty"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

2075 :	"&&"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

2075 :	"authorityFactory"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

2075 :	"getAuthority"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

2075 :	"empty"
		- NEIGH  = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { identifiers , obj , ids , & , }
		- SUCC   = { ids , id , & , for , }

2076 :	"return"
		- NEIGH  = { return , }
		- PARENT = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2078 :	"for"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

2078 :	"&"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

2078 :	"id"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

2078 :	"ids"
		- NEIGH  = { ids , id , & , for , }
		- PARENT = { }
		- CHILD  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PRED   = { authorityFactory , getAuthority , && , empty , ids , ! , if , }
		- SUCC   = { return , }

2079 :	"if"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

2079 :	"*"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

2079 :	"id"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

2079 :	"codeSpace"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

2079 :	"=="
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

2079 :	"authorityFactory"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

2079 :	"getAuthority"
		- NEIGH  = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- PARENT = { ids , id , & , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

2080 :	"return"
		- NEIGH  = { return , }
		- PARENT = { authorityFactory , getAuthority , == , id , * , codeSpace , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2083 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ids , id , & , for , }
		- SUCC   = { }

2086 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { hasCodeCompatibleOfAuthorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"metadata"
		- NEIGH  = { metadata , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"IdentifierNNPtr"
		- NEIGH  = { IdentifierNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2087 :	"id"
		- NEIGH  = { id , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2088 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2089 :	"if"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

2089 :	"authorityFactory"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

2089 :	"getAuthority"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

2089 :	"empty"
		- NEIGH  = { empty , getAuthority , authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }

2090 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , getAuthority , authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2092 :	"return"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

2092 :	"*"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

2092 :	"id"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

2092 :	"codeSpace"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

2092 :	"=="
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

2092 :	"authorityFactory"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

2092 :	"getAuthority"
		- NEIGH  = { authorityFactory , getAuthority , id , == , codeSpace , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , getAuthority , authorityFactory , if , }
		- SUCC   = { }

2142 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2142 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2143 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2143 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2143 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2143 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2143 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2143 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2144 :	"std"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2144 :	"pair"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2144 :	"<"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2144 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2144 :	">"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2144 :	"Pair"
		- NEIGH  = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2145 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

2145 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

2145 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

2145 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

2145 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

2145 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeodeticCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

2146 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

2146 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

2146 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

2148 :	"io"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

2148 :	"DatabaseContextPtr"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

2148 :	"dbContext"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

2149 :	"authorityFactory"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

2149 :	"authorityFactory"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

2149 :	"databaseContext"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

2149 :	"as_nullable"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

2151 :	"l_implicitCS"
		- NEIGH  = { hasImplicitCS , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

2151 :	"hasImplicitCS"
		- NEIGH  = { hasImplicitCS , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

2152 :	"crsCriterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2153 :	"l_implicitCS"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2154 :	"util"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2154 :	"IComparable"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2154 :	"Criterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2154 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2155 :	"util"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2155 :	"IComparable"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2155 :	"Criterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2155 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }

2157 :	"if"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2157 :	"authorityFactory"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2157 :	"=="
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2157 :	"||"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2158 :	"authorityFactory"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2158 :	"getAuthority"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2158 :	"empty"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2158 :	"||"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2159 :	"authorityFactory"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2159 :	"getAuthority"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2159 :	"=="
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2159 :	"metadata"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2159 :	"Identifier"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2159 :	"EPSG"
		- NEIGH  = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- PARENT = { }
		- CHILD  = { crs , EPSG_4269 , & , GeographicCRS , EPSG_4326 , EPSG_4267 , for , candidatesCRS , GeographicCRSNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { string , geodetic_crs_type , std , }

2160 :	"GeographicCRSNNPtr"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { candidatesCRS , crs , & , for , }

2160 :	"candidatesCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { candidatesCRS , crs , & , for , }

2160 :	"GeographicCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { candidatesCRS , crs , & , for , }

2160 :	"EPSG_4326"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { candidatesCRS , crs , & , for , }

2161 :	"GeographicCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { candidatesCRS , crs , & , for , }

2161 :	"EPSG_4267"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { candidatesCRS , crs , & , for , }

2162 :	"GeographicCRS"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { candidatesCRS , crs , & , for , }

2162 :	"EPSG_4269"
		- NEIGH  = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { candidatesCRS , crs , & , for , }

2163 :	"for"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { || , && , if , dbContext , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { }

2163 :	"&"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { || , && , if , dbContext , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { }

2163 :	"crs"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { || , && , if , dbContext , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { }

2163 :	"candidatesCRS"
		- NEIGH  = { candidatesCRS , crs , & , for , }
		- PARENT = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- CHILD  = { || , && , if , dbContext , crsCriterion , get , authorityFactory , == , metadata , nameStr , ! , _isEquivalentTo , crs , c_str , thisName , isEq , isEquivalentName , nameEqual , nameEquivalent , Identifier , }
		- PRED   = { EPSG_4269 , GeographicCRS , EPSG_4326 , EPSG_4267 , candidatesCRS , GeographicCRSNNPtr , }
		- SUCC   = { }

2164 :	"nameEquivalent"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

2164 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

2164 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

2164 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

2165 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

2165 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

2165 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

2165 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

2165 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , nameStr , == , thisName , nameEqual , }

2166 :	"nameEqual"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

2166 :	"thisName"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

2166 :	"=="
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

2166 :	"crs"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

2166 :	"nameStr"
		- NEIGH  = { crs , nameStr , == , thisName , nameEqual , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , isEquivalentName , nameEquivalent , Identifier , metadata , }
		- SUCC   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }

2167 :	"isEq"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

2168 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

2168 :	"crs"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

2168 :	"get"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

2168 :	"crsCriterion"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

2168 :	"dbContext"
		- NEIGH  = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { }
		- PRED   = { crs , nameStr , == , thisName , nameEqual , }
		- SUCC   = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }

2169 :	"if"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

2169 :	"nameEquivalent"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

2169 :	"&&"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

2169 :	"isEq"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

2169 :	"&&"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

2169 :	"!"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

2169 :	"authorityFactory"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

2169 :	"||"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

2169 :	"nameEqual"
		- NEIGH  = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- PARENT = { candidatesCRS , crs , & , for , }
		- CHILD  = { authorityFactory , if , nameEqual , return , ! , crs , GeodeticCRS , isEq , util , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { dbContext , isEq , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { }

2170 :	"res"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2170 :	"emplace_back"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2170 :	"util"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2170 :	"nn_static_pointer_cast"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2170 :	"<"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2170 :	"GeodeticCRS"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2170 :	">"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2170 :	"crs"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2171 :	"nameEqual"
		- NEIGH  = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2172 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

2172 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { }
		- PRED   = { nameEqual , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

2173 :	"if"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

2173 :	"nameEqual"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

2173 :	"&&"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

2173 :	"!"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

2173 :	"isEq"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

2173 :	"&&"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

2173 :	"!"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

2173 :	"authorityFactory"
		- NEIGH  = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- PARENT = { || , authorityFactory , nameEqual , if , nameEquivalent , ! , && , isEq , }
		- CHILD  = { authorityFactory , if , return , ! , GeodeticCRS , crs , util , isEq , < , && , emplace_back , > , res , nn_static_pointer_cast , }
		- PRED   = { }
		- SUCC   = { }

2174 :	"res"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2174 :	"emplace_back"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2174 :	"util"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2174 :	"nn_static_pointer_cast"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2174 :	"<"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2174 :	"GeodeticCRS"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2174 :	">"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2174 :	"crs"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2176 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

2176 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

2177 :	"if"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

2177 :	"isEq"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

2177 :	"&&"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

2177 :	"!"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

2177 :	"authorityFactory"
		- NEIGH  = { ! , authorityFactory , && , isEq , if , }
		- PARENT = { authorityFactory , isEq , if , nameEqual , ! , && , }
		- CHILD  = { return , crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PRED   = { }
		- SUCC   = { }

2178 :	"res"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2178 :	"emplace_back"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2178 :	"util"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2178 :	"nn_static_pointer_cast"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2178 :	"<"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2178 :	"GeodeticCRS"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2178 :	">"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2178 :	"crs"
		- NEIGH  = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , return , }

2180 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

2180 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { ! , authorityFactory , && , isEq , if , }
		- CHILD  = { }
		- PRED   = { crs , GeodeticCRS , < , > , res , nn_static_pointer_cast , util , emplace_back , }
		- SUCC   = { }

2185 :	"std"
		- NEIGH  = { string , geodetic_crs_type , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- SUCC   = { isGeocentric , if , }

2185 :	"string"
		- NEIGH  = { string , geodetic_crs_type , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- SUCC   = { isGeocentric , if , }

2185 :	"geodetic_crs_type"
		- NEIGH  = { string , geodetic_crs_type , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EPSG , metadata , empty , authorityFactory , || , getAuthority , == , Identifier , if , }
		- SUCC   = { isGeocentric , if , }

2186 :	"if"
		- NEIGH  = { isGeocentric , if , }
		- PARENT = { }
		- CHILD  = { if , > , < , geogCRS , GeographicCRS , this , * , dynamic_cast , geodetic_crs_type , }
		- PRED   = { string , geodetic_crs_type , std , }
		- SUCC   = { authorityFactory , if , }

2186 :	"isGeocentric"
		- NEIGH  = { isGeocentric , if , }
		- PARENT = { }
		- CHILD  = { if , > , < , geogCRS , GeographicCRS , this , * , dynamic_cast , geodetic_crs_type , }
		- PRED   = { string , geodetic_crs_type , std , }
		- SUCC   = { authorityFactory , if , }

2187 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2189 :	"geogCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

2189 :	"dynamic_cast"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

2189 :	"<"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

2189 :	"GeographicCRS"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

2189 :	"*"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

2189 :	">"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

2189 :	"this"
		- NEIGH  = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { geogCRS , if , }

2190 :	"if"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { size , == , axisList , coordinateSystem , if , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { }

2190 :	"geogCRS"
		- NEIGH  = { geogCRS , if , }
		- PARENT = { isGeocentric , if , }
		- CHILD  = { size , == , axisList , coordinateSystem , if , }
		- PRED   = { > , this , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { }

2191 :	"if"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

2191 :	"coordinateSystem"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

2191 :	"axisList"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

2191 :	"size"
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

2191 :	"=="
		- NEIGH  = { size , == , axisList , coordinateSystem , if , }
		- PARENT = { geogCRS , if , }
		- CHILD  = { geodetic_crs_type , }
		- PRED   = { }
		- SUCC   = { }

2192 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , }
		- PARENT = { size , == , axisList , coordinateSystem , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2194 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , }
		- PARENT = { size , == , axisList , coordinateSystem , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2199 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , a , Pair , sort , coordinateSystem , searchByDatumOrEllipsoid , thisCS , res , l_implicitCS , == , front , datumNonNull , authorityFactory , empty , thisName , second , searchByEllipsoid , || , l_datum , dbContext , IdentifiedObjectNNPtr , & , >= , crsCriterion , if , ci_equal , geodetic_crs_type , insignificantName , b , searchByDatumCode , && , this , common , thisDatum , }
		- PRED   = { isGeocentric , if , }
		- SUCC   = { res , return , }

2199 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , a , Pair , sort , coordinateSystem , searchByDatumOrEllipsoid , thisCS , res , l_implicitCS , == , front , datumNonNull , authorityFactory , empty , thisName , second , searchByEllipsoid , || , l_datum , dbContext , IdentifiedObjectNNPtr , & , >= , crsCriterion , if , ci_equal , geodetic_crs_type , insignificantName , b , searchByDatumCode , && , this , common , thisDatum , }
		- PRED   = { isGeocentric , if , }
		- SUCC   = { res , return , }

2201 :	"thisDatum"
		- NEIGH  = { dbContext , datumNonNull , thisDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }

2201 :	"datumNonNull"
		- NEIGH  = { dbContext , datumNonNull , thisDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }

2201 :	"dbContext"
		- NEIGH  = { dbContext , datumNonNull , thisDatum , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }

2203 :	"searchByDatumCode"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2204 :	"this"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2204 :	"&"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2204 :	"authorityFactory"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2204 :	"&"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2204 :	"res"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2204 :	"&"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2204 :	"geodetic_crs_type"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2204 :	"crsCriterion"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2205 :	"&"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2205 :	"dbContext"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2205 :	"common"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2205 :	"IdentifiedObjectNNPtr"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2205 :	"&"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2205 :	"l_datum"
		- NEIGH  = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }

2206 :	"for"
		- NEIGH  = { l_datum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"&"
		- NEIGH  = { l_datum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"id"
		- NEIGH  = { l_datum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"l_datum"
		- NEIGH  = { l_datum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

2206 :	"identifiers"
		- NEIGH  = { l_datum , id , & , identifiers , for , }
		- PARENT = { }
		- CHILD  = { exception , & , catch , tempRes , for , code , std , codeSpace , authorityFactory , id , * , crs , geodetic_crs_type , createGeodeticCRSFromDatum , }
		- PRED   = { }
		- SUCC   = { }

2208 :	"tempRes"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2209 :	"authorityFactory"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2209 :	"createGeodeticCRSFromDatum"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2210 :	"*"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2210 :	"id"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2210 :	"codeSpace"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2210 :	"id"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2210 :	"code"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2211 :	"geodetic_crs_type"
		- NEIGH  = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2212 :	"for"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

2212 :	"&"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

2212 :	"crs"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

2212 :	"tempRes"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PRED   = { code , codeSpace , id , * , geodetic_crs_type , createGeodeticCRSFromDatum , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

2213 :	"if"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

2213 :	"_isEquivalentTo"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

2213 :	"crs"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

2213 :	"get"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

2213 :	"crsCriterion"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

2214 :	"dbContext"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

2215 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2215 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2215 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2218 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

2218 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

2218 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

2218 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { l_datum , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

2223 :	"searchByEllipsoid"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2223 :	"this"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2223 :	"&"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2223 :	"authorityFactory"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2223 :	"&"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2223 :	"res"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2223 :	"&"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2223 :	"thisDatum"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2224 :	"&"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2224 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2224 :	"l_implicitCS"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2225 :	"&"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2225 :	"dbContext"
		- NEIGH  = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { l_datum , IdentifiedObjectNNPtr , geodetic_crs_type , res , common , searchByDatumCode , authorityFactory , & , dbContext , crsCriterion , this , }
		- SUCC   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }

2226 :	"&"
		- NEIGH  = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }

2226 :	"thisEllipsoid"
		- NEIGH  = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }

2226 :	"thisDatum"
		- NEIGH  = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }

2226 :	"ellipsoid"
		- NEIGH  = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }

2227 :	"ellipsoids"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2228 :	"thisEllipsoid"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2228 :	"identifiers"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2228 :	"empty"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2229 :	"authorityFactory"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2229 :	"createEllipsoidFromExisting"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2230 :	"thisEllipsoid"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2231 :	"std"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2231 :	"list"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2231 :	"<"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2231 :	"datum"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2231 :	"EllipsoidNNPtr"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2231 :	">"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2231 :	"thisEllipsoid"
		- NEIGH  = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ellipsoid , thisDatum , thisEllipsoid , & , }
		- SUCC   = { ellipsoids , ellps , & , for , }

2232 :	"for"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

2232 :	"&"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

2232 :	"ellps"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

2232 :	"ellipsoids"
		- NEIGH  = { ellipsoids , ellps , & , for , }
		- PARENT = { }
		- CHILD  = { ellps , id , & , identifiers , for , }
		- PRED   = { > , datum , < , identifiers , EllipsoidNNPtr , createEllipsoidFromExisting , std , list , authorityFactory , empty , thisEllipsoid , ellipsoids , }
		- SUCC   = { }

2233 :	"for"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

2233 :	"&"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

2233 :	"id"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

2233 :	"ellps"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

2233 :	"identifiers"
		- NEIGH  = { ellps , id , & , identifiers , for , }
		- PARENT = { ellipsoids , ellps , & , for , }
		- CHILD  = { exception , createGeodeticCRSFromEllipsoid , & , catch , tempRes , for , crs , geodetic_crs_type , std , codeSpace , authorityFactory , id , * , code , }
		- PRED   = { }
		- SUCC   = { }

2235 :	"tempRes"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2236 :	"authorityFactory"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2236 :	"createGeodeticCRSFromEllipsoid"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2237 :	"*"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2237 :	"id"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2237 :	"codeSpace"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2237 :	"id"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2237 :	"code"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2238 :	"geodetic_crs_type"
		- NEIGH  = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , tempRes , & , for , }

2239 :	"for"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , primeMeridian , && , EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , ! , crs , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , if , dbContext , crsDatum , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

2239 :	"&"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , primeMeridian , && , EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , ! , crs , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , if , dbContext , crsDatum , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

2239 :	"crs"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , primeMeridian , && , EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , ! , crs , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , if , dbContext , crsDatum , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

2239 :	"tempRes"
		- NEIGH  = { crs , tempRes , & , for , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { || , l_implicitCS , primeMeridian , && , EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , ! , crs , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , if , dbContext , crsDatum , }
		- PRED   = { geodetic_crs_type , codeSpace , id , * , code , createGeodeticCRSFromEllipsoid , authorityFactory , tempRes , }
		- SUCC   = { & , exception , std , catch , }

2240 :	"crsDatum"
		- NEIGH  = { datumNonNull , crs , dbContext , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }

2240 :	"crs"
		- NEIGH  = { datumNonNull , crs , dbContext , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }

2240 :	"datumNonNull"
		- NEIGH  = { datumNonNull , crs , dbContext , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }

2240 :	"dbContext"
		- NEIGH  = { datumNonNull , crs , dbContext , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }

2241 :	"if"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2241 :	"crsDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2241 :	"ellipsoid"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2241 :	"_isEquivalentTo"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2242 :	"ellps"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2242 :	"get"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2243 :	"util"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2243 :	"IComparable"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2243 :	"Criterion"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2243 :	"EQUIVALENT"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2244 :	"dbContext"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2244 :	"&&"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2245 :	"crsDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2245 :	"primeMeridian"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2245 :	"_isEquivalentTo"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2246 :	"thisDatum"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2246 :	"primeMeridian"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2246 :	"get"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2247 :	"util"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2247 :	"IComparable"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2247 :	"Criterion"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2247 :	"EQUIVALENT"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2248 :	"dbContext"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2248 :	"&&"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2249 :	"!"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2249 :	"l_implicitCS"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2249 :	"||"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2250 :	"coordinateSystem"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2250 :	"_isEquivalentTo"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2251 :	"crs"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2251 :	"coordinateSystem"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2251 :	"get"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2252 :	"util"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2252 :	"IComparable"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2252 :	"Criterion"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2252 :	"EQUIVALENT"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2253 :	"dbContext"
		- NEIGH  = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- PARENT = { crs , tempRes , & , for , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { datumNonNull , crs , dbContext , crsDatum , }
		- SUCC   = { }

2254 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2254 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2254 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { || , l_implicitCS , primeMeridian , && , if , dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , ! , _isEquivalentTo , coordinateSystem , ellps , thisDatum , ellipsoid , crsDatum , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2257 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

2257 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

2257 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

2257 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { ellps , id , & , identifiers , for , }
		- CHILD  = { }
		- PRED   = { crs , tempRes , & , for , }
		- SUCC   = { }

2263 :	"searchByDatumOrEllipsoid"
		- NEIGH  = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

2263 :	"&"
		- NEIGH  = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

2263 :	"authorityFactory"
		- NEIGH  = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

2263 :	"&"
		- NEIGH  = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

2263 :	"res"
		- NEIGH  = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

2264 :	"&"
		- NEIGH  = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

2264 :	"thisDatum"
		- NEIGH  = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

2264 :	"searchByDatumCode"
		- NEIGH  = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

2265 :	"searchByEllipsoid"
		- NEIGH  = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { geodetic_crs_type , thisDatum , dbContext , this , res , authorityFactory , l_implicitCS , & , searchByEllipsoid , }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

2266 :	"if"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { }
		- CHILD  = { if , candidateDatum , & , res , size_t , AuthorityFactory , searchByDatumCode , createObjectsFromName , io , for , ObjectType , == , authorityFactory , GEODETIC_REFERENCE_FRAME , size , nameStr , sizeBefore , candidateDatums , thisDatum , }
		- PRED   = { }
		- SUCC   = { }

2266 :	"!"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { }
		- CHILD  = { if , candidateDatum , & , res , size_t , AuthorityFactory , searchByDatumCode , createObjectsFromName , io , for , ObjectType , == , authorityFactory , GEODETIC_REFERENCE_FRAME , size , nameStr , sizeBefore , candidateDatums , thisDatum , }
		- PRED   = { }
		- SUCC   = { }

2266 :	"thisDatum"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { }
		- CHILD  = { if , candidateDatum , & , res , size_t , AuthorityFactory , searchByDatumCode , createObjectsFromName , io , for , ObjectType , == , authorityFactory , GEODETIC_REFERENCE_FRAME , size , nameStr , sizeBefore , candidateDatums , thisDatum , }
		- PRED   = { }
		- SUCC   = { }

2266 :	"identifiers"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { }
		- CHILD  = { if , candidateDatum , & , res , size_t , AuthorityFactory , searchByDatumCode , createObjectsFromName , io , for , ObjectType , == , authorityFactory , GEODETIC_REFERENCE_FRAME , size , nameStr , sizeBefore , candidateDatums , thisDatum , }
		- PRED   = { }
		- SUCC   = { }

2266 :	"empty"
		- NEIGH  = { empty , thisDatum , ! , identifiers , if , }
		- PARENT = { }
		- CHILD  = { if , candidateDatum , & , res , size_t , AuthorityFactory , searchByDatumCode , createObjectsFromName , io , for , ObjectType , == , authorityFactory , GEODETIC_REFERENCE_FRAME , size , nameStr , sizeBefore , candidateDatums , thisDatum , }
		- PRED   = { }
		- SUCC   = { }

2267 :	"searchByDatumCode"
		- NEIGH  = { thisDatum , searchByDatumCode , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2267 :	"thisDatum"
		- NEIGH  = { thisDatum , searchByDatumCode , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2269 :	"candidateDatums"
		- NEIGH  = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , res , sizeBefore , size_t , }

2269 :	"authorityFactory"
		- NEIGH  = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , res , sizeBefore , size_t , }

2269 :	"createObjectsFromName"
		- NEIGH  = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , res , sizeBefore , size_t , }

2270 :	"thisDatum"
		- NEIGH  = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , res , sizeBefore , size_t , }

2270 :	"nameStr"
		- NEIGH  = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , res , sizeBefore , size_t , }

2271 :	"io"
		- NEIGH  = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , res , sizeBefore , size_t , }

2271 :	"AuthorityFactory"
		- NEIGH  = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , res , sizeBefore , size_t , }

2271 :	"ObjectType"
		- NEIGH  = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , res , sizeBefore , size_t , }

2272 :	"GEODETIC_REFERENCE_FRAME"
		- NEIGH  = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , res , sizeBefore , size_t , }

2274 :	"size_t"
		- NEIGH  = { size , res , sizeBefore , size_t , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- SUCC   = { candidateDatums , candidateDatum , & , for , }

2274 :	"sizeBefore"
		- NEIGH  = { size , res , sizeBefore , size_t , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- SUCC   = { candidateDatums , candidateDatum , & , for , }

2274 :	"res"
		- NEIGH  = { size , res , sizeBefore , size_t , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- SUCC   = { candidateDatums , candidateDatum , & , for , }

2274 :	"size"
		- NEIGH  = { size , res , sizeBefore , size_t , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { }
		- PRED   = { AuthorityFactory , io , GEODETIC_REFERENCE_FRAME , candidateDatums , nameStr , thisDatum , ObjectType , createObjectsFromName , authorityFactory , }
		- SUCC   = { candidateDatums , candidateDatum , & , for , }

2275 :	"for"
		- NEIGH  = { candidateDatums , candidateDatum , & , for , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { candidateDatum , searchByDatumCode , }
		- PRED   = { size , res , sizeBefore , size_t , }
		- SUCC   = { size , == , res , sizeBefore , if , }

2275 :	"&"
		- NEIGH  = { candidateDatums , candidateDatum , & , for , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { candidateDatum , searchByDatumCode , }
		- PRED   = { size , res , sizeBefore , size_t , }
		- SUCC   = { size , == , res , sizeBefore , if , }

2275 :	"candidateDatum"
		- NEIGH  = { candidateDatums , candidateDatum , & , for , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { candidateDatum , searchByDatumCode , }
		- PRED   = { size , res , sizeBefore , size_t , }
		- SUCC   = { size , == , res , sizeBefore , if , }

2275 :	"candidateDatums"
		- NEIGH  = { candidateDatums , candidateDatum , & , for , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { candidateDatum , searchByDatumCode , }
		- PRED   = { size , res , sizeBefore , size_t , }
		- SUCC   = { size , == , res , sizeBefore , if , }

2276 :	"searchByDatumCode"
		- NEIGH  = { candidateDatum , searchByDatumCode , }
		- PARENT = { candidateDatums , candidateDatum , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2276 :	"candidateDatum"
		- NEIGH  = { candidateDatum , searchByDatumCode , }
		- PARENT = { candidateDatums , candidateDatum , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2278 :	"if"
		- NEIGH  = { size , == , res , sizeBefore , if , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { searchByEllipsoid , }
		- PRED   = { candidateDatums , candidateDatum , & , for , }
		- SUCC   = { }

2278 :	"sizeBefore"
		- NEIGH  = { size , == , res , sizeBefore , if , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { searchByEllipsoid , }
		- PRED   = { candidateDatums , candidateDatum , & , for , }
		- SUCC   = { }

2278 :	"=="
		- NEIGH  = { size , == , res , sizeBefore , if , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { searchByEllipsoid , }
		- PRED   = { candidateDatums , candidateDatum , & , for , }
		- SUCC   = { }

2278 :	"res"
		- NEIGH  = { size , == , res , sizeBefore , if , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { searchByEllipsoid , }
		- PRED   = { candidateDatums , candidateDatum , & , for , }
		- SUCC   = { }

2278 :	"size"
		- NEIGH  = { size , == , res , sizeBefore , if , }
		- PARENT = { empty , thisDatum , ! , identifiers , if , }
		- CHILD  = { searchByEllipsoid , }
		- PRED   = { candidateDatums , candidateDatum , & , for , }
		- SUCC   = { }

2279 :	"searchByEllipsoid"
		- NEIGH  = { searchByEllipsoid , }
		- PARENT = { size , == , res , sizeBefore , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2284 :	"insignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- SUCC   = { insignificantName , if , }

2284 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- SUCC   = { insignificantName , if , }

2284 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- SUCC   = { insignificantName , if , }

2284 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- SUCC   = { insignificantName , if , }

2285 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- SUCC   = { insignificantName , if , }

2285 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- SUCC   = { insignificantName , if , }

2285 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- SUCC   = { insignificantName , if , }

2286 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- SUCC   = { insignificantName , if , }

2286 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { thisDatum , res , searchByDatumCode , authorityFactory , & , searchByEllipsoid , searchByDatumOrEllipsoid , }
		- SUCC   = { insignificantName , if , }

2288 :	"if"
		- NEIGH  = { insignificantName , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { this , hasCodeCompatibleOfAuthorityFactory , if , authorityFactory , searchByDatumOrEllipsoid , }
		- PRED   = { ci_equal , || , empty , thisName , insignificantName , }
		- SUCC   = { coordinateSystem , thisCS , & , }

2288 :	"insignificantName"
		- NEIGH  = { insignificantName , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { this , hasCodeCompatibleOfAuthorityFactory , if , authorityFactory , searchByDatumOrEllipsoid , }
		- PRED   = { ci_equal , || , empty , thisName , insignificantName , }
		- SUCC   = { coordinateSystem , thisCS , & , }

2289 :	"searchByDatumOrEllipsoid"
		- NEIGH  = { searchByDatumOrEllipsoid , }
		- PARENT = { insignificantName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2290 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { insignificantName , if , }
		- CHILD  = { ! , if , ++ , < , id , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

2290 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { insignificantName , if , }
		- CHILD  = { ! , if , ++ , < , id , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

2290 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { insignificantName , if , }
		- CHILD  = { ! , if , ++ , < , id , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

2291 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { insignificantName , if , }
		- CHILD  = { ! , if , ++ , < , id , ipass , & , gotAbove25Pct , identifiers , for , }
		- PRED   = { }
		- SUCC   = { }

2294 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2294 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2294 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2294 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

2295 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , dbContext , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2295 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , dbContext , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2295 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , dbContext , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2295 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , dbContext , get , match , code , createGeodeticCRS , authorityFactory , id , databaseContext , * , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

2297 :	"crs"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2297 :	"io"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2297 :	"AuthorityFactory"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2297 :	"create"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2298 :	"authorityFactory"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2298 :	"databaseContext"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2299 :	"*"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2299 :	"id"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2299 :	"codeSpace"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2300 :	"createGeodeticCRS"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2300 :	"id"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2300 :	"code"
		- NEIGH  = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

2301 :	"match"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2302 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2302 :	"crs"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2302 :	"get"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2302 :	"crsCriterion"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2302 :	"dbContext"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createGeodeticCRS , id , * , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

2303 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

2303 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

2303 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

2303 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

2304 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

2304 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

2305 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2305 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2305 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2305 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

2310 :	"gotAbove25Pct"
		- NEIGH  = { gotAbove25Pct , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { < , ++ , ipass , for , }

2311 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { ! , gotAbove25Pct , if , }

2311 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { ! , gotAbove25Pct , if , }

2311 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { ! , gotAbove25Pct , if , }

2311 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { ! , gotAbove25Pct , if , }

2311 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { ! , gotAbove25Pct , if , }

2311 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { res , ! , if , obj , & , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , GEODETIC_CRS , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { gotAbove25Pct , }
		- SUCC   = { ! , gotAbove25Pct , if , }

2312 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }

2312 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }

2312 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }

2313 :	"objects"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2313 :	"authorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2313 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2314 :	"thisName"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2314 :	"io"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2314 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2314 :	"ObjectType"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2314 :	"GEODETIC_CRS"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2315 :	"approximateMatch"
		- NEIGH  = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

2316 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , dbContext , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2316 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , dbContext , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2316 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , dbContext , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2316 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { crsCriterion , get , dbContext , if , util , < , crsNN , obj , assert , > , nn_dynamic_pointer_cast , NN_NO_CHECK , _isEquivalentTo , GeodeticCRS , crs , }
		- PRED   = { approximateMatch , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , GEODETIC_CRS , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

2317 :	"crs"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2317 :	"util"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2317 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2317 :	"<"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2317 :	"GeodeticCRS"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2317 :	">"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2317 :	"obj"
		- NEIGH  = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

2318 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

2318 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , nn_dynamic_pointer_cast , GeodeticCRS , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

2319 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

2319 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

2319 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

2320 :	"if"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2320 :	"_isEquivalentTo"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2320 :	"crs"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2320 :	"get"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2320 :	"crsCriterion"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2320 :	"dbContext"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { gotAbove25Pct , crsNN , emplace_back , c_str , isEquivalentName , nameStr , metadata , res , Identifier , eqName , == , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

2321 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

2321 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

2321 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

2321 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

2321 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

2322 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2322 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

2323 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

2323 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

2323 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

2324 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

2324 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

2326 :	"eqName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

2327 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

2327 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

2327 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

2328 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

2328 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

2328 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

2328 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

2328 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

2329 :	"res"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

2329 :	"emplace_back"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

2329 :	"crsNN"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

2329 :	"eqName"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { gotAbove25Pct , }

2330 :	"gotAbove25Pct"
		- NEIGH  = { gotAbove25Pct , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { crsNN , eqName , emplace_back , res , }
		- SUCC   = { }

2332 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2332 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2332 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2335 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2335 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2335 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2335 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

2336 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2339 :	"if"
		- NEIGH  = { ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { searchByDatumOrEllipsoid , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

2339 :	"!"
		- NEIGH  = { ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { searchByDatumOrEllipsoid , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

2339 :	"gotAbove25Pct"
		- NEIGH  = { ! , gotAbove25Pct , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { searchByDatumOrEllipsoid , }
		- PRED   = { < , ++ , ipass , for , }
		- SUCC   = { }

2340 :	"searchByDatumOrEllipsoid"
		- NEIGH  = { searchByDatumOrEllipsoid , }
		- PARENT = { ! , gotAbove25Pct , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2344 :	"&"
		- NEIGH  = { coordinateSystem , thisCS , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { insignificantName , if , }
		- SUCC   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }

2344 :	"thisCS"
		- NEIGH  = { coordinateSystem , thisCS , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { insignificantName , if , }
		- SUCC   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }

2344 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , thisCS , & , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { insignificantName , if , }
		- SUCC   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }

2346 :	"res"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"sort"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"thisName"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"thisDatum"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"thisCS"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"dbContext"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"Pair"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2346 :	"a"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2347 :	"Pair"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2347 :	"&"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2347 :	"b"
		- NEIGH  = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { coordinateSystem , thisCS , & , }
		- SUCC   = { second , >= , size , == , front , && , res , if , }

2349 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2349 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2349 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2349 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2349 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2349 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

2350 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2352 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2352 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2352 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2352 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2352 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2352 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

2353 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2357 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2357 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2357 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2357 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2357 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

2358 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2358 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2358 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2358 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2358 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

2359 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2359 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2359 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2359 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2359 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2359 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2359 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2359 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

2360 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2362 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datumNonNull , dbContext , first , a , aDatum , }

2362 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datumNonNull , dbContext , first , a , aDatum , }

2362 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datumNonNull , dbContext , first , a , aDatum , }

2362 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datumNonNull , dbContext , first , a , aDatum , }

2362 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datumNonNull , dbContext , first , a , aDatum , }

2362 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datumNonNull , dbContext , first , a , aDatum , }

2362 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datumNonNull , dbContext , first , a , aDatum , }

2362 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { datumNonNull , dbContext , first , a , aDatum , }

2363 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2367 :	"aDatum"
		- NEIGH  = { datumNonNull , dbContext , first , a , aDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { dbContext , first , datumNonNull , b , bDatum , }

2367 :	"a"
		- NEIGH  = { datumNonNull , dbContext , first , a , aDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { dbContext , first , datumNonNull , b , bDatum , }

2367 :	"first"
		- NEIGH  = { datumNonNull , dbContext , first , a , aDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { dbContext , first , datumNonNull , b , bDatum , }

2367 :	"datumNonNull"
		- NEIGH  = { datumNonNull , dbContext , first , a , aDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { dbContext , first , datumNonNull , b , bDatum , }

2367 :	"dbContext"
		- NEIGH  = { datumNonNull , dbContext , first , a , aDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { dbContext , first , datumNonNull , b , bDatum , }

2368 :	"bDatum"
		- NEIGH  = { dbContext , first , datumNonNull , b , bDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , dbContext , first , a , aDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }

2368 :	"b"
		- NEIGH  = { dbContext , first , datumNonNull , b , bDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , dbContext , first , a , aDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }

2368 :	"first"
		- NEIGH  = { dbContext , first , datumNonNull , b , bDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , dbContext , first , a , aDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }

2368 :	"datumNonNull"
		- NEIGH  = { dbContext , first , datumNonNull , b , bDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , dbContext , first , a , aDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }

2368 :	"dbContext"
		- NEIGH  = { dbContext , first , datumNonNull , b , bDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , dbContext , first , a , aDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }

2369 :	"thisEquivADatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2369 :	"thisDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2369 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2370 :	"aDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2370 :	"get"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2370 :	"util"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2370 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2370 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2370 :	"EQUIVALENT"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2371 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , first , datumNonNull , b , bDatum , }
		- SUCC   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }

2372 :	"thisEquivBDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2372 :	"thisDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2372 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2373 :	"bDatum"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2373 :	"get"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2373 :	"util"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2373 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2373 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2373 :	"EQUIVALENT"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2374 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , EQUIVALENT , aDatum , thisEquivADatum , }
		- SUCC   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }

2376 :	"if"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

2376 :	"thisEquivADatum"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

2376 :	"&&"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

2376 :	"!"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

2376 :	"thisEquivBDatum"
		- NEIGH  = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , thisDatum , _isEquivalentTo , Criterion , util , get , bDatum , EQUIVALENT , thisEquivBDatum , }
		- SUCC   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }

2377 :	"return"
		- NEIGH  = { return , }
		- PARENT = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2379 :	"if"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

2379 :	"!"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

2379 :	"thisEquivADatum"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

2379 :	"&&"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

2379 :	"thisEquivBDatum"
		- NEIGH  = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { && , thisEquivBDatum , ! , thisEquivADatum , if , }
		- SUCC   = { coordinateSystem , first , a , aCS , & , }

2380 :	"return"
		- NEIGH  = { return , }
		- PARENT = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2384 :	"&"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

2384 :	"aCS"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

2384 :	"a"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

2384 :	"first"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

2384 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , first , a , aCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { && , thisEquivBDatum , thisEquivADatum , ! , if , }
		- SUCC   = { coordinateSystem , first , b , bCS , & , }

2385 :	"&"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

2385 :	"bCS"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

2385 :	"b"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

2385 :	"first"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

2385 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , first , b , bCS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , a , aCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }

2386 :	"thisEquivACs"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2386 :	"thisCS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2386 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2387 :	"aCS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2387 :	"get"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2387 :	"util"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2387 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2387 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2387 :	"EQUIVALENT"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2388 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , first , b , bCS , & , }
		- SUCC   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }

2389 :	"thisEquivBCs"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2389 :	"thisCS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2389 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2390 :	"bCS"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2390 :	"get"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2390 :	"util"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2390 :	"IComparable"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2390 :	"Criterion"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2390 :	"EQUIVALENT"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2391 :	"dbContext"
		- NEIGH  = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , IComparable , Criterion , util , thisEquivACs , get , EQUIVALENT , aCS , _isEquivalentTo , thisCS , }
		- SUCC   = { ! , thisEquivBCs , && , thisEquivACs , if , }

2392 :	"if"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

2392 :	"thisEquivACs"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

2392 :	"&&"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

2392 :	"!"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

2392 :	"thisEquivBCs"
		- NEIGH  = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { dbContext , IComparable , Criterion , util , get , bCS , _isEquivalentTo , thisCS , EQUIVALENT , thisEquivBCs , }
		- SUCC   = { thisEquivBCs , && , ! , thisEquivACs , if , }

2393 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2395 :	"if"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

2395 :	"!"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

2395 :	"thisEquivACs"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

2395 :	"&&"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

2395 :	"thisEquivBCs"
		- NEIGH  = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , thisEquivBCs , && , thisEquivACs , if , }
		- SUCC   = { size , axisList , thisCS , thisCSAxisListSize , }

2396 :	"return"
		- NEIGH  = { return , }
		- PARENT = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2400 :	"thisCSAxisListSize"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

2400 :	"thisCS"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

2400 :	"axisList"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

2400 :	"size"
		- NEIGH  = { size , axisList , thisCS , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { thisEquivBCs , && , ! , thisEquivACs , if , }
		- SUCC   = { axisList , size , aCS , aCSAxistListSize , }

2401 :	"aCSAxistListSize"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

2401 :	"aCS"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

2401 :	"axisList"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

2401 :	"size"
		- NEIGH  = { axisList , size , aCS , aCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , axisList , thisCS , thisCSAxisListSize , }
		- SUCC   = { axisList , size , bCS , bCSAxistListSize , }

2402 :	"bCSAxistListSize"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2402 :	"bCS"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2402 :	"axisList"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2402 :	"size"
		- NEIGH  = { axisList , size , bCS , bCSAxistListSize , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , size , aCS , aCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2403 :	"if"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2403 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2403 :	"=="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2403 :	"aCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2403 :	"&&"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2404 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2404 :	"!="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2404 :	"bCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { axisList , size , bCS , bCSAxistListSize , }
		- SUCC   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }

2405 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2407 :	"if"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }

2407 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }

2407 :	"!="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }

2407 :	"aCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }

2407 :	"&&"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }

2408 :	"thisCSAxisListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }

2408 :	"=="
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }

2408 :	"bCSAxistListSize"
		- NEIGH  = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }

2409 :	"return"
		- NEIGH  = { return , }
		- PARENT = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2414 :	"aEllpsNameEqCRSName"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2415 :	"metadata"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2415 :	"Identifier"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2415 :	"isEquivalentName"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2416 :	"aDatum"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2416 :	"ellipsoid"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2416 :	"nameStr"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2416 :	"c_str"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2417 :	"a"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2417 :	"first"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2417 :	"nameStr"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2417 :	"c_str"
		- NEIGH  = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , && , if , aCSAxistListSize , bCSAxistListSize , != , thisCSAxisListSize , }
		- SUCC   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }

2418 :	"bEllpsNameEqCRSName"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2419 :	"metadata"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2419 :	"Identifier"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2419 :	"isEquivalentName"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2420 :	"bDatum"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2420 :	"ellipsoid"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2420 :	"nameStr"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2420 :	"c_str"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2421 :	"b"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2421 :	"first"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2421 :	"nameStr"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2421 :	"c_str"
		- NEIGH  = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { a , c_str , nameStr , ellipsoid , aEllpsNameEqCRSName , metadata , aDatum , first , isEquivalentName , Identifier , }
		- SUCC   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }

2422 :	"if"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

2422 :	"aEllpsNameEqCRSName"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

2422 :	"&&"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

2422 :	"!"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

2422 :	"bEllpsNameEqCRSName"
		- NEIGH  = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { b , c_str , nameStr , ellipsoid , bDatum , first , isEquivalentName , Identifier , metadata , bEllpsNameEqCRSName , }
		- SUCC   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }

2423 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2425 :	"if"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { bName , < , aName , return , }

2425 :	"bEllpsNameEqCRSName"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { bName , < , aName , return , }

2425 :	"&&"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { bName , < , aName , return , }

2425 :	"!"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { bName , < , aName , return , }

2425 :	"aEllpsNameEqCRSName"
		- NEIGH  = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { ! , && , bEllpsNameEqCRSName , aEllpsNameEqCRSName , if , }
		- SUCC   = { bName , < , aName , return , }

2426 :	"return"
		- NEIGH  = { return , }
		- PARENT = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2430 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- SUCC   = { }

2430 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- SUCC   = { }

2430 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- SUCC   = { }

2430 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ! , && , aEllpsNameEqCRSName , bEllpsNameEqCRSName , if , }
		- SUCC   = { }

2434 :	"if"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

2434 :	"res"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

2434 :	"size"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

2434 :	">="
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

2434 :	"&&"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

2434 :	"res"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

2434 :	"front"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

2434 :	"second"
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

2434 :	"=="
		- NEIGH  = { second , >= , size , == , front , && , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { & , for , res , > , pair , newRes , Pair , < , list , return , std , }
		- PRED   = { b , a , dbContext , & , thisName , Pair , thisDatum , thisCS , sort , res , }
		- SUCC   = { }

2435 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

2435 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

2435 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

2435 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

2435 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

2435 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

2436 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2436 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2436 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2436 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

2437 :	"if"
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2437 :	"pair"
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2437 :	"second"
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2437 :	"=="
		- NEIGH  = { == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

2438 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2438 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2438 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2440 :	"break"
		- NEIGH  = { break , }
		- PARENT = { == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2443 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

2443 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { second , >= , size , == , front , && , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

2446 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

2446 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

2453 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2453 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2453 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2453 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2453 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2453 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2453 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2453 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2454 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2454 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2454 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2454 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2454 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2454 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2455 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2455 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2455 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2455 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2455 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2455 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

2456 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2456 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2456 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2456 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2456 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2456 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

2457 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

2457 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

2457 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

2458 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2458 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2458 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2458 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

2459 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2459 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2459 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2459 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2459 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2459 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2461 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

2461 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

2469 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2469 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2470 :	"cs"
		- NEIGH  = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }

2470 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }

2470 :	"coordinateSystem_"
		- NEIGH  = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }

2472 :	"Private"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2472 :	"cs"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2472 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2472 :	"&"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2472 :	"csIn"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2473 :	"coordinateSystem_"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2473 :	"csIn"
		- NEIGH  = { csIn , coordinateSystem_ , EllipsoidalCSNNPtr , & , cs , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { EllipsoidalCSNNPtr , coordinateSystem_ , cs , }
		- SUCC   = { }

2479 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2479 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2480 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2481 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2481 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2481 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2481 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2482 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2482 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2482 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2482 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2483 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2483 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2484 :	"checkEnsembleForGeodeticCRS"
		- NEIGH  = { checkEnsembleForGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2484 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2484 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2484 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2485 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2485 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2485 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2485 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2485 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2485 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2485 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2489 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2489 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2489 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2489 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2489 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2490 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2490 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2490 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2490 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2491 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2496 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2496 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2501 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2501 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2501 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2502 :	"crs"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2502 :	"GeographicCRS"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2502 :	"nn_make_shared"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2502 :	"<"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2502 :	"GeographicCRS"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2502 :	">"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2502 :	"*"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2502 :	"this"
		- NEIGH  = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2503 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2503 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2503 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , GeographicCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2504 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2504 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2513 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2513 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2513 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2513 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2513 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2513 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2514 :	"return"
		- NEIGH  = { coordinateSystem_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2514 :	"d"
		- NEIGH  = { coordinateSystem_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2514 :	"coordinateSystem_"
		- NEIGH  = { coordinateSystem_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2529 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2530 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2530 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2530 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2530 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2530 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2530 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2531 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2531 :	"GeodeticReferenceFrameNNPtr"
		- NEIGH  = { GeodeticReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2531 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2531 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2532 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2532 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2532 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2532 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2533 :	"return"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2533 :	"create"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2533 :	"properties"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2533 :	"datum"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2533 :	"as_nullable"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2533 :	"cs"
		- NEIGH  = { cs , return , as_nullable , properties , datum , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2552 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2553 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2553 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2553 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2553 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2553 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2553 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2554 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2554 :	"GeodeticReferenceFramePtr"
		- NEIGH  = { GeodeticReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2554 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2554 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2555 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2555 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2555 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2555 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2556 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2556 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2556 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2556 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2557 :	"GeographicCRSNNPtr"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2557 :	"crs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2558 :	"GeographicCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2558 :	"nn_make_shared"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2558 :	"<"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2558 :	"GeographicCRS"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2558 :	">"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2558 :	"datum"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2558 :	"datumEnsemble"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2558 :	"cs"
		- NEIGH  = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2559 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- SUCC   = { properties , setProperties , crs , }

2559 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- SUCC   = { properties , setProperties , crs , }

2559 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs , datumEnsemble , datum , < , GeographicCRS , > , nn_make_shared , crs , GeographicCRSNNPtr , }
		- SUCC   = { properties , setProperties , crs , }

2560 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

2560 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

2560 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

2561 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2561 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2562 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2562 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2562 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2562 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

2563 :	"crs"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2563 :	"CRS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2563 :	"getPrivate"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2563 :	"setImplicitCS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2563 :	"properties"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

2564 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

2564 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

2574 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2574 :	"is2DPartOf3D"
		- NEIGH  = { is2DPartOf3D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2574 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2574 :	"nn"
		- NEIGH  = { nn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2574 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2574 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2574 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2574 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2574 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2575 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2575 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2575 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2575 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2576 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2577 :	"&"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2577 :	"axis"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2577 :	"d"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2577 :	"coordinateSystem_"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2577 :	"axisList"
		- NEIGH  = { axisList , d , axis , coordinateSystem_ , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }

2578 :	"&"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2578 :	"otherAxis"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2578 :	"other"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2578 :	"d"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2578 :	"coordinateSystem_"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2578 :	"axisList"
		- NEIGH  = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , d , axis , coordinateSystem_ , & , }
		- SUCC   = { otherAxis , && , == , size , if , ! , axis , }

2579 :	"if"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2579 :	"!"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2579 :	"axis"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2579 :	"size"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2579 :	"=="
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2579 :	"&&"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2579 :	"otherAxis"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2579 :	"size"
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2579 :	"=="
		- NEIGH  = { otherAxis , && , == , size , if , ! , axis , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { d , axisList , other , coordinateSystem_ , otherAxis , & , }
		- SUCC   = { axis , firstAxis , & , }

2580 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherAxis , && , == , size , if , ! , axis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2582 :	"&"
		- NEIGH  = { axis , firstAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherAxis , && , == , size , if , ! , axis , }
		- SUCC   = { axis , secondAxis , & , }

2582 :	"firstAxis"
		- NEIGH  = { axis , firstAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherAxis , && , == , size , if , ! , axis , }
		- SUCC   = { axis , secondAxis , & , }

2582 :	"axis"
		- NEIGH  = { axis , firstAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherAxis , && , == , size , if , ! , axis , }
		- SUCC   = { axis , secondAxis , & , }

2583 :	"&"
		- NEIGH  = { axis , secondAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , firstAxis , & , }
		- SUCC   = { otherFirstAxis , otherAxis , & , }

2583 :	"secondAxis"
		- NEIGH  = { axis , secondAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , firstAxis , & , }
		- SUCC   = { otherFirstAxis , otherAxis , & , }

2583 :	"axis"
		- NEIGH  = { axis , secondAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , firstAxis , & , }
		- SUCC   = { otherFirstAxis , otherAxis , & , }

2584 :	"&"
		- NEIGH  = { otherFirstAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , secondAxis , & , }
		- SUCC   = { otherSecondAxis , otherAxis , & , }

2584 :	"otherFirstAxis"
		- NEIGH  = { otherFirstAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , secondAxis , & , }
		- SUCC   = { otherSecondAxis , otherAxis , & , }

2584 :	"otherAxis"
		- NEIGH  = { otherFirstAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axis , secondAxis , & , }
		- SUCC   = { otherSecondAxis , otherAxis , & , }

2585 :	"&"
		- NEIGH  = { otherSecondAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherFirstAxis , otherAxis , & , }
		- SUCC   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }

2585 :	"otherSecondAxis"
		- NEIGH  = { otherSecondAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherFirstAxis , otherAxis , & , }
		- SUCC   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }

2585 :	"otherAxis"
		- NEIGH  = { otherSecondAxis , otherAxis , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherFirstAxis , otherAxis , & , }
		- SUCC   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }

2586 :	"if"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2586 :	"!"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2586 :	"firstAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2586 :	"_isEquivalentTo"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2587 :	"otherFirstAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2587 :	"get"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2587 :	"util"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2587 :	"IComparable"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2587 :	"Criterion"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2587 :	"EQUIVALENT"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2587 :	"&&"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2588 :	"secondAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2588 :	"_isEquivalentTo"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2589 :	"otherSecondAxis"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2589 :	"get"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2590 :	"util"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2590 :	"IComparable"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2590 :	"Criterion"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2590 :	"EQUIVALENT"
		- NEIGH  = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { otherSecondAxis , otherAxis , & , }
		- SUCC   = { dbContext , datumNonNull , thisDatum , }

2591 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2594 :	"thisDatum"
		- NEIGH  = { dbContext , datumNonNull , thisDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { dbContext , datumNonNull , other , otherDatum , }

2594 :	"datumNonNull"
		- NEIGH  = { dbContext , datumNonNull , thisDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { dbContext , datumNonNull , other , otherDatum , }

2594 :	"dbContext"
		- NEIGH  = { dbContext , datumNonNull , thisDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { otherSecondAxis , secondAxis , firstAxis , EQUIVALENT , IComparable , Criterion , otherFirstAxis , util , get , && , _isEquivalentTo , ! , if , }
		- SUCC   = { dbContext , datumNonNull , other , otherDatum , }

2595 :	"otherDatum"
		- NEIGH  = { dbContext , datumNonNull , other , otherDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }

2595 :	"other"
		- NEIGH  = { dbContext , datumNonNull , other , otherDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }

2595 :	"datumNonNull"
		- NEIGH  = { dbContext , datumNonNull , other , otherDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }

2595 :	"dbContext"
		- NEIGH  = { dbContext , datumNonNull , other , otherDatum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , thisDatum , }
		- SUCC   = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }

2596 :	"return"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , other , otherDatum , }
		- SUCC   = { & , InvalidValueTypeException , util , catch , }

2596 :	"thisDatum"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , other , otherDatum , }
		- SUCC   = { & , InvalidValueTypeException , util , catch , }

2596 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , other , otherDatum , }
		- SUCC   = { & , InvalidValueTypeException , util , catch , }

2597 :	"otherDatum"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , other , otherDatum , }
		- SUCC   = { & , InvalidValueTypeException , util , catch , }

2597 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , other , otherDatum , }
		- SUCC   = { & , InvalidValueTypeException , util , catch , }

2597 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , other , otherDatum , }
		- SUCC   = { & , InvalidValueTypeException , util , catch , }

2597 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , other , otherDatum , }
		- SUCC   = { & , InvalidValueTypeException , util , catch , }

2597 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , other , otherDatum , }
		- SUCC   = { & , InvalidValueTypeException , util , catch , }

2597 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , datumNonNull , other , otherDatum , }
		- SUCC   = { & , InvalidValueTypeException , util , catch , }

2598 :	"catch"
		- NEIGH  = { & , InvalidValueTypeException , util , catch , }
		- PARENT = { }
		- CHILD  = { return , assert , }
		- PRED   = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- SUCC   = { }

2598 :	"util"
		- NEIGH  = { & , InvalidValueTypeException , util , catch , }
		- PARENT = { }
		- CHILD  = { return , assert , }
		- PRED   = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- SUCC   = { }

2598 :	"InvalidValueTypeException"
		- NEIGH  = { & , InvalidValueTypeException , util , catch , }
		- PARENT = { }
		- CHILD  = { return , assert , }
		- PRED   = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- SUCC   = { }

2598 :	"&"
		- NEIGH  = { & , InvalidValueTypeException , util , catch , }
		- PARENT = { }
		- CHILD  = { return , assert , }
		- PRED   = { EQUIVALENT , IComparable , thisDatum , otherDatum , _isEquivalentTo , Criterion , util , get , return , }
		- SUCC   = { }

2601 :	"assert"
		- NEIGH  = { assert , }
		- PARENT = { & , InvalidValueTypeException , util , catch , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

2602 :	"return"
		- NEIGH  = { return , }
		- PARENT = { & , InvalidValueTypeException , util , catch , }
		- CHILD  = { }
		- PRED   = { assert , }
		- SUCC   = { }

2611 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2611 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2612 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2612 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2612 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2612 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2612 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2612 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2612 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2612 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2613 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2613 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2613 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2613 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2614 :	"if"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"other"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"=="
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"||"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"!"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"util"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"isOfExactType"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"<"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"GeographicCRS"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	">"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"*"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2614 :	"other"
		- NEIGH  = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

2615 :	"return"
		- NEIGH  = { return , }
		- PARENT = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2618 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- SUCC   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }

2618 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- SUCC   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }

2618 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { * , > , GeographicCRS , < , isOfExactType , if , ! , util , || , == , other , }
		- SUCC   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }

2619 :	"if"
		- NEIGH  = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2619 :	"GeodeticCRS"
		- NEIGH  = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2619 :	"_isEquivalentToNoTypeCheck"
		- NEIGH  = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2619 :	"other"
		- NEIGH  = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2619 :	"standardCriterion"
		- NEIGH  = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2620 :	"dbContext"
		- NEIGH  = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }

2621 :	"return"
		- NEIGH  = { return , }
		- PARENT = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2623 :	"if"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2623 :	"criterion"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2623 :	"!="
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2624 :	"util"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2624 :	"IComparable"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2624 :	"Criterion"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2624 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { if , standardCriterion , _isEquivalentToNoTypeCheck , other , dbContext , GeodeticCRS , }
		- SUCC   = { coordinateSystem , axisOrder , }

2625 :	"return"
		- NEIGH  = { return , }
		- PARENT = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2627 :	"axisOrder"
		- NEIGH  = { coordinateSystem , axisOrder , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- SUCC   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2627 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisOrder , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- SUCC   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2627 :	"axisOrder"
		- NEIGH  = { coordinateSystem , axisOrder , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { IComparable , != , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , criterion , Criterion , util , if , }
		- SUCC   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2628 :	"if"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2628 :	"axisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2628 :	"=="
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2628 :	"cs"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2628 :	"EllipsoidalCS"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2628 :	"AxisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2628 :	"LONG_EAST_LAT_NORTH"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2628 :	"||"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2629 :	"axisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2629 :	"=="
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2629 :	"cs"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2629 :	"EllipsoidalCS"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2629 :	"AxisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2629 :	"LAT_NORTH_LONG_EAST"
		- NEIGH  = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { standardCriterion , other , _isEquivalentToNoTypeCheck , GeodeticCRS , createLongitudeLatitude , dbContext , createLatitudeLongitude , nameStr , NAME_KEY , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , cs , util , GeographicCRS , create , datum , LONG_EAST_LAT_NORTH , return , axisList , unit , & , }
		- PRED   = { coordinateSystem , axisOrder , }
		- SUCC   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }

2630 :	"&"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2630 :	"unit"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2630 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2630 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2630 :	"unit"
		- NEIGH  = { axisList , coordinateSystem , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }

2631 :	"return"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2631 :	"GeographicCRS"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2631 :	"create"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2632 :	"util"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2632 :	"PropertyMap"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2632 :	"set"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2632 :	"common"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2632 :	"IdentifiedObject"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2632 :	"NAME_KEY"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2633 :	"nameStr"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2634 :	"datum"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2634 :	"datumEnsemble"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2635 :	"axisOrder"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2635 :	"=="
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2636 :	"cs"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2636 :	"EllipsoidalCS"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2636 :	"AxisOrder"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2636 :	"LONG_EAST_LAT_NORTH"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2637 :	"cs"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2637 :	"EllipsoidalCS"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2637 :	"createLatitudeLongitude"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2637 :	"unit"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2638 :	"cs"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2638 :	"EllipsoidalCS"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2638 :	"createLongitudeLatitude"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2638 :	"unit"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2639 :	"GeodeticCRS"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2639 :	"_isEquivalentToNoTypeCheck"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2639 :	"other"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2639 :	"standardCriterion"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2640 :	"dbContext"
		- NEIGH  = { standardCriterion , other , _isEquivalentToNoTypeCheck , createLongitudeLatitude , unit , GeodeticCRS , dbContext , createLatitudeLongitude , datum , nameStr , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , NAME_KEY , LONG_EAST_LAT_NORTH , return , }
		- PARENT = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , & , }
		- SUCC   = { }

2642 :	"if"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2642 :	"axisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2642 :	"=="
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2643 :	"cs"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2643 :	"EllipsoidalCS"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2643 :	"AxisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2643 :	"LONG_EAST_LAT_NORTH_HEIGHT_UP"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2643 :	"||"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2644 :	"axisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2644 :	"=="
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2645 :	"cs"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2645 :	"EllipsoidalCS"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2645 :	"AxisOrder"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2645 :	"LAT_NORTH_LONG_EAST_HEIGHT_UP"
		- NEIGH  = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- PARENT = { }
		- CHILD  = { dbContext , standardCriterion , GeodeticCRS , createLongitudeLatitudeEllipsoidalHeight , createLatitudeLongitudeEllipsoidalHeight , LONG_EAST_LAT_NORTH_HEIGHT_UP , nameStr , EllipsoidalCS , common , AxisOrder , axisOrder , set , == , datumEnsemble , coordinateSystem , IdentifiedObject , PropertyMap , GeographicCRS , create , cs , util , NAME_KEY , linearUnit , other , _isEquivalentToNoTypeCheck , angularUnit , unit , axisList , return , datum , & , }
		- PRED   = { LAT_NORTH_LONG_EAST , || , LONG_EAST_LAT_NORTH , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { return , }

2646 :	"&"
		- NEIGH  = { axisList , coordinateSystem , unit , angularUnit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , coordinateSystem , linearUnit , unit , & , }

2646 :	"angularUnit"
		- NEIGH  = { axisList , coordinateSystem , unit , angularUnit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , coordinateSystem , linearUnit , unit , & , }

2646 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , unit , angularUnit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , coordinateSystem , linearUnit , unit , & , }

2646 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , unit , angularUnit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , coordinateSystem , linearUnit , unit , & , }

2646 :	"unit"
		- NEIGH  = { axisList , coordinateSystem , unit , angularUnit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , coordinateSystem , linearUnit , unit , & , }

2647 :	"&"
		- NEIGH  = { axisList , coordinateSystem , linearUnit , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , angularUnit , & , }
		- SUCC   = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }

2647 :	"linearUnit"
		- NEIGH  = { axisList , coordinateSystem , linearUnit , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , angularUnit , & , }
		- SUCC   = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }

2647 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , linearUnit , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , angularUnit , & , }
		- SUCC   = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }

2647 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , linearUnit , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , angularUnit , & , }
		- SUCC   = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }

2647 :	"unit"
		- NEIGH  = { axisList , coordinateSystem , linearUnit , unit , & , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , unit , angularUnit , & , }
		- SUCC   = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }

2648 :	"return"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2648 :	"GeographicCRS"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2648 :	"create"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2649 :	"util"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2649 :	"PropertyMap"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2649 :	"set"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2649 :	"common"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2649 :	"IdentifiedObject"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2649 :	"NAME_KEY"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2650 :	"nameStr"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2651 :	"datum"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2651 :	"datumEnsemble"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2652 :	"axisOrder"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2652 :	"=="
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2652 :	"cs"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2652 :	"EllipsoidalCS"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2652 :	"AxisOrder"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2653 :	"LONG_EAST_LAT_NORTH_HEIGHT_UP"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2654 :	"cs"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2654 :	"EllipsoidalCS"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2655 :	"createLatitudeLongitudeEllipsoidalHeight"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2656 :	"angularUnit"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2656 :	"linearUnit"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2657 :	"cs"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2657 :	"EllipsoidalCS"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2658 :	"createLongitudeLatitudeEllipsoidalHeight"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2659 :	"angularUnit"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2659 :	"linearUnit"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2660 :	"GeodeticCRS"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2660 :	"_isEquivalentToNoTypeCheck"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2660 :	"other"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2660 :	"standardCriterion"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2661 :	"dbContext"
		- NEIGH  = { dbContext , standardCriterion , createLongitudeLatitudeEllipsoidalHeight , GeodeticCRS , other , _isEquivalentToNoTypeCheck , angularUnit , createLatitudeLongitudeEllipsoidalHeight , datum , nameStr , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , axisOrder , set , common , EllipsoidalCS , == , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , cs , util , linearUnit , NAME_KEY , return , }
		- PARENT = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , linearUnit , unit , & , }
		- SUCC   = { }

2663 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { LAT_NORTH_LONG_EAST_HEIGHT_UP , || , LONG_EAST_LAT_NORTH_HEIGHT_UP , AxisOrder , cs , == , axisOrder , EllipsoidalCS , if , }
		- SUCC   = { }

2669 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2669 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2669 :	"createEPSG_4267"
		- NEIGH  = { createEPSG_4267 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2670 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2670 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2670 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2671 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2671 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2671 :	"EPSG_6267"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2672 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2672 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2672 :	"createLatitudeLongitude"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2673 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2673 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2673 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6267 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2678 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2678 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2678 :	"createEPSG_4269"
		- NEIGH  = { createEPSG_4269 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2679 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2679 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2679 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2680 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2680 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2680 :	"EPSG_6269"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2681 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2681 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2681 :	"createLatitudeLongitude"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2682 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2682 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2682 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , common , createLatitudeLongitude , EPSG_6269 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2687 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2687 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2687 :	"createEPSG_4326"
		- NEIGH  = { createEPSG_4326 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2688 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2688 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2688 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2689 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2689 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2689 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2690 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2690 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2690 :	"createLatitudeLongitude"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2691 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2691 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2691 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitude , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2696 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2696 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2696 :	"createOGC_CRS84"
		- NEIGH  = { createOGC_CRS84 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2697 :	"util"
		- NEIGH  = { propertiesCRS , PropertyMap , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }

2697 :	"PropertyMap"
		- NEIGH  = { propertiesCRS , PropertyMap , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }

2697 :	"propertiesCRS"
		- NEIGH  = { propertiesCRS , PropertyMap , util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }

2698 :	"propertiesCRS"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2699 :	"set"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2699 :	"metadata"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2699 :	"Identifier"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2699 :	"CODESPACE_KEY"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2699 :	"metadata"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2699 :	"Identifier"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2699 :	"OGC"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2700 :	"set"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2700 :	"metadata"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2700 :	"Identifier"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2700 :	"CODE_KEY"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2701 :	"set"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2701 :	"common"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2701 :	"IdentifiedObject"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2701 :	"NAME_KEY"
		- NEIGH  = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { propertiesCRS , PropertyMap , util , }
		- SUCC   = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }

2702 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2702 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2702 :	"propertiesCRS"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2702 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2702 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2702 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2703 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2703 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2703 :	"createLongitudeLatitude"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2704 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2704 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2704 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , createLongitudeLatitude , EllipsoidalCS , cs , common , EPSG_6326 , propertiesCRS , DEGREE , GeodeticReferenceFrame , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { common , CODE_KEY , NAME_KEY , OGC , metadata , CODESPACE_KEY , IdentifiedObject , Identifier , set , propertiesCRS , }
		- SUCC   = { }

2709 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2709 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2709 :	"createEPSG_4979"
		- NEIGH  = { createEPSG_4979 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2710 :	"return"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2710 :	"create"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2711 :	"createMapNameEPSGCode"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2712 :	"datum"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2712 :	"GeodeticReferenceFrame"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2712 :	"EPSG_6326"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"cs"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"EllipsoidalCS"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2713 :	"createLatitudeLongitudeEllipsoidalHeight"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"DEGREE"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"common"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"UnitOfMeasure"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2714 :	"METRE"
		- NEIGH  = { datum , UnitOfMeasure , createLatitudeLongitudeEllipsoidalHeight , METRE , common , EPSG_6326 , DEGREE , GeodeticReferenceFrame , EllipsoidalCS , cs , createMapNameEPSGCode , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2719 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2719 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2719 :	"createEPSG_4807"
		- NEIGH  = { createEPSG_4807 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2720 :	"ellps"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2720 :	"datum"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2720 :	"Ellipsoid"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2720 :	"createFlattenedSphere"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2721 :	"createMapNameEPSGCode"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2722 :	"common"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2722 :	"Length"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2722 :	"common"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2722 :	"Scale"
		- NEIGH  = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }

2724 :	"cs"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2724 :	"cs"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2724 :	"EllipsoidalCS"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2724 :	"createLatitudeLongitude"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2725 :	"common"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2725 :	"UnitOfMeasure"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2725 :	"GRAD"
		- NEIGH  = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Scale , Length , common , createMapNameEPSGCode , createFlattenedSphere , Ellipsoid , datum , ellps , }
		- SUCC   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }

2727 :	"datum"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2727 :	"datum"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2727 :	"GeodeticReferenceFrame"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2727 :	"create"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2728 :	"createMapNameEPSGCode"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	"ellps"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	"util"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	"optional"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	"<"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	"std"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	"string"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	">"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	"datum"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	"PrimeMeridian"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2729 :	"PARIS"
		- NEIGH  = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GRAD , UnitOfMeasure , common , createLatitudeLongitude , EllipsoidalCS , cs , }
		- SUCC   = { cs , createMapNameEPSGCode , datum , create , return , }

2731 :	"return"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2731 :	"create"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2731 :	"createMapNameEPSGCode"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2731 :	"datum"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2731 :	"cs"
		- NEIGH  = { cs , createMapNameEPSGCode , datum , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PARIS , PrimeMeridian , > , string , GeodeticReferenceFrame , std , optional , createMapNameEPSGCode , util , < , datum , ellps , create , }
		- SUCC   = { }

2747 :	"GeographicCRSNNPtr"
		- NEIGH  = { GeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2748 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2748 :	"demoteTo2D"
		- NEIGH  = { demoteTo2D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2748 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2748 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2748 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2748 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2749 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2749 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2749 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2749 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2751 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2751 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2751 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2751 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

2752 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2752 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2752 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2752 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { datumEnsemble , datum , nameStr , == , empty , ! , identifiers , NAME_KEY , EllipsoidalCS , common , size , return , newName , axisList , IdentifiedObject , PropertyMap , && , util , cs , set , if , dbContext , GeographicCRS , create , l_identifiers , & , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

2753 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

2753 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

2753 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , l_identifiers , == , && , dbContext , if , }

2757 :	"if"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2757 :	"dbContext"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2757 :	"&&"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2757 :	"l_identifiers"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2757 :	"size"
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2757 :	"=="
		- NEIGH  = { size , l_identifiers , == , && , dbContext , if , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { empty , ! , GEOGRAPHIC_2D_CRS , ObjectType , nameStr , io , createObjectsFromName , l_identifiers , NN_NO_CHECK , * , if , dbContext , create , res , codeSpace , authFactory , AuthorityFactory , }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }

2758 :	"authFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2758 :	"io"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2758 :	"AuthorityFactory"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2758 :	"create"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2759 :	"NN_NO_CHECK"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2759 :	"dbContext"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2759 :	"*"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2759 :	"l_identifiers"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2759 :	"codeSpace"
		- NEIGH  = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }

2760 :	"res"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2760 :	"authFactory"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2760 :	"createObjectsFromName"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2761 :	"nameStr"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2762 :	"io"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2762 :	"AuthorityFactory"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2762 :	"ObjectType"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2762 :	"GEOGRAPHIC_2D_CRS"
		- NEIGH  = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { }
		- PRED   = { l_identifiers , * , dbContext , NN_NO_CHECK , create , codeSpace , authFactory , io , AuthorityFactory , }
		- SUCC   = { empty , res , ! , if , }

2763 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , dbContext , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2763 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , dbContext , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2763 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , dbContext , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2763 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { size , l_identifiers , == , && , dbContext , if , }
		- CHILD  = { NN_NO_CHECK , is2DPartOf3D , < , util , dbContext , if , this , firstResAsGeogCRS , nn_dynamic_pointer_cast , front , && , > , res , firstRes , GeographicCRS , & , }
		- PRED   = { GEOGRAPHIC_2D_CRS , AuthorityFactory , res , authFactory , io , ObjectType , createObjectsFromName , nameStr , }
		- SUCC   = { }

2764 :	"&"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2764 :	"firstRes"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2764 :	"res"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2764 :	"front"
		- NEIGH  = { front , res , firstRes , & , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }

2765 :	"firstResAsGeogCRS"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2766 :	"util"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2766 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2766 :	"<"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2766 :	"GeographicCRS"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2766 :	">"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2766 :	"firstRes"
		- NEIGH  = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { front , res , firstRes , & , }
		- SUCC   = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }

2767 :	"if"
		- NEIGH  = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2767 :	"firstResAsGeogCRS"
		- NEIGH  = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2767 :	"&&"
		- NEIGH  = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2767 :	"firstResAsGeogCRS"
		- NEIGH  = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2767 :	"is2DPartOf3D"
		- NEIGH  = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2768 :	"NN_NO_CHECK"
		- NEIGH  = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2768 :	"this"
		- NEIGH  = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2768 :	"dbContext"
		- NEIGH  = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PRED   = { firstRes , > , < , nn_dynamic_pointer_cast , GeographicCRS , util , firstResAsGeogCRS , }
		- SUCC   = { }

2769 :	"return"
		- NEIGH  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PARENT = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2769 :	"NN_NO_CHECK"
		- NEIGH  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PARENT = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2769 :	"firstResAsGeogCRS"
		- NEIGH  = { firstResAsGeogCRS , NN_NO_CHECK , return , }
		- PARENT = { dbContext , this , NN_NO_CHECK , && , is2DPartOf3D , firstResAsGeogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2774 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2774 :	"cs"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2774 :	"EllipsoidalCS"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2774 :	"create"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2774 :	"util"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2774 :	"PropertyMap"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2774 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2775 :	"axisList"
		- NEIGH  = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { size , l_identifiers , == , && , dbContext , if , }
		- SUCC   = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }

2776 :	"return"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2776 :	"GeographicCRS"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2776 :	"create"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2777 :	"util"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2777 :	"PropertyMap"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2777 :	"set"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2777 :	"common"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2777 :	"IdentifiedObject"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2777 :	"NAME_KEY"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2778 :	"!"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2778 :	"newName"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2778 :	"empty"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2778 :	"newName"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2778 :	"nameStr"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2779 :	"datum"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2779 :	"datumEnsemble"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2779 :	"cs"
		- NEIGH  = { datum , nameStr , empty , set , ! , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , PropertyMap , create , util , EllipsoidalCS , cs , }
		- SUCC   = { }

2782 :	"return"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2782 :	"NN_NO_CHECK"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2782 :	"std"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2782 :	"dynamic_pointer_cast"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2782 :	"<"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2782 :	"GeographicCRS"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2782 :	">"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2783 :	"shared_from_this"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2783 :	"as_nullable"
		- NEIGH  = { > , shared_from_this , GeographicCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

2789 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2789 :	"addAngularUnitConvertAndAxisSwap"
		- NEIGH  = { addAngularUnitConvertAndAxisSwap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2790 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2790 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2790 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2790 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2791 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2791 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2791 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2791 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addStep , formatter , }

2793 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { addParam , formatter , }

2793 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { addParam , formatter , }

2794 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2794 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2795 :	"if"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2795 :	"axisList"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2795 :	"size"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2795 :	"=="
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2795 :	"&&"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2795 :	"!"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2795 :	"formatter"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2795 :	"omitZUnitConversion"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { axisList , unitHoriz , unit , & , }

2796 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2796 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2799 :	"&"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2799 :	"unitHoriz"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2799 :	"axisList"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2799 :	"unit"
		- NEIGH  = { axisList , unitHoriz , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { exportToPROJString , unitHoriz , projUnit , }

2800 :	"projUnit"
		- NEIGH  = { exportToPROJString , unitHoriz , projUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unitHoriz , unit , & , }
		- SUCC   = { empty , projUnit , if , }

2800 :	"unitHoriz"
		- NEIGH  = { exportToPROJString , unitHoriz , projUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unitHoriz , unit , & , }
		- SUCC   = { empty , projUnit , if , }

2800 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unitHoriz , projUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unitHoriz , unit , & , }
		- SUCC   = { empty , projUnit , if , }

2801 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { }
		- CHILD  = { projUnit , conversionToSI , unitHoriz , addParam , formatter , }
		- PRED   = { exportToPROJString , unitHoriz , projUnit , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2801 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { }
		- CHILD  = { projUnit , conversionToSI , unitHoriz , addParam , formatter , }
		- PRED   = { exportToPROJString , unitHoriz , projUnit , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2801 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { }
		- CHILD  = { projUnit , conversionToSI , unitHoriz , addParam , formatter , }
		- PRED   = { exportToPROJString , unitHoriz , projUnit , }
		- SUCC   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }

2802 :	"formatter"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2802 :	"addParam"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2802 :	"unitHoriz"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2802 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unitHoriz , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2804 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2804 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2804 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2807 :	"if"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2807 :	"axisList"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2807 :	"size"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2807 :	"=="
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2807 :	"&&"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2807 :	"!"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2807 :	"formatter"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2807 :	"omitZUnitConversion"
		- NEIGH  = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { if , exportToPROJString , unit , axisList , projVUnit , empty , unitZ , & , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { order , * , }

2808 :	"&"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2808 :	"unitZ"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2808 :	"axisList"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2808 :	"unit"
		- NEIGH  = { axisList , unitZ , unit , & , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { exportToPROJString , unitZ , projVUnit , }

2809 :	"projVUnit"
		- NEIGH  = { exportToPROJString , unitZ , projVUnit , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , unitZ , unit , & , }
		- SUCC   = { empty , projVUnit , if , }

2809 :	"unitZ"
		- NEIGH  = { exportToPROJString , unitZ , projVUnit , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , unitZ , unit , & , }
		- SUCC   = { empty , projVUnit , if , }

2809 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unitZ , projVUnit , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , unitZ , unit , & , }
		- SUCC   = { empty , projVUnit , if , }

2810 :	"if"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { conversionToSI , projVUnit , unitZ , addParam , formatter , }
		- PRED   = { exportToPROJString , unitZ , projVUnit , }
		- SUCC   = { }

2810 :	"projVUnit"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { conversionToSI , projVUnit , unitZ , addParam , formatter , }
		- PRED   = { exportToPROJString , unitZ , projVUnit , }
		- SUCC   = { }

2810 :	"empty"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- CHILD  = { conversionToSI , projVUnit , unitZ , addParam , formatter , }
		- PRED   = { exportToPROJString , unitZ , projVUnit , }
		- SUCC   = { }

2811 :	"formatter"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2811 :	"addParam"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2811 :	"unitZ"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2811 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unitZ , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2813 :	"formatter"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2813 :	"addParam"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2813 :	"projVUnit"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2817 :	"*"
		- NEIGH  = { order , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { one , * , }

2817 :	"order"
		- NEIGH  = { order , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { omitZUnitConversion , formatter , == , && , size , axisList , ! , if , }
		- SUCC   = { one , * , }

2818 :	"*"
		- NEIGH  = { one , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , * , }
		- SUCC   = { two , * , }

2818 :	"one"
		- NEIGH  = { one , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { order , * , }
		- SUCC   = { two , * , }

2819 :	"*"
		- NEIGH  = { two , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { one , * , }
		- SUCC   = { ++ , < , i , for , }

2819 :	"two"
		- NEIGH  = { two , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { one , * , }
		- SUCC   = { ++ , < , i , for , }

2820 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2820 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2820 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2820 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2820 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2820 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { two , * , }
		- SUCC   = { || , one , != , && , two , order , if , }

2821 :	"&"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2821 :	"dir"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2821 :	"axisList"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2821 :	"i"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2821 :	"direction"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

2822 :	"if"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2822 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2822 :	"dir"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2822 :	"=="
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2822 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2822 :	"cs"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2822 :	"AxisDirection"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2822 :	"WEST"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

2823 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2823 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2824 :	"if"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2824 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2824 :	"dir"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2824 :	"=="
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2824 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2824 :	"cs"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2824 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2824 :	"EAST"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , one , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2825 :	"order"
		- NEIGH  = { one , i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2825 :	"i"
		- NEIGH  = { one , i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2825 :	"one"
		- NEIGH  = { one , i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2826 :	"if"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2826 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2826 :	"dir"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2826 :	"=="
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2826 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2826 :	"cs"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2826 :	"AxisDirection"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2826 :	"SOUTH"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

2827 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2827 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2828 :	"if"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2828 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2828 :	"dir"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2828 :	"=="
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2828 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2828 :	"cs"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2828 :	"AxisDirection"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2828 :	"NORTH"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { two , i , order , }
		- PRED   = { }
		- SUCC   = { }

2829 :	"order"
		- NEIGH  = { two , i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2829 :	"i"
		- NEIGH  = { two , i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2829 :	"two"
		- NEIGH  = { two , i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2832 :	"if"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"&&"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"&&"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"!="
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"one"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"||"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"order"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"!="
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2832 :	"two"
		- NEIGH  = { || , one , != , && , two , order , if , }
		- PARENT = { }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

2833 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

2833 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

2834 :	"orderStr"
		- NEIGH  = { orderStr , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { order , orderStr , sprintf , }

2835 :	"sprintf"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2835 :	"orderStr"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2835 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2835 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

2836 :	"formatter"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

2836 :	"addParam"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

2836 :	"orderStr"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { || , one , != , && , two , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

2844 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2844 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2845 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2845 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2845 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2845 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2847 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2847 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2847 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2847 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2847 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

2848 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2848 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2848 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2848 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }

2849 :	"formatter"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2849 :	"ingestPROJString"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2850 :	"replaceAll"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2850 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

2851 :	"formatter"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

2851 :	"addNoDefs"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

2852 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addNoDefs , formatter , }
		- SUCC   = { }

2855 :	"if"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2855 :	"!"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2855 :	"formatter"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2855 :	"omitProjLongLatIfPossible"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2855 :	"||"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2856 :	"primeMeridian"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2856 :	"longitude"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2856 :	"getSIValue"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2856 :	"!="
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2856 :	"||"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2857 :	"!"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2857 :	"formatter"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2857 :	"getTOWGS84Parameters"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2857 :	"empty"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2857 :	"||"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2858 :	"!"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2858 :	"formatter"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2858 :	"getHDatumExtension"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2858 :	"empty"
		- NEIGH  = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- PARENT = { }
		- CHILD  = { getTOWGS84Parameters , empty , getHDatumExtension , ! , if , getLegacyCRSToCRSContext , done , addStep , && , formatter , }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

2860 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { done , }

2860 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { done , }

2861 :	"done"
		- NEIGH  = { done , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }

2862 :	"if"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2862 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2862 :	"getLegacyCRSToCRSContext"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2862 :	"&&"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2863 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2863 :	"getHDatumExtension"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2863 :	"empty"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2863 :	"&&"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2864 :	"formatter"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2864 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2864 :	"empty"
		- NEIGH  = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , datumNonNull , util , get , EPSG_6326 , l_datum , datum , databaseContext , if , _isEquivalentTo , formatter , GeodeticReferenceFrame , }
		- PRED   = { done , }
		- SUCC   = { done , ! , if , }

2865 :	"l_datum"
		- NEIGH  = { databaseContext , formatter , datumNonNull , l_datum , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }

2865 :	"datumNonNull"
		- NEIGH  = { databaseContext , formatter , datumNonNull , l_datum , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }

2865 :	"formatter"
		- NEIGH  = { databaseContext , formatter , datumNonNull , l_datum , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }

2865 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , datumNonNull , l_datum , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }

2866 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2866 :	"l_datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2866 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2867 :	"datum"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2867 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2867 :	"EPSG_6326"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2867 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2868 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2868 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2868 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2868 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- CHILD  = { EQUIVALENT , IComparable , if , EPSG_6269 , l_datum , datum , GeodeticReferenceFrame , done , _isEquivalentTo , formatter , util , get , Criterion , addParam , }
		- PRED   = { databaseContext , formatter , datumNonNull , l_datum , }
		- SUCC   = { }

2869 :	"done"
		- NEIGH  = { done , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2870 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2870 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2871 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2871 :	"l_datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2871 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2872 :	"datum"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2872 :	"GeodeticReferenceFrame"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2872 :	"EPSG_6269"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2872 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2873 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2873 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2873 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2873 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- PARENT = { EQUIVALENT , IComparable , Criterion , util , get , EPSG_6326 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { formatter , addParam , done , }
		- PRED   = { }
		- SUCC   = { }

2874 :	"done"
		- NEIGH  = { done , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

2876 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2876 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { EQUIVALENT , Criterion , util , get , IComparable , EPSG_6269 , l_datum , GeodeticReferenceFrame , datum , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { done , }
		- SUCC   = { }

2879 :	"if"
		- NEIGH  = { done , ! , if , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { formatter , addDatumInfoToPROJString , }
		- PRED   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- SUCC   = { }

2879 :	"!"
		- NEIGH  = { done , ! , if , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { formatter , addDatumInfoToPROJString , }
		- PRED   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- SUCC   = { }

2879 :	"done"
		- NEIGH  = { done , ! , if , }
		- PARENT = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- CHILD  = { formatter , addDatumInfoToPROJString , }
		- PRED   = { getTOWGS84Parameters , empty , formatter , && , if , getLegacyCRSToCRSContext , getHDatumExtension , }
		- SUCC   = { }

2880 :	"addDatumInfoToPROJString"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { done , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2880 :	"formatter"
		- NEIGH  = { formatter , addDatumInfoToPROJString , }
		- PARENT = { done , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2883 :	"if"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2883 :	"!"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2883 :	"formatter"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2883 :	"getCRSExport"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PRED   = { getHDatumExtension , empty , != , omitProjLongLatIfPossible , getTOWGS84Parameters , primeMeridian , getSIValue , || , if , formatter , ! , longitude , }
		- SUCC   = { }

2884 :	"addAngularUnitConvertAndAxisSwap"
		- NEIGH  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2884 :	"formatter"
		- NEIGH  = { formatter , addAngularUnitConvertAndAxisSwap , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2892 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2892 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2893 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2893 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2893 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2893 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2895 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2895 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2895 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

2896 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

2897 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

2897 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

2897 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

2897 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

2897 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

2899 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2899 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

2900 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2900 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

2901 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2901 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2901 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

2902 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2902 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2904 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2904 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2904 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2907 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2907 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2907 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

2908 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2908 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

2909 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2909 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

2910 :	"l_datum"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2910 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2910 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

2912 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2912 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2913 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2913 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

2914 :	"datumEnsemble"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2914 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2914 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

2917 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2917 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

2918 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2918 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

2919 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2919 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2919 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

2921 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2921 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2921 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

2928 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2928 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2929 :	"std"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2929 :	"vector"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2929 :	"<"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2929 :	"operation"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2929 :	"TransformationNNPtr"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2929 :	">"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2929 :	"geoidModel"
		- NEIGH  = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }

2930 :	"std"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2930 :	"vector"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2930 :	"<"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2930 :	"operation"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2930 :	"PointMotionOperationNNPtr"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2930 :	">"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2930 :	"velocityModel"
		- NEIGH  = { velocityModel , > , operation , < , vector , PointMotionOperationNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModel , > , operation , < , vector , TransformationNNPtr , std , }
		- SUCC   = { }

2937 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2937 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2937 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2938 :	"checkEnsembleForVerticalCRS"
		- NEIGH  = { checkEnsembleForVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2938 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2938 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2938 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2938 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2939 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2939 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2939 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2939 :	"ensemble"
		- NEIGH  = { ensemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2940 :	"*"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

2940 :	"msg"
		- NEIGH  = { msg , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { datumIn , if , }

2941 :	"if"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

2941 :	"datumIn"
		- NEIGH  = { datumIn , if , }
		- PARENT = { }
		- CHILD  = { msg , ! , ensemble , if , }
		- PRED   = { msg , * , }
		- SUCC   = { msg , Exception , util , throw , }

2942 :	"if"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

2942 :	"!"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

2942 :	"ensemble"
		- NEIGH  = { ! , ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { }
		- SUCC   = { msg , }

2943 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2943 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { ! , ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2945 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { datumIn , if , }
		- CHILD  = { }
		- PRED   = { ! , ensemble , if , }
		- SUCC   = { }

2946 :	"if"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , VerticalReferenceFrame , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , & , }
		- PRED   = { }
		- SUCC   = { }

2946 :	"ensemble"
		- NEIGH  = { ensemble , if , }
		- PARENT = { datumIn , if , }
		- CHILD  = { if , get , * , grfFirst , VerticalReferenceFrame , empty , msg , datums , ! , < , dynamic_cast , > , assert , datum , ensemble , & , }
		- PRED   = { }
		- SUCC   = { }

2947 :	"&"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2947 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2947 :	"ensemble"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2947 :	"datums"
		- NEIGH  = { ensemble , datums , & , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , datums , ! , assert , }

2948 :	"assert"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2948 :	"!"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2948 :	"datums"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2948 :	"empty"
		- NEIGH  = { empty , datums , ! , assert , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { ensemble , datums , & , }
		- SUCC   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }

2949 :	"grfFirst"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2950 :	"dynamic_cast"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2950 :	"<"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2950 :	"datum"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2950 :	"VerticalReferenceFrame"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2950 :	"*"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2950 :	">"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2950 :	"datums"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2950 :	"get"
		- NEIGH  = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { empty , datums , ! , assert , }
		- SUCC   = { grfFirst , if , }

2951 :	"if"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- SUCC   = { msg , }

2951 :	"grfFirst"
		- NEIGH  = { grfFirst , if , }
		- PARENT = { ensemble , if , }
		- CHILD  = { ensemble , return , }
		- PRED   = { get , datums , > , * , dynamic_cast , VerticalReferenceFrame , datum , < , grfFirst , }
		- SUCC   = { msg , }

2952 :	"return"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2952 :	"ensemble"
		- NEIGH  = { ensemble , return , }
		- PARENT = { grfFirst , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2954 :	"msg"
		- NEIGH  = { msg , }
		- PARENT = { ensemble , if , }
		- CHILD  = { }
		- PRED   = { grfFirst , if , }
		- SUCC   = { }

2956 :	"throw"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2956 :	"util"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2956 :	"Exception"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2956 :	"msg"
		- NEIGH  = { msg , Exception , util , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumIn , if , }
		- SUCC   = { }

2962 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2962 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2962 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2962 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2962 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2962 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2963 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2964 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2964 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2964 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2964 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2965 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2965 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2965 :	"checkEnsembleForVerticalCRS"
		- NEIGH  = { checkEnsembleForVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2965 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2965 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2966 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2967 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2967 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2967 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2967 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2967 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2967 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2971 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2971 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2971 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2971 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2971 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2972 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2977 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2977 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2982 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2982 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2982 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2983 :	"crs"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2983 :	"VerticalCRS"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2983 :	"nn_make_shared"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2983 :	"<"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2983 :	"VerticalCRS"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2983 :	">"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2983 :	"*"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2983 :	"this"
		- NEIGH  = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

2984 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2984 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2984 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , VerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

2985 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2985 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

2994 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2994 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2994 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2994 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	"return"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	"std"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	"static_pointer_cast"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	"<"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	"datum"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	"VerticalReferenceFrame"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2995 :	">"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2996 :	"SingleCRS"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2996 :	"getPrivate"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

2996 :	"datum"
		- NEIGH  = { > , VerticalReferenceFrame , SingleCRS , < , datum , getPrivate , static_pointer_cast , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3008 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3008 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3008 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3008 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3008 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3008 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3008 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3009 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3009 :	"geoidModel"
		- NEIGH  = { geoidModel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3009 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3010 :	"return"
		- NEIGH  = { geoidModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3010 :	"d"
		- NEIGH  = { geoidModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3010 :	"geoidModel"
		- NEIGH  = { geoidModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3019 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3019 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3019 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3019 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3019 :	"PointMotionOperationNNPtr"
		- NEIGH  = { PointMotionOperationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3019 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3019 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3020 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3020 :	"velocityModel"
		- NEIGH  = { velocityModel , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3020 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3021 :	"return"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3021 :	"d"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3021 :	"velocityModel"
		- NEIGH  = { velocityModel , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3030 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3030 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3030 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3030 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3031 :	"return"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3031 :	"util"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3031 :	"nn_static_pointer_cast"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3031 :	"<"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3031 :	"cs"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3031 :	"VerticalCS"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3031 :	">"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3032 :	"SingleCRS"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3032 :	"getPrivate"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3032 :	"coordinateSystem"
		- NEIGH  = { getPrivate , cs , SingleCRS , < , > , VerticalCS , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3040 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3040 :	"VerticalReferenceFrameNNPtr"
		- NEIGH  = { VerticalReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3041 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3041 :	"datumNonNull"
		- NEIGH  = { datumNonNull , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3041 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3041 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3041 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3041 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3042 :	"return"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3042 :	"NN_NO_CHECK"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"util"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"<"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	"VerticalReferenceFrame"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3043 :	">"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3044 :	"SingleCRS"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3044 :	"datumNonNull"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3044 :	"dbContext"
		- NEIGH  = { > , SingleCRS , datum , < , util , nn_dynamic_pointer_cast , dbContext , VerticalReferenceFrame , NN_NO_CHECK , datumNonNull , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3051 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3051 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3051 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3051 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3051 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3051 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3052 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

3052 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

3052 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

3052 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

3052 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

3052 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

3052 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

3052 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }

3053 :	"formatter"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3053 :	"startNode"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3053 :	"isWKT2"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3053 :	"io"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3053 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3053 :	"VERTCRS"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3054 :	"formatter"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3054 :	"useESRIDialect"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3055 :	"io"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3055 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3055 :	"VERTCS"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3056 :	"io"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3056 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3056 :	"VERT_CS"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3057 :	"!"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3057 :	"identifiers"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3057 :	"empty"
		- NEIGH  = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , l_name , }

3059 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

3059 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , useESRIDialect , VERTCS , VERTCRS , WKTConstants , io , VERT_CS , ! , formatter , isWKT2 , startNode , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

3060 :	"&"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { useESRIDialect , formatter , if , }

3060 :	"dbContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { useESRIDialect , formatter , if , }

3060 :	"formatter"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { useESRIDialect , formatter , if , }

3060 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { useESRIDialect , formatter , if , }

3061 :	"if"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { ! , dbContext , if , aliasFound , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3061 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { ! , dbContext , if , aliasFound , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3061 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { ! , dbContext , if , aliasFound , }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3062 :	"aliasFound"
		- NEIGH  = { aliasFound , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

3063 :	"if"
		- NEIGH  = { dbContext , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { empty , l_name , dbContext , ! , if , getAliasFromOfficialName , l_alias , }
		- PRED   = { aliasFound , }
		- SUCC   = { aliasFound , ! , if , }

3063 :	"dbContext"
		- NEIGH  = { dbContext , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { empty , l_name , dbContext , ! , if , getAliasFromOfficialName , l_alias , }
		- PRED   = { aliasFound , }
		- SUCC   = { aliasFound , ! , if , }

3064 :	"l_alias"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

3064 :	"dbContext"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

3064 :	"getAliasFromOfficialName"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

3065 :	"l_name"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , l_alias , if , }

3066 :	"if"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

3066 :	"!"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

3066 :	"l_alias"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

3066 :	"empty"
		- NEIGH  = { empty , ! , l_alias , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { aliasFound , l_alias , l_name , }
		- PRED   = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- SUCC   = { }

3067 :	"l_name"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aliasFound , }

3067 :	"l_alias"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { aliasFound , }

3068 :	"aliasFound"
		- NEIGH  = { aliasFound , }
		- PARENT = { empty , ! , l_alias , if , }
		- CHILD  = { }
		- PRED   = { l_alias , l_name , }
		- SUCC   = { }

3071 :	"if"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

3071 :	"!"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

3071 :	"aliasFound"
		- NEIGH  = { aliasFound , ! , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

3072 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3072 :	"io"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3072 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3072 :	"morphNameToESRI"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3072 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { aliasFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3076 :	"formatter"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { datum , l_datum , }

3076 :	"addQuotedString"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { datum , l_datum , }

3076 :	"l_name"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { datum , l_datum , }

3078 :	"l_datum"
		- NEIGH  = { datum , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }

3078 :	"datum"
		- NEIGH  = { datum , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }

3079 :	"if"
		- NEIGH  = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , if , ! , dbContext , exportDatumOrDatumEnsembleToWkt , foundMatch , }
		- PRED   = { datum , l_datum , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

3079 :	"formatter"
		- NEIGH  = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , if , ! , dbContext , exportDatumOrDatumEnsembleToWkt , foundMatch , }
		- PRED   = { datum , l_datum , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

3079 :	"useESRIDialect"
		- NEIGH  = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , if , ! , dbContext , exportDatumOrDatumEnsembleToWkt , foundMatch , }
		- PRED   = { datum , l_datum , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

3079 :	"&&"
		- NEIGH  = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , if , ! , dbContext , exportDatumOrDatumEnsembleToWkt , foundMatch , }
		- PRED   = { datum , l_datum , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

3079 :	"l_datum"
		- NEIGH  = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , if , ! , dbContext , exportDatumOrDatumEnsembleToWkt , foundMatch , }
		- PRED   = { datum , l_datum , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

3079 :	"&&"
		- NEIGH  = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , if , ! , dbContext , exportDatumOrDatumEnsembleToWkt , foundMatch , }
		- PRED   = { datum , l_datum , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

3080 :	"l_datum"
		- NEIGH  = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , if , ! , dbContext , exportDatumOrDatumEnsembleToWkt , foundMatch , }
		- PRED   = { datum , l_datum , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

3080 :	"getWKT1DatumType"
		- NEIGH  = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , if , ! , dbContext , exportDatumOrDatumEnsembleToWkt , foundMatch , }
		- PRED   = { datum , l_datum , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

3080 :	"=="
		- NEIGH  = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { formatter , if , ! , dbContext , exportDatumOrDatumEnsembleToWkt , foundMatch , }
		- PRED   = { datum , l_datum , }
		- SUCC   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }

3081 :	"foundMatch"
		- NEIGH  = { foundMatch , }
		- PARENT = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

3082 :	"if"
		- NEIGH  = { dbContext , if , }
		- PARENT = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- CHILD  = { empty , ObjectType , nameStr , l_datum , io , createObjectsFromName , list , std , if , dbContext , GEODETIC_REFERENCE_FRAME , NN_NO_CHECK , create , authFactory , ! , string , AuthorityFactory , }
		- PRED   = { foundMatch , }
		- SUCC   = { foundMatch , ! , if , }

3082 :	"dbContext"
		- NEIGH  = { dbContext , if , }
		- PARENT = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- CHILD  = { empty , ObjectType , nameStr , l_datum , io , createObjectsFromName , list , std , if , dbContext , GEODETIC_REFERENCE_FRAME , NN_NO_CHECK , create , authFactory , ! , string , AuthorityFactory , }
		- PRED   = { foundMatch , }
		- SUCC   = { foundMatch , ! , if , }

3083 :	"authFactory"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }

3083 :	"io"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }

3083 :	"AuthorityFactory"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }

3083 :	"create"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }

3084 :	"NN_NO_CHECK"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }

3084 :	"dbContext"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }

3084 :	"std"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }

3084 :	"string"
		- NEIGH  = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }

3085 :	"list"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , ! , if , }

3085 :	"authFactory"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , ! , if , }

3085 :	"createObjectsFromName"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , ! , if , }

3086 :	"l_datum"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , ! , if , }

3086 :	"nameStr"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , ! , if , }

3087 :	"io"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , ! , if , }

3087 :	"AuthorityFactory"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , ! , if , }

3087 :	"ObjectType"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , ! , if , }

3087 :	"GEODETIC_REFERENCE_FRAME"
		- NEIGH  = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { std , dbContext , NN_NO_CHECK , create , authFactory , io , string , AuthorityFactory , }
		- SUCC   = { empty , list , ! , if , }

3089 :	"if"
		- NEIGH  = { empty , list , ! , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { > , if , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PRED   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- SUCC   = { }

3089 :	"!"
		- NEIGH  = { empty , list , ! , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { > , if , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PRED   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- SUCC   = { }

3089 :	"list"
		- NEIGH  = { empty , list , ! , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { > , if , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PRED   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- SUCC   = { }

3089 :	"empty"
		- NEIGH  = { empty , list , ! , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { > , if , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PRED   = { AuthorityFactory , GEODETIC_REFERENCE_FRAME , nameStr , ObjectType , createObjectsFromName , l_datum , io , authFactory , list , }
		- SUCC   = { }

3090 :	"gdatum"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gdatum , if , }

3091 :	"util"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gdatum , if , }

3091 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gdatum , if , }

3091 :	"<"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gdatum , if , }

3091 :	"datum"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gdatum , if , }

3091 :	"Datum"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gdatum , if , }

3091 :	">"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gdatum , if , }

3091 :	"list"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gdatum , if , }

3091 :	"front"
		- NEIGH  = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { gdatum , if , }

3092 :	"if"
		- NEIGH  = { gdatum , if , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { foundMatch , _exportToWKT , formatter , gdatum , }
		- PRED   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- SUCC   = { }

3092 :	"gdatum"
		- NEIGH  = { gdatum , if , }
		- PARENT = { empty , list , ! , if , }
		- CHILD  = { foundMatch , _exportToWKT , formatter , gdatum , }
		- PRED   = { > , Datum , datum , < , front , gdatum , nn_dynamic_pointer_cast , list , util , }
		- SUCC   = { }

3093 :	"gdatum"
		- NEIGH  = { _exportToWKT , formatter , gdatum , }
		- PARENT = { gdatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundMatch , }

3093 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , formatter , gdatum , }
		- PARENT = { gdatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundMatch , }

3093 :	"formatter"
		- NEIGH  = { _exportToWKT , formatter , gdatum , }
		- PARENT = { gdatum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundMatch , }

3094 :	"foundMatch"
		- NEIGH  = { foundMatch , }
		- PARENT = { gdatum , if , }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , gdatum , }
		- SUCC   = { }

3098 :	"if"
		- NEIGH  = { foundMatch , ! , if , }
		- PARENT = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- CHILD  = { formatter , _exportToWKT , l_datum , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

3098 :	"!"
		- NEIGH  = { foundMatch , ! , if , }
		- PARENT = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- CHILD  = { formatter , _exportToWKT , l_datum , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

3098 :	"foundMatch"
		- NEIGH  = { foundMatch , ! , if , }
		- PARENT = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- CHILD  = { formatter , _exportToWKT , l_datum , }
		- PRED   = { dbContext , if , }
		- SUCC   = { }

3100 :	"l_datum"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { foundMatch , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3100 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { foundMatch , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3100 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { foundMatch , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3103 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3103 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , }
		- PARENT = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3105 :	"&"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- SUCC   = { axisList , cs , & , }

3105 :	"cs"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- SUCC   = { axisList , cs , & , }

3105 :	"SingleCRS"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- SUCC   = { axisList , cs , & , }

3105 :	"getPrivate"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- SUCC   = { axisList , cs , & , }

3105 :	"coordinateSystem"
		- NEIGH  = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getWKT1DatumType , l_datum , == , && , useESRIDialect , formatter , if , }
		- SUCC   = { axisList , cs , & , }

3106 :	"&"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

3106 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

3106 :	"cs"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

3106 :	"axisList"
		- NEIGH  = { axisList , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , coordinateSystem , SingleCRS , cs , & , }
		- SUCC   = { useESRIDialect , formatter , if , }

3108 :	"if"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { cs , axisList , WKTConstants , endNode , add , formatter , direction , PARAMETER , - , io , startNode , UP , == , AxisDirection , addQuotedString , }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

3108 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { cs , axisList , WKTConstants , endNode , add , formatter , direction , PARAMETER , - , io , startNode , UP , == , AxisDirection , addQuotedString , }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

3108 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { cs , axisList , WKTConstants , endNode , add , formatter , direction , PARAMETER , - , io , startNode , UP , == , AxisDirection , addQuotedString , }
		- PRED   = { axisList , cs , & , }
		- SUCC   = { isWKT2 , ! , if , }

3110 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3110 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3110 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3110 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3110 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3111 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3111 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3112 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3112 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3113 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3113 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3115 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3115 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3115 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3115 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3115 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3116 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }

3116 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }

3117 :	"formatter"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3117 :	"add"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3118 :	"axisList"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3118 :	"direction"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3118 :	"=="
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3118 :	"cs"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3118 :	"AxisDirection"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3118 :	"UP"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3118 :	"-"
		- NEIGH  = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3119 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- SUCC   = { }

3119 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { UP , cs , formatter , direction , == , axisList , - , AxisDirection , add , }
		- SUCC   = { }

3122 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

3122 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

3122 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

3123 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3123 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3123 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3123 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3126 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3126 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3126 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3127 :	"if"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

3127 :	"oldAxisOutputRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

3127 :	"=="
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

3128 :	"io"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

3128 :	"WKTFormatter"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

3128 :	"OutputAxisRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

3128 :	"WKT1_GDAL_EPSG_STYLE"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , cs , }

3129 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3129 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3129 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3129 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3129 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3129 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3131 :	"cs"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3131 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3131 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3132 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }

3132 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }

3132 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , cs , }
		- SUCC   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }

3134 :	"if"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3134 :	"isWKT2"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3134 :	"&&"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3134 :	"formatter"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3134 :	"use2019Keywords"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3134 :	"&&"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3134 :	"!"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3134 :	"d"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3134 :	"geoidModel"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3134 :	"empty"
		- NEIGH  = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- PARENT = { }
		- CHILD  = { endNode , nameStr , WKTConstants , GEOIDMODEL , io , addQuotedString , formatID , d , formatter , model , geoidModel , startNode , & , }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3135 :	"&"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }

3135 :	"model"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }

3135 :	"d"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }

3135 :	"geoidModel"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }

3136 :	"formatter"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

3136 :	"startNode"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

3136 :	"io"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

3136 :	"WKTConstants"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

3136 :	"GEOIDMODEL"
		- NEIGH  = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { nameStr , model , addQuotedString , formatter , }

3137 :	"formatter"
		- NEIGH  = { nameStr , model , addQuotedString , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , formatID , model , }

3137 :	"addQuotedString"
		- NEIGH  = { nameStr , model , addQuotedString , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , formatID , model , }

3137 :	"model"
		- NEIGH  = { nameStr , model , addQuotedString , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , formatID , model , }

3137 :	"nameStr"
		- NEIGH  = { nameStr , model , addQuotedString , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { GEOIDMODEL , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , formatID , model , }

3138 :	"model"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , model , addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3138 :	"formatID"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , model , addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3138 :	"formatter"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , model , addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3139 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , formatID , model , }
		- SUCC   = { }

3139 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , formatID , model , }
		- SUCC   = { }

3142 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- SUCC   = { endNode , formatter , }

3142 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- SUCC   = { endNode , formatter , }

3142 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidModel , && , isWKT2 , use2019Keywords , formatter , d , ! , if , }
		- SUCC   = { endNode , formatter , }

3143 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

3143 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

3150 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3150 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3151 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3153 :	"geoidgrids"
		- NEIGH  = { getVDatumExtension , formatter , geoidgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , geoidgrids , ! , if , }

3153 :	"formatter"
		- NEIGH  = { getVDatumExtension , formatter , geoidgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , geoidgrids , ! , if , }

3153 :	"getVDatumExtension"
		- NEIGH  = { getVDatumExtension , formatter , geoidgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , geoidgrids , ! , if , }

3154 :	"if"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

3154 :	"!"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

3154 :	"geoidgrids"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

3154 :	"empty"
		- NEIGH  = { empty , geoidgrids , ! , if , }
		- PARENT = { }
		- CHILD  = { geoidgrids , addParam , formatter , }
		- PRED   = { getVDatumExtension , formatter , geoidgrids , }
		- SUCC   = { coordinateSystem , axisList , & , }

3155 :	"formatter"
		- NEIGH  = { geoidgrids , addParam , formatter , }
		- PARENT = { empty , geoidgrids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3155 :	"addParam"
		- NEIGH  = { geoidgrids , addParam , formatter , }
		- PARENT = { empty , geoidgrids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3155 :	"geoidgrids"
		- NEIGH  = { geoidgrids , addParam , formatter , }
		- PARENT = { empty , geoidgrids , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3158 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

3158 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

3158 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

3158 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , geoidgrids , ! , if , }
		- SUCC   = { empty , axisList , ! , if , }

3159 :	"if"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

3159 :	"!"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

3159 :	"axisList"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

3159 :	"empty"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , if , exportToPROJString , axisList , unit , projUnit , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

3160 :	"projUnit"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

3160 :	"axisList"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

3160 :	"unit"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

3160 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , axisList , unit , projUnit , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , projUnit , if , }

3161 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { projUnit , conversionToSI , unit , axisList , addParam , formatter , }
		- PRED   = { exportToPROJString , axisList , unit , projUnit , }
		- SUCC   = { }

3161 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { projUnit , conversionToSI , unit , axisList , addParam , formatter , }
		- PRED   = { exportToPROJString , axisList , unit , projUnit , }
		- SUCC   = { }

3161 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { projUnit , conversionToSI , unit , axisList , addParam , formatter , }
		- PRED   = { exportToPROJString , axisList , unit , projUnit , }
		- SUCC   = { }

3162 :	"formatter"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3162 :	"addParam"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3163 :	"axisList"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3163 :	"unit"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3163 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3165 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3165 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3165 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3174 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3174 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3175 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3175 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3175 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3175 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3177 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3177 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3177 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3178 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3179 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3179 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3179 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3179 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3179 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3181 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3181 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3182 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3182 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3183 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

3183 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

3183 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { datum , l_datum , & , }

3184 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3184 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3186 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3186 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3186 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3189 :	"&"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

3189 :	"l_datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

3189 :	"datum"
		- NEIGH  = { datum , l_datum , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { l_datum , if , }

3190 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

3190 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { setOmitTypeInImmediateChild , _exportToJSON , l_datum , datumEnsemble , AddObjKey , formatter , writer , }
		- PRED   = { datum , l_datum , & , }
		- SUCC   = { AddObjKey , writer , }

3191 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

3191 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , l_datum , }

3192 :	"l_datum"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

3192 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

3192 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

3194 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3194 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3195 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

3195 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datumEnsemble , }

3196 :	"datumEnsemble"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

3196 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

3196 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { }

3199 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3199 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3200 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3200 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3201 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { empty , d , ! , geoidModel , if , }

3201 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { empty , d , ! , geoidModel , if , }

3201 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { empty , d , ! , geoidModel , if , }

3203 :	"if"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3203 :	"!"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3203 :	"d"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3203 :	"geoidModel"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3203 :	"empty"
		- NEIGH  = { empty , d , ! , geoidModel , if , }
		- PARENT = { }
		- CHILD  = { if , nameStr , identifiers , geoidModel , MakeObjectContext , formatID , d , formatter , objectContext2 , Add , AddObjKey , writer , empty , model , & , }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3204 :	"&"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AddObjKey , writer , }

3204 :	"model"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AddObjKey , writer , }

3204 :	"d"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AddObjKey , writer , }

3204 :	"geoidModel"
		- NEIGH  = { geoidModel , d , model , & , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { AddObjKey , writer , }

3205 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { MakeObjectContext , formatter , objectContext2 , }

3205 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { geoidModel , d , model , & , }
		- SUCC   = { MakeObjectContext , formatter , objectContext2 , }

3206 :	"objectContext2"
		- NEIGH  = { MakeObjectContext , formatter , objectContext2 , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

3206 :	"formatter"
		- NEIGH  = { MakeObjectContext , formatter , objectContext2 , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

3206 :	"MakeObjectContext"
		- NEIGH  = { MakeObjectContext , formatter , objectContext2 , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

3207 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { MakeObjectContext , formatter , objectContext2 , }
		- SUCC   = { nameStr , model , Add , writer , }

3207 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { MakeObjectContext , formatter , objectContext2 , }
		- SUCC   = { nameStr , model , Add , writer , }

3208 :	"writer"
		- NEIGH  = { nameStr , model , Add , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , model , identifiers , if , }

3208 :	"Add"
		- NEIGH  = { nameStr , model , Add , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , model , identifiers , if , }

3208 :	"model"
		- NEIGH  = { nameStr , model , Add , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , model , identifiers , if , }

3208 :	"nameStr"
		- NEIGH  = { nameStr , model , Add , writer , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , model , identifiers , if , }

3210 :	"if"
		- NEIGH  = { empty , model , identifiers , if , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { if , interpolationCRS , model , interpCRS , & , }
		- PRED   = { nameStr , model , Add , writer , }
		- SUCC   = { formatter , formatID , model , }

3210 :	"model"
		- NEIGH  = { empty , model , identifiers , if , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { if , interpolationCRS , model , interpCRS , & , }
		- PRED   = { nameStr , model , Add , writer , }
		- SUCC   = { formatter , formatID , model , }

3210 :	"identifiers"
		- NEIGH  = { empty , model , identifiers , if , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { if , interpolationCRS , model , interpCRS , & , }
		- PRED   = { nameStr , model , Add , writer , }
		- SUCC   = { formatter , formatID , model , }

3210 :	"empty"
		- NEIGH  = { empty , model , identifiers , if , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { if , interpolationCRS , model , interpCRS , & , }
		- PRED   = { nameStr , model , Add , writer , }
		- SUCC   = { formatter , formatID , model , }

3211 :	"&"
		- NEIGH  = { interpolationCRS , model , interpCRS , & , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { interpCRS , if , }

3211 :	"interpCRS"
		- NEIGH  = { interpolationCRS , model , interpCRS , & , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { interpCRS , if , }

3211 :	"model"
		- NEIGH  = { interpolationCRS , model , interpCRS , & , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { interpCRS , if , }

3211 :	"interpolationCRS"
		- NEIGH  = { interpolationCRS , model , interpCRS , & , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { interpCRS , if , }

3212 :	"if"
		- NEIGH  = { interpCRS , if , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { _exportToJSON , interpCRS , AddObjKey , formatter , writer , }
		- PRED   = { interpolationCRS , model , interpCRS , & , }
		- SUCC   = { }

3212 :	"interpCRS"
		- NEIGH  = { interpCRS , if , }
		- PARENT = { empty , model , identifiers , if , }
		- CHILD  = { _exportToJSON , interpCRS , AddObjKey , formatter , writer , }
		- PRED   = { interpolationCRS , model , interpCRS , & , }
		- SUCC   = { }

3213 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , interpCRS , }

3213 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToJSON , interpCRS , }

3214 :	"interpCRS"
		- NEIGH  = { formatter , _exportToJSON , interpCRS , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

3214 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , interpCRS , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

3214 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , interpCRS , }
		- PARENT = { interpCRS , if , }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { }

3218 :	"model"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { empty , model , identifiers , if , }
		- SUCC   = { }

3218 :	"formatID"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { empty , model , identifiers , if , }
		- SUCC   = { }

3218 :	"formatter"
		- NEIGH  = { formatter , formatID , model , }
		- PARENT = { empty , d , ! , geoidModel , if , }
		- CHILD  = { }
		- PRED   = { empty , model , identifiers , if , }
		- SUCC   = { }

3221 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , d , ! , geoidModel , if , }
		- SUCC   = { }

3221 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , d , ! , geoidModel , if , }
		- SUCC   = { }

3221 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , d , ! , geoidModel , if , }
		- SUCC   = { }

3228 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3228 :	"addLinearUnitConvert"
		- NEIGH  = { addLinearUnitConvert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3229 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3229 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3229 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3229 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3230 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

3230 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

3230 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

3230 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , axisList , ! , if , }

3232 :	"if"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

3232 :	"!"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

3232 :	"axisList"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

3232 :	"empty"
		- NEIGH  = { empty , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { conversionToSI , unit , != , axisList , if , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { }

3233 :	"if"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

3233 :	"axisList"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

3233 :	"unit"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

3233 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

3233 :	"!="
		- NEIGH  = { conversionToSI , unit , != , axisList , if , }
		- PARENT = { empty , axisList , ! , if , }
		- CHILD  = { empty , if , exportToPROJString , unit , axisList , projVUnit , addParam , addStep , formatter , }
		- PRED   = { }
		- SUCC   = { }

3234 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3234 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

3235 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { unit , axisList , exportToPROJString , projVUnit , }

3235 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { unit , axisList , exportToPROJString , projVUnit , }

3236 :	"projVUnit"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

3236 :	"axisList"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

3236 :	"unit"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

3236 :	"exportToPROJString"
		- NEIGH  = { unit , axisList , exportToPROJString , projVUnit , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projVUnit , if , }

3237 :	"if"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { conversionToSI , unit , axisList , projVUnit , addParam , formatter , }
		- PRED   = { unit , axisList , exportToPROJString , projVUnit , }
		- SUCC   = { }

3237 :	"projVUnit"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { conversionToSI , unit , axisList , projVUnit , addParam , formatter , }
		- PRED   = { unit , axisList , exportToPROJString , projVUnit , }
		- SUCC   = { }

3237 :	"empty"
		- NEIGH  = { empty , projVUnit , if , }
		- PARENT = { conversionToSI , unit , != , axisList , if , }
		- CHILD  = { conversionToSI , unit , axisList , projVUnit , addParam , formatter , }
		- PRED   = { unit , axisList , exportToPROJString , projVUnit , }
		- SUCC   = { }

3238 :	"formatter"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3238 :	"addParam"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3239 :	"axisList"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3239 :	"unit"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3239 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , axisList , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3241 :	"formatter"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3241 :	"addParam"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3241 :	"projVUnit"
		- NEIGH  = { projVUnit , addParam , formatter , }
		- PARENT = { empty , projVUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3260 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3261 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3262 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3262 :	"VerticalReferenceFrameNNPtr"
		- NEIGH  = { VerticalReferenceFrameNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3262 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3262 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3263 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3263 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3263 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3263 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3264 :	"return"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3264 :	"create"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3264 :	"properties"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3264 :	"datumIn"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3264 :	"as_nullable"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3264 :	"csIn"
		- NEIGH  = { return , as_nullable , datumIn , properties , csIn , create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3282 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3283 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3284 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3284 :	"VerticalReferenceFramePtr"
		- NEIGH  = { VerticalReferenceFramePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3284 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3284 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3285 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3285 :	"DatumEnsemblePtr"
		- NEIGH  = { DatumEnsemblePtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3285 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3285 :	"datumEnsembleIn"
		- NEIGH  = { datumEnsembleIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3286 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3286 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3286 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3286 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3287 :	"crs"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3287 :	"VerticalCRS"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3287 :	"nn_make_shared"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3287 :	"<"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3287 :	"VerticalCRS"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3287 :	">"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3287 :	"datumIn"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3287 :	"datumEnsembleIn"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3288 :	"csIn"
		- NEIGH  = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3289 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- SUCC   = { properties , setProperties , crs , }

3289 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- SUCC   = { properties , setProperties , crs , }

3289 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , VerticalCRS , > , nn_make_shared , datumEnsembleIn , crs , }
		- SUCC   = { properties , setProperties , crs , }

3290 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { get , properties , geoidModelPtr , }

3290 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { get , properties , geoidModelPtr , }

3290 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { get , properties , geoidModelPtr , }

3291 :	"geoidModelPtr"
		- NEIGH  = { get , properties , geoidModelPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { geoidModelPtr , if , }

3291 :	"properties"
		- NEIGH  = { get , properties , geoidModelPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { geoidModelPtr , if , }

3291 :	"get"
		- NEIGH  = { get , properties , geoidModelPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { geoidModelPtr , if , }

3292 :	"if"
		- NEIGH  = { geoidModelPtr , if , }
		- PARENT = { }
		- CHILD  = { if , * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PRED   = { get , properties , geoidModelPtr , }
		- SUCC   = { crs , return , }

3292 :	"geoidModelPtr"
		- NEIGH  = { geoidModelPtr , if , }
		- PARENT = { }
		- CHILD  = { if , * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PRED   = { get , properties , geoidModelPtr , }
		- SUCC   = { crs , return , }

3293 :	"transf"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

3293 :	"util"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

3293 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

3293 :	"<"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

3293 :	"operation"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

3293 :	"Transformation"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

3293 :	">"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

3294 :	"*"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

3294 :	"geoidModelPtr"
		- NEIGH  = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , if , }

3295 :	"if"
		- NEIGH  = { transf , if , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PRED   = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

3295 :	"transf"
		- NEIGH  = { transf , if , }
		- PARENT = { geoidModelPtr , if , }
		- CHILD  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PRED   = { * , Transformation , geoidModelPtr , operation , nn_dynamic_pointer_cast , util , < , > , transf , }
		- SUCC   = { }

3296 :	"crs"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3296 :	"d"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3296 :	"geoidModel"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3296 :	"emplace_back"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3296 :	"NN_NO_CHECK"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3296 :	"transf"
		- NEIGH  = { transf , geoidModel , NN_NO_CHECK , emplace_back , d , crs , }
		- PARENT = { transf , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3299 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModelPtr , if , }
		- SUCC   = { }

3299 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geoidModelPtr , if , }
		- SUCC   = { }

3305 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3305 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3306 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3307 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3307 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3307 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3307 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3308 :	"otherVertCRS"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

3308 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

3308 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

3308 :	"VerticalCRS"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

3308 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

3308 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

3308 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }

3310 :	"return"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

3310 :	"otherVertCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

3310 :	"!="
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

3310 :	"&&"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

3311 :	"SingleCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

3311 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

3311 :	"other"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

3311 :	"criterion"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

3311 :	"dbContext"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherVertCRS , && , SingleCRS , != , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , VerticalCRS , < , otherVertCRS , }
		- SUCC   = { }

3342 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3342 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3342 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3342 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3342 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3342 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3342 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3342 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3343 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3343 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3343 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3343 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3343 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3343 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3344 :	"std"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3344 :	"pair"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3344 :	"<"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3344 :	"VerticalCRSNNPtr"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3344 :	">"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3344 :	"Pair"
		- NEIGH  = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3345 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

3345 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

3345 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

3345 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

3345 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

3345 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , > , Pair , pair , VerticalCRSNNPtr , std , }
		- SUCC   = { nameStr , thisName , & , }

3347 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

3347 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

3347 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { authorityFactory , if , }

3349 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , sort , res , hasCodeCompatibleOfAuthorityFactory , thisName , empty , this , io , || , insignificantName , a , databaseContext , if , dbContext , ci_equal , authorityFactory , & , >= , Pair , DatabaseContextNNPtr , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

3349 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , b , sort , res , hasCodeCompatibleOfAuthorityFactory , thisName , empty , this , io , || , insignificantName , a , databaseContext , if , dbContext , ci_equal , authorityFactory , & , >= , Pair , DatabaseContextNNPtr , }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { res , return , }

3350 :	"io"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

3350 :	"DatabaseContextNNPtr"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

3350 :	"&"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

3350 :	"dbContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

3351 :	"authorityFactory"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

3351 :	"databaseContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

3353 :	"insignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3353 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3353 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3353 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3354 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3354 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3354 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3355 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3355 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

3356 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , insignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

3356 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , insignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

3356 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , insignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

3356 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { ci_equal , || , empty , thisName , insignificantName , }
		- SUCC   = { b , a , & , thisName , Pair , sort , res , }

3359 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3359 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3359 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3359 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

3360 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , match , createVerticalCRS , Criterion , * , dbContext , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

3360 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , match , createVerticalCRS , Criterion , * , dbContext , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

3360 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , match , createVerticalCRS , Criterion , * , dbContext , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

3360 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , res , catch , emplace_back , exception , util , get , IComparable , id , code , match , createVerticalCRS , Criterion , * , dbContext , AuthorityFactory , EQUIVALENT , create , std , codeSpace , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

3362 :	"crs"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3362 :	"io"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3362 :	"AuthorityFactory"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3362 :	"create"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3363 :	"dbContext"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3363 :	"*"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3363 :	"id"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3363 :	"codeSpace"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3364 :	"createVerticalCRS"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3364 :	"id"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3364 :	"code"
		- NEIGH  = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }

3365 :	"match"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3365 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3366 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3366 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3366 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3366 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3366 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3366 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3367 :	"dbContext"
		- NEIGH  = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , createVerticalCRS , id , * , dbContext , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

3368 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

3368 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

3368 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

3368 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

3369 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

3369 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

3370 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3370 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3370 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3370 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

3374 :	"if"
		- NEIGH  = { ! , insignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3374 :	"!"
		- NEIGH  = { ! , insignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3374 :	"insignificantName"
		- NEIGH  = { ! , insignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

3375 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3375 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3375 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3375 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3375 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3375 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , == , authorityFactory , VERTICAL_CRS , AuthorityFactory , for , approximateMatch , ObjectType , createObjectsFromName , io , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

3376 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3376 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3376 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

3377 :	"objects"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3377 :	"authorityFactory"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3377 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3378 :	"thisName"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3378 :	"io"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3378 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3378 :	"ObjectType"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3378 :	"VERTICAL_CRS"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3379 :	"approximateMatch"
		- NEIGH  = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

3380 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , dbContext , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3380 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , dbContext , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3380 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , dbContext , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3380 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { EQUIVALENT , Criterion , IComparable , get , dbContext , if , NN_NO_CHECK , > , assert , util , < , crsNN , obj , VerticalCRS , nn_dynamic_pointer_cast , _isEquivalentTo , crs , }
		- PRED   = { approximateMatch , VERTICAL_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

3381 :	"crs"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3381 :	"util"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3381 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3381 :	"<"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3381 :	"VerticalCRS"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3381 :	">"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3381 :	"obj"
		- NEIGH  = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

3382 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

3382 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

3383 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3383 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3383 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }

3384 :	"if"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

3384 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

3385 :	"crs"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

3385 :	"get"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

3385 :	"util"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

3385 :	"IComparable"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

3385 :	"Criterion"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

3385 :	"EQUIVALENT"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

3386 :	"dbContext"
		- NEIGH  = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { }

3387 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3387 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3387 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3387 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3387 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3388 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3388 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

3389 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3389 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3389 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

3390 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3390 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

3392 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3392 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3392 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

3394 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3394 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3394 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { dbContext , EQUIVALENT , IComparable , Criterion , util , get , crs , _isEquivalentTo , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3397 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3397 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3397 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3397 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

3398 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3404 :	"res"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3404 :	"sort"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3404 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3404 :	"thisName"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3404 :	"Pair"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3404 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3404 :	"a"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3404 :	"Pair"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3404 :	"&"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3404 :	"b"
		- NEIGH  = { b , a , & , thisName , Pair , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { >= , size , res , if , }

3406 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3406 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3406 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3406 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3406 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3406 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

3407 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3409 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3409 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3409 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3409 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3409 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3409 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

3410 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3414 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3414 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3414 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3414 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3414 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

3415 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3415 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3415 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3415 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3415 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

3416 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3416 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3416 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3416 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3416 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3416 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3416 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3416 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

3417 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3419 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3419 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3419 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3419 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3419 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3419 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3419 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3419 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

3420 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3424 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3424 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3424 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3424 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

3428 :	"if"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

3428 :	"res"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

3428 :	"size"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

3428 :	">="
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { b , a , & , thisName , Pair , sort , res , }
		- SUCC   = { }

3429 :	"highestConfidence"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3429 :	"res"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3429 :	"front"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3429 :	"second"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

3430 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3430 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3430 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3430 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3430 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3430 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

3431 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3431 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3431 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3431 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

3432 :	"if"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3432 :	"pair"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3432 :	"second"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3432 :	"=="
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3432 :	"highestConfidence"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

3433 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3433 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3433 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3435 :	"break"
		- NEIGH  = { break , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3438 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

3438 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

3442 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

3442 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

3449 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3449 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3449 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3449 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3449 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3449 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3449 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3449 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3450 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3450 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3450 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3450 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3450 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3450 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3451 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3451 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3451 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3451 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3451 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3451 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

3452 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3452 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3452 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3452 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3452 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3452 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

3453 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

3453 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

3453 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

3454 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3454 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3454 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3454 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

3455 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3455 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3455 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3455 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3455 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3455 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3457 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

3457 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

3465 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3465 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3466 :	"SingleCRSNNPtr"
		- NEIGH  = { baseCRS_ , SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion_ , ConversionNNPtr , operation , }

3466 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversion_ , ConversionNNPtr , operation , }

3467 :	"operation"
		- NEIGH  = { derivingConversion_ , ConversionNNPtr , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , SingleCRSNNPtr , }
		- SUCC   = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }

3467 :	"ConversionNNPtr"
		- NEIGH  = { derivingConversion_ , ConversionNNPtr , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , SingleCRSNNPtr , }
		- SUCC   = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }

3467 :	"derivingConversion_"
		- NEIGH  = { derivingConversion_ , ConversionNNPtr , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , SingleCRSNNPtr , }
		- SUCC   = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }

3469 :	"Private"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3469 :	"SingleCRSNNPtr"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3469 :	"&"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3469 :	"baseCRSIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3470 :	"operation"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3470 :	"ConversionNNPtr"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3470 :	"&"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3470 :	"derivingConversionIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3471 :	"baseCRS_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3471 :	"baseCRSIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3471 :	"derivingConversion_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3471 :	"derivingConversionIn"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3475 :	"Private"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3475 :	"Private"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3475 :	"&"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3475 :	"other"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3476 :	"baseCRS_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3476 :	"other"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3476 :	"baseCRS_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3477 :	"derivingConversion_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3477 :	"other"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3477 :	"derivingConversion_"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3477 :	"shallowClone"
		- NEIGH  = { other , derivingConversion_ , baseCRS_ , operation , ConversionNNPtr , & , SingleCRSNNPtr , shallowClone , derivingConversionIn , baseCRSIn , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversion_ , ConversionNNPtr , operation , }
		- SUCC   = { }

3490 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3490 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3490 :	"SingleCRSNNPtr"
		- NEIGH  = { SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3490 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3490 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3491 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3491 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3491 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3491 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3492 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3492 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3492 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3494 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3499 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3499 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3499 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3499 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3499 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3499 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3501 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3501 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3501 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3501 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3501 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3501 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3501 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3501 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3506 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3506 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3506 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3506 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3506 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3509 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3509 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3511 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3517 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3517 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3526 :	"SingleCRSNNPtr"
		- NEIGH  = { SingleCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3526 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3526 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3526 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3526 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3527 :	"return"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3527 :	"d"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3527 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3536 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3536 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3536 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3536 :	"derivingConversion"
		- NEIGH  = { derivingConversion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3537 :	"return"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3537 :	"d"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3537 :	"derivingConversion_"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3537 :	"shallowClone"
		- NEIGH  = { shallowClone , derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3543 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3543 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3543 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3544 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3544 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3544 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3545 :	"return"
		- NEIGH  = { derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3545 :	"d"
		- NEIGH  = { derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3545 :	"derivingConversion_"
		- NEIGH  = { derivingConversion_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3551 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3551 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3552 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3552 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3552 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3552 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3552 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3552 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3552 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3552 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3553 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3553 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3553 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3553 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3554 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3554 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3554 :	"<"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3554 :	"DerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3554 :	"*"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3554 :	">"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3554 :	"other"
		- NEIGH  = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

3555 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- SUCC   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }

3555 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- SUCC   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }

3555 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedCRS , < , other , otherDerivedCRS , }
		- SUCC   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }

3556 :	"if"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3556 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3556 :	"=="
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3556 :	"||"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3557 :	"!"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3557 :	"SingleCRS"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3557 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3557 :	"other"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3557 :	"standardCriterion"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3557 :	"dbContext"
		- NEIGH  = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }

3558 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3560 :	"return"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3560 :	"d"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3560 :	"baseCRS_"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3560 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3560 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3560 :	"d"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3560 :	"baseCRS_"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3560 :	"get"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3561 :	"criterion"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3561 :	"dbContext"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3561 :	"&&"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3562 :	"d"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3562 :	"derivingConversion_"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3562 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3563 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3563 :	"d"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3563 :	"derivingConversion_"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3563 :	"get"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3563 :	"standardCriterion"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3564 :	"dbContext"
		- NEIGH  = { dbContext , get , derivingConversion_ , otherDerivedCRS , && , _isEquivalentTo , criterion , return , baseCRS_ , standardCriterion , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , baseIsEquivalentTo , SingleCRS , standardCriterion , if , ! , || , == , other , otherDerivedCRS , }
		- SUCC   = { }

3569 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3569 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3570 :	"derivingConversionRef"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3570 :	"setWeakSourceTargetCRS"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3571 :	"baseCRS"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3571 :	"as_nullable"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3572 :	"std"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3572 :	"static_pointer_cast"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3572 :	"<"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3572 :	"CRS"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3572 :	">"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3572 :	"shared_from_this"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3572 :	"as_nullable"
		- NEIGH  = { shared_from_this , CRS , < , static_pointer_cast , derivingConversionRef , std , as_nullable , setWeakSourceTargetCRS , > , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3577 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3577 :	"baseExportToWKT"
		- NEIGH  = { baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3577 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3577 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3577 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3577 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3578 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3578 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3578 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3578 :	"keyword"
		- NEIGH  = { keyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3579 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3579 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3579 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3579 :	"baseKeyword"
		- NEIGH  = { baseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3580 :	"formatter"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3580 :	"startNode"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3580 :	"keyword"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3580 :	"!"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3580 :	"identifiers"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3580 :	"empty"
		- NEIGH  = { empty , startNode , ! , keyword , identifiers , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3581 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , startNode , ! , keyword , identifiers , formatter , }
		- SUCC   = { baseCRS_ , d , l_baseCRS , & , }

3581 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , startNode , ! , keyword , identifiers , formatter , }
		- SUCC   = { baseCRS_ , d , l_baseCRS , & , }

3581 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , startNode , ! , keyword , identifiers , formatter , }
		- SUCC   = { baseCRS_ , d , l_baseCRS , & , }

3583 :	"&"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

3583 :	"l_baseCRS"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

3583 :	"d"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

3583 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }

3584 :	"formatter"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3584 :	"startNode"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3584 :	"baseKeyword"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3584 :	"formatter"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3584 :	"use2019Keywords"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3584 :	"&&"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3585 :	"!"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3585 :	"l_baseCRS"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3585 :	"identifiers"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3585 :	"empty"
		- NEIGH  = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , d , l_baseCRS , & , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3586 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3586 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3586 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3586 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , formatter , use2019Keywords , && , empty , l_baseCRS , baseKeyword , ! , startNode , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3587 :	"l_baseCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3587 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3587 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3588 :	"if"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3588 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3588 :	"use2019Keywords"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3588 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3589 :	"!"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3589 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3589 :	"idOnTopLevelOnly"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3589 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3589 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3589 :	"topLevelHasId"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3590 :	"l_baseCRS"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3590 :	"formatID"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3590 :	"formatter"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3592 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3592 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3594 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3594 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3595 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3595 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3595 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

3596 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

3596 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

3598 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3598 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3598 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3599 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

3599 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

3599 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

3600 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

3600 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

3606 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3606 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3607 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3607 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3607 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3607 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3609 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

3609 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

3609 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }

3610 :	"objectContext"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3611 :	"formatter"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3611 :	"MakeObjectContext"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3611 :	"className"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3611 :	"!"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3611 :	"identifiers"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3611 :	"empty"
		- NEIGH  = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3613 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3613 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , ! , className , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3614 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3614 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3615 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3615 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3615 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3616 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3616 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3618 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3618 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3618 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3621 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3621 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3622 :	"baseCRS"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

3622 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

3622 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

3624 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3624 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3625 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3625 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3626 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3626 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3626 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3628 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3628 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3629 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3629 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3630 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3630 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3630 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3632 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3632 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3632 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3639 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3639 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3640 :	"GeodeticCRSNNPtr"
		- NEIGH  = { baseCRS_ , GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs_ , CartesianCSNNPtr , cs , }

3640 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { cs_ , CartesianCSNNPtr , cs , }

3641 :	"cs"
		- NEIGH  = { cs_ , CartesianCSNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , GeodeticCRSNNPtr , }
		- SUCC   = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }

3641 :	"CartesianCSNNPtr"
		- NEIGH  = { cs_ , CartesianCSNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , GeodeticCRSNNPtr , }
		- SUCC   = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }

3641 :	"cs_"
		- NEIGH  = { cs_ , CartesianCSNNPtr , cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , GeodeticCRSNNPtr , }
		- SUCC   = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }

3642 :	"Private"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3642 :	"GeodeticCRSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3642 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3642 :	"baseCRSIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3642 :	"cs"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3642 :	"CartesianCSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3642 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3642 :	"csIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3643 :	"baseCRS_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3643 :	"baseCRSIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3643 :	"cs_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3643 :	"csIn"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3645 :	"GeodeticCRSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3645 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3645 :	"baseCRS"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3645 :	"return"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3645 :	"baseCRS_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3647 :	"cs"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3647 :	"CartesianCSNNPtr"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3647 :	"&"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3647 :	"coordinateSystem"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3647 :	"return"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3647 :	"cs_"
		- NEIGH  = { return , baseCRS_ , csIn , coordinateSystem , GeodeticCRSNNPtr , CartesianCSNNPtr , cs , baseCRS , cs_ , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { cs_ , CartesianCSNNPtr , cs , }
		- SUCC   = { }

3653 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3653 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3654 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3654 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3654 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3655 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3656 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3657 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3657 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3657 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3657 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3657 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3657 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3658 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3658 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3658 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3658 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3659 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3659 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3659 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3659 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3659 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3659 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3659 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3659 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3663 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3663 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3663 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3663 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3663 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3664 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3664 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3664 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3664 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3665 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3665 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3665 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3665 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3665 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3665 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3665 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3665 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3666 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3666 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3671 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3671 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3676 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3676 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3676 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3677 :	"crs"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3677 :	"ProjectedCRS"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3677 :	"nn_make_shared"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3677 :	"<"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3677 :	"ProjectedCRS"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3677 :	">"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3677 :	"*"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3677 :	"this"
		- NEIGH  = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

3678 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3678 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3678 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

3679 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

3679 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

3680 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

3680 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

3690 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3690 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3690 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3690 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3690 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3691 :	"return"
		- NEIGH  = { d , baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3691 :	"d"
		- NEIGH  = { d , baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3691 :	"baseCRS"
		- NEIGH  = { d , baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3700 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3700 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3700 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3700 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3700 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3700 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3701 :	"return"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3701 :	"d"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3701 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3707 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3707 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3707 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3707 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3707 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3707 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3708 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3708 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3708 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3708 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3708 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3708 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3708 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3708 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , l_identifiers , & , }

3710 :	"&"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

3710 :	"l_identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

3710 :	"identifiers"
		- NEIGH  = { identifiers , l_identifiers , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { databaseContext , formatter , dbContext , & , }

3713 :	"&"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

3713 :	"dbContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

3713 :	"formatter"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

3713 :	"databaseContext"
		- NEIGH  = { databaseContext , formatter , dbContext , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , l_identifiers , & , }
		- SUCC   = { nameStr , l_name , }

3715 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3715 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { databaseContext , formatter , dbContext , & , }
		- SUCC   = { d , coordinateSystem , l_coordinateSystem , & , }

3716 :	"&"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3716 :	"l_coordinateSystem"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3716 :	"d"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3716 :	"coordinateSystem"
		- NEIGH  = { d , coordinateSystem , l_coordinateSystem , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { l_coordinateSystem , axisList , & , }

3717 :	"&"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3717 :	"axisList"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3717 :	"l_coordinateSystem"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3717 :	"axisList"
		- NEIGH  = { l_coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , l_coordinateSystem , & , }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }

3718 :	"if"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3718 :	"axisList"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3718 :	"size"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3718 :	"=="
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3718 :	"&&"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3718 :	"!"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3718 :	"isWKT2"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3718 :	"&&"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3718 :	"formatter"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3718 :	"use2019Keywords"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , originalCompoundCRS_ , originalCompoundCRS , & , allowNonConformantWKT1Export_ , getPrivate , CRS , && , isAllowedEllipsoidalHeightAsVerticalCRS , useESRIDialect , string , formatter , ! , if , dbContext , projCRS2D , std , demoteTo2D , }
		- PRED   = { l_coordinateSystem , axisList , & , }
		- SUCC   = { string , l_alias , std , }

3719 :	"projCRS2D"
		- NEIGH  = { dbContext , string , std , demoteTo2D , projCRS2D , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

3719 :	"demoteTo2D"
		- NEIGH  = { dbContext , string , std , demoteTo2D , projCRS2D , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

3719 :	"std"
		- NEIGH  = { dbContext , string , std , demoteTo2D , projCRS2D , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

3719 :	"string"
		- NEIGH  = { dbContext , string , std , demoteTo2D , projCRS2D , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

3719 :	"dbContext"
		- NEIGH  = { dbContext , string , std , demoteTo2D , projCRS2D , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , if , }

3720 :	"if"
		- NEIGH  = { dbContext , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { == , EPSG , size , metadata , if , projCRS2D , dbContext , NN_NO_CHECK , Identifier , create , AuthorityFactory , identify , io , res , }
		- PRED   = { dbContext , string , std , demoteTo2D , projCRS2D , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

3720 :	"dbContext"
		- NEIGH  = { dbContext , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { == , EPSG , size , metadata , if , projCRS2D , dbContext , NN_NO_CHECK , Identifier , create , AuthorityFactory , identify , io , res , }
		- PRED   = { dbContext , string , std , demoteTo2D , projCRS2D , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

3721 :	"res"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3721 :	"projCRS2D"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3721 :	"identify"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3721 :	"io"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3721 :	"AuthorityFactory"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3721 :	"create"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3722 :	"NN_NO_CHECK"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3722 :	"dbContext"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3722 :	"metadata"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3722 :	"Identifier"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3722 :	"EPSG"
		- NEIGH  = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- PARENT = { dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3723 :	"if"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { second , if , res , == , front , & , }
		- PRED   = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- SUCC   = { }

3723 :	"res"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { second , if , res , == , front , & , }
		- PRED   = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- SUCC   = { }

3723 :	"size"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { second , if , res , == , front , & , }
		- PRED   = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- SUCC   = { }

3723 :	"=="
		- NEIGH  = { == , size , res , if , }
		- PARENT = { dbContext , if , }
		- CHILD  = { second , if , res , == , front , & , }
		- PRED   = { EPSG , metadata , dbContext , NN_NO_CHECK , Identifier , create , projCRS2D , AuthorityFactory , identify , io , res , }
		- SUCC   = { }

3724 :	"&"
		- NEIGH  = { res , front , & , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , second , front , if , }

3724 :	"front"
		- NEIGH  = { res , front , & , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , second , front , if , }

3724 :	"res"
		- NEIGH  = { res , front , & , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , second , front , if , }

3724 :	"front"
		- NEIGH  = { res , front , & , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , second , front , if , }

3725 :	"if"
		- NEIGH  = { == , second , front , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { first , front , projCRS2D , }
		- PRED   = { res , front , & , }
		- SUCC   = { }

3725 :	"front"
		- NEIGH  = { == , second , front , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { first , front , projCRS2D , }
		- PRED   = { res , front , & , }
		- SUCC   = { }

3725 :	"second"
		- NEIGH  = { == , second , front , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { first , front , projCRS2D , }
		- PRED   = { res , front , & , }
		- SUCC   = { }

3725 :	"=="
		- NEIGH  = { == , second , front , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { first , front , projCRS2D , }
		- PRED   = { res , front , & , }
		- SUCC   = { }

3726 :	"projCRS2D"
		- NEIGH  = { first , front , projCRS2D , }
		- PARENT = { == , second , front , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3726 :	"front"
		- NEIGH  = { first , front , projCRS2D , }
		- PARENT = { == , second , front , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3726 :	"first"
		- NEIGH  = { first , front , projCRS2D , }
		- PARENT = { == , second , front , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3731 :	"if"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PRED   = { dbContext , if , }
		- SUCC   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }

3731 :	"formatter"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PRED   = { dbContext , if , }
		- SUCC   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }

3731 :	"useESRIDialect"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PRED   = { dbContext , if , }
		- SUCC   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }

3731 :	"&&"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PRED   = { dbContext , if , }
		- SUCC   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }

3731 :	"dbContext"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PRED   = { dbContext , if , }
		- SUCC   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }

3735 :	"if"
		- NEIGH  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3735 :	"exportAsESRIWktCompoundCRSWithEllipsoidalHeight"
		- NEIGH  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3736 :	"this"
		- NEIGH  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3736 :	"baseCRS"
		- NEIGH  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3736 :	"as_nullable"
		- NEIGH  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3736 :	"get"
		- NEIGH  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3736 :	"formatter"
		- NEIGH  = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3737 :	"return"
		- NEIGH  = { return , }
		- PARENT = { formatter , get , baseCRS , this , exportAsESRIWktCompoundCRSWithEllipsoidalHeight , as_nullable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3741 :	"if"
		- NEIGH  = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { demoteTo2D , _exportToWKT , dbContext , projCRS2D , l_name , endNode , nameStr , WKTConstants , baseCRS , return , io , addQuotedString , string , formatter , COMPD_CS , std , + , startNode , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

3741 :	"!"
		- NEIGH  = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { demoteTo2D , _exportToWKT , dbContext , projCRS2D , l_name , endNode , nameStr , WKTConstants , baseCRS , return , io , addQuotedString , string , formatter , COMPD_CS , std , + , startNode , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

3741 :	"formatter"
		- NEIGH  = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { demoteTo2D , _exportToWKT , dbContext , projCRS2D , l_name , endNode , nameStr , WKTConstants , baseCRS , return , io , addQuotedString , string , formatter , COMPD_CS , std , + , startNode , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

3741 :	"useESRIDialect"
		- NEIGH  = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { demoteTo2D , _exportToWKT , dbContext , projCRS2D , l_name , endNode , nameStr , WKTConstants , baseCRS , return , io , addQuotedString , string , formatter , COMPD_CS , std , + , startNode , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

3741 :	"&&"
		- NEIGH  = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { demoteTo2D , _exportToWKT , dbContext , projCRS2D , l_name , endNode , nameStr , WKTConstants , baseCRS , return , io , addQuotedString , string , formatter , COMPD_CS , std , + , startNode , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

3742 :	"CRS"
		- NEIGH  = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { demoteTo2D , _exportToWKT , dbContext , projCRS2D , l_name , endNode , nameStr , WKTConstants , baseCRS , return , io , addQuotedString , string , formatter , COMPD_CS , std , + , startNode , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

3742 :	"getPrivate"
		- NEIGH  = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { demoteTo2D , _exportToWKT , dbContext , projCRS2D , l_name , endNode , nameStr , WKTConstants , baseCRS , return , io , addQuotedString , string , formatter , COMPD_CS , std , + , startNode , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

3742 :	"allowNonConformantWKT1Export_"
		- NEIGH  = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { demoteTo2D , _exportToWKT , dbContext , projCRS2D , l_name , endNode , nameStr , WKTConstants , baseCRS , return , io , addQuotedString , string , formatter , COMPD_CS , std , + , startNode , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }

3743 :	"formatter"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }

3743 :	"startNode"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }

3743 :	"io"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }

3743 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }

3743 :	"COMPD_CS"
		- NEIGH  = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }

3744 :	"formatter"
		- NEIGH  = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , projCRS2D , }

3744 :	"addQuotedString"
		- NEIGH  = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , projCRS2D , }

3744 :	"l_name"
		- NEIGH  = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , projCRS2D , }

3744 :	"+"
		- NEIGH  = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , projCRS2D , }

3744 :	"+"
		- NEIGH  = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , projCRS2D , }

3744 :	"baseCRS"
		- NEIGH  = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , projCRS2D , }

3744 :	"nameStr"
		- NEIGH  = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , COMPD_CS , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , projCRS2D , }

3745 :	"projCRS2D"
		- NEIGH  = { formatter , _exportToWKT , projCRS2D , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }

3745 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , projCRS2D , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }

3745 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , projCRS2D , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , + , l_name , nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }

3746 :	"baseCRS"
		- NEIGH  = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , projCRS2D , }
		- SUCC   = { endNode , formatter , }

3747 :	"demoteTo2D"
		- NEIGH  = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , projCRS2D , }
		- SUCC   = { endNode , formatter , }

3747 :	"std"
		- NEIGH  = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , projCRS2D , }
		- SUCC   = { endNode , formatter , }

3747 :	"string"
		- NEIGH  = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , projCRS2D , }
		- SUCC   = { endNode , formatter , }

3747 :	"dbContext"
		- NEIGH  = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , projCRS2D , }
		- SUCC   = { endNode , formatter , }

3748 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , projCRS2D , }
		- SUCC   = { endNode , formatter , }

3748 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , projCRS2D , }
		- SUCC   = { endNode , formatter , }

3749 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }
		- SUCC   = { return , }

3749 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , dbContext , string , std , demoteTo2D , baseCRS , }
		- SUCC   = { return , }

3750 :	"return"
		- NEIGH  = { return , }
		- PARENT = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { }

3753 :	"&"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }

3753 :	"originalCompoundCRS"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }

3753 :	"CRS"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }

3753 :	"getPrivate"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }

3753 :	"originalCompoundCRS_"
		- NEIGH  = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { allowNonConformantWKT1Export_ , CRS , getPrivate , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }

3754 :	"if"
		- NEIGH  = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { return , formatter , _exportToWKT , originalCompoundCRS , }
		- PRED   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- SUCC   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }

3754 :	"!"
		- NEIGH  = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { return , formatter , _exportToWKT , originalCompoundCRS , }
		- PRED   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- SUCC   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }

3754 :	"formatter"
		- NEIGH  = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { return , formatter , _exportToWKT , originalCompoundCRS , }
		- PRED   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- SUCC   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }

3754 :	"useESRIDialect"
		- NEIGH  = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { return , formatter , _exportToWKT , originalCompoundCRS , }
		- PRED   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- SUCC   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }

3754 :	"&&"
		- NEIGH  = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { return , formatter , _exportToWKT , originalCompoundCRS , }
		- PRED   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- SUCC   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }

3754 :	"originalCompoundCRS"
		- NEIGH  = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { return , formatter , _exportToWKT , originalCompoundCRS , }
		- PRED   = { getPrivate , CRS , originalCompoundCRS , originalCompoundCRS_ , & , }
		- SUCC   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }

3755 :	"originalCompoundCRS"
		- NEIGH  = { formatter , _exportToWKT , originalCompoundCRS , }
		- PARENT = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3755 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , originalCompoundCRS , }
		- PARENT = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3755 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , originalCompoundCRS , }
		- PARENT = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3756 :	"return"
		- NEIGH  = { return , }
		- PARENT = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , originalCompoundCRS , }
		- SUCC   = { }

3759 :	"if"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { Throw , FormattingException , io , }

3759 :	"!"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { Throw , FormattingException , io , }

3759 :	"formatter"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { Throw , FormattingException , io , }

3759 :	"useESRIDialect"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { Throw , FormattingException , io , }

3759 :	"&&"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { Throw , FormattingException , io , }

3760 :	"formatter"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { Throw , FormattingException , io , }

3760 :	"isAllowedEllipsoidalHeightAsVerticalCRS"
		- NEIGH  = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PRED   = { originalCompoundCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { Throw , FormattingException , io , }

3761 :	"if"
		- NEIGH  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3761 :	"exportAsWKT1CompoundCRSWithEllipsoidalHeight"
		- NEIGH  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3762 :	"projCRS2D"
		- NEIGH  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3762 :	"axisList"
		- NEIGH  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3762 :	"formatter"
		- NEIGH  = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- PARENT = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

3763 :	"return"
		- NEIGH  = { return , }
		- PARENT = { axisList , projCRS2D , exportAsWKT1CompoundCRSWithEllipsoidalHeight , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3767 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { }

3767 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { }

3767 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- CHILD  = { }
		- PRED   = { isAllowedEllipsoidalHeightAsVerticalCRS , formatter , && , useESRIDialect , ! , if , }
		- SUCC   = { }

3771 :	"std"
		- NEIGH  = { string , l_alias , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

3771 :	"string"
		- NEIGH  = { string , l_alias , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

3771 :	"l_alias"
		- NEIGH  = { string , l_alias , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , == , && , size , axisList , ! , if , }
		- SUCC   = { dbContext , && , useESRIDialect , formatter , if , }

3772 :	"if"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3772 :	"formatter"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3772 :	"useESRIDialect"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3772 :	"&&"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3772 :	"dbContext"
		- NEIGH  = { dbContext , && , useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PRED   = { string , l_alias , std , }
		- SUCC   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }

3773 :	"l_alias"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3773 :	"dbContext"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3773 :	"getAliasFromOfficialName"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3773 :	"l_name"
		- NEIGH  = { l_name , dbContext , getAliasFromOfficialName , l_alias , }
		- PARENT = { dbContext , && , useESRIDialect , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3777 :	"if"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"!"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"isWKT2"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"formatter"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"useESRIDialect"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"!"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"l_identifiers"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"empty"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3777 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3778 :	"*"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3778 :	"l_identifiers"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3778 :	"codeSpace"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3778 :	"=="
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3778 :	"&&"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3778 :	"dbContext"
		- NEIGH  = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- PARENT = { }
		- CHILD  = { l_alias , useESRIDialect , && , isWKT2 , formatter , ! , & , starts_with , dbContext , if , definition , std , catch , l_identifiers , exception , code , empty , getTextDefinition , }
		- PRED   = { dbContext , && , useESRIDialect , formatter , if , }
		- SUCC   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }

3780 :	"definition"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3780 :	"dbContext"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3780 :	"getTextDefinition"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3781 :	"l_identifiers"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3781 :	"code"
		- NEIGH  = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3782 :	"if"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { EQUIVALENT , Criterion , get , > , * , IComparable , util , dynamic_cast , < , _isEquivalentTo , dbContext , if , definition , attachDatabaseContext , WKTParser , io , createFromWKT , crsFromFromDef , }
		- PRED   = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- SUCC   = { & , exception , std , catch , }

3782 :	"starts_with"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { EQUIVALENT , Criterion , get , > , * , IComparable , util , dynamic_cast , < , _isEquivalentTo , dbContext , if , definition , attachDatabaseContext , WKTParser , io , createFromWKT , crsFromFromDef , }
		- PRED   = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- SUCC   = { & , exception , std , catch , }

3782 :	"definition"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { EQUIVALENT , Criterion , get , > , * , IComparable , util , dynamic_cast , < , _isEquivalentTo , dbContext , if , definition , attachDatabaseContext , WKTParser , io , createFromWKT , crsFromFromDef , }
		- PRED   = { l_identifiers , code , getTextDefinition , dbContext , definition , }
		- SUCC   = { & , exception , std , catch , }

3783 :	"crsFromFromDef"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3783 :	"io"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3783 :	"WKTParser"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3784 :	"attachDatabaseContext"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3784 :	"dbContext"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3785 :	"createFromWKT"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3785 :	"definition"
		- NEIGH  = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }

3786 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3786 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3787 :	"dynamic_cast"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3787 :	"<"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3787 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3787 :	"*"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3787 :	">"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3787 :	"crsFromFromDef"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3787 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3788 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3788 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3788 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3788 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { attachDatabaseContext , WKTParser , io , dbContext , definition , createFromWKT , crsFromFromDef , }
		- SUCC   = { }

3789 :	"formatter"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3789 :	"ingestWKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3790 :	"io"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3790 :	"WKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3790 :	"createFrom"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3790 :	"definition"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3791 :	"return"
		- NEIGH  = { return , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , crsFromFromDef , > , IComparable , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- SUCC   = { }

3794 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3794 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3794 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3794 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { }
		- PRED   = { definition , starts_with , if , }
		- SUCC   = { }

3796 :	"if"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3796 :	"!"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3796 :	"isWKT2"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3796 :	"&&"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3796 :	"formatter"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3796 :	"useESRIDialect"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3796 :	"&&"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3796 :	"!"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3796 :	"l_alias"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3796 :	"empty"
		- NEIGH  = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- CHILD  = { & , std , == , size , l_alias , create , PROJECTED_CRS , catch , ObjectType , exception , io , createObjectsFromName , AuthorityFactory , dbContext , if , res , NN_NO_CHECK , }
		- PRED   = { }
		- SUCC   = { }

3798 :	"res"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3799 :	"io"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3799 :	"AuthorityFactory"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3799 :	"create"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3799 :	"NN_NO_CHECK"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3799 :	"dbContext"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3800 :	"createObjectsFromName"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3801 :	"l_alias"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3802 :	"io"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3802 :	"AuthorityFactory"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3802 :	"ObjectType"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3802 :	"PROJECTED_CRS"
		- NEIGH  = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , size , res , if , }

3804 :	"if"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3804 :	"res"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3804 :	"size"
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3804 :	"=="
		- NEIGH  = { == , size , res , if , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { starts_with , if , code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PRED   = { l_alias , PROJECTED_CRS , ObjectType , createObjectsFromName , AuthorityFactory , create , res , io , dbContext , NN_NO_CHECK , }
		- SUCC   = { & , exception , std , catch , }

3805 :	"definition"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3805 :	"dbContext"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3805 :	"getTextDefinition"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3807 :	"res"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3807 :	"front"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3807 :	"identifiers"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3807 :	"code"
		- NEIGH  = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { definition , starts_with , if , }

3808 :	"if"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PRED   = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- SUCC   = { }

3808 :	"starts_with"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PRED   = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- SUCC   = { }

3808 :	"definition"
		- NEIGH  = { definition , starts_with , if , }
		- PARENT = { == , size , res , if , }
		- CHILD  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PRED   = { code , front , res , getTextDefinition , identifiers , dbContext , definition , }
		- SUCC   = { }

3809 :	"if"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3809 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3810 :	"dynamic_cast"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3810 :	"<"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3810 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3810 :	"*"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3810 :	">"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3810 :	"res"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3810 :	"front"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3810 :	"get"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3811 :	"util"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3811 :	"IComparable"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3811 :	"Criterion"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3811 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- PARENT = { definition , starts_with , if , }
		- CHILD  = { return , createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PRED   = { }
		- SUCC   = { }

3812 :	"formatter"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3812 :	"ingestWKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3813 :	"io"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3813 :	"WKTNode"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3813 :	"createFrom"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3813 :	"definition"
		- NEIGH  = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

3814 :	"return"
		- NEIGH  = { return , }
		- PARENT = { EQUIVALENT , Criterion , dynamic_cast , < , util , get , res , > , IComparable , front , _isEquivalentTo , * , if , }
		- CHILD  = { }
		- PRED   = { createFrom , io , definition , WKTNode , ingestWKTNode , formatter , }
		- SUCC   = { }

3818 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3818 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3818 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3818 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { empty , l_alias , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { == , size , res , if , }
		- SUCC   = { }

3822 :	"exportAxis"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3822 :	"&"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3822 :	"l_coordinateSystem"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3822 :	"&"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3822 :	"axisList"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3822 :	"&"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3822 :	"formatter"
		- NEIGH  = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { codeSpace , * , empty , l_identifiers , == , useESRIDialect , ! , formatter , && , isWKT2 , dbContext , if , }
		- SUCC   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3823 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3823 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3823 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }

3824 :	"if"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3824 :	"oldAxisOutputRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3824 :	"=="
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3825 :	"io"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3825 :	"WKTFormatter"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3825 :	"OutputAxisRule"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3825 :	"WKT1_GDAL_EPSG_STYLE"
		- NEIGH  = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- PARENT = { }
		- CHILD  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_coordinateSystem , }

3826 :	"if"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"axisList"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"direction"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"=="
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"cs"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"EAST"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3826 :	"&&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3827 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3827 :	"axisList"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3827 :	"direction"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3827 :	"=="
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3827 :	"&"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3827 :	"cs"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3827 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3827 :	"NORTH"
		- NEIGH  = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- PARENT = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- CHILD  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PRED   = { }
		- SUCC   = { }

3828 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3828 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3828 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3828 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3828 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3828 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { EAST , AxisDirection , && , cs , direction , == , axisList , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3831 :	"l_coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , l_coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3831 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3831 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { OutputAxisRule , WKTFormatter , io , == , WKT1_GDAL_EPSG_STYLE , oldAxisOutputRule , if , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3832 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_coordinateSystem , }
		- SUCC   = { }

3832 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_coordinateSystem , }
		- SUCC   = { }

3832 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_coordinateSystem , }
		- SUCC   = { }

3835 :	"if"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3835 :	"!"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3835 :	"isWKT2"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3835 :	"&&"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3835 :	"!"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3835 :	"formatter"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3835 :	"useESRIDialect"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3835 :	"&&"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3836 :	"starts_with"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3836 :	"nameStr"
		- NEIGH  = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { return , baseExportToWKT , baseCRS , ObjectUsage , exportAxis , derivingConversionRef , addWKTExtensionNode , _exportToWKT , unit , empty , l_identifiers , endNode , PROJECTION , nameStr , WKTConstants , startNode , io , axisList , PROJCS , add , setTOWGS84Parameters , PARAMETER , formatter , ! , addQuotedString , }
		- PRED   = { formatter , axisList , l_coordinateSystem , & , exportAxis , }
		- SUCC   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }

3837 :	"formatter"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3837 :	"startNode"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3837 :	"io"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3837 :	"WKTConstants"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3837 :	"PROJCS"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3837 :	"!"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3837 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3837 :	"empty"
		- NEIGH  = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

3838 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3838 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3838 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , l_identifiers , WKTConstants , io , PROJCS , ! , startNode , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3839 :	"formatter"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , baseCRS , }

3839 :	"setTOWGS84Parameters"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , baseCRS , }

3840 :	"baseCRS"
		- NEIGH  = { formatter , _exportToWKT , baseCRS , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3840 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , baseCRS , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3840 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , baseCRS , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { setTOWGS84Parameters , formatter , }

3841 :	"formatter"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , baseCRS , }
		- SUCC   = { PROJECTION , WKTConstants , io , startNode , formatter , }

3841 :	"setTOWGS84Parameters"
		- NEIGH  = { setTOWGS84Parameters , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , baseCRS , }
		- SUCC   = { PROJECTION , WKTConstants , io , startNode , formatter , }

3843 :	"formatter"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3843 :	"startNode"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3843 :	"io"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3843 :	"WKTConstants"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3843 :	"PROJECTION"
		- NEIGH  = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { setTOWGS84Parameters , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3844 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

3844 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { PROJECTION , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

3845 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3845 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3847 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3847 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3847 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3847 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3847 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3848 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3848 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3849 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3849 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3850 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3850 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3852 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3852 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3852 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3852 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3852 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3853 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3853 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3854 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3854 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3855 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3855 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3857 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3857 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3857 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3857 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3857 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3858 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3858 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3859 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3859 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3860 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3860 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { WKTConstants , io , startNode , PARAMETER , formatter , }

3862 :	"formatter"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3862 :	"startNode"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3862 :	"io"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3862 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3862 :	"PARAMETER"
		- NEIGH  = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { addQuotedString , formatter , }

3863 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3863 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , startNode , PARAMETER , formatter , }
		- SUCC   = { add , formatter , }

3864 :	"formatter"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3864 :	"add"
		- NEIGH  = { add , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3865 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { formatter , _exportToWKT , unit , axisList , }

3865 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { add , formatter , }
		- SUCC   = { formatter , _exportToWKT , unit , axisList , }

3867 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3867 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3867 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3867 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { exportAxis , }

3868 :	"exportAxis"
		- NEIGH  = { exportAxis , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , unit , axisList , }
		- SUCC   = { formatter , addWKTExtensionNode , derivingConversionRef , }

3869 :	"derivingConversionRef"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3869 :	"addWKTExtensionNode"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3869 :	"formatter"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3870 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- SUCC   = { endNode , formatter , }

3870 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- SUCC   = { endNode , formatter , }

3870 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- SUCC   = { endNode , formatter , }

3871 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3871 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3872 :	"return"
		- NEIGH  = { return , }
		- PARENT = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { }

3875 :	"formatter"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3875 :	"startNode"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3875 :	"isWKT2"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3875 :	"io"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3875 :	"WKTConstants"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3875 :	"PROJCRS"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3876 :	"io"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3876 :	"WKTConstants"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3876 :	"PROJCS"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3877 :	"!"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3877 :	"l_identifiers"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3877 :	"empty"
		- NEIGH  = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { starts_with , nameStr , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , if , }

3879 :	"if"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { empty , l_alias , if , }
		- PRED   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3879 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { empty , l_alias , if , }
		- PRED   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3879 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , if , }
		- PARENT = { }
		- CHILD  = { empty , l_alias , if , }
		- PRED   = { empty , l_identifiers , PROJCS , WKTConstants , io , PROJCRS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }

3880 :	"if"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { l_alias , WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { }
		- SUCC   = { }

3880 :	"l_alias"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { l_alias , WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { }
		- SUCC   = { }

3880 :	"empty"
		- NEIGH  = { empty , l_alias , if , }
		- PARENT = { useESRIDialect , formatter , if , }
		- CHILD  = { l_alias , WKTFormatter , morphNameToESRI , io , l_name , }
		- PRED   = { }
		- SUCC   = { }

3881 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3881 :	"io"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3881 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3881 :	"morphNameToESRI"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3881 :	"l_name"
		- NEIGH  = { WKTFormatter , morphNameToESRI , io , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3883 :	"l_name"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3883 :	"l_alias"
		- NEIGH  = { l_alias , l_name , }
		- PARENT = { empty , l_alias , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3886 :	"if"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3886 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3886 :	"isWKT2"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3886 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3886 :	"!"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3886 :	"formatter"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3886 :	"useESRIDialect"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3886 :	"&&"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3886 :	"isDeprecated"
		- NEIGH  = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { += , l_name , }
		- PRED   = { useESRIDialect , formatter , if , }
		- SUCC   = { l_name , addQuotedString , formatter , }

3887 :	"l_name"
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3887 :	"+="
		- NEIGH  = { += , l_name , }
		- PARENT = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3889 :	"formatter"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { baseCRS , d , l_baseCRS , & , }

3889 :	"addQuotedString"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { baseCRS , d , l_baseCRS , & , }

3889 :	"l_name"
		- NEIGH  = { l_name , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isDeprecated , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { baseCRS , d , l_baseCRS , & , }

3891 :	"&"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3891 :	"l_baseCRS"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3891 :	"d"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3891 :	"baseCRS"
		- NEIGH  = { baseCRS , d , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_name , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }

3892 :	"&"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3892 :	"geodeticCRSAxisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3892 :	"l_baseCRS"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3892 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3892 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , d , l_baseCRS , & , }
		- SUCC   = { isWKT2 , if , }

3894 :	"if"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { NO , OutputAxisRule , outputAxis , endNode , topLevelHasId , _exportToWKT , primeMeridian , if , exportDatumOrDatumEnsembleToWkt , oldAxisOutputRule , empty , setOutputAxis , identifiers , WKTFormatter , BASEGEODCRS , nameStr , WKTConstants , startNode , io , addQuotedString , get , l_baseCRS , && , primeMeridianOrParameterUnitOmittedIfSameAsAxis , BASEGEOGCRS , use2019Keywords , > , idOnTopLevelOnly , GeographicCRS , dynamic_cast , < , ! , formatter , * , }
		- PRED   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- SUCC   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }

3894 :	"isWKT2"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { NO , OutputAxisRule , outputAxis , endNode , topLevelHasId , _exportToWKT , primeMeridian , if , exportDatumOrDatumEnsembleToWkt , oldAxisOutputRule , empty , setOutputAxis , identifiers , WKTFormatter , BASEGEODCRS , nameStr , WKTConstants , startNode , io , addQuotedString , get , l_baseCRS , && , primeMeridianOrParameterUnitOmittedIfSameAsAxis , BASEGEOGCRS , use2019Keywords , > , idOnTopLevelOnly , GeographicCRS , dynamic_cast , < , ! , formatter , * , }
		- PRED   = { axisList , coordinateSystem , l_baseCRS , geodeticCRSAxisList , & , }
		- SUCC   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }

3895 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3895 :	"startNode"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3896 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3896 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3896 :	"&&"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3897 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3897 :	"<"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3897 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3897 :	"*"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3897 :	">"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3897 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3897 :	"get"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3898 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3898 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3898 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3899 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3899 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3899 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3900 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3900 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3900 :	"&&"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3900 :	"!"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3900 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3900 :	"identifiers"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3900 :	"empty"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

3901 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3901 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3901 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3901 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

3902 :	"l_baseCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }

3902 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }

3902 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }

3907 :	"if"
		- NEIGH  = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

3907 :	"formatter"
		- NEIGH  = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

3907 :	"primeMeridianOrParameterUnitOmittedIfSameAsAxis"
		- NEIGH  = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

3908 :	"geodeticCRSAxisList"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3908 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3908 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3908 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3910 :	"l_baseCRS"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3910 :	"primeMeridian"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3910 :	"_exportToWKT"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3910 :	"formatter"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { primeMeridianOrParameterUnitOmittedIfSameAsAxis , formatter , if , }
		- SUCC   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }

3911 :	"if"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3911 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3911 :	"use2019Keywords"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3911 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3912 :	"!"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3912 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3912 :	"idOnTopLevelOnly"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3912 :	"&&"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3912 :	"formatter"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3912 :	"topLevelHasId"
		- NEIGH  = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { formatter , formatID , l_baseCRS , }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

3913 :	"l_baseCRS"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3913 :	"formatID"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3913 :	"formatter"
		- NEIGH  = { formatter , formatID , l_baseCRS , }
		- PARENT = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3915 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { }

3915 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { topLevelHasId , if , ! , idOnTopLevelOnly , && , use2019Keywords , formatter , }
		- SUCC   = { }

3917 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

3917 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

3917 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

3918 :	"formatter"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3918 :	"setOutputAxis"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3918 :	"io"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3918 :	"WKTFormatter"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3918 :	"OutputAxisRule"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3918 :	"NO"
		- NEIGH  = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , l_baseCRS , }

3919 :	"l_baseCRS"
		- NEIGH  = { formatter , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3919 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3919 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_baseCRS , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { NO , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

3920 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_baseCRS , }
		- SUCC   = { }

3920 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_baseCRS , }
		- SUCC   = { }

3920 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_baseCRS , }
		- SUCC   = { }

3923 :	"formatter"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3923 :	"pushAxisLinearUnit"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3924 :	"common"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3924 :	"UnitOfMeasure"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3924 :	"create"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3924 :	"axisList"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3924 :	"unit"
		- NEIGH  = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , if , }
		- SUCC   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }

3926 :	"formatter"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3926 :	"pushAxisAngularUnit"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3927 :	"common"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3927 :	"UnitOfMeasure"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3927 :	"create"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3927 :	"geodeticCRSAxisList"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3927 :	"unit"
		- NEIGH  = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , axisList , create , pushAxisLinearUnit , UnitOfMeasure , common , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

3929 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { popAxisAngularUnit , formatter , }

3929 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { popAxisAngularUnit , formatter , }

3929 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { unit , create , UnitOfMeasure , geodeticCRSAxisList , common , pushAxisAngularUnit , formatter , }
		- SUCC   = { popAxisAngularUnit , formatter , }

3931 :	"formatter"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { popAxisLinearUnit , formatter , }

3931 :	"popAxisAngularUnit"
		- NEIGH  = { popAxisAngularUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { popAxisLinearUnit , formatter , }

3933 :	"formatter"
		- NEIGH  = { popAxisLinearUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

3933 :	"popAxisLinearUnit"
		- NEIGH  = { popAxisLinearUnit , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { popAxisAngularUnit , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

3935 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { popAxisLinearUnit , formatter , }
		- SUCC   = { exportAxis , }

3935 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { popAxisLinearUnit , formatter , }
		- SUCC   = { exportAxis , }

3935 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , }
		- PRED   = { popAxisLinearUnit , formatter , }
		- SUCC   = { exportAxis , }

3936 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3936 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3936 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3936 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3939 :	"exportAxis"
		- NEIGH  = { exportAxis , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }

3941 :	"if"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3941 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3941 :	"isWKT2"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3941 :	"&&"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3941 :	"!"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3941 :	"formatter"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3941 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , ! , if , CRS , extensionProj4_ , getPrivate , extensionProj4 , & , }
		- PRED   = { exportAxis , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

3942 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3942 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3942 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3942 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3942 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3943 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3943 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3943 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3943 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { derivingConversionRef , endNode , addWKTExtensionNode , extensionProj4 , WKTConstants , io , EXTENSION , startNode , addQuotedString , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { }

3944 :	"formatter"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3944 :	"startNode"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3944 :	"io"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3944 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3944 :	"EXTENSION"
		- NEIGH  = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addQuotedString , formatter , }

3945 :	"formatter"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

3945 :	"addQuotedString"
		- NEIGH  = { addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { WKTConstants , io , EXTENSION , startNode , formatter , }
		- SUCC   = { extensionProj4 , addQuotedString , formatter , }

3946 :	"formatter"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3946 :	"addQuotedString"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3946 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , addQuotedString , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addQuotedString , formatter , }
		- SUCC   = { endNode , formatter , }

3947 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

3947 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , addQuotedString , formatter , }
		- SUCC   = { }

3949 :	"derivingConversionRef"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3949 :	"addWKTExtensionNode"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3949 :	"formatter"
		- NEIGH  = { formatter , addWKTExtensionNode , derivingConversionRef , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3953 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { endNode , formatter , }

3953 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { endNode , formatter , }

3953 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- SUCC   = { endNode , formatter , }

3954 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3954 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { return , }

3955 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { }

3962 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3962 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3963 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3965 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3965 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3965 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

3966 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3967 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3967 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3967 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3967 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3967 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

3969 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3969 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

3970 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3970 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

3971 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3971 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3971 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

3972 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3972 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3974 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3974 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3974 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3977 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setAllowIDInImmediateChild , formatter , }

3977 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setAllowIDInImmediateChild , formatter , }

3978 :	"formatter"
		- NEIGH  = { setAllowIDInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3978 :	"setAllowIDInImmediateChild"
		- NEIGH  = { setAllowIDInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3979 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAllowIDInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3979 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAllowIDInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , }

3980 :	"baseCRS"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3980 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3980 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3982 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3982 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3983 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3983 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , derivingConversionRef , }

3984 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3984 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3984 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

3986 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3986 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , derivingConversionRef , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

3987 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3987 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

3988 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3988 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3988 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

3990 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3990 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3990 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

3996 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3996 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3997 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3997 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3997 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3997 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

3999 :	"&"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3999 :	"extensionProj4"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3999 :	"CRS"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3999 :	"getPrivate"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

3999 :	"extensionProj4_"
		- NEIGH  = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , extensionProj4 , ! , if , }

4000 :	"if"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

4000 :	"!"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

4000 :	"extensionProj4"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

4000 :	"empty"
		- NEIGH  = { empty , extensionProj4 , ! , if , }
		- PARENT = { }
		- CHILD  = { extensionProj4 , ingestPROJString , return , addNoDefs , replaceAll , formatter , }
		- PRED   = { extensionProj4_ , getPrivate , CRS , extensionProj4 , & , }
		- SUCC   = { formatter , _exportToPROJString , derivingConversionRef , }

4001 :	"formatter"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

4001 :	"ingestPROJString"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

4002 :	"replaceAll"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

4002 :	"extensionProj4"
		- NEIGH  = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addNoDefs , formatter , }

4003 :	"formatter"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

4003 :	"addNoDefs"
		- NEIGH  = { addNoDefs , formatter , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { extensionProj4 , ingestPROJString , replaceAll , formatter , }
		- SUCC   = { return , }

4004 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , extensionProj4 , ! , if , }
		- CHILD  = { }
		- PRED   = { addNoDefs , formatter , }
		- SUCC   = { }

4007 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToPROJString , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { }

4007 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { }

4007 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , extensionProj4 , ! , if , }
		- SUCC   = { }

4026 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4027 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4027 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4027 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4027 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4027 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4027 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4028 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4028 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4028 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4029 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4029 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4029 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4029 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4030 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4030 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4030 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4030 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4031 :	"crs"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4031 :	"ProjectedCRS"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4031 :	"nn_make_shared"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4031 :	"<"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4031 :	"ProjectedCRS"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4031 :	">"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4032 :	"baseCRSIn"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4032 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4032 :	"csIn"
		- NEIGH  = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4033 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

4033 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

4033 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , ProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

4034 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4034 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4034 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

4035 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

4035 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }

4036 :	"properties"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

4036 :	"getStringValue"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

4037 :	"crs"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

4037 :	"CRS"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

4037 :	"getPrivate"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

4037 :	"extensionProj4_"
		- NEIGH  = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { properties , setImplicitCS , getPrivate , CRS , crs , }

4038 :	"crs"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

4038 :	"CRS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

4038 :	"getPrivate"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

4038 :	"setImplicitCS"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

4038 :	"properties"
		- NEIGH  = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , extensionProj4_ , CRS , crs , getStringValue , properties , }
		- SUCC   = { crs , return , }

4039 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

4039 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setImplicitCS , getPrivate , CRS , crs , }
		- SUCC   = { }

4044 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4044 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4045 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4045 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4045 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4045 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4045 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4045 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4045 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4045 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4046 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4046 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4046 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4046 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"return"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"other"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"!="
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"&&"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"util"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"isOfExactType"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"<"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"ProjectedCRS"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	">"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"*"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"other"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4047 :	"&&"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"DerivedCRS"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"other"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"criterion"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4048 :	"dbContext"
		- NEIGH  = { dbContext , _isEquivalentTo , isOfExactType , DerivedCRS , * , criterion , > , && , ProjectedCRS , util , < , != , other , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4054 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4055 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4055 :	"alterParametersLinearUnit"
		- NEIGH  = { alterParametersLinearUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4055 :	"common"
		- NEIGH  = { common , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4055 :	"UnitOfMeasure"
		- NEIGH  = { UnitOfMeasure , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4055 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4055 :	"unit"
		- NEIGH  = { unit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4056 :	"convertToNewUnit"
		- NEIGH  = { convertToNewUnit , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4057 :	"return"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4057 :	"create"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4058 :	"createPropertyMap"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4058 :	"this"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4058 :	"baseCRS"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4059 :	"derivingConversion"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4059 :	"alterParametersLinearUnit"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4059 :	"unit"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4059 :	"convertToNewUnit"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4060 :	"coordinateSystem"
		- NEIGH  = { convertToNewUnit , unit , alterParametersLinearUnit , derivingConversion , this , create , baseCRS , coordinateSystem , createPropertyMap , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"addUnitConvertAndAxisSwap"
		- NEIGH  = { addUnitConvertAndAxisSwap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4067 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4068 :	"axisSpecFound"
		- NEIGH  = { axisSpecFound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4069 :	"&"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

4069 :	"axisList"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

4069 :	"d"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

4069 :	"coordinateSystem"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

4069 :	"axisList"
		- NEIGH  = { d , coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , unit , & , }

4070 :	"&"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { & , unit , axisList , size , == , zUnit , * , }

4070 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { & , unit , axisList , size , == , zUnit , * , }

4070 :	"axisList"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { & , unit , axisList , size , == , zUnit , * , }

4070 :	"unit"
		- NEIGH  = { axisList , unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { d , coordinateSystem , axisList , & , }
		- SUCC   = { & , unit , axisList , size , == , zUnit , * , }

4071 :	"*"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

4071 :	"zUnit"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

4071 :	"axisList"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

4071 :	"size"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

4071 :	"=="
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

4071 :	"&"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

4071 :	"axisList"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

4071 :	"unit"
		- NEIGH  = { & , unit , axisList , size , == , zUnit , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , unit , & , }
		- SUCC   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }

4072 :	"if"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4072 :	"!"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4072 :	"unit"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4072 :	"_isEquivalentTo"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4072 :	"common"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4072 :	"UnitOfMeasure"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4072 :	"METRE"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4073 :	"util"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4073 :	"IComparable"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4073 :	"Criterion"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4073 :	"EQUIVALENT"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4073 :	"||"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4074 :	"zUnit"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4074 :	"&&"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4075 :	"!"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4075 :	"zUnit"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4075 :	"_isEquivalentTo"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4075 :	"common"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4075 :	"UnitOfMeasure"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4075 :	"METRE"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4076 :	"util"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4076 :	"IComparable"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4076 :	"Criterion"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4076 :	"EQUIVALENT"
		- NEIGH  = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- PARENT = { }
		- CHILD  = { getLegacyCRSToCRSContext , ! , if , exportToPROJString , getCRSExport , unit , conversionToSI , && , formatter , toSI , projUnit , }
		- PRED   = { & , unit , axisList , size , == , zUnit , * , }
		- SUCC   = { getCRSExport , formatter , && , axisSpecFound , ! , if , }

4077 :	"projUnit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , unit , toSI , }

4077 :	"unit"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , unit , toSI , }

4077 :	"exportToPROJString"
		- NEIGH  = { exportToPROJString , unit , projUnit , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , unit , toSI , }

4078 :	"toSI"
		- NEIGH  = { conversionToSI , unit , toSI , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

4078 :	"unit"
		- NEIGH  = { conversionToSI , unit , toSI , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

4078 :	"conversionToSI"
		- NEIGH  = { conversionToSI , unit , toSI , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { }
		- PRED   = { exportToPROJString , unit , projUnit , }
		- SUCC   = { ! , getCRSExport , formatter , if , }

4079 :	"if"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { empty , projUnit , addStep , zUnit , addParam , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

4079 :	"!"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { empty , projUnit , addStep , zUnit , addParam , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

4079 :	"formatter"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { empty , projUnit , addStep , zUnit , addParam , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

4079 :	"getCRSExport"
		- NEIGH  = { ! , getCRSExport , formatter , if , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { empty , projUnit , addStep , zUnit , addParam , if , formatter , }
		- PRED   = { conversionToSI , unit , toSI , }
		- SUCC   = { }

4080 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

4080 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

4081 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { zUnit , if , }

4081 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { zUnit , if , }

4082 :	"if"
		- NEIGH  = { zUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , if , }

4082 :	"zUnit"
		- NEIGH  = { zUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { addParam , formatter , }
		- SUCC   = { empty , projUnit , if , }

4083 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4083 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4085 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { zUnit , if , }
		- SUCC   = { zUnit , if , }

4085 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { zUnit , if , }
		- SUCC   = { zUnit , if , }

4085 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { zUnit , if , }
		- SUCC   = { zUnit , if , }

4086 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4086 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4086 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4088 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4088 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4088 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4090 :	"if"
		- NEIGH  = { zUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { empty , conversionToSI , zToSI , zUnit , if , exportToPROJString , projZUnit , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { }

4090 :	"zUnit"
		- NEIGH  = { zUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { empty , conversionToSI , zToSI , zUnit , if , exportToPROJString , projZUnit , }
		- PRED   = { empty , projUnit , if , }
		- SUCC   = { }

4091 :	"projZUnit"
		- NEIGH  = { zUnit , exportToPROJString , projZUnit , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , zUnit , zToSI , }

4091 :	"zUnit"
		- NEIGH  = { zUnit , exportToPROJString , projZUnit , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , zUnit , zToSI , }

4091 :	"exportToPROJString"
		- NEIGH  = { zUnit , exportToPROJString , projZUnit , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { conversionToSI , zUnit , zToSI , }

4092 :	"zToSI"
		- NEIGH  = { conversionToSI , zUnit , zToSI , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { zUnit , exportToPROJString , projZUnit , }
		- SUCC   = { empty , projZUnit , if , }

4092 :	"zUnit"
		- NEIGH  = { conversionToSI , zUnit , zToSI , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { zUnit , exportToPROJString , projZUnit , }
		- SUCC   = { empty , projZUnit , if , }

4092 :	"conversionToSI"
		- NEIGH  = { conversionToSI , zUnit , zToSI , }
		- PARENT = { zUnit , if , }
		- CHILD  = { }
		- PRED   = { zUnit , exportToPROJString , projZUnit , }
		- SUCC   = { empty , projZUnit , if , }

4093 :	"if"
		- NEIGH  = { empty , projZUnit , if , }
		- PARENT = { zUnit , if , }
		- CHILD  = { projZUnit , addParam , zToSI , formatter , }
		- PRED   = { conversionToSI , zUnit , zToSI , }
		- SUCC   = { }

4093 :	"projZUnit"
		- NEIGH  = { empty , projZUnit , if , }
		- PARENT = { zUnit , if , }
		- CHILD  = { projZUnit , addParam , zToSI , formatter , }
		- PRED   = { conversionToSI , zUnit , zToSI , }
		- SUCC   = { }

4093 :	"empty"
		- NEIGH  = { empty , projZUnit , if , }
		- PARENT = { zUnit , if , }
		- CHILD  = { projZUnit , addParam , zToSI , formatter , }
		- PRED   = { conversionToSI , zUnit , zToSI , }
		- SUCC   = { }

4094 :	"formatter"
		- NEIGH  = { addParam , zToSI , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4094 :	"addParam"
		- NEIGH  = { addParam , zToSI , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4094 :	"zToSI"
		- NEIGH  = { addParam , zToSI , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4096 :	"formatter"
		- NEIGH  = { projZUnit , addParam , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4096 :	"addParam"
		- NEIGH  = { projZUnit , addParam , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4096 :	"projZUnit"
		- NEIGH  = { projZUnit , addParam , formatter , }
		- PARENT = { empty , projZUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4100 :	"if"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4100 :	"projUnit"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4100 :	"empty"
		- NEIGH  = { empty , projUnit , if , }
		- PARENT = { ! , getCRSExport , formatter , if , }
		- CHILD  = { projUnit , toSI , addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4101 :	"formatter"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4101 :	"addParam"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4101 :	"toSI"
		- NEIGH  = { toSI , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4103 :	"formatter"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4103 :	"addParam"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4103 :	"projUnit"
		- NEIGH  = { projUnit , addParam , formatter , }
		- PARENT = { empty , projUnit , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4106 :	"if"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4106 :	"formatter"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4106 :	"getCRSExport"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4106 :	"&&"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4107 :	"!"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4107 :	"formatter"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4107 :	"getLegacyCRSToCRSContext"
		- NEIGH  = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- PARENT = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- CHILD  = { addParam , formatter , }
		- PRED   = { }
		- SUCC   = { }

4108 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4108 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { getLegacyCRSToCRSContext , if , ! , formatter , && , getCRSExport , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4111 :	"if"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

4111 :	"!"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

4111 :	"axisSpecFound"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

4111 :	"&&"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

4111 :	"!"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

4111 :	"formatter"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

4111 :	"getCRSExport"
		- NEIGH  = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- PARENT = { }
		- CHILD  = { != , && , EAST , AxisDirection , axisList , & , dir1 , direction , ! , if , dir0 , NORTH , cs , == , }
		- PRED   = { && , || , IComparable , zUnit , EQUIVALENT , UnitOfMeasure , Criterion , util , METRE , common , ! , _isEquivalentTo , unit , if , }
		- SUCC   = { }

4112 :	"&"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

4112 :	"dir0"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

4112 :	"axisList"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

4112 :	"direction"
		- NEIGH  = { axisList , dir0 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { axisList , dir1 , direction , & , }

4113 :	"&"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

4113 :	"dir1"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

4113 :	"axisList"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

4113 :	"direction"
		- NEIGH  = { axisList , dir1 , direction , & , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { }
		- PRED   = { axisList , dir0 , direction , & , }
		- SUCC   = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }

4114 :	"if"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4114 :	"!"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4114 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4114 :	"dir0"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4114 :	"=="
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4114 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4114 :	"cs"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4114 :	"AxisDirection"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4114 :	"EAST"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4114 :	"&&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4115 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4115 :	"dir1"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4115 :	"=="
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4115 :	"&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4115 :	"cs"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4115 :	"AxisDirection"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4115 :	"NORTH"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4115 :	"&&"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4118 :	"dir0"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4118 :	"!="
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4118 :	"dir1"
		- NEIGH  = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- PARENT = { getCRSExport , formatter , && , axisSpecFound , ! , if , }
		- CHILD  = { || , dir0 , AxisDirection , name1 , ci_starts_with , northingEasting , nameStr , name0 , dir1 , & , SOUTH , && , if , NORTH , cs , < , axisList , for , == , ++ , i , order , * , }
		- PRED   = { axisList , dir1 , direction , & , }
		- SUCC   = { }

4120 :	"*"
		- NEIGH  = { order , * , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

4120 :	"order"
		- NEIGH  = { order , * , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ++ , < , i , for , }

4121 :	"for"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

4121 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

4121 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

4121 :	"<"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

4121 :	"i"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

4121 :	"++"
		- NEIGH  = { ++ , < , i , for , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { WEST , if , axisList , dir , cs , == , direction , AxisDirection , i , & , }
		- PRED   = { order , * , }
		- SUCC   = { && , order , if , }

4122 :	"&"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

4122 :	"dir"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

4122 :	"axisList"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

4122 :	"i"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

4122 :	"direction"
		- NEIGH  = { axisList , dir , direction , i , & , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WEST , AxisDirection , cs , == , dir , & , if , }

4123 :	"if"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

4123 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

4123 :	"dir"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

4123 :	"=="
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

4123 :	"&"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

4123 :	"cs"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

4123 :	"AxisDirection"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

4123 :	"WEST"
		- NEIGH  = { WEST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { ++ , < , i , for , }
		- CHILD  = { cs , == , dir , if , & , EAST , AxisDirection , i , order , }
		- PRED   = { axisList , dir , direction , i , & , }
		- SUCC   = { }

4124 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4124 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4125 :	"if"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4125 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4125 :	"dir"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4125 :	"=="
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4125 :	"&"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4125 :	"cs"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4125 :	"AxisDirection"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4125 :	"EAST"
		- NEIGH  = { EAST , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { WEST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { SOUTH , cs , == , dir , if , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4126 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4126 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4127 :	"if"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4127 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4127 :	"dir"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4127 :	"=="
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4127 :	"&"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4127 :	"cs"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4127 :	"AxisDirection"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4127 :	"SOUTH"
		- NEIGH  = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- PARENT = { EAST , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { cs , == , dir , if , NORTH , & , AxisDirection , i , order , }
		- PRED   = { }
		- SUCC   = { }

4128 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4128 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4129 :	"if"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

4129 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

4129 :	"dir"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

4129 :	"=="
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

4129 :	"&"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

4129 :	"cs"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

4129 :	"AxisDirection"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

4129 :	"NORTH"
		- NEIGH  = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- PARENT = { SOUTH , AxisDirection , cs , == , dir , & , if , }
		- CHILD  = { i , order , }
		- PRED   = { }
		- SUCC   = { }

4130 :	"order"
		- NEIGH  = { i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4130 :	"i"
		- NEIGH  = { i , order , }
		- PARENT = { AxisDirection , cs , == , dir , NORTH , & , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4133 :	"if"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

4133 :	"order"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

4133 :	"&&"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

4133 :	"order"
		- NEIGH  = { && , order , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , order , sprintf , formatter , orderStr , addStep , }
		- PRED   = { ++ , < , i , for , }
		- SUCC   = { }

4134 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

4134 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { orderStr , }

4135 :	"orderStr"
		- NEIGH  = { orderStr , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { order , orderStr , sprintf , }

4136 :	"sprintf"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

4136 :	"orderStr"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

4136 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

4136 :	"order"
		- NEIGH  = { order , orderStr , sprintf , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { orderStr , }
		- SUCC   = { orderStr , addParam , formatter , }

4137 :	"formatter"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

4137 :	"addParam"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

4137 :	"orderStr"
		- NEIGH  = { orderStr , addParam , formatter , }
		- PARENT = { && , order , if , }
		- CHILD  = { }
		- PRED   = { order , orderStr , sprintf , }
		- SUCC   = { }

4140 :	"&"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

4140 :	"name0"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

4140 :	"axisList"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

4140 :	"nameStr"
		- NEIGH  = { nameStr , axisList , name0 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , axisList , name1 , & , }

4141 :	"&"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

4141 :	"name1"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

4141 :	"axisList"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

4141 :	"nameStr"
		- NEIGH  = { nameStr , axisList , name1 , & , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name0 , & , }
		- SUCC   = { name1 , && , name0 , ci_starts_with , northingEasting , }

4142 :	"northingEasting"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

4142 :	"ci_starts_with"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

4142 :	"name0"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

4142 :	"&&"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

4143 :	"ci_starts_with"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

4143 :	"name1"
		- NEIGH  = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { }
		- PRED   = { nameStr , axisList , name1 , & , }
		- SUCC   = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }

4146 :	"if"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4146 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4146 :	"dir0"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4146 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4146 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4146 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4146 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4146 :	"SOUTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4146 :	"&&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4147 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4147 :	"dir1"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4147 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4147 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4147 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4147 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4147 :	"SOUTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4147 :	"||"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4148 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4148 :	"dir0"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4148 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4148 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4148 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4148 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4148 :	"NORTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4148 :	"&&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4149 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4149 :	"dir1"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4149 :	"=="
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4149 :	"&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4149 :	"cs"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4149 :	"AxisDirection"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4149 :	"NORTH"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4149 :	"&&"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4150 :	"northingEasting"
		- NEIGH  = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- PARENT = { != , & , dir1 , EAST , AxisDirection , && , NORTH , cs , == , ! , dir0 , if , }
		- CHILD  = { addParam , addStep , formatter , }
		- PRED   = { name1 , && , name0 , ci_starts_with , northingEasting , }
		- SUCC   = { }

4151 :	"formatter"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

4151 :	"addStep"
		- NEIGH  = { addStep , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { addParam , formatter , }

4152 :	"formatter"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { }

4152 :	"addParam"
		- NEIGH  = { addParam , formatter , }
		- PARENT = { northingEasting , || , & , dir1 , && , SOUTH , AxisDirection , == , cs , NORTH , dir0 , if , }
		- CHILD  = { }
		- PRED   = { addStep , formatter , }
		- SUCC   = { }

4198 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4198 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4198 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4198 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4198 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4198 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4198 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4198 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4199 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4199 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4199 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4199 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4199 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4199 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4200 :	"std"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4200 :	"pair"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4200 :	"<"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4200 :	"ProjectedCRSNNPtr"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4200 :	">"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4200 :	"Pair"
		- NEIGH  = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4201 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

4201 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

4201 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

4201 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

4201 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

4201 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Pair , pair , ProjectedCRSNNPtr , < , > , std , }
		- SUCC   = { nameStr , thisName , & , }

4203 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

4203 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

4203 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }

4204 :	"io"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

4204 :	"DatabaseContextPtr"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

4204 :	"dbContext"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

4205 :	"authorityFactory"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

4205 :	"authorityFactory"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

4205 :	"databaseContext"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

4205 :	"as_nullable"
		- NEIGH  = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }

4208 :	"std"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4208 :	"list"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4208 :	"<"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4208 :	"std"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4208 :	"pair"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4208 :	"<"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4208 :	"GeodeticCRSNNPtr"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4208 :	">>"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4208 :	"baseRes"
		- NEIGH  = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { as_nullable , authorityFactory , dbContext , DatabaseContextPtr , databaseContext , io , }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4209 :	"&"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- SUCC   = { datumNonNull , l_baseCRS , dbContext , l_datum , }

4209 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- SUCC   = { datumNonNull , l_baseCRS , dbContext , l_datum , }

4209 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseRes , >> , pair , < , GeodeticCRSNNPtr , list , std , }
		- SUCC   = { datumNonNull , l_baseCRS , dbContext , l_datum , }

4210 :	"l_datum"
		- NEIGH  = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }

4210 :	"l_baseCRS"
		- NEIGH  = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }

4210 :	"datumNonNull"
		- NEIGH  = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }

4210 :	"dbContext"
		- NEIGH  = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }

4211 :	"significantNameForDatum"
		- NEIGH  = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

4212 :	"!"
		- NEIGH  = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

4212 :	"ci_starts_with"
		- NEIGH  = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

4212 :	"l_datum"
		- NEIGH  = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

4212 :	"nameStr"
		- NEIGH  = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

4212 :	"&&"
		- NEIGH  = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

4213 :	"l_datum"
		- NEIGH  = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

4213 :	"nameStr"
		- NEIGH  = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

4213 :	"!="
		- NEIGH  = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { datumNonNull , l_baseCRS , dbContext , l_datum , }
		- SUCC   = { l_baseCRS , ellipsoid , & , }

4214 :	"&"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

4214 :	"ellipsoid"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

4214 :	"l_baseCRS"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

4214 :	"ellipsoid"
		- NEIGH  = { l_baseCRS , ellipsoid , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , && , nameStr , significantNameForDatum , l_datum , ! , ci_starts_with , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

4215 :	"geogCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

4215 :	"dynamic_cast"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

4215 :	"<"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

4215 :	"GeographicCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

4215 :	"*"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

4215 :	">"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

4215 :	"l_baseCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

4215 :	"get"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_baseCRS , ellipsoid , & , }
		- SUCC   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }

4216 :	"if"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4216 :	"geogCRS"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4216 :	"&&"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4216 :	"geogCRS"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4216 :	"coordinateSystem"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4216 :	"axisOrder"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4216 :	"=="
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4217 :	"cs"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4217 :	"EllipsoidalCS"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4217 :	"AxisOrder"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4217 :	"LONG_EAST_LAT_NORTH"
		- NEIGH  = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- PARENT = { }
		- CHILD  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , l_baseCRS , baseRes , }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { zone , }

4218 :	"baseRes"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4219 :	"GeographicCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4219 :	"create"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4220 :	"util"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4220 :	"PropertyMap"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4220 :	"set"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4220 :	"common"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4220 :	"IdentifiedObject"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4220 :	"NAME_KEY"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4221 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4221 :	"nameStr"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4222 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4222 :	"datum"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4222 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4222 :	"datumEnsemble"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4223 :	"cs"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4223 :	"EllipsoidalCS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4223 :	"createLatitudeLongitude"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4224 :	"geogCRS"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4224 :	"coordinateSystem"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4224 :	"axisList"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4224 :	"unit"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4225 :	"identify"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4225 :	"authorityFactory"
		- NEIGH  = { identify , axisList , createLatitudeLongitude , coordinateSystem , datum , nameStr , unit , geogCRS , NAME_KEY , set , authorityFactory , EllipsoidalCS , datumEnsemble , PropertyMap , IdentifiedObject , GeographicCRS , create , common , cs , util , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4227 :	"baseRes"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4227 :	"l_baseCRS"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4227 :	"identify"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4227 :	"authorityFactory"
		- NEIGH  = { authorityFactory , identify , l_baseCRS , baseRes , }
		- PARENT = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4230 :	"zone"
		- NEIGH  = { zone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { LONG_EAST_LAT_NORTH , AxisOrder , EllipsoidalCS , cs , == , axisOrder , && , coordinateSystem , geogCRS , if , }
		- SUCC   = { north , }

4231 :	"north"
		- NEIGH  = { north , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { zone , }
		- SUCC   = { crsName , std , & , thisName , string , computeConfidence , }

4233 :	"computeConfidence"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { derivingConversionRef , conv , & , }

4233 :	"&"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { derivingConversionRef , conv , & , }

4233 :	"thisName"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { derivingConversionRef , conv , & , }

4233 :	"std"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { derivingConversionRef , conv , & , }

4233 :	"string"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { derivingConversionRef , conv , & , }

4233 :	"&"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { derivingConversionRef , conv , & , }

4233 :	"crsName"
		- NEIGH  = { crsName , std , & , thisName , string , computeConfidence , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { north , }
		- SUCC   = { derivingConversionRef , conv , & , }

4234 :	"return"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4234 :	"crsName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4234 :	"=="
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4234 :	"thisName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4235 :	"metadata"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4235 :	"Identifier"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4235 :	"isEquivalentName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4236 :	"crsName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4236 :	"c_str"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4236 :	"thisName"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4236 :	"c_str"
		- NEIGH  = { c_str , isEquivalentName , Identifier , thisName , metadata , == , crsName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4241 :	"&"
		- NEIGH  = { derivingConversionRef , conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { coordinateSystem , cs , & , }

4241 :	"conv"
		- NEIGH  = { derivingConversionRef , conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { coordinateSystem , cs , & , }

4241 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crsName , std , & , thisName , string , computeConfidence , }
		- SUCC   = { coordinateSystem , cs , & , }

4242 :	"&"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , conv , & , }
		- SUCC   = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }

4242 :	"cs"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , conv , & , }
		- SUCC   = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }

4242 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , cs , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , conv , & , }
		- SUCC   = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }

4244 :	"if"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4244 :	"baseRes"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4244 :	"size"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4244 :	"=="
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4244 :	"&&"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4244 :	"baseRes"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4244 :	"front"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4244 :	"second"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4244 :	">="
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4244 :	"&&"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4245 :	"authorityFactory"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4245 :	"=="
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4245 :	"||"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4246 :	"authorityFactory"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4246 :	"getAuthority"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4246 :	"empty"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4246 :	"||"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4247 :	"authorityFactory"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4247 :	"getAuthority"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4247 :	"=="
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4247 :	"metadata"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4247 :	"Identifier"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4247 :	"EPSG"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4247 :	"&&"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4248 :	"conv"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4248 :	"isUTM"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4248 :	"zone"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4248 :	"north"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4248 :	"&&"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4249 :	"cs"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4249 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4250 :	"cs"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4250 :	"CartesianCS"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4250 :	"createEastingNorthing"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4250 :	"common"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4250 :	"UnitOfMeasure"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4250 :	"METRE"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4251 :	"get"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4252 :	"util"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4252 :	"IComparable"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4252 :	"Criterion"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4252 :	"EQUIVALENT"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4252 :	"dbContext"
		- NEIGH  = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- PARENT = { }
		- CHILD  = { Criterion , IComparable , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , _isEquivalentTo , front , baseRes , l_north , l_zone , dbContext , first , if , computeUTMCRSName , base , * , }
		- PRED   = { coordinateSystem , cs , & , }
		- SUCC   = { hasImplicitCS , l_implicitCS , }

4254 :	"computeUTMCRSName"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }

4254 :	"*"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }

4254 :	"base"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }

4254 :	"l_zone"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }

4255 :	"l_north"
		- NEIGH  = { l_north , l_zone , base , * , computeUTMCRSName , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }

4256 :	"return"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4256 :	"base"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4256 :	"+"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4256 :	"toString"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4256 :	"l_zone"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4256 :	"+"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4256 :	"l_north"
		- NEIGH  = { l_north , return , toString , l_zone , base , + , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4259 :	"if"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4259 :	"baseRes"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4259 :	"front"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4259 :	"first"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4259 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4260 :	"GeographicCRS"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4260 :	"EPSG_4326"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4260 :	"get"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4261 :	"util"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4261 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4261 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4261 :	"EQUIVALENT"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4261 :	"dbContext"
		- NEIGH  = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- PARENT = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , _isEquivalentTo , front , == , || , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , util , && , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , res , std , EPSG_4326 , crsName , north , first , string , create , identify , + , }
		- PRED   = { l_north , l_zone , base , * , computeUTMCRSName , }
		- SUCC   = { }

4262 :	"std"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

4262 :	"string"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

4262 :	"crsName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

4263 :	"computeUTMCRSName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

4263 :	"zone"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

4263 :	"north"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }

4264 :	"res"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4264 :	"emplace_back"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4265 :	"ProjectedCRS"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4265 :	"create"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4266 :	"createMapNameEPSGCode"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4266 :	"crsName"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4266 :	"c_str"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4267 :	"north"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4267 :	"+"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4267 :	"zone"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4268 :	"GeographicCRS"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4268 :	"EPSG_4326"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4268 :	"conv"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4268 :	"identify"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4268 :	"cs"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4269 :	"computeConfidence"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4269 :	"crsName"
		- NEIGH  = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4270 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- SUCC   = { }

4270 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { }
		- PRED   = { identify , create , GeographicCRS , north , computeConfidence , c_str , + , zone , ProjectedCRS , emplace_back , cs , createMapNameEPSGCode , conv , EPSG_4326 , crsName , res , }
		- SUCC   = { }

4271 :	"if"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	">="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"<="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4271 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4272 :	"north"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4272 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4273 :	"baseRes"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4273 :	"front"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4273 :	"first"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4273 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4274 :	"GeographicCRS"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4274 :	"EPSG_4267"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4274 :	"get"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4275 :	"util"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4275 :	"IComparable"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4275 :	"Criterion"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4275 :	"EQUIVALENT"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4275 :	"dbContext"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- PARENT = { IComparable , Criterion , util , get , EPSG_4326 , EQUIVALENT , GeographicCRS , front , _isEquivalentTo , dbContext , if , first , baseRes , }
		- CHILD  = { dbContext , EQUIVALENT , Criterion , IComparable , get , EPSG_4269 , _isEquivalentTo , front , == , || , util , && , <= , computeUTMCRSName , if , GeographicCRS , computeConfidence , baseRes , conv , c_str , >= , emplace_back , return , ProjectedCRS , EPSG_4267 , cs , createMapNameEPSGCode , zone , - , res , crsName , north , first , string , create , identify , + , std , }
		- PRED   = { }
		- SUCC   = { }

4276 :	"std"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4276 :	"string"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4276 :	"crsName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4277 :	"computeUTMCRSName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4277 :	"zone"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4277 :	"north"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4278 :	"res"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4278 :	"emplace_back"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4279 :	"ProjectedCRS"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4279 :	"create"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4280 :	"createMapNameEPSGCode"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4280 :	"crsName"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4280 :	"c_str"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4281 :	"zone"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4281 :	">="
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4281 :	"+"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4281 :	"zone"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4281 :	"-"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4282 :	"+"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4282 :	"zone"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4283 :	"GeographicCRS"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4283 :	"EPSG_4267"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4283 :	"conv"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4283 :	"identify"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4283 :	"cs"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4284 :	"computeConfidence"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4284 :	"crsName"
		- NEIGH  = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4285 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

4285 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , EPSG_4267 , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

4286 :	"if"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	">="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"<="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"||"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"zone"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"=="
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4286 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4287 :	"north"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4287 :	"&&"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4288 :	"baseRes"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4288 :	"front"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4288 :	"first"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4288 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4289 :	"GeographicCRS"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4289 :	"EPSG_4269"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4289 :	"get"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4290 :	"util"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4290 :	"IComparable"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4290 :	"Criterion"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4290 :	"EQUIVALENT"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4290 :	"dbContext"
		- NEIGH  = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , EPSG_4267 , <= , front , Criterion , == , && , >= , }
		- CHILD  = { computeConfidence , c_str , EPSG_4269 , >= , emplace_back , ProjectedCRS , cs , createMapNameEPSGCode , zone , res , conv , crsName , north , string , GeographicCRS , create , return , identify , - , computeUTMCRSName , + , std , }
		- PRED   = { }
		- SUCC   = { }

4291 :	"std"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4291 :	"string"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4291 :	"crsName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4292 :	"computeUTMCRSName"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4292 :	"zone"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4292 :	"north"
		- NEIGH  = { zone , crsName , north , string , computeUTMCRSName , std , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }

4293 :	"res"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4293 :	"emplace_back"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4294 :	"ProjectedCRS"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4294 :	"create"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4295 :	"createMapNameEPSGCode"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4295 :	"crsName"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4295 :	"c_str"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4296 :	"zone"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4296 :	">="
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4296 :	"+"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4296 :	"zone"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4296 :	"-"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4297 :	"+"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4297 :	"zone"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4298 :	"GeographicCRS"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4298 :	"EPSG_4269"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4298 :	"conv"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4298 :	"identify"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4298 :	"cs"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4299 :	"computeConfidence"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4299 :	"crsName"
		- NEIGH  = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { zone , crsName , north , string , computeUTMCRSName , std , }
		- SUCC   = { res , return , }

4300 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

4300 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { IComparable , util , get , EQUIVALENT , GeographicCRS , _isEquivalentTo , dbContext , if , first , zone , baseRes , north , || , <= , front , Criterion , == , EPSG_4269 , && , >= , }
		- CHILD  = { }
		- PRED   = { identify , - , EPSG_4269 , ProjectedCRS , emplace_back , >= , computeConfidence , c_str , + , GeographicCRS , create , zone , cs , createMapNameEPSGCode , conv , crsName , res , }
		- SUCC   = { }

4304 :	"l_implicitCS"
		- NEIGH  = { hasImplicitCS , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- SUCC   = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }

4304 :	"hasImplicitCS"
		- NEIGH  = { hasImplicitCS , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { dbContext , EQUIVALENT , Criterion , IComparable , METRE , get , UnitOfMeasure , common , size , CartesianCS , cs , baseRes , conv , createEastingNorthing , second , _isEquivalentTo , getAuthority , EPSG , Identifier , front , authorityFactory , == , empty , || , isUTM , util , && , >= , north , metadata , zone , if , }
		- SUCC   = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }

4305 :	"addCRS"
		- NEIGH  = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { authorityFactory , if , }

4305 :	"&"
		- NEIGH  = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { authorityFactory , if , }

4305 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { authorityFactory , if , }

4305 :	"&"
		- NEIGH  = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { authorityFactory , if , }

4305 :	"crs"
		- NEIGH  = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { authorityFactory , if , }

4305 :	"eqName"
		- NEIGH  = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hasImplicitCS , l_implicitCS , }
		- SUCC   = { authorityFactory , if , }

4306 :	"&"
		- NEIGH  = { axisList , unit , cs , l_unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }

4306 :	"l_unit"
		- NEIGH  = { axisList , unit , cs , l_unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }

4306 :	"cs"
		- NEIGH  = { axisList , unit , cs , l_unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }

4306 :	"axisList"
		- NEIGH  = { axisList , unit , cs , l_unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }

4306 :	"unit"
		- NEIGH  = { axisList , unit , cs , l_unit , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }

4307 :	"if"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4307 :	"_isEquivalentTo"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4307 :	"crs"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4307 :	"get"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4308 :	"util"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4308 :	"IComparable"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4308 :	"Criterion"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4309 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4310 :	"dbContext"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4310 :	"||"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4311 :	"l_implicitCS"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4311 :	"&&"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4312 :	"l_unit"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4312 :	"_isEquivalentTo"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4313 :	"crs"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4313 :	"coordinateSystem"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4313 :	"axisList"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4313 :	"unit"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4314 :	"util"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4314 :	"IComparable"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4314 :	"Criterion"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4314 :	"EQUIVALENT"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4314 :	"&&"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4315 :	"l_baseCRS"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4315 :	"_isEquivalentTo"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4316 :	"crs"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4316 :	"baseCRS"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4316 :	"get"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4317 :	"util"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4317 :	"IComparable"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4317 :	"Criterion"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4318 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4319 :	"dbContext"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4319 :	"&&"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4320 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4320 :	"_isEquivalentTo"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4321 :	"crs"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4321 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4321 :	"get"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4322 :	"util"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4322 :	"IComparable"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4322 :	"Criterion"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4322 :	"EQUIVALENT"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4322 :	"dbContext"
		- NEIGH  = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { && , EQUIVALENT , util , get , IComparable , derivingConversionRef , baseCRS , ellipsoid , crs , _isEquivalentTo , Criterion , == , nameStr , thisName , dbContext , if , }
		- PRED   = { axisList , unit , cs , l_unit , & , }
		- SUCC   = { }

4323 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { crs , clear , eqName , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4323 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { crs , clear , eqName , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4323 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { crs , clear , eqName , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4323 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { crs , clear , eqName , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4323 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { crs , clear , eqName , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4324 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , emplace_back , res , }

4324 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , emplace_back , res , }

4325 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { }

4325 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { }

4325 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { }

4327 :	"res"
		- NEIGH  = { crs , eqName , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4327 :	"emplace_back"
		- NEIGH  = { crs , eqName , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4327 :	"crs"
		- NEIGH  = { crs , eqName , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4327 :	"eqName"
		- NEIGH  = { crs , eqName , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4329 :	"if"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4329 :	"ellipsoid"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4329 :	"_isEquivalentTo"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4330 :	"crs"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4330 :	"baseCRS"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4330 :	"ellipsoid"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4330 :	"get"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4331 :	"util"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4331 :	"IComparable"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4331 :	"Criterion"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4331 :	"EQUIVALENT"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4331 :	"dbContext"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4331 :	"&&"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4332 :	"derivingConversionRef"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4332 :	"_isEquivalentTo"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4333 :	"crs"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4333 :	"derivingConversionRef"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4333 :	"get"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4334 :	"util"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4334 :	"IComparable"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4334 :	"Criterion"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4334 :	"EQUIVALENT"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4334 :	"dbContext"
		- NEIGH  = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- PARENT = { derivingConversionRef , baseCRS , EQUIVALENT , unit , axisList , coordinateSystem , l_unit , && , l_implicitCS , if , dbContext , IComparable , || , Criterion , util , get , l_baseCRS , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , }
		- CHILD  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , res , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , emplace_back , && , l_implicitCS , dbContext , if , }
		- PRED   = { }
		- SUCC   = { }

4335 :	"if"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4335 :	"l_implicitCS"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4335 :	"&&"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4336 :	"l_unit"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4336 :	"_isEquivalentTo"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4337 :	"crs"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4337 :	"coordinateSystem"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4337 :	"axisList"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4337 :	"unit"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4338 :	"util"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4338 :	"IComparable"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4338 :	"Criterion"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4338 :	"EQUIVALENT"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4338 :	"||"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4339 :	"cs"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4339 :	"_isEquivalentTo"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4339 :	"crs"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4339 :	"coordinateSystem"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4339 :	"get"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4340 :	"util"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4340 :	"IComparable"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4340 :	"Criterion"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4340 :	"EQUIVALENT"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4341 :	"dbContext"
		- NEIGH  = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { emplace_back , res , EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PRED   = { }
		- SUCC   = { }

4342 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4342 :	"!"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4342 :	"significantNameForDatum"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4342 :	"||"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4343 :	"l_datum"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4343 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4344 :	"crs"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4344 :	"baseCRS"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4344 :	"datumNonNull"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4344 :	"dbContext"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4344 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4345 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4345 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4345 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4345 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { crs , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { }

4346 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4346 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4346 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4348 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4348 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4348 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { EQUIVALENT , IComparable , if , dbContext , baseCRS , util , datumNonNull , ! , crs , _isEquivalentTo , l_datum , Criterion , significantNameForDatum , get , || , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4351 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4351 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4351 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , || , EQUIVALENT , Criterion , IComparable , cs , util , unit , axisList , coordinateSystem , crs , _isEquivalentTo , l_unit , && , l_implicitCS , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4354 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4354 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4354 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { && , if , dbContext , EQUIVALENT , Criterion , util , get , crs , _isEquivalentTo , IComparable , derivingConversionRef , baseCRS , ellipsoid , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4358 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { >= , size , < , ci_equal , ! , second , sort , res , a , this , && , Pair , & , insignificantName , || , lambdaSort , if , empty , authorityFactory , front , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , }
		- PRED   = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }
		- SUCC   = { res , return , }

4358 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { >= , size , < , ci_equal , ! , second , sort , res , a , this , && , Pair , & , insignificantName , || , lambdaSort , if , empty , authorityFactory , front , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , }
		- PRED   = { ProjectedCRSNNPtr , eqName , & , crs , addCRS , }
		- SUCC   = { res , return , }

4360 :	"insignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

4360 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

4360 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

4360 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

4361 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

4361 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

4361 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

4362 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

4362 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundEquivalentName , }

4363 :	"foundEquivalentName"
		- NEIGH  = { foundEquivalentName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ci_equal , || , empty , thisName , insignificantName , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

4365 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4365 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4365 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4365 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4368 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4368 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4368 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4368 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4369 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , std , res , catch , createProjectedCRS , emplace_back , databaseContext , dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , * , _isEquivalentTo , crs , AuthorityFactory , create , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

4369 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , std , res , catch , createProjectedCRS , emplace_back , databaseContext , dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , * , _isEquivalentTo , crs , AuthorityFactory , create , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

4369 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , std , res , catch , createProjectedCRS , emplace_back , databaseContext , dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , * , _isEquivalentTo , crs , AuthorityFactory , create , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

4369 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , std , res , catch , createProjectedCRS , emplace_back , databaseContext , dbContext , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , exception , util , get , match , IComparable , id , code , Criterion , authorityFactory , * , _isEquivalentTo , crs , AuthorityFactory , create , codeSpace , return , io , }
		- PRED   = { }
		- SUCC   = { }

4371 :	"crs"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4371 :	"io"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4371 :	"AuthorityFactory"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4371 :	"create"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4372 :	"authorityFactory"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4372 :	"databaseContext"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4373 :	"*"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4373 :	"id"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4373 :	"codeSpace"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4374 :	"createProjectedCRS"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4374 :	"id"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4374 :	"code"
		- NEIGH  = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }

4375 :	"match"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4375 :	"_isEquivalentTo"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4376 :	"crs"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4376 :	"get"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4377 :	"util"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4377 :	"IComparable"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4377 :	"Criterion"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4378 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4379 :	"dbContext"
		- NEIGH  = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , createProjectedCRS , authorityFactory , AuthorityFactory , databaseContext , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4380 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

4380 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

4380 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

4380 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { IComparable , Criterion , util , get , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , crs , _isEquivalentTo , dbContext , match , }
		- SUCC   = { res , return , }

4381 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

4381 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

4382 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4382 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4382 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4382 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4386 :	"if"
		- NEIGH  = { ! , insignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

4386 :	"!"
		- NEIGH  = { ! , insignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

4386 :	"insignificantName"
		- NEIGH  = { ! , insignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

4387 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , pairObjName , & , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , AuthorityFactory , createObjectsFromNameEx , == , authorityFactory , io , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4387 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , pairObjName , & , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , AuthorityFactory , createObjectsFromNameEx , == , authorityFactory , io , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4387 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , pairObjName , & , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , AuthorityFactory , createObjectsFromNameEx , == , authorityFactory , io , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4387 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , pairObjName , & , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , AuthorityFactory , createObjectsFromNameEx , == , authorityFactory , io , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4387 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , pairObjName , & , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , AuthorityFactory , createObjectsFromNameEx , == , authorityFactory , io , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4387 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , pairObjName , & , objects , PROJECTED_CRS , for , approximateMatch , ObjectType , AuthorityFactory , createObjectsFromNameEx , == , authorityFactory , io , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4388 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }

4388 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }

4388 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }

4389 :	"objects"
		- NEIGH  = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { & , objects , pairObjName , for , }

4389 :	"authorityFactory"
		- NEIGH  = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { & , objects , pairObjName , for , }

4389 :	"createObjectsFromNameEx"
		- NEIGH  = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { & , objects , pairObjName , for , }

4390 :	"thisName"
		- NEIGH  = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { & , objects , pairObjName , for , }

4390 :	"io"
		- NEIGH  = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { & , objects , pairObjName , for , }

4390 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { & , objects , pairObjName , for , }

4390 :	"ObjectType"
		- NEIGH  = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { & , objects , pairObjName , for , }

4390 :	"PROJECTED_CRS"
		- NEIGH  = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { & , objects , pairObjName , for , }

4391 :	"approximateMatch"
		- NEIGH  = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { & , objects , pairObjName , for , }

4392 :	"for"
		- NEIGH  = { & , objects , pairObjName , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { == , back , res , addCRS , |= , foundEquivalentName , second , c_str , thisName , ProjectedCRS , isEquivalentName , pairObjName , metadata , > , Identifier , eqName , NN_NO_CHECK , assert , if , first , util , crsNN , < , nn_dynamic_pointer_cast , crs , }
		- PRED   = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4392 :	"&"
		- NEIGH  = { & , objects , pairObjName , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { == , back , res , addCRS , |= , foundEquivalentName , second , c_str , thisName , ProjectedCRS , isEquivalentName , pairObjName , metadata , > , Identifier , eqName , NN_NO_CHECK , assert , if , first , util , crsNN , < , nn_dynamic_pointer_cast , crs , }
		- PRED   = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4392 :	"pairObjName"
		- NEIGH  = { & , objects , pairObjName , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { == , back , res , addCRS , |= , foundEquivalentName , second , c_str , thisName , ProjectedCRS , isEquivalentName , pairObjName , metadata , > , Identifier , eqName , NN_NO_CHECK , assert , if , first , util , crsNN , < , nn_dynamic_pointer_cast , crs , }
		- PRED   = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4392 :	"objects"
		- NEIGH  = { & , objects , pairObjName , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { == , back , res , addCRS , |= , foundEquivalentName , second , c_str , thisName , ProjectedCRS , isEquivalentName , pairObjName , metadata , > , Identifier , eqName , NN_NO_CHECK , assert , if , first , util , crsNN , < , nn_dynamic_pointer_cast , crs , }
		- PRED   = { approximateMatch , PROJECTED_CRS , ObjectType , AuthorityFactory , objects , io , createObjectsFromNameEx , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4393 :	"crs"
		- NEIGH  = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4393 :	"util"
		- NEIGH  = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4393 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4393 :	"<"
		- NEIGH  = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4393 :	"ProjectedCRS"
		- NEIGH  = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4393 :	">"
		- NEIGH  = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4394 :	"pairObjName"
		- NEIGH  = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4394 :	"first"
		- NEIGH  = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4395 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

4395 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { first , > , ProjectedCRS , < , pairObjName , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

4396 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

4396 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

4396 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

4397 :	"eqName"
		- NEIGH  = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4397 :	"metadata"
		- NEIGH  = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4397 :	"Identifier"
		- NEIGH  = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4397 :	"isEquivalentName"
		- NEIGH  = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4398 :	"thisName"
		- NEIGH  = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4398 :	"c_str"
		- NEIGH  = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4398 :	"pairObjName"
		- NEIGH  = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4398 :	"second"
		- NEIGH  = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4398 :	"c_str"
		- NEIGH  = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4399 :	"foundEquivalentName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { eqName , crsNN , addCRS , }

4399 :	"|="
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { eqName , crsNN , addCRS , }

4399 :	"eqName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { second , pairObjName , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { eqName , crsNN , addCRS , }

4401 :	"addCRS"
		- NEIGH  = { eqName , crsNN , addCRS , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { == , second , back , res , if , }

4401 :	"crsNN"
		- NEIGH  = { eqName , crsNN , addCRS , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { == , second , back , res , if , }

4401 :	"eqName"
		- NEIGH  = { eqName , crsNN , addCRS , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { == , second , back , res , if , }

4402 :	"if"
		- NEIGH  = { == , second , back , res , if , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { res , return , }
		- PRED   = { eqName , crsNN , addCRS , }
		- SUCC   = { }

4402 :	"res"
		- NEIGH  = { == , second , back , res , if , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { res , return , }
		- PRED   = { eqName , crsNN , addCRS , }
		- SUCC   = { }

4402 :	"back"
		- NEIGH  = { == , second , back , res , if , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { res , return , }
		- PRED   = { eqName , crsNN , addCRS , }
		- SUCC   = { }

4402 :	"second"
		- NEIGH  = { == , second , back , res , if , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { res , return , }
		- PRED   = { eqName , crsNN , addCRS , }
		- SUCC   = { }

4402 :	"=="
		- NEIGH  = { == , second , back , res , if , }
		- PARENT = { & , objects , pairObjName , for , }
		- CHILD  = { res , return , }
		- PRED   = { eqName , crsNN , addCRS , }
		- SUCC   = { }

4403 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , second , back , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4403 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , second , back , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4406 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { & , objects , pairObjName , for , }
		- SUCC   = { }

4406 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { & , objects , pairObjName , for , }
		- SUCC   = { }

4406 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { & , objects , pairObjName , for , }
		- SUCC   = { }

4406 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { & , objects , pairObjName , for , }
		- SUCC   = { }

4407 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4412 :	"lambdaSort"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4412 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4412 :	"thisName"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4412 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4412 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4412 :	"a"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4412 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4412 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4412 :	"b"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4414 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4414 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4414 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4414 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4414 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4414 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4415 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4417 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4417 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4417 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4417 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4417 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4417 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4418 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4422 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4422 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4422 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4422 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4422 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4423 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4423 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4423 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4423 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4423 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4424 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4424 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4424 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4424 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4424 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4424 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4424 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4424 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4425 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4427 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4427 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4427 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4427 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4427 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4427 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4427 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4427 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4428 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4432 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

4432 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

4432 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

4432 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

4436 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }

4436 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }

4436 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }

4438 :	"if"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4438 :	"!"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4438 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4438 :	"this"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4438 :	"authorityFactory"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4438 :	"&&"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"!"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"foundEquivalentName"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"&&"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"res"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"empty"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"||"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"res"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"front"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"second"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4439 :	"<"
		- NEIGH  = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { sort , createProjectedCRSFromExisting , as_nullable , authorityFactory , shared_from_this , > , ProjectedCRS , dynamic_pointer_cast , NN_NO_CHECK , candidates , res , & , >> , for , crs , string , pair , < , alreadyKnown , lambdaSort , set , self , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { >= , size , res , if , }

4440 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"set"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"pair"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	">>"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4440 :	"alreadyKnown"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

4441 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

4441 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

4441 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

4441 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

4442 :	"&"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4442 :	"ids"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4442 :	"pair"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4442 :	"first"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4442 :	"identifiers"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4443 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

4443 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

4443 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

4443 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

4444 :	"alreadyKnown"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4444 :	"insert"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4444 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4444 :	"pair"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4444 :	"<"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4444 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4444 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4444 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4444 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4444 :	">"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4445 :	"*"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4445 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4445 :	"codeSpace"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4445 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4445 :	"code"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

4448 :	"self"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

4448 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

4448 :	"std"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

4448 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

4448 :	"<"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

4448 :	"ProjectedCRS"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

4448 :	">"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

4449 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

4449 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }

4450 :	"candidates"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

4451 :	"authorityFactory"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

4451 :	"createProjectedCRSFromExisting"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

4451 :	"self"
		- NEIGH  = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

4452 :	"for"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { insignificantName , addCRS , != , code , * , < , pair , find , alreadyKnown , if , end , string , crs , ! , identifiers , > , assert , codeSpace , std , empty , ids , & , }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

4452 :	"&"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { insignificantName , addCRS , != , code , * , < , pair , find , alreadyKnown , if , end , string , crs , ! , identifiers , > , assert , codeSpace , std , empty , ids , & , }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

4452 :	"crs"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { insignificantName , addCRS , != , code , * , < , pair , find , alreadyKnown , if , end , string , crs , ! , identifiers , > , assert , codeSpace , std , empty , ids , & , }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

4452 :	"candidates"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { insignificantName , addCRS , != , code , * , < , pair , find , alreadyKnown , if , end , string , crs , ! , identifiers , > , assert , codeSpace , std , empty , ids , & , }
		- PRED   = { self , createProjectedCRSFromExisting , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

4453 :	"&"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4453 :	"ids"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4453 :	"crs"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4453 :	"identifiers"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

4454 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

4454 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

4454 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

4454 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

4455 :	"if"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	"find"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	"pair"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	"<"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4455 :	">"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4456 :	"*"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4456 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4456 :	"codeSpace"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4456 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4456 :	"code"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4456 :	"!="
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4457 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4457 :	"end"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { insignificantName , crs , addCRS , }

4458 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4461 :	"addCRS"
		- NEIGH  = { insignificantName , crs , addCRS , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4461 :	"crs"
		- NEIGH  = { insignificantName , crs , addCRS , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4461 :	"insignificantName"
		- NEIGH  = { insignificantName , crs , addCRS , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

4464 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

4464 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

4464 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { }

4468 :	"if"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

4468 :	"res"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

4468 :	"size"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

4468 :	">="
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { < , second , hasCodeCompatibleOfAuthorityFactory , empty , res , foundEquivalentName , front , && , this , || , authorityFactory , ! , if , }
		- SUCC   = { }

4469 :	"highestConfidence"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

4469 :	"res"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

4469 :	"front"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

4469 :	"second"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

4470 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4470 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4470 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4470 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4470 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4470 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

4471 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

4471 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

4471 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

4471 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

4472 :	"if"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4472 :	"pair"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4472 :	"second"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4472 :	"=="
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4472 :	"highestConfidence"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

4473 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4473 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4473 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4475 :	"break"
		- NEIGH  = { break , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4478 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

4478 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

4482 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

4482 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

4498 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4499 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4499 :	"demoteTo2D"
		- NEIGH  = { demoteTo2D , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4499 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4499 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4499 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4499 :	"newName"
		- NEIGH  = { newName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4500 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4500 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4500 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4500 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4502 :	"&"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

4502 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

4502 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

4502 :	"axisList"
		- NEIGH  = { coordinateSystem , axisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { size , == , axisList , if , }

4503 :	"if"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { nameStr , empty , newName , ! , common , set , dbContext , std , string , GeodeticCRS , l_baseCRS , get , nn_static_pointer_cast , newBaseCRS , > , * , geogCRS , & , derivingConversion , axisList , NAME_KEY , demoteTo2D , < , cs , dynamic_cast , util , GeographicCRS , create , IdentifiedObject , PropertyMap , baseCRS , ProjectedCRS , return , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

4503 :	"axisList"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { nameStr , empty , newName , ! , common , set , dbContext , std , string , GeodeticCRS , l_baseCRS , get , nn_static_pointer_cast , newBaseCRS , > , * , geogCRS , & , derivingConversion , axisList , NAME_KEY , demoteTo2D , < , cs , dynamic_cast , util , GeographicCRS , create , IdentifiedObject , PropertyMap , baseCRS , ProjectedCRS , return , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

4503 :	"size"
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { nameStr , empty , newName , ! , common , set , dbContext , std , string , GeodeticCRS , l_baseCRS , get , nn_static_pointer_cast , newBaseCRS , > , * , geogCRS , & , derivingConversion , axisList , NAME_KEY , demoteTo2D , < , cs , dynamic_cast , util , GeographicCRS , create , IdentifiedObject , PropertyMap , baseCRS , ProjectedCRS , return , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

4503 :	"=="
		- NEIGH  = { size , == , axisList , if , }
		- PARENT = { }
		- CHILD  = { nameStr , empty , newName , ! , common , set , dbContext , std , string , GeodeticCRS , l_baseCRS , get , nn_static_pointer_cast , newBaseCRS , > , * , geogCRS , & , derivingConversion , axisList , NAME_KEY , demoteTo2D , < , cs , dynamic_cast , util , GeographicCRS , create , IdentifiedObject , PropertyMap , baseCRS , ProjectedCRS , return , CartesianCS , }
		- PRED   = { coordinateSystem , axisList , & , }
		- SUCC   = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }

4504 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4504 :	"cs"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4504 :	"CartesianCS"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4504 :	"create"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4504 :	"util"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4504 :	"PropertyMap"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4504 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4505 :	"axisList"
		- NEIGH  = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , l_baseCRS , & , }

4506 :	"&"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

4506 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

4506 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , & , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { axisList , util , create , PropertyMap , CartesianCS , cs , }
		- SUCC   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }

4507 :	"geogCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

4508 :	"dynamic_cast"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

4508 :	"<"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

4508 :	"GeographicCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

4508 :	"*"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

4508 :	">"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

4508 :	"l_baseCRS"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

4508 :	"get"
		- NEIGH  = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , & , }
		- SUCC   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }

4509 :	"newBaseCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4510 :	"geogCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4510 :	"util"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4510 :	"nn_static_pointer_cast"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4510 :	"<"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4510 :	"GeodeticCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4510 :	">"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4511 :	"geogCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4511 :	"demoteTo2D"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4511 :	"std"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4511 :	"string"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4511 :	"dbContext"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4512 :	"l_baseCRS"
		- NEIGH  = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { get , l_baseCRS , > , dynamic_cast , * , GeographicCRS , < , geogCRS , }
		- SUCC   = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }

4513 :	"return"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4513 :	"ProjectedCRS"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4513 :	"create"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4514 :	"util"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4514 :	"PropertyMap"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4514 :	"set"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4514 :	"common"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4514 :	"IdentifiedObject"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4514 :	"NAME_KEY"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4515 :	"!"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4515 :	"newName"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4515 :	"empty"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4515 :	"newName"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4515 :	"nameStr"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4516 :	"newBaseCRS"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4516 :	"derivingConversion"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4516 :	"cs"
		- NEIGH  = { derivingConversion , newBaseCRS , nameStr , empty , common , cs , util , ! , PropertyMap , IdentifiedObject , create , set , ProjectedCRS , newName , NAME_KEY , return , }
		- PARENT = { size , == , axisList , if , }
		- CHILD  = { }
		- PRED   = { l_baseCRS , GeodeticCRS , string , std , dbContext , > , nn_static_pointer_cast , < , util , demoteTo2D , newBaseCRS , geogCRS , }
		- SUCC   = { }

4519 :	"return"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

4519 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

4519 :	"std"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

4519 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

4519 :	"<"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

4519 :	"ProjectedCRS"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

4519 :	">"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

4520 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

4520 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , ProjectedCRS , < , dynamic_pointer_cast , as_nullable , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { size , == , axisList , if , }
		- SUCC   = { }

4527 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4527 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4527 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4527 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4527 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4527 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4527 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4527 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4528 :	"ProjectedCRS"
		- NEIGH  = { ProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4528 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4528 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4528 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4528 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4528 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4529 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4529 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4529 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4529 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4529 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4529 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4530 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4530 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4530 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4530 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4530 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4530 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

4531 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

4531 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

4531 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

4532 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4532 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4532 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4532 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

4533 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4533 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4533 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4533 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4533 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4533 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4535 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

4535 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

4543 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4543 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4543 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4543 :	"message"
		- NEIGH  = { message , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4544 :	"Exception"
		- NEIGH  = { Exception , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4544 :	"message"
		- NEIGH  = { message , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4548 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4548 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4549 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4549 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4549 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4549 :	"message"
		- NEIGH  = { message , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4550 :	"Exception"
		- NEIGH  = { Exception , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4550 :	"message"
		- NEIGH  = { message , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4554 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4554 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4558 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4558 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4559 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4559 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4565 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4565 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4566 :	"std"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4566 :	"vector"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4566 :	"<"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4566 :	"CRSNNPtr"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4566 :	">"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4566 :	"components_"
		- NEIGH  = { components_ , > , CRSNNPtr , < , vector , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4572 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4572 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4572 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4572 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4572 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4572 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4572 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4572 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4572 :	"components"
		- NEIGH  = { components , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4573 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4573 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4573 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4573 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4573 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4573 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4573 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4574 :	"d"
		- NEIGH  = { components_ , components , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4574 :	"components_"
		- NEIGH  = { components_ , components , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4574 :	"components"
		- NEIGH  = { components_ , components , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4579 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4579 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4579 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4579 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4579 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4580 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4585 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4585 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4590 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4590 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4590 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4591 :	"crs"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4591 :	"CompoundCRS"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4591 :	"nn_make_shared"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4591 :	"<"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4591 :	"CompoundCRS"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4591 :	">"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4591 :	"*"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4591 :	"this"
		- NEIGH  = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

4592 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4592 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4592 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , CompoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

4593 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

4593 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

4602 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4602 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4602 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4602 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4602 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4602 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4603 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4603 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4603 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4604 :	"return"
		- NEIGH  = { components_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4604 :	"d"
		- NEIGH  = { components_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4604 :	"components_"
		- NEIGH  = { components_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4617 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4617 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4617 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4617 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4617 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4617 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4617 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4618 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4618 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4618 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4618 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4618 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4618 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4618 :	"components"
		- NEIGH  = { components , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4620 :	"if"
		- NEIGH  = { < , size , components , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { }
		- SUCC   = { get , components , comp0 , }

4620 :	"components"
		- NEIGH  = { < , size , components , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { }
		- SUCC   = { get , components , comp0 , }

4620 :	"size"
		- NEIGH  = { < , size , components , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { }
		- SUCC   = { get , components , comp0 , }

4620 :	"<"
		- NEIGH  = { < , size , components , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { }
		- SUCC   = { get , components , comp0 , }

4621 :	"throw"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { < , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4621 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { < , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4625 :	"comp0"
		- NEIGH  = { get , components , comp0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , size , components , if , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4625 :	"components"
		- NEIGH  = { get , components , comp0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , size , components , if , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4625 :	"get"
		- NEIGH  = { get , components , comp0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , size , components , if , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4626 :	"comp0Bound"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4626 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4626 :	"<"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4626 :	"BoundCRS"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4626 :	"*"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4626 :	">"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4626 :	"comp0"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0Bound , if , }

4627 :	"if"
		- NEIGH  = { comp0Bound , if , }
		- PARENT = { }
		- CHILD  = { get , baseCRS , comp0Bound , comp0 , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4627 :	"comp0Bound"
		- NEIGH  = { comp0Bound , if , }
		- PARENT = { }
		- CHILD  = { get , baseCRS , comp0Bound , comp0 , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4628 :	"comp0"
		- NEIGH  = { get , baseCRS , comp0Bound , comp0 , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4628 :	"comp0Bound"
		- NEIGH  = { get , baseCRS , comp0Bound , comp0 , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4628 :	"baseCRS"
		- NEIGH  = { get , baseCRS , comp0Bound , comp0 , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4628 :	"get"
		- NEIGH  = { get , baseCRS , comp0Bound , comp0 , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4630 :	"comp0Geog"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4630 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4630 :	"<"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4630 :	"GeographicCRS"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4630 :	"*"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4630 :	">"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4630 :	"comp0"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0Bound , if , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4631 :	"comp0Proj"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4631 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4631 :	"<"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4631 :	"ProjectedCRS"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4631 :	"*"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4631 :	">"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4631 :	"comp0"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }

4632 :	"comp0Eng"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4632 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4632 :	"<"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4632 :	"EngineeringCRS"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4632 :	"*"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4632 :	">"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4632 :	"comp0"
		- NEIGH  = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { get , components , comp1 , }

4634 :	"comp1"
		- NEIGH  = { get , components , comp1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- SUCC   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }

4634 :	"components"
		- NEIGH  = { get , components , comp1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- SUCC   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }

4634 :	"get"
		- NEIGH  = { get , components , comp1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , EngineeringCRS , < , comp0Eng , }
		- SUCC   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }

4635 :	"comp1Bound"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4635 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4635 :	"<"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4635 :	"BoundCRS"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4635 :	"*"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4635 :	">"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4635 :	"comp1"
		- NEIGH  = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp1Bound , if , }

4636 :	"if"
		- NEIGH  = { comp1Bound , if , }
		- PARENT = { }
		- CHILD  = { get , baseCRS , comp1Bound , comp1 , }
		- PRED   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- SUCC   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }

4636 :	"comp1Bound"
		- NEIGH  = { comp1Bound , if , }
		- PARENT = { }
		- CHILD  = { get , baseCRS , comp1Bound , comp1 , }
		- PRED   = { comp1 , > , dynamic_cast , * , < , BoundCRS , comp1Bound , }
		- SUCC   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }

4637 :	"comp1"
		- NEIGH  = { get , baseCRS , comp1Bound , comp1 , }
		- PARENT = { comp1Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4637 :	"comp1Bound"
		- NEIGH  = { get , baseCRS , comp1Bound , comp1 , }
		- PARENT = { comp1Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4637 :	"baseCRS"
		- NEIGH  = { get , baseCRS , comp1Bound , comp1 , }
		- PARENT = { comp1Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4637 :	"get"
		- NEIGH  = { get , baseCRS , comp1Bound , comp1 , }
		- PARENT = { comp1Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4639 :	"comp1Vert"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4639 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4639 :	"<"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4639 :	"VerticalCRS"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4639 :	"*"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4639 :	">"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4639 :	"comp1"
		- NEIGH  = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1Bound , if , }
		- SUCC   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }

4640 :	"comp1Eng"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4640 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4640 :	"<"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4640 :	"EngineeringCRS"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4640 :	"*"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4640 :	">"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4640 :	"comp1"
		- NEIGH  = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , VerticalCRS , < , dynamic_cast , * , comp1Vert , }
		- SUCC   = { ok , }

4643 :	"ok"
		- NEIGH  = { ok , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { comp1 , > , dynamic_cast , * , EngineeringCRS , < , comp1Eng , }
		- SUCC   = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }

4644 :	"if"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4644 :	"comp0Geog"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4644 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4644 :	"comp0Geog"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4644 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4644 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4644 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4644 :	"=="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4644 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4645 :	"comp1Vert"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4645 :	"||"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4646 :	"comp1Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4646 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4647 :	"comp1Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4647 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4647 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4647 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4647 :	"=="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4647 :	"||"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4648 :	"comp0Proj"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4648 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4648 :	"comp0Proj"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4648 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4648 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4648 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4648 :	"=="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4648 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4649 :	"comp1Vert"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4649 :	"||"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4650 :	"comp1Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4650 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4651 :	"comp1Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4651 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4651 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4651 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4651 :	"=="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4651 :	"||"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4652 :	"comp0Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4652 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4652 :	"comp0Eng"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4652 :	"coordinateSystem"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4652 :	"axisList"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4652 :	"size"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4652 :	"<="
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4652 :	"&&"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4653 :	"comp1Vert"
		- NEIGH  = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- PARENT = { }
		- CHILD  = { comp1 , TemporalCRS , if , VerticalCRS , comp0 , && , > , ok , * , GeodeticCRS , comp0Geog , dynamic_cast , < , comp0Eng , || , isComp0Spatial , comp0Proj , }
		- PRED   = { ok , }
		- SUCC   = { ok , ! , if , }

4655 :	"ok"
		- NEIGH  = { ok , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4657 :	"isComp0Spatial"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4657 :	"comp0Geog"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4657 :	"||"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4657 :	"comp0Proj"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4657 :	"||"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4657 :	"comp0Eng"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4657 :	"||"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4658 :	"dynamic_cast"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4658 :	"<"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4658 :	"GeodeticCRS"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4658 :	"*"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4658 :	">"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4658 :	"comp0"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4658 :	"||"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4659 :	"dynamic_cast"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4659 :	"<"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4659 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4659 :	"*"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4659 :	">"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4659 :	"comp0"
		- NEIGH  = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }

4660 :	"if"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4660 :	"isComp0Spatial"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4660 :	"&&"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4660 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4660 :	"<"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4660 :	"TemporalCRS"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4660 :	"*"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4660 :	">"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4660 :	"comp1"
		- NEIGH  = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- CHILD  = { comp1 , > , < , ParametricCRS , ok , && , if , isComp0Spatial , * , dynamic_cast , }
		- PRED   = { VerticalCRS , comp0 , > , * , GeodeticCRS , < , comp0Geog , dynamic_cast , isComp0Spatial , comp0Proj , || , comp0Eng , }
		- SUCC   = { }

4662 :	"ok"
		- NEIGH  = { ok , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4663 :	"if"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4663 :	"isComp0Spatial"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4663 :	"&&"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4664 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4664 :	"<"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4664 :	"ParametricCRS"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4664 :	"*"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4664 :	">"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4664 :	"comp1"
		- NEIGH  = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- PARENT = { comp1 , > , TemporalCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { ok , }
		- PRED   = { }
		- SUCC   = { }

4666 :	"ok"
		- NEIGH  = { ok , }
		- PARENT = { comp1 , > , ParametricCRS , && , < , if , isComp0Spatial , * , dynamic_cast , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4669 :	"if"
		- NEIGH  = { ok , ! , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- SUCC   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }

4669 :	"!"
		- NEIGH  = { ok , ! , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- SUCC   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }

4669 :	"ok"
		- NEIGH  = { ok , ! , if , }
		- PARENT = { }
		- CHILD  = { InvalidCompoundCRSException , throw , }
		- PRED   = { <= , comp0Eng , || , comp1Vert , comp1Eng , size , axisList , comp0Proj , coordinateSystem , == , && , comp0Geog , if , }
		- SUCC   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }

4670 :	"throw"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { ok , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4670 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { ok , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4676 :	"compoundCRS"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4676 :	"CompoundCRS"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4676 :	"nn_make_shared"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4676 :	"<"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4676 :	"CompoundCRS"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4676 :	">"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4676 :	"components"
		- NEIGH  = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { ok , ! , if , }
		- SUCC   = { assignSelf , compoundCRS , }

4677 :	"compoundCRS"
		- NEIGH  = { assignSelf , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- SUCC   = { setProperties , properties , compoundCRS , }

4677 :	"assignSelf"
		- NEIGH  = { assignSelf , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- SUCC   = { setProperties , properties , compoundCRS , }

4677 :	"compoundCRS"
		- NEIGH  = { assignSelf , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , < , > , nn_make_shared , CompoundCRS , compoundCRS , }
		- SUCC   = { setProperties , properties , compoundCRS , }

4678 :	"compoundCRS"
		- NEIGH  = { setProperties , properties , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , compoundCRS , }
		- SUCC   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }

4678 :	"setProperties"
		- NEIGH  = { setProperties , properties , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , compoundCRS , }
		- SUCC   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }

4678 :	"properties"
		- NEIGH  = { setProperties , properties , compoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , compoundCRS , }
		- SUCC   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }

4679 :	"if"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4679 :	"!"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4679 :	"properties"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4679 :	"get"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4679 :	"common"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4679 :	"IdentifiedObject"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4679 :	"NAME_KEY"
		- NEIGH  = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- PARENT = { }
		- CHILD  = { compoundCRS , NAME_KEY , components , set , IdentifiedObject , PropertyMap , util , & , crs , string , common , for , propertyName , name , setProperties , std , }
		- PRED   = { setProperties , properties , compoundCRS , }
		- SUCC   = { compoundCRS , return , }

4680 :	"std"
		- NEIGH  = { string , name , std , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { components , crs , & , for , }

4680 :	"string"
		- NEIGH  = { string , name , std , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { components , crs , & , for , }

4680 :	"name"
		- NEIGH  = { string , name , std , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { components , crs , & , for , }

4681 :	"for"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

4681 :	"&"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

4681 :	"crs"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

4681 :	"components"
		- NEIGH  = { components , crs , & , for , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { nameStr , l_name , & , crs , empty , if , ! , name , }
		- PRED   = { string , name , std , }
		- SUCC   = { propertyName , PropertyMap , util , }

4682 :	"if"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

4682 :	"!"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

4682 :	"name"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

4682 :	"empty"
		- NEIGH  = { empty , ! , name , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { += , name , }
		- PRED   = { }
		- SUCC   = { nameStr , crs , l_name , & , }

4683 :	"name"
		- NEIGH  = { += , name , }
		- PARENT = { empty , ! , name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4683 :	"+="
		- NEIGH  = { += , name , }
		- PARENT = { empty , ! , name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4685 :	"&"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

4685 :	"l_name"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

4685 :	"crs"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

4685 :	"nameStr"
		- NEIGH  = { nameStr , crs , l_name , & , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ! , name , if , }
		- SUCC   = { empty , l_name , ! , if , }

4686 :	"if"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

4686 :	"!"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

4686 :	"l_name"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

4686 :	"empty"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { components , crs , & , for , }
		- CHILD  = { l_name , += , name , }
		- PRED   = { nameStr , crs , l_name , & , }
		- SUCC   = { }

4687 :	"name"
		- NEIGH  = { l_name , += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4687 :	"+="
		- NEIGH  = { l_name , += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4687 :	"l_name"
		- NEIGH  = { l_name , += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4689 :	"name"
		- NEIGH  = { += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4689 :	"+="
		- NEIGH  = { += , name , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4692 :	"util"
		- NEIGH  = { propertyName , PropertyMap , util , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { components , crs , & , for , }
		- SUCC   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }

4692 :	"PropertyMap"
		- NEIGH  = { propertyName , PropertyMap , util , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { components , crs , & , for , }
		- SUCC   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }

4692 :	"propertyName"
		- NEIGH  = { propertyName , PropertyMap , util , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { components , crs , & , for , }
		- SUCC   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }

4693 :	"propertyName"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4693 :	"set"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4693 :	"common"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4693 :	"IdentifiedObject"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4693 :	"NAME_KEY"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4693 :	"name"
		- NEIGH  = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { propertyName , PropertyMap , util , }
		- SUCC   = { propertyName , setProperties , compoundCRS , }

4694 :	"compoundCRS"
		- NEIGH  = { propertyName , setProperties , compoundCRS , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- SUCC   = { }

4694 :	"setProperties"
		- NEIGH  = { propertyName , setProperties , compoundCRS , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- SUCC   = { }

4694 :	"propertyName"
		- NEIGH  = { propertyName , setProperties , compoundCRS , }
		- PARENT = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- CHILD  = { }
		- PRED   = { NAME_KEY , IdentifiedObject , set , common , name , propertyName , }
		- SUCC   = { }

4697 :	"return"
		- NEIGH  = { compoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- SUCC   = { }

4697 :	"compoundCRS"
		- NEIGH  = { compoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { NAME_KEY , common , properties , get , IdentifiedObject , ! , if , }
		- SUCC   = { }

4716 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4716 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4716 :	"createLax"
		- NEIGH  = { createLax , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4716 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4716 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4716 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4716 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4717 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4717 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4717 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4717 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4717 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4717 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4717 :	"components"
		- NEIGH  = { components , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4718 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4718 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4718 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4718 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4720 :	"if"
		- NEIGH  = { == , size , components , if , }
		- PARENT = { }
		- CHILD  = { VerticalCRS , || , comp1Geog , comp1 , comp0Geog , == , dynamic_cast , nn_dynamic_pointer_cast , != , getWKT1DatumType , BoundCRS , comp0Bound , * , comp0Proj , util , && , ProjectedCRS , > , comp1Vert , components , GeographicCRS , datum , < , get , if , comp0 , }
		- PRED   = { }
		- SUCC   = { properties , components , create , return , }

4720 :	"components"
		- NEIGH  = { == , size , components , if , }
		- PARENT = { }
		- CHILD  = { VerticalCRS , || , comp1Geog , comp1 , comp0Geog , == , dynamic_cast , nn_dynamic_pointer_cast , != , getWKT1DatumType , BoundCRS , comp0Bound , * , comp0Proj , util , && , ProjectedCRS , > , comp1Vert , components , GeographicCRS , datum , < , get , if , comp0 , }
		- PRED   = { }
		- SUCC   = { properties , components , create , return , }

4720 :	"size"
		- NEIGH  = { == , size , components , if , }
		- PARENT = { }
		- CHILD  = { VerticalCRS , || , comp1Geog , comp1 , comp0Geog , == , dynamic_cast , nn_dynamic_pointer_cast , != , getWKT1DatumType , BoundCRS , comp0Bound , * , comp0Proj , util , && , ProjectedCRS , > , comp1Vert , components , GeographicCRS , datum , < , get , if , comp0 , }
		- PRED   = { }
		- SUCC   = { properties , components , create , return , }

4720 :	"=="
		- NEIGH  = { == , size , components , if , }
		- PARENT = { }
		- CHILD  = { VerticalCRS , || , comp1Geog , comp1 , comp0Geog , == , dynamic_cast , nn_dynamic_pointer_cast , != , getWKT1DatumType , BoundCRS , comp0Bound , * , comp0Proj , util , && , ProjectedCRS , > , comp1Vert , components , GeographicCRS , datum , < , get , if , comp0 , }
		- PRED   = { }
		- SUCC   = { properties , components , create , return , }

4721 :	"comp0"
		- NEIGH  = { get , components , comp0 , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , components , comp1 , }

4721 :	"components"
		- NEIGH  = { get , components , comp0 , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , components , comp1 , }

4721 :	"get"
		- NEIGH  = { get , components , comp0 , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , components , comp1 , }

4722 :	"comp1"
		- NEIGH  = { get , components , comp1 , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4722 :	"components"
		- NEIGH  = { get , components , comp1 , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4722 :	"get"
		- NEIGH  = { get , components , comp1 , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp0 , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4723 :	"comp0Geog"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4723 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4723 :	"<"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4723 :	"GeographicCRS"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4723 :	"*"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4723 :	">"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4723 :	"comp0"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { get , components , comp1 , }
		- SUCC   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4724 :	"comp0Proj"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4724 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4724 :	"<"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4724 :	"ProjectedCRS"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4724 :	"*"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4724 :	">"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4724 :	"comp0"
		- NEIGH  = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }

4725 :	"comp0Bound"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { comp0Proj , && , == , comp0Geog , if , }

4725 :	"dynamic_cast"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { comp0Proj , && , == , comp0Geog , if , }

4725 :	"<"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { comp0Proj , && , == , comp0Geog , if , }

4725 :	"BoundCRS"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { comp0Proj , && , == , comp0Geog , if , }

4725 :	"*"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { comp0Proj , && , == , comp0Geog , if , }

4725 :	">"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { comp0Proj , && , == , comp0Geog , if , }

4725 :	"comp0"
		- NEIGH  = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0 , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- SUCC   = { comp0Proj , && , == , comp0Geog , if , }

4726 :	"if"
		- NEIGH  = { comp0Proj , && , == , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { comp0Bound , if , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }

4726 :	"comp0Geog"
		- NEIGH  = { comp0Proj , && , == , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { comp0Bound , if , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }

4726 :	"=="
		- NEIGH  = { comp0Proj , && , == , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { comp0Bound , if , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }

4726 :	"&&"
		- NEIGH  = { comp0Proj , && , == , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { comp0Bound , if , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }

4726 :	"comp0Proj"
		- NEIGH  = { comp0Proj , && , == , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { comp0Bound , if , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }

4726 :	"=="
		- NEIGH  = { comp0Proj , && , == , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { comp0Bound , if , }
		- PRED   = { comp0 , > , dynamic_cast , * , < , BoundCRS , comp0Bound , }
		- SUCC   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }

4727 :	"if"
		- NEIGH  = { comp0Bound , if , }
		- PARENT = { comp0Proj , && , == , comp0Geog , if , }
		- CHILD  = { comp0Proj , GeographicCRS , < , ProjectedCRS , comp0Geog , comp0Bound , get , > , baseCRS , dynamic_cast , * , }
		- PRED   = { }
		- SUCC   = { }

4727 :	"comp0Bound"
		- NEIGH  = { comp0Bound , if , }
		- PARENT = { comp0Proj , && , == , comp0Geog , if , }
		- CHILD  = { comp0Proj , GeographicCRS , < , ProjectedCRS , comp0Geog , comp0Bound , get , > , baseCRS , dynamic_cast , * , }
		- PRED   = { }
		- SUCC   = { }

4728 :	"*"
		- NEIGH  = { comp0Bound , get , baseCRS , * , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4728 :	"baseCRS"
		- NEIGH  = { comp0Bound , get , baseCRS , * , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4728 :	"comp0Bound"
		- NEIGH  = { comp0Bound , get , baseCRS , * , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4728 :	"baseCRS"
		- NEIGH  = { comp0Bound , get , baseCRS , * , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4728 :	"get"
		- NEIGH  = { comp0Bound , get , baseCRS , * , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }

4729 :	"comp0Geog"
		- NEIGH  = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { comp0Bound , get , baseCRS , * , }
		- SUCC   = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4729 :	"dynamic_cast"
		- NEIGH  = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { comp0Bound , get , baseCRS , * , }
		- SUCC   = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4729 :	"<"
		- NEIGH  = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { comp0Bound , get , baseCRS , * , }
		- SUCC   = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4729 :	"GeographicCRS"
		- NEIGH  = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { comp0Bound , get , baseCRS , * , }
		- SUCC   = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4729 :	"*"
		- NEIGH  = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { comp0Bound , get , baseCRS , * , }
		- SUCC   = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4729 :	">"
		- NEIGH  = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { comp0Bound , get , baseCRS , * , }
		- SUCC   = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4729 :	"baseCRS"
		- NEIGH  = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { comp0Bound , get , baseCRS , * , }
		- SUCC   = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }

4730 :	"comp0Proj"
		- NEIGH  = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { }

4730 :	"dynamic_cast"
		- NEIGH  = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { }

4730 :	"<"
		- NEIGH  = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { }

4730 :	"ProjectedCRS"
		- NEIGH  = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { }

4730 :	"*"
		- NEIGH  = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { }

4730 :	">"
		- NEIGH  = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { }

4730 :	"baseCRS"
		- NEIGH  = { baseCRS , > , ProjectedCRS , < , dynamic_cast , * , comp0Proj , }
		- PARENT = { comp0Bound , if , }
		- CHILD  = { }
		- PRED   = { baseCRS , > , dynamic_cast , * , < , GeographicCRS , comp0Geog , }
		- SUCC   = { }

4733 :	"comp1Geog"
		- NEIGH  = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0Proj , && , == , comp0Geog , if , }
		- SUCC   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }

4733 :	"dynamic_cast"
		- NEIGH  = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0Proj , && , == , comp0Geog , if , }
		- SUCC   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }

4733 :	"<"
		- NEIGH  = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0Proj , && , == , comp0Geog , if , }
		- SUCC   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }

4733 :	"GeographicCRS"
		- NEIGH  = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0Proj , && , == , comp0Geog , if , }
		- SUCC   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }

4733 :	"*"
		- NEIGH  = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0Proj , && , == , comp0Geog , if , }
		- SUCC   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }

4733 :	">"
		- NEIGH  = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0Proj , && , == , comp0Geog , if , }
		- SUCC   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }

4733 :	"comp1"
		- NEIGH  = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { comp0Proj , && , == , comp0Geog , if , }
		- SUCC   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }

4734 :	"if"
		- NEIGH  = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { InvalidCompoundCRSException , std , string , _isEquivalentTo , dbContext , if , throw , comp0Geog , demoteTo2D , comp1Geog , get , baseCRS , comp0Proj , as_nullable , != , horizGeog , }
		- PRED   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- SUCC   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }

4734 :	"comp0Geog"
		- NEIGH  = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { InvalidCompoundCRSException , std , string , _isEquivalentTo , dbContext , if , throw , comp0Geog , demoteTo2D , comp1Geog , get , baseCRS , comp0Proj , as_nullable , != , horizGeog , }
		- PRED   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- SUCC   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }

4734 :	"!="
		- NEIGH  = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { InvalidCompoundCRSException , std , string , _isEquivalentTo , dbContext , if , throw , comp0Geog , demoteTo2D , comp1Geog , get , baseCRS , comp0Proj , as_nullable , != , horizGeog , }
		- PRED   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- SUCC   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }

4734 :	"||"
		- NEIGH  = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { InvalidCompoundCRSException , std , string , _isEquivalentTo , dbContext , if , throw , comp0Geog , demoteTo2D , comp1Geog , get , baseCRS , comp0Proj , as_nullable , != , horizGeog , }
		- PRED   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- SUCC   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }

4734 :	"comp0Proj"
		- NEIGH  = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { InvalidCompoundCRSException , std , string , _isEquivalentTo , dbContext , if , throw , comp0Geog , demoteTo2D , comp1Geog , get , baseCRS , comp0Proj , as_nullable , != , horizGeog , }
		- PRED   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- SUCC   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }

4734 :	"!="
		- NEIGH  = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { InvalidCompoundCRSException , std , string , _isEquivalentTo , dbContext , if , throw , comp0Geog , demoteTo2D , comp1Geog , get , baseCRS , comp0Proj , as_nullable , != , horizGeog , }
		- PRED   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- SUCC   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }

4734 :	"&&"
		- NEIGH  = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { InvalidCompoundCRSException , std , string , _isEquivalentTo , dbContext , if , throw , comp0Geog , demoteTo2D , comp1Geog , get , baseCRS , comp0Proj , as_nullable , != , horizGeog , }
		- PRED   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- SUCC   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }

4735 :	"comp1Geog"
		- NEIGH  = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { InvalidCompoundCRSException , std , string , _isEquivalentTo , dbContext , if , throw , comp0Geog , demoteTo2D , comp1Geog , get , baseCRS , comp0Proj , as_nullable , != , horizGeog , }
		- PRED   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- SUCC   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }

4735 :	"!="
		- NEIGH  = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { InvalidCompoundCRSException , std , string , _isEquivalentTo , dbContext , if , throw , comp0Geog , demoteTo2D , comp1Geog , get , baseCRS , comp0Proj , as_nullable , != , horizGeog , }
		- PRED   = { comp1 , > , < , GeographicCRS , dynamic_cast , * , comp1Geog , }
		- SUCC   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }

4736 :	"horizGeog"
		- NEIGH  = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }

4737 :	"comp0Proj"
		- NEIGH  = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }

4737 :	"!="
		- NEIGH  = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }

4738 :	"comp0Proj"
		- NEIGH  = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }

4738 :	"baseCRS"
		- NEIGH  = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }

4738 :	"as_nullable"
		- NEIGH  = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }

4738 :	"get"
		- NEIGH  = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }

4739 :	"comp0Geog"
		- NEIGH  = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }

4740 :	"if"
		- NEIGH  = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PRED   = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- SUCC   = { InvalidCompoundCRSException , throw , }

4740 :	"horizGeog"
		- NEIGH  = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PRED   = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- SUCC   = { InvalidCompoundCRSException , throw , }

4740 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PRED   = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- SUCC   = { InvalidCompoundCRSException , throw , }

4741 :	"comp1Geog"
		- NEIGH  = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PRED   = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- SUCC   = { InvalidCompoundCRSException , throw , }

4741 :	"demoteTo2D"
		- NEIGH  = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PRED   = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- SUCC   = { InvalidCompoundCRSException , throw , }

4741 :	"std"
		- NEIGH  = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PRED   = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- SUCC   = { InvalidCompoundCRSException , throw , }

4741 :	"string"
		- NEIGH  = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PRED   = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- SUCC   = { InvalidCompoundCRSException , throw , }

4741 :	"dbContext"
		- NEIGH  = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PRED   = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- SUCC   = { InvalidCompoundCRSException , throw , }

4741 :	"get"
		- NEIGH  = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PRED   = { comp0Geog , get , comp0Proj , as_nullable , baseCRS , != , horizGeog , }
		- SUCC   = { InvalidCompoundCRSException , throw , }

4742 :	"return"
		- NEIGH  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PARENT = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4742 :	"components"
		- NEIGH  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PARENT = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4743 :	"promoteTo3D"
		- NEIGH  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PARENT = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4743 :	"std"
		- NEIGH  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PARENT = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4743 :	"string"
		- NEIGH  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PARENT = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4743 :	"dbContext"
		- NEIGH  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PARENT = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4744 :	"allowNonConformantWKT1Export"
		- NEIGH  = { allowNonConformantWKT1Export , dbContext , string , return , std , promoteTo3D , components , }
		- PARENT = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4746 :	"throw"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- SUCC   = { }

4746 :	"InvalidCompoundCRSException"
		- NEIGH  = { InvalidCompoundCRSException , throw , }
		- PARENT = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- CHILD  = { }
		- PRED   = { dbContext , std , get , demoteTo2D , comp1Geog , _isEquivalentTo , string , horizGeog , if , }
		- SUCC   = { }

4752 :	"comp1Vert"
		- NEIGH  = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- SUCC   = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }

4753 :	"util"
		- NEIGH  = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- SUCC   = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }

4753 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- SUCC   = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }

4753 :	"<"
		- NEIGH  = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- SUCC   = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }

4753 :	"VerticalCRS"
		- NEIGH  = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- SUCC   = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }

4753 :	">"
		- NEIGH  = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- SUCC   = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }

4753 :	"components"
		- NEIGH  = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { }
		- PRED   = { && , comp0Proj , comp1Geog , || , != , comp0Geog , if , }
		- SUCC   = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }

4754 :	"if"
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4754 :	"comp1Vert"
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4754 :	"!="
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4754 :	"&&"
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4754 :	"comp1Vert"
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4754 :	"datum"
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4754 :	"&&"
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4755 :	"comp1Vert"
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4755 :	"datum"
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4755 :	"getWKT1DatumType"
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4755 :	"=="
		- NEIGH  = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- PARENT = { == , size , components , if , }
		- CHILD  = { baseCRS , axis , string , axisList , CRSNNPtr , IComparable , properties , < , vector , comp0Bound , attachOriginalCompoundCRS , common , AxisName , promoteTo3D , return , dbContext , Ellipsoidal_height , h , create , > , CoordinateSystemAxis , newVertAxis , direction , UP , cs , == , util , METRE , && , IdentifiedObject , _isEquivalentTo , Criterion , unit , nameStr , AxisDirection , if , components , NAME_KEY , name , set , comp1Vert , ! , & , std , AxisAbbreviation , UnitOfMeasure , PropertyMap , coordinateSystem , EQUIVALENT , }
		- PRED   = { components , > , < , VerticalCRS , nn_dynamic_pointer_cast , util , comp1Vert , }
		- SUCC   = { }

4756 :	"&"
		- NEIGH  = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , components , string , name , std , }

4756 :	"axis"
		- NEIGH  = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , components , string , name , std , }

4756 :	"comp1Vert"
		- NEIGH  = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , components , string , name , std , }

4756 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , components , string , name , std , }

4756 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , components , string , name , std , }

4757 :	"std"
		- NEIGH  = { nameStr , components , string , name , std , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- SUCC   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }

4757 :	"string"
		- NEIGH  = { nameStr , components , string , name , std , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- SUCC   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }

4757 :	"name"
		- NEIGH  = { nameStr , components , string , name , std , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- SUCC   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }

4757 :	"components"
		- NEIGH  = { nameStr , components , string , name , std , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- SUCC   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }

4757 :	"nameStr"
		- NEIGH  = { nameStr , components , string , name , std , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , comp1Vert , axis , & , }
		- SUCC   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }

4758 :	"if"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4758 :	"!"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4758 :	"axis"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4758 :	"unit"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4758 :	"_isEquivalentTo"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4759 :	"common"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4759 :	"UnitOfMeasure"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4759 :	"METRE"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4760 :	"util"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4760 :	"IComparable"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4760 :	"Criterion"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4760 :	"EQUIVALENT"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4760 :	"&&"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4761 :	"&"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4761 :	"axis"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4761 :	"direction"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4761 :	"=="
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4761 :	"&"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4761 :	"cs"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4761 :	"AxisDirection"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4761 :	"UP"
		- NEIGH  = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { comp1Vert , + , nameStr , += , name , }
		- PRED   = { nameStr , components , string , name , std , }
		- SUCC   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }

4762 :	"name"
		- NEIGH  = { comp1Vert , + , nameStr , += , name , }
		- PARENT = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4762 :	"+="
		- NEIGH  = { comp1Vert , + , nameStr , += , name , }
		- PARENT = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4762 :	"+"
		- NEIGH  = { comp1Vert , + , nameStr , += , name , }
		- PARENT = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4762 :	"comp1Vert"
		- NEIGH  = { comp1Vert , + , nameStr , += , name , }
		- PARENT = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4762 :	"nameStr"
		- NEIGH  = { comp1Vert , + , nameStr , += , name , }
		- PARENT = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4762 :	"+"
		- NEIGH  = { comp1Vert , + , nameStr , += , name , }
		- PARENT = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4764 :	"newVertAxis"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4764 :	"cs"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4764 :	"CoordinateSystemAxis"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4764 :	"create"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4765 :	"util"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4765 :	"PropertyMap"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4765 :	"set"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4765 :	"IdentifiedObject"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4765 :	"NAME_KEY"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4766 :	"cs"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4766 :	"AxisName"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4766 :	"Ellipsoidal_height"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4767 :	"cs"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4767 :	"AxisAbbreviation"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4767 :	"h"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4767 :	"axis"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4767 :	"direction"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4767 :	"axis"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4767 :	"unit"
		- NEIGH  = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { AxisDirection , & , && , EQUIVALENT , UnitOfMeasure , UP , == , Criterion , cs , util , METRE , common , direction , ! , _isEquivalentTo , unit , if , IComparable , axis , }
		- SUCC   = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }

4768 :	"return"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4768 :	"components"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4769 :	"promoteTo3D"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4769 :	"name"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4769 :	"dbContext"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4769 :	"newVertAxis"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4770 :	"attachOriginalCompoundCRS"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4770 :	"create"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4771 :	"properties"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4772 :	"comp0Bound"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4772 :	"std"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4772 :	"vector"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4772 :	"<"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4772 :	"CRSNNPtr"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4772 :	">"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4772 :	"comp0Bound"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4772 :	"baseCRS"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4773 :	"components"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4774 :	"components"
		- NEIGH  = { < , > , vector , std , comp0Bound , baseCRS , properties , name , attachOriginalCompoundCRS , CRSNNPtr , create , newVertAxis , components , dbContext , promoteTo3D , return , }
		- PARENT = { getWKT1DatumType , == , && , != , datum , comp1Vert , if , }
		- CHILD  = { }
		- PRED   = { unit , direction , h , AxisAbbreviation , axis , NAME_KEY , AxisName , Ellipsoidal_height , set , PropertyMap , IdentifiedObject , newVertAxis , create , CoordinateSystemAxis , cs , util , }
		- SUCC   = { }

4778 :	"return"
		- NEIGH  = { properties , components , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , size , components , if , }
		- SUCC   = { }

4778 :	"create"
		- NEIGH  = { properties , components , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , size , components , if , }
		- SUCC   = { }

4778 :	"properties"
		- NEIGH  = { properties , components , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , size , components , if , }
		- SUCC   = { }

4778 :	"components"
		- NEIGH  = { properties , components , create , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { == , size , components , if , }
		- SUCC   = { }

4785 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4785 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4785 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4785 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4785 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4785 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4786 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , l_components , & , }

4786 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , l_components , & , }

4786 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , l_components , & , }

4786 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , l_components , & , }

4786 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , l_components , & , }

4786 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , l_components , & , }

4786 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , l_components , & , }

4786 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { componentReferenceSystems , l_components , & , }

4787 :	"&"
		- NEIGH  = { componentReferenceSystems , l_components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }

4787 :	"l_components"
		- NEIGH  = { componentReferenceSystems , l_components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }

4787 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , l_components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }

4788 :	"if"
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4788 :	"!"
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4788 :	"isWKT2"
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4788 :	"&&"
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4788 :	"formatter"
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4788 :	"useESRIDialect"
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4788 :	"&&"
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4788 :	"l_components"
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4788 :	"size"
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4788 :	"=="
		- NEIGH  = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { ObjectUsage , & , for , empty , identifiers , COMPOUNDCRS , endNode , nameStr , WKTConstants , l_components , io , baseExportToWKT , COMPD_CS , addQuotedString , isWKT2 , crs , ! , formatter , _exportToWKT , startNode , }
		- PRED   = { componentReferenceSystems , l_components , & , }
		- SUCC   = { }

4789 :	"l_components"
		- NEIGH  = { formatter , _exportToWKT , l_components , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToWKT , l_components , }

4789 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_components , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToWKT , l_components , }

4789 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_components , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToWKT , l_components , }

4790 :	"l_components"
		- NEIGH  = { formatter , _exportToWKT , l_components , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_components , }
		- SUCC   = { }

4790 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_components , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_components , }
		- SUCC   = { }

4790 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_components , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , l_components , }
		- SUCC   = { }

4792 :	"formatter"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4792 :	"startNode"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4792 :	"isWKT2"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4792 :	"io"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4792 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4792 :	"COMPOUNDCRS"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4793 :	"io"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4793 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4793 :	"COMPD_CS"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4794 :	"!"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4794 :	"identifiers"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4794 :	"empty"
		- NEIGH  = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , addQuotedString , formatter , }

4795 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { crs , l_components , & , for , }

4795 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { crs , l_components , & , for , }

4795 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { empty , identifiers , COMPOUNDCRS , WKTConstants , io , COMPD_CS , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { crs , l_components , & , for , }

4796 :	"for"
		- NEIGH  = { crs , l_components , & , for , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4796 :	"&"
		- NEIGH  = { crs , l_components , & , for , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4796 :	"crs"
		- NEIGH  = { crs , l_components , & , for , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4796 :	"l_components"
		- NEIGH  = { crs , l_components , & , for , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { formatter , _exportToWKT , crs , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

4797 :	"crs"
		- NEIGH  = { formatter , _exportToWKT , crs , }
		- PARENT = { crs , l_components , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4797 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , crs , }
		- PARENT = { crs , l_components , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4797 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , crs , }
		- PARENT = { crs , l_components , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4799 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { crs , l_components , & , for , }
		- SUCC   = { endNode , formatter , }

4799 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { crs , l_components , & , for , }
		- SUCC   = { endNode , formatter , }

4799 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { crs , l_components , & , for , }
		- SUCC   = { endNode , formatter , }

4800 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4800 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { size , l_components , == , useESRIDialect , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

4808 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4808 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4809 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4809 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4809 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4809 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4811 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4811 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4811 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

4812 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

4813 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

4813 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

4813 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

4813 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

4813 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

4815 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

4815 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

4816 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

4816 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

4817 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

4817 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

4817 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

4818 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4818 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4820 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4820 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4820 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4823 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { MakeArrayContext , writer , componentsContext , }

4823 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { MakeArrayContext , writer , componentsContext , }

4825 :	"componentsContext"
		- NEIGH  = { MakeArrayContext , writer , componentsContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

4825 :	"writer"
		- NEIGH  = { MakeArrayContext , writer , componentsContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

4825 :	"MakeArrayContext"
		- NEIGH  = { MakeArrayContext , writer , componentsContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { componentReferenceSystems , crs , & , for , }

4826 :	"for"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

4826 :	"&"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

4826 :	"crs"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

4826 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToJSON , crs , }
		- PRED   = { MakeArrayContext , writer , componentsContext , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

4827 :	"crs"
		- NEIGH  = { formatter , _exportToJSON , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4827 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4827 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , crs , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4831 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { }

4831 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { }

4831 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , crs , & , for , }
		- SUCC   = { }

4837 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4837 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4838 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4838 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4838 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4838 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4840 :	"for"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

4840 :	"&"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

4840 :	"crs"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

4840 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , crs , & , for , }
		- PARENT = { }
		- CHILD  = { if , get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PRED   = { }
		- SUCC   = { }

4841 :	"crs_exportable"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4842 :	"dynamic_cast"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4842 :	"<"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4842 :	"IPROJStringExportable"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4842 :	"*"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4842 :	">"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4842 :	"crs"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4842 :	"get"
		- NEIGH  = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , if , }

4843 :	"if"
		- NEIGH  = { crs_exportable , if , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { formatter , _exportToPROJString , crs_exportable , }
		- PRED   = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- SUCC   = { }

4843 :	"crs_exportable"
		- NEIGH  = { crs_exportable , if , }
		- PARENT = { componentReferenceSystems , crs , & , for , }
		- CHILD  = { formatter , _exportToPROJString , crs_exportable , }
		- PRED   = { get , crs , dynamic_cast , * , > , IPROJStringExportable , < , crs_exportable , }
		- SUCC   = { }

4844 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { crs_exportable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4844 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { crs_exportable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4844 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { crs_exportable , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4851 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4851 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4852 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4852 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4852 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4852 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4852 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4852 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4852 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4852 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4853 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4853 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4853 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4853 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4854 :	"otherCompoundCRS"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4854 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4854 :	"<"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4854 :	"CompoundCRS"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4854 :	"*"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4854 :	">"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4854 :	"other"
		- NEIGH  = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

4855 :	"if"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4855 :	"otherCompoundCRS"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4855 :	"=="
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4855 :	"||"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4856 :	"criterion"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4856 :	"=="
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4856 :	"util"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4856 :	"IComparable"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4856 :	"Criterion"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4856 :	"STRICT"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4856 :	"&&"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4857 :	"!"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4857 :	"ObjectUsage"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4857 :	"_isEquivalentTo"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4857 :	"other"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4857 :	"criterion"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4857 :	"dbContext"
		- NEIGH  = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { other , dynamic_cast , * , CompoundCRS , < , > , otherCompoundCRS , }
		- SUCC   = { componentReferenceSystems , components , & , }

4858 :	"return"
		- NEIGH  = { return , }
		- PARENT = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4860 :	"&"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }

4860 :	"components"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }

4860 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , && , criterion , == , Criterion , util , || , STRICT , IComparable , otherCompoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }

4861 :	"&"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

4861 :	"otherComponents"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

4861 :	"otherCompoundCRS"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

4861 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { otherComponents , != , size , components , if , }

4862 :	"if"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4862 :	"components"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4862 :	"size"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4862 :	"!="
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4862 :	"otherComponents"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4862 :	"size"
		- NEIGH  = { otherComponents , != , size , components , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { componentReferenceSystems , otherComponents , otherCompoundCRS , & , }
		- SUCC   = { components , ++ , size_t , i , < , size , for , }

4863 :	"return"
		- NEIGH  = { return , }
		- PARENT = { otherComponents , != , size , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4865 :	"for"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4865 :	"size_t"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4865 :	"i"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4865 :	"i"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4865 :	"<"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4865 :	"components"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4865 :	"size"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4865 :	"i"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4865 :	"++"
		- NEIGH  = { components , ++ , size_t , i , < , size , for , }
		- PARENT = { }
		- CHILD  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PRED   = { otherComponents , != , size , components , if , }
		- SUCC   = { return , }

4866 :	"if"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4866 :	"!"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4866 :	"components"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4866 :	"i"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4866 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4866 :	"otherComponents"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4866 :	"i"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4866 :	"get"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4866 :	"criterion"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4867 :	"dbContext"
		- NEIGH  = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- PARENT = { components , ++ , size_t , i , < , size , for , }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { }

4868 :	"return"
		- NEIGH  = { return , }
		- PARENT = { dbContext , get , otherComponents , criterion , i , _isEquivalentTo , components , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4871 :	"return"
		- NEIGH  = { return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { components , ++ , size_t , i , < , size , for , }
		- SUCC   = { }

4903 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4903 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4903 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4903 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4903 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4903 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4903 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4903 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4904 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4904 :	"identify"
		- NEIGH  = { identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4904 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4904 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4904 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4904 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4905 :	"std"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4905 :	"pair"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4905 :	"<"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4905 :	"CompoundCRSNNPtr"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4905 :	">"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4905 :	"Pair"
		- NEIGH  = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

4906 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4906 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4906 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4906 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4906 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4906 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { CompoundCRSNNPtr , < , > , Pair , pair , std , }
		- SUCC   = { nameStr , thisName , & , }

4908 :	"&"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { componentReferenceSystems , components , & , }

4908 :	"thisName"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { componentReferenceSystems , components , & , }

4908 :	"nameStr"
		- NEIGH  = { nameStr , thisName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { componentReferenceSystems , components , & , }

4910 :	"&"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , components , l_implicitCS , }

4910 :	"components"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , components , l_implicitCS , }

4910 :	"componentReferenceSystems"
		- NEIGH  = { componentReferenceSystems , components , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , thisName , & , }
		- SUCC   = { hasImplicitCS , components , l_implicitCS , }

4911 :	"l_implicitCS"
		- NEIGH  = { hasImplicitCS , components , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { l_implicitCS , ! , if , }

4911 :	"components"
		- NEIGH  = { hasImplicitCS , components , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { l_implicitCS , ! , if , }

4911 :	"hasImplicitCS"
		- NEIGH  = { hasImplicitCS , components , l_implicitCS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { componentReferenceSystems , components , & , }
		- SUCC   = { l_implicitCS , ! , if , }

4912 :	"if"
		- NEIGH  = { l_implicitCS , ! , if , }
		- PARENT = { }
		- CHILD  = { get , if , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PRED   = { hasImplicitCS , components , l_implicitCS , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

4912 :	"!"
		- NEIGH  = { l_implicitCS , ! , if , }
		- PARENT = { }
		- CHILD  = { get , if , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PRED   = { hasImplicitCS , components , l_implicitCS , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

4912 :	"l_implicitCS"
		- NEIGH  = { l_implicitCS , ! , if , }
		- PARENT = { }
		- CHILD  = { get , if , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PRED   = { hasImplicitCS , components , l_implicitCS , }
		- SUCC   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }

4913 :	"projCRS"
		- NEIGH  = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

4914 :	"dynamic_cast"
		- NEIGH  = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

4914 :	"<"
		- NEIGH  = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

4914 :	"ProjectedCRS"
		- NEIGH  = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

4914 :	"*"
		- NEIGH  = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

4914 :	">"
		- NEIGH  = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

4914 :	"components"
		- NEIGH  = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

4914 :	"get"
		- NEIGH  = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { projCRS , if , }

4915 :	"if"
		- NEIGH  = { projCRS , if , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { hasImplicitCS , baseCRS , projCRS , l_implicitCS , }
		- PRED   = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { }

4915 :	"projCRS"
		- NEIGH  = { projCRS , if , }
		- PARENT = { l_implicitCS , ! , if , }
		- CHILD  = { hasImplicitCS , baseCRS , projCRS , l_implicitCS , }
		- PRED   = { get , components , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { }

4916 :	"l_implicitCS"
		- NEIGH  = { hasImplicitCS , baseCRS , projCRS , l_implicitCS , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4916 :	"projCRS"
		- NEIGH  = { hasImplicitCS , baseCRS , projCRS , l_implicitCS , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4916 :	"baseCRS"
		- NEIGH  = { hasImplicitCS , baseCRS , projCRS , l_implicitCS , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4916 :	"hasImplicitCS"
		- NEIGH  = { hasImplicitCS , baseCRS , projCRS , l_implicitCS , }
		- PARENT = { projCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4919 :	"crsCriterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4920 :	"l_implicitCS"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4921 :	"util"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4921 :	"IComparable"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4921 :	"Criterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4921 :	"EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4922 :	"util"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4922 :	"IComparable"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4922 :	"Criterion"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4922 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_implicitCS , ! , if , }
		- SUCC   = { authorityFactory , if , }

4924 :	"if"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , components , < , second , identifiers , sort , res , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , == , front , authorityFactory , empty , && , this , >= , io , || , insignificantName , a , dbContext , databaseContext , lambdaSort , if , ! , ci_equal , & , Pair , DatabaseContextNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { res , return , }

4924 :	"authorityFactory"
		- NEIGH  = { authorityFactory , if , }
		- PARENT = { }
		- CHILD  = { size , components , < , second , identifiers , sort , res , b , foundEquivalentName , hasCodeCompatibleOfAuthorityFactory , thisName , == , front , authorityFactory , empty , && , this , >= , io , || , insignificantName , a , dbContext , databaseContext , lambdaSort , if , ! , ci_equal , & , Pair , DatabaseContextNNPtr , }
		- PRED   = { EQUIVALENT , EQUIVALENT_EXCEPT_AXIS_ORDER_GEOGCRS , util , Criterion , IComparable , l_implicitCS , crsCriterion , }
		- SUCC   = { res , return , }

4925 :	"io"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

4925 :	"DatabaseContextNNPtr"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

4925 :	"&"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

4925 :	"dbContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

4926 :	"authorityFactory"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

4926 :	"databaseContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { ci_equal , || , empty , thisName , insignificantName , }

4928 :	"insignificantName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4928 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4928 :	"empty"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4928 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4929 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4929 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4929 :	"||"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4930 :	"ci_equal"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4930 :	"thisName"
		- NEIGH  = { ci_equal , || , empty , thisName , insignificantName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { foundEquivalentName , }

4931 :	"foundEquivalentName"
		- NEIGH  = { foundEquivalentName , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { ci_equal , || , empty , thisName , insignificantName , }
		- SUCC   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }

4933 :	"if"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4933 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4933 :	"this"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4933 :	"authorityFactory"
		- NEIGH  = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { insignificantName , id , & , ! , if , identifiers , for , }
		- PRED   = { foundEquivalentName , }
		- SUCC   = { a , Pair , thisName , & , b , lambdaSort , }

4936 :	"for"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4936 :	"&"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4936 :	"id"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4936 :	"identifiers"
		- NEIGH  = { id , & , identifiers , for , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PRED   = { }
		- SUCC   = { }

4937 :	"if"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , get , code , id , match , * , dbContext , createCompoundCRS , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

4937 :	"hasCodeCompatibleOfAuthorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , get , code , id , match , * , dbContext , createCompoundCRS , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

4937 :	"id"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , get , code , id , match , * , dbContext , createCompoundCRS , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

4937 :	"authorityFactory"
		- NEIGH  = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- PARENT = { id , & , identifiers , for , }
		- CHILD  = { & , catch , emplace_back , res , get , code , id , match , * , dbContext , createCompoundCRS , crsCriterion , AuthorityFactory , create , std , codeSpace , exception , return , io , _isEquivalentTo , crs , }
		- PRED   = { }
		- SUCC   = { }

4939 :	"crs"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4939 :	"io"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4939 :	"AuthorityFactory"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4939 :	"create"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4940 :	"dbContext"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4940 :	"*"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4940 :	"id"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4940 :	"codeSpace"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4941 :	"createCompoundCRS"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4941 :	"id"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4941 :	"code"
		- NEIGH  = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }

4942 :	"match"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4943 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4943 :	"crs"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4943 :	"get"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4943 :	"crsCriterion"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4943 :	"dbContext"
		- NEIGH  = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { code , id , * , dbContext , createCompoundCRS , AuthorityFactory , create , codeSpace , io , crs , }
		- SUCC   = { match , crs , emplace_back , res , }

4944 :	"res"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

4944 :	"emplace_back"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

4944 :	"crs"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

4944 :	"match"
		- NEIGH  = { match , crs , emplace_back , res , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { dbContext , match , crsCriterion , get , crs , _isEquivalentTo , }
		- SUCC   = { res , return , }

4945 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

4945 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { match , crs , emplace_back , res , }
		- SUCC   = { & , exception , std , catch , }

4946 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4946 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4946 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4946 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { authorityFactory , id , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { }
		- PRED   = { res , return , }
		- SUCC   = { }

4950 :	"if"
		- NEIGH  = { ! , insignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

4950 :	"!"
		- NEIGH  = { ! , insignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

4950 :	"insignificantName"
		- NEIGH  = { ! , insignificantName , if , }
		- PARENT = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- CHILD  = { < , ++ , ipass , for , }
		- PRED   = { }
		- SUCC   = { }

4951 :	"for"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4951 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4951 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4951 :	"<"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4951 :	"ipass"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4951 :	"++"
		- NEIGH  = { < , ++ , ipass , for , }
		- PARENT = { ! , insignificantName , if , }
		- CHILD  = { res , ! , if , obj , & , COMPOUND_CRS , AuthorityFactory , for , approximateMatch , ObjectType , io , createObjectsFromName , == , authorityFactory , objects , empty , thisName , ipass , }
		- PRED   = { }
		- SUCC   = { }

4952 :	"approximateMatch"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

4952 :	"ipass"
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

4952 :	"=="
		- NEIGH  = { == , ipass , approximateMatch , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }

4953 :	"objects"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4953 :	"authorityFactory"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4953 :	"createObjectsFromName"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4954 :	"thisName"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4954 :	"io"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4954 :	"AuthorityFactory"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4954 :	"ObjectType"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4954 :	"COMPOUND_CRS"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4955 :	"approximateMatch"
		- NEIGH  = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { }
		- PRED   = { == , ipass , approximateMatch , }
		- SUCC   = { obj , & , objects , for , }

4956 :	"for"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , crsCriterion , get , assert , if , |= , c_str , thisName , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4956 :	"&"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , crsCriterion , get , assert , if , |= , c_str , thisName , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4956 :	"obj"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , crsCriterion , get , assert , if , |= , c_str , thisName , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4956 :	"objects"
		- NEIGH  = { obj , & , objects , for , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { dbContext , crsCriterion , get , assert , if , |= , c_str , thisName , isEquivalentName , nameStr , metadata , NN_NO_CHECK , > , Identifier , CompoundCRS , eqName , util , < , crsNN , foundEquivalentName , obj , _isEquivalentTo , crs , nn_dynamic_pointer_cast , }
		- PRED   = { approximateMatch , COMPOUND_CRS , AuthorityFactory , objects , io , ObjectType , createObjectsFromName , authorityFactory , thisName , }
		- SUCC   = { empty , res , ! , if , }

4957 :	"crs"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4957 :	"util"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4957 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4957 :	"<"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4957 :	"CompoundCRS"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4957 :	">"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4957 :	"obj"
		- NEIGH  = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs , assert , }

4958 :	"assert"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

4958 :	"crs"
		- NEIGH  = { crs , assert , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { obj , > , CompoundCRS , < , nn_dynamic_pointer_cast , util , crs , }
		- SUCC   = { NN_NO_CHECK , crs , crsNN , }

4959 :	"crsNN"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

4959 :	"NN_NO_CHECK"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

4959 :	"crs"
		- NEIGH  = { NN_NO_CHECK , crs , crsNN , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { crs , assert , }
		- SUCC   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }

4960 :	"eqName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4960 :	"metadata"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4960 :	"Identifier"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4960 :	"isEquivalentName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4961 :	"thisName"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4961 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4961 :	"crs"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4961 :	"nameStr"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4961 :	"c_str"
		- NEIGH  = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { NN_NO_CHECK , crs , crsNN , }
		- SUCC   = { |= , eqName , foundEquivalentName , }

4962 :	"foundEquivalentName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

4962 :	"|="
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

4962 :	"eqName"
		- NEIGH  = { |= , eqName , foundEquivalentName , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { }
		- PRED   = { nameStr , crs , c_str , thisName , metadata , isEquivalentName , Identifier , eqName , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

4963 :	"if"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4963 :	"_isEquivalentTo"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4963 :	"crs"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4963 :	"get"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4963 :	"crsCriterion"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4963 :	"dbContext"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { obj , & , objects , for , }
		- CHILD  = { eqName , crsNN , res , emplace_back , == , nameStr , crs , thisName , if , }
		- PRED   = { |= , eqName , foundEquivalentName , }
		- SUCC   = { }

4964 :	"if"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4964 :	"crs"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4964 :	"nameStr"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4964 :	"=="
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4964 :	"thisName"
		- NEIGH  = { == , nameStr , crs , thisName , if , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { return , crsNN , clear , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { crsNN , eqName , emplace_back , res , }

4965 :	"res"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

4965 :	"clear"
		- NEIGH  = { clear , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crsNN , emplace_back , res , }

4966 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

4966 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

4966 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { clear , res , }
		- SUCC   = { res , return , }

4967 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

4967 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { == , nameStr , crs , thisName , if , }
		- CHILD  = { }
		- PRED   = { crsNN , emplace_back , res , }
		- SUCC   = { }

4969 :	"res"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

4969 :	"emplace_back"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

4969 :	"crsNN"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

4969 :	"eqName"
		- NEIGH  = { crsNN , eqName , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { == , nameStr , crs , thisName , if , }
		- SUCC   = { }

4972 :	"res"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4972 :	"emplace_back"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4972 :	"crsNN"
		- NEIGH  = { crsNN , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4975 :	"if"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

4975 :	"!"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

4975 :	"res"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

4975 :	"empty"
		- NEIGH  = { empty , res , ! , if , }
		- PARENT = { < , ++ , ipass , for , }
		- CHILD  = { break , }
		- PRED   = { obj , & , objects , for , }
		- SUCC   = { }

4976 :	"break"
		- NEIGH  = { break , }
		- PARENT = { empty , res , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4981 :	"lambdaSort"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4981 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4981 :	"thisName"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4981 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4981 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4981 :	"a"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4981 :	"Pair"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4981 :	"&"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4981 :	"b"
		- NEIGH  = { a , Pair , thisName , & , b , lambdaSort , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , this , hasCodeCompatibleOfAuthorityFactory , if , }
		- SUCC   = { lambdaSort , sort , res , }

4983 :	"if"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4983 :	"a"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4983 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4983 :	">"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4983 :	"b"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4983 :	"second"
		- NEIGH  = { > , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { }
		- SUCC   = { < , second , a , b , if , }

4984 :	"return"
		- NEIGH  = { return , }
		- PARENT = { > , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4986 :	"if"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4986 :	"a"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4986 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4986 :	"<"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4986 :	"b"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4986 :	"second"
		- NEIGH  = { < , second , a , b , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , second , a , b , if , }
		- SUCC   = { nameStr , first , a , aName , & , }

4987 :	"return"
		- NEIGH  = { return , }
		- PARENT = { < , second , a , b , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4991 :	"&"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4991 :	"aName"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4991 :	"a"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4991 :	"first"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4991 :	"nameStr"
		- NEIGH  = { nameStr , first , a , aName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , second , a , b , if , }
		- SUCC   = { nameStr , first , b , bName , & , }

4992 :	"&"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4992 :	"bName"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4992 :	"b"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4992 :	"first"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4992 :	"nameStr"
		- NEIGH  = { nameStr , first , b , bName , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , first , a , aName , & , }
		- SUCC   = { != , bName , && , == , aName , thisName , if , }

4993 :	"if"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4993 :	"aName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4993 :	"=="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4993 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4993 :	"&&"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4993 :	"bName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4993 :	"!="
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4993 :	"thisName"
		- NEIGH  = { != , bName , && , == , aName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { nameStr , first , b , bName , & , }
		- SUCC   = { != , aName , && , == , bName , thisName , if , }

4994 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , bName , && , == , aName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

4996 :	"if"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4996 :	"bName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4996 :	"=="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4996 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4996 :	"&&"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4996 :	"aName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4996 :	"!="
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4996 :	"thisName"
		- NEIGH  = { != , aName , && , == , bName , thisName , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { != , bName , && , == , aName , thisName , if , }
		- SUCC   = { bName , < , aName , return , }

4997 :	"return"
		- NEIGH  = { return , }
		- PARENT = { != , aName , && , == , bName , thisName , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5001 :	"return"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

5001 :	"aName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

5001 :	"<"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

5001 :	"bName"
		- NEIGH  = { bName , < , aName , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , aName , && , == , bName , thisName , if , }
		- SUCC   = { }

5005 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }

5005 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }

5005 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { }
		- PRED   = { a , Pair , thisName , & , b , lambdaSort , }
		- SUCC   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }

5007 :	"if"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5007 :	"identifiers"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5007 :	"empty"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5007 :	"&&"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5007 :	"!"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5007 :	"foundEquivalentName"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5007 :	"&&"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5008 :	"res"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5008 :	"empty"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5008 :	"||"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5008 :	"res"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5008 :	"front"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5008 :	"second"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5008 :	"<"
		- NEIGH  = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { thisName , size , nameStr , sort , && , as_nullable , front , == , pair , authorityFactory , shared_from_this , > , dynamic_pointer_cast , NN_NO_CHECK , createCompoundCRSFromExisting , if , candidates , res , & , >> , lambdaSort , for , crs , CompoundCRS , first , self , string , < , alreadyKnown , second , set , std , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { size , res , == , && , empty , identifiers , components , if , }

5009 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"set"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"pair"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"<"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"std"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"string"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	">>"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5009 :	"alreadyKnown"
		- NEIGH  = { >> , string , pair , < , alreadyKnown , set , std , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { pair , res , & , for , }

5010 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

5010 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

5010 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

5010 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { code , * , < , insert , alreadyKnown , codeSpace , std , empty , string , ! , > , assert , first , identifiers , pair , ids , & , }
		- PRED   = { >> , string , pair , < , alreadyKnown , set , std , }
		- SUCC   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }

5011 :	"&"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

5011 :	"ids"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

5011 :	"pair"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

5011 :	"first"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

5011 :	"identifiers"
		- NEIGH  = { identifiers , pair , first , ids , & , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

5012 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

5012 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

5012 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

5012 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , pair , first , ids , & , }
		- SUCC   = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }

5013 :	"alreadyKnown"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5013 :	"insert"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5013 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5013 :	"pair"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5013 :	"<"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5013 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5013 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5013 :	"std"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5013 :	"string"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5013 :	">"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5014 :	"*"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5014 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5014 :	"codeSpace"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5014 :	"ids"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5014 :	"code"
		- NEIGH  = { * , string , code , ids , < , pair , std , codeSpace , > , insert , alreadyKnown , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { }

5017 :	"self"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

5017 :	"NN_NO_CHECK"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

5017 :	"std"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

5017 :	"dynamic_pointer_cast"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

5017 :	"<"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

5017 :	"CompoundCRS"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

5017 :	">"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

5018 :	"shared_from_this"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

5018 :	"as_nullable"
		- NEIGH  = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }

5019 :	"candidates"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

5020 :	"authorityFactory"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

5020 :	"createCompoundCRSFromExisting"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

5020 :	"self"
		- NEIGH  = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { shared_from_this , > , CompoundCRS , < , dynamic_pointer_cast , as_nullable , self , std , NN_NO_CHECK , }
		- SUCC   = { candidates , crs , & , for , }

5021 :	"for"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { dbContext , get , != , code , * , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , crsCriterion , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

5021 :	"&"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { dbContext , get , != , code , * , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , crsCriterion , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

5021 :	"crs"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { dbContext , get , != , code , * , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , crsCriterion , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

5021 :	"candidates"
		- NEIGH  = { candidates , crs , & , for , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { dbContext , get , != , code , * , < , empty , pair , find , alreadyKnown , assert , if , _isEquivalentTo , end , string , crs , ! , crsCriterion , identifiers , > , codeSpace , std , ids , & , }
		- PRED   = { createCompoundCRSFromExisting , self , authorityFactory , candidates , }
		- SUCC   = { lambdaSort , sort , res , }

5022 :	"&"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

5022 :	"ids"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

5022 :	"crs"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

5022 :	"identifiers"
		- NEIGH  = { identifiers , crs , ids , & , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ids , ! , assert , }

5023 :	"assert"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

5023 :	"!"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

5023 :	"ids"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

5023 :	"empty"
		- NEIGH  = { empty , ids , ! , assert , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { }
		- PRED   = { identifiers , crs , ids , & , }
		- SUCC   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }

5024 :	"if"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	"find"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	"pair"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	"<"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	"std"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	"string"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5024 :	">"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5025 :	"*"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5025 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5025 :	"codeSpace"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5025 :	"ids"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5025 :	"code"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5025 :	"!="
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5026 :	"alreadyKnown"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5026 :	"end"
		- NEIGH  = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { continue , }
		- PRED   = { empty , ids , ! , assert , }
		- SUCC   = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }

5027 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5030 :	"if"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { insignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

5030 :	"_isEquivalentTo"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { insignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

5030 :	"crs"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { insignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

5030 :	"get"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { insignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

5030 :	"crsCriterion"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { insignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

5030 :	"dbContext"
		- NEIGH  = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- PARENT = { candidates , crs , & , for , }
		- CHILD  = { insignificantName , crs , emplace_back , res , }
		- PRED   = { != , code , * , std , codeSpace , > , ids , < , find , pair , end , string , alreadyKnown , if , }
		- SUCC   = { }

5031 :	"res"
		- NEIGH  = { insignificantName , crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5031 :	"emplace_back"
		- NEIGH  = { insignificantName , crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5031 :	"crs"
		- NEIGH  = { insignificantName , crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5031 :	"insignificantName"
		- NEIGH  = { insignificantName , crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5033 :	"res"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5033 :	"emplace_back"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5033 :	"crs"
		- NEIGH  = { crs , emplace_back , res , }
		- PARENT = { get , crs , _isEquivalentTo , dbContext , crsCriterion , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5037 :	"res"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { first , thisName , second , nameStr , front , && , == , size , res , if , }

5037 :	"sort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { first , thisName , second , nameStr , front , && , == , size , res , if , }

5037 :	"lambdaSort"
		- NEIGH  = { lambdaSort , sort , res , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { }
		- PRED   = { candidates , crs , & , for , }
		- SUCC   = { first , thisName , second , nameStr , front , && , == , size , res , if , }

5041 :	"if"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5041 :	"res"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5041 :	"size"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5041 :	"=="
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5041 :	"&&"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5041 :	"res"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5041 :	"front"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5041 :	"second"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5041 :	"=="
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5041 :	"&&"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5042 :	"thisName"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5042 :	"=="
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5042 :	"res"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5042 :	"front"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5042 :	"first"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5042 :	"nameStr"
		- NEIGH  = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- PARENT = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- CHILD  = { second , front , res , }
		- PRED   = { lambdaSort , sort , res , }
		- SUCC   = { }

5043 :	"res"
		- NEIGH  = { second , front , res , }
		- PARENT = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5043 :	"front"
		- NEIGH  = { second , front , res , }
		- PARENT = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5043 :	"second"
		- NEIGH  = { second , front , res , }
		- PARENT = { first , thisName , second , nameStr , front , && , == , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5049 :	"if"
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5049 :	"identifiers"
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5049 :	"empty"
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5049 :	"&&"
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5049 :	"res"
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5049 :	"empty"
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5049 :	"&&"
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5049 :	"components"
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5049 :	"size"
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5049 :	"=="
		- NEIGH  = { size , res , == , && , empty , identifiers , components , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { second , == , authorityFactory , front , >= , candidatesHorizCRS , && , identify , if , components , size , candidatesVertCRS , }
		- PRED   = { < , second , || , res , foundEquivalentName , if , ! , front , && , empty , identifiers , }
		- SUCC   = { >= , size , res , if , }

5050 :	"candidatesHorizCRS"
		- NEIGH  = { authorityFactory , identify , components , candidatesHorizCRS , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , identify , components , candidatesVertCRS , }

5050 :	"components"
		- NEIGH  = { authorityFactory , identify , components , candidatesHorizCRS , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , identify , components , candidatesVertCRS , }

5050 :	"identify"
		- NEIGH  = { authorityFactory , identify , components , candidatesHorizCRS , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , identify , components , candidatesVertCRS , }

5050 :	"authorityFactory"
		- NEIGH  = { authorityFactory , identify , components , candidatesHorizCRS , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { authorityFactory , identify , components , candidatesVertCRS , }

5051 :	"candidatesVertCRS"
		- NEIGH  = { authorityFactory , identify , components , candidatesVertCRS , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , identify , components , candidatesHorizCRS , }
		- SUCC   = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }

5051 :	"components"
		- NEIGH  = { authorityFactory , identify , components , candidatesVertCRS , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , identify , components , candidatesHorizCRS , }
		- SUCC   = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }

5051 :	"identify"
		- NEIGH  = { authorityFactory , identify , components , candidatesVertCRS , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , identify , components , candidatesHorizCRS , }
		- SUCC   = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }

5051 :	"authorityFactory"
		- NEIGH  = { authorityFactory , identify , components , candidatesVertCRS , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , identify , components , candidatesHorizCRS , }
		- SUCC   = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }

5052 :	"if"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5052 :	"candidatesHorizCRS"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5052 :	"size"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5052 :	"=="
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5052 :	"&&"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5053 :	"candidatesVertCRS"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5053 :	"size"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5053 :	"=="
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5053 :	"&&"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5054 :	"candidatesHorizCRS"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5054 :	"front"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5054 :	"second"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5054 :	">="
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5054 :	"&&"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5055 :	"candidatesVertCRS"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5055 :	"front"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5055 :	"second"
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5055 :	">="
		- NEIGH  = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- PARENT = { size , res , == , && , empty , identifiers , components , if , }
		- CHILD  = { min , std , res , thisName , isEquivalentName , Identifier , CompoundCRS , eqName , + , metadata , nameStr , == , front , NAME_KEY , c_str , newCRS , emplace_back , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , second , set , candidatesVertCRS , }
		- PRED   = { authorityFactory , identify , components , candidatesVertCRS , }
		- SUCC   = { }

5056 :	"newCRS"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5056 :	"CompoundCRS"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5056 :	"create"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5057 :	"util"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5057 :	"PropertyMap"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5057 :	"set"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5058 :	"common"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5058 :	"IdentifiedObject"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5058 :	"NAME_KEY"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5059 :	"candidatesHorizCRS"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5059 :	"front"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5059 :	"first"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5059 :	"nameStr"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5059 :	"+"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5059 :	"+"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5060 :	"candidatesVertCRS"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5060 :	"front"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5060 :	"first"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5060 :	"nameStr"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5061 :	"candidatesHorizCRS"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5061 :	"front"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5061 :	"first"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5062 :	"candidatesVertCRS"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5062 :	"front"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5062 :	"first"
		- NEIGH  = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }

5063 :	"eqName"
		- NEIGH  = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- SUCC   = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }

5063 :	"metadata"
		- NEIGH  = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- SUCC   = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }

5063 :	"Identifier"
		- NEIGH  = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- SUCC   = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }

5063 :	"isEquivalentName"
		- NEIGH  = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- SUCC   = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }

5064 :	"thisName"
		- NEIGH  = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- SUCC   = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }

5064 :	"c_str"
		- NEIGH  = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- SUCC   = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }

5064 :	"newCRS"
		- NEIGH  = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- SUCC   = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }

5064 :	"nameStr"
		- NEIGH  = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- SUCC   = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }

5064 :	"c_str"
		- NEIGH  = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { + , nameStr , front , NAME_KEY , newCRS , IdentifiedObject , PropertyMap , common , util , create , candidatesHorizCRS , first , set , candidatesVertCRS , CompoundCRS , }
		- SUCC   = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }

5065 :	"res"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5065 :	"emplace_back"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5066 :	"newCRS"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5067 :	"std"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5067 :	"min"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5067 :	"thisName"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5067 :	"=="
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5067 :	"newCRS"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5067 :	"nameStr"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5068 :	"eqName"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5069 :	"std"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5069 :	"min"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5069 :	"candidatesHorizCRS"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5069 :	"front"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5069 :	"second"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5070 :	"candidatesVertCRS"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5070 :	"front"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5070 :	"second"
		- NEIGH  = { candidatesVertCRS , second , emplace_back , candidatesHorizCRS , thisName , std , newCRS , res , min , front , nameStr , == , eqName , }
		- PARENT = { >= , second , front , && , == , candidatesVertCRS , size , candidatesHorizCRS , if , }
		- CHILD  = { }
		- PRED   = { nameStr , c_str , thisName , metadata , newCRS , isEquivalentName , Identifier , eqName , }
		- SUCC   = { }

5075 :	"if"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { size , res , == , && , empty , identifiers , components , if , }
		- SUCC   = { }

5075 :	"res"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { size , res , == , && , empty , identifiers , components , if , }
		- SUCC   = { }

5075 :	"size"
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { size , res , == , && , empty , identifiers , components , if , }
		- SUCC   = { }

5075 :	">="
		- NEIGH  = { >= , size , res , if , }
		- PARENT = { authorityFactory , if , }
		- CHILD  = { return , pair , for , list , std , < , second , & , newRes , > , Pair , front , res , highestConfidence , }
		- PRED   = { size , res , == , && , empty , identifiers , components , if , }
		- SUCC   = { }

5076 :	"highestConfidence"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

5076 :	"res"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

5076 :	"front"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

5076 :	"second"
		- NEIGH  = { second , front , res , highestConfidence , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , newRes , Pair , < , list , std , }

5077 :	"std"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

5077 :	"list"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

5077 :	"<"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

5077 :	"Pair"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

5077 :	">"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

5077 :	"newRes"
		- NEIGH  = { > , newRes , Pair , < , list , std , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { second , front , res , highestConfidence , }
		- SUCC   = { pair , res , & , for , }

5078 :	"for"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

5078 :	"&"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

5078 :	"pair"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

5078 :	"res"
		- NEIGH  = { pair , res , & , for , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { highestConfidence , == , second , pair , if , }
		- PRED   = { > , newRes , Pair , < , list , std , }
		- SUCC   = { newRes , return , }

5079 :	"if"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

5079 :	"pair"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

5079 :	"second"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

5079 :	"=="
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

5079 :	"highestConfidence"
		- NEIGH  = { highestConfidence , == , second , pair , if , }
		- PARENT = { pair , res , & , for , }
		- CHILD  = { break , pair , push_back , newRes , }
		- PRED   = { }
		- SUCC   = { }

5080 :	"newRes"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5080 :	"push_back"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5080 :	"pair"
		- NEIGH  = { pair , push_back , newRes , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5082 :	"break"
		- NEIGH  = { break , }
		- PARENT = { highestConfidence , == , second , pair , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5085 :	"return"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

5085 :	"newRes"
		- NEIGH  = { newRes , return , }
		- PARENT = { >= , size , res , if , }
		- CHILD  = { }
		- PRED   = { pair , res , & , for , }
		- SUCC   = { }

5089 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

5089 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , if , }
		- SUCC   = { }

5096 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5096 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5096 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5096 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5096 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5096 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5096 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5096 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5097 :	"CompoundCRS"
		- NEIGH  = { CompoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5097 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5097 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5097 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5097 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5097 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5098 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5098 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5098 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5098 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5098 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5098 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5099 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

5099 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

5099 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

5099 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

5099 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

5099 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { identify , authorityFactory , resTemp , }

5100 :	"resTemp"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

5100 :	"identify"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

5100 :	"authorityFactory"
		- NEIGH  = { identify , authorityFactory , resTemp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { pair , resTemp , & , for , }

5101 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

5101 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

5101 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

5101 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { }
		- CHILD  = { second , first , pair , emplace_back , res , }
		- PRED   = { identify , authorityFactory , resTemp , }
		- SUCC   = { res , return , }

5102 :	"res"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5102 :	"emplace_back"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5102 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5102 :	"first"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5102 :	"pair"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5102 :	"second"
		- NEIGH  = { second , first , pair , emplace_back , res , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5104 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

5104 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { pair , resTemp , & , for , }
		- SUCC   = { }

5112 :	"PROJ_INTERNAL"
		- NEIGH  = { PROJ_INTERNAL , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5112 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5112 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5113 :	"CRSNNPtr"
		- NEIGH  = { baseCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hubCRS_ , CRSNNPtr , }

5113 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { hubCRS_ , CRSNNPtr , }

5114 :	"CRSNNPtr"
		- NEIGH  = { hubCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , CRSNNPtr , }
		- SUCC   = { TransformationNNPtr , transformation_ , operation , }

5114 :	"hubCRS_"
		- NEIGH  = { hubCRS_ , CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS_ , CRSNNPtr , }
		- SUCC   = { TransformationNNPtr , transformation_ , operation , }

5115 :	"operation"
		- NEIGH  = { TransformationNNPtr , transformation_ , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hubCRS_ , CRSNNPtr , }
		- SUCC   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }

5115 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , transformation_ , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hubCRS_ , CRSNNPtr , }
		- SUCC   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }

5115 :	"transformation_"
		- NEIGH  = { TransformationNNPtr , transformation_ , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { hubCRS_ , CRSNNPtr , }
		- SUCC   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }

5117 :	"Private"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5117 :	"CRSNNPtr"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5117 :	"&"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5117 :	"baseCRSIn"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5117 :	"CRSNNPtr"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5117 :	"&"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5117 :	"hubCRSIn"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5118 :	"operation"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5118 :	"TransformationNNPtr"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5118 :	"&"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5118 :	"transformationIn"
		- NEIGH  = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { TransformationNNPtr , transformation_ , operation , }
		- SUCC   = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }

5120 :	"CRSNNPtr"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5120 :	"&"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5120 :	"baseCRS"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5120 :	"return"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5120 :	"baseCRS_"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5121 :	"CRSNNPtr"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5121 :	"&"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5121 :	"hubCRS"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5121 :	"return"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5121 :	"hubCRS_"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5122 :	"operation"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5122 :	"TransformationNNPtr"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5122 :	"&"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5122 :	"transformation"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5123 :	"return"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5123 :	"transformation_"
		- NEIGH  = { transformation_ , transformation , operation , hubCRS_ , TransformationNNPtr , hubCRS , baseCRS_ , return , CRSNNPtr , baseCRS , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , TransformationNNPtr , operation , hubCRSIn , CRSNNPtr , baseCRSIn , & , Private , }
		- SUCC   = { }

5127 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5127 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5127 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5128 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5128 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5128 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5128 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5128 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5128 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5129 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5129 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5129 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5129 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5130 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5130 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5130 :	"hubCRS_"
		- NEIGH  = { hubCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5130 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5131 :	"transformation_"
		- NEIGH  = { transformation_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5131 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5137 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5137 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5137 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5137 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5137 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5137 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5137 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5137 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5138 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5138 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5138 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5138 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5139 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5139 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5139 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5139 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5139 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5139 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5139 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5139 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5139 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5144 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5144 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5144 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5144 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5144 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5145 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5145 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5146 :	"hubCRS"
		- NEIGH  = { hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5147 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5147 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5147 :	"transformation"
		- NEIGH  = { transformation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5152 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5152 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5157 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5157 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5157 :	"shallowCloneAsBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5158 :	"crs"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5158 :	"BoundCRS"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5158 :	"nn_make_shared"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5158 :	"<"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5158 :	"BoundCRS"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5158 :	">"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5158 :	"*"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5158 :	"this"
		- NEIGH  = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5159 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5159 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5159 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , BoundCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

5160 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5160 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

5165 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5165 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5165 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5165 :	"return"
		- NEIGH  = { shallowCloneAsBoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5165 :	"shallowCloneAsBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"return"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"d"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5175 :	"baseCRS_"
		- NEIGH  = { baseCRS_ , d , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5180 :	"CRS"
		- NEIGH  = { CRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5180 :	"setCanonicalBoundCRS"
		- NEIGH  = { setCanonicalBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5180 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5180 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5180 :	"boundCRS"
		- NEIGH  = { boundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5182 :	"d"
		- NEIGH  = { boundCRS , canonicalBoundCRS_ , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5182 :	"canonicalBoundCRS_"
		- NEIGH  = { boundCRS , canonicalBoundCRS_ , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5182 :	"boundCRS"
		- NEIGH  = { boundCRS , canonicalBoundCRS_ , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5200 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5200 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5200 :	"baseCRSWithCanonicalBoundCRS"
		- NEIGH  = { baseCRSWithCanonicalBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5201 :	"baseCRSClone"
		- NEIGH  = { _shallowClone , baseCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }

5201 :	"baseCRS"
		- NEIGH  = { _shallowClone , baseCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }

5201 :	"_shallowClone"
		- NEIGH  = { _shallowClone , baseCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }

5202 :	"baseCRSClone"
		- NEIGH  = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _shallowClone , baseCRS , baseCRSClone , }
		- SUCC   = { baseCRSClone , return , }

5202 :	"setCanonicalBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _shallowClone , baseCRS , baseCRSClone , }
		- SUCC   = { baseCRSClone , return , }

5202 :	"shallowCloneAsBoundCRS"
		- NEIGH  = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _shallowClone , baseCRS , baseCRSClone , }
		- SUCC   = { baseCRSClone , return , }

5203 :	"return"
		- NEIGH  = { baseCRSClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- SUCC   = { }

5203 :	"baseCRSClone"
		- NEIGH  = { baseCRSClone , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { shallowCloneAsBoundCRS , setCanonicalBoundCRS , baseCRSClone , }
		- SUCC   = { }

5212 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5212 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5212 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5212 :	"hubCRS"
		- NEIGH  = { hubCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5212 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5212 :	"return"
		- NEIGH  = { d , hubCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5212 :	"d"
		- NEIGH  = { d , hubCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5212 :	"hubCRS_"
		- NEIGH  = { d , hubCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5220 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5220 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5220 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5221 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5221 :	"transformation"
		- NEIGH  = { transformation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5221 :	"PROJ_PURE_DEFN"
		- NEIGH  = { PROJ_PURE_DEFN , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5222 :	"return"
		- NEIGH  = { d , transformation_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5222 :	"d"
		- NEIGH  = { d , transformation_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5222 :	"transformation_"
		- NEIGH  = { d , transformation_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5235 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5236 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5236 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5236 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5236 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5236 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5236 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5236 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5236 :	"hubCRSIn"
		- NEIGH  = { hubCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5237 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5237 :	"TransformationNNPtr"
		- NEIGH  = { TransformationNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5237 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5237 :	"transformationIn"
		- NEIGH  = { transformationIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5238 :	"crs"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5238 :	"BoundCRS"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5238 :	"nn_make_shared"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5238 :	"<"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5238 :	"BoundCRS"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5238 :	">"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5238 :	"baseCRSIn"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5238 :	"hubCRSIn"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5239 :	"transformationIn"
		- NEIGH  = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5240 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { nameStr , l_name , baseCRSIn , & , }

5240 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { nameStr , l_name , baseCRSIn , & , }

5240 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transformationIn , hubCRSIn , < , BoundCRS , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { nameStr , l_name , baseCRSIn , & , }

5241 :	"&"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

5241 :	"l_name"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

5241 :	"baseCRSIn"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

5241 :	"nameStr"
		- NEIGH  = { nameStr , l_name , baseCRSIn , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { empty , l_name , ! , if , }

5242 :	"if"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

5242 :	"!"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

5242 :	"l_name"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

5242 :	"empty"
		- NEIGH  = { empty , l_name , ! , if , }
		- PARENT = { }
		- CHILD  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PRED   = { nameStr , l_name , baseCRSIn , & , }
		- SUCC   = { crs , return , }

5243 :	"crs"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5243 :	"setProperties"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5243 :	"util"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5243 :	"PropertyMap"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5243 :	"set"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"common"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"IdentifiedObject"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"NAME_KEY"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5244 :	"l_name"
		- NEIGH  = { l_name , IdentifiedObject , set , common , util , PropertyMap , setProperties , NAME_KEY , crs , }
		- PARENT = { empty , l_name , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5246 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , ! , if , }
		- SUCC   = { }

5246 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , ! , if , }
		- SUCC   = { }

5258 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5259 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5259 :	"createFromTOWGS84"
		- NEIGH  = { createFromTOWGS84 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5259 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5259 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5259 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5260 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5260 :	"vector"
		- NEIGH  = { vector , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5260 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5260 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5260 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5260 :	"TOWGS84Parameters"
		- NEIGH  = { TOWGS84Parameters , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5261 :	"transf"
		- NEIGH  = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , baseCRSIn , create , targetCRS , return , }

5262 :	"operation"
		- NEIGH  = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , baseCRSIn , create , targetCRS , return , }

5262 :	"Transformation"
		- NEIGH  = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , baseCRSIn , create , targetCRS , return , }

5262 :	"createTOWGS84"
		- NEIGH  = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , baseCRSIn , create , targetCRS , return , }

5262 :	"baseCRSIn"
		- NEIGH  = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , baseCRSIn , create , targetCRS , return , }

5262 :	"TOWGS84Parameters"
		- NEIGH  = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { transf , baseCRSIn , create , targetCRS , return , }

5263 :	"return"
		- NEIGH  = { transf , baseCRSIn , create , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- SUCC   = { }

5263 :	"create"
		- NEIGH  = { transf , baseCRSIn , create , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- SUCC   = { }

5263 :	"baseCRSIn"
		- NEIGH  = { transf , baseCRSIn , create , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- SUCC   = { }

5263 :	"transf"
		- NEIGH  = { transf , baseCRSIn , create , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- SUCC   = { }

5263 :	"targetCRS"
		- NEIGH  = { transf , baseCRSIn , create , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- SUCC   = { }

5263 :	"transf"
		- NEIGH  = { transf , baseCRSIn , create , targetCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { transf , baseCRSIn , TOWGS84Parameters , createTOWGS84 , Transformation , operation , }
		- SUCC   = { }

5274 :	"BoundCRSNNPtr"
		- NEIGH  = { BoundCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5274 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5274 :	"createFromNadgrids"
		- NEIGH  = { createFromNadgrids , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5274 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5274 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5274 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5275 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5275 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5275 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5275 :	"filename"
		- NEIGH  = { filename , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5276 :	"sourceGeographicCRS"
		- NEIGH  = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }

5276 :	"baseCRSIn"
		- NEIGH  = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }

5276 :	"extractGeographicCRS"
		- NEIGH  = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }

5277 :	"transformationSourceCRS"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5278 :	"sourceGeographicCRS"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5279 :	"NN_NO_CHECK"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5279 :	"std"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5279 :	"static_pointer_cast"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5279 :	"<"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5279 :	"CRS"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5279 :	">"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5279 :	"sourceGeographicCRS"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5280 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { extractGeographicCRS , baseCRSIn , sourceGeographicCRS , }
		- SUCC   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }

5281 :	"if"
		- NEIGH  = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

5281 :	"sourceGeographicCRS"
		- NEIGH  = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

5281 :	"!="
		- NEIGH  = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

5281 :	"&&"
		- NEIGH  = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

5282 :	"sourceGeographicCRS"
		- NEIGH  = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

5282 :	"primeMeridian"
		- NEIGH  = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

5282 :	"longitude"
		- NEIGH  = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

5282 :	"getSIValue"
		- NEIGH  = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

5282 :	"!="
		- NEIGH  = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- PARENT = { }
		- CHILD  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PRED   = { baseCRSIn , > , CRS , < , static_pointer_cast , NN_NO_CHECK , std , sourceGeographicCRS , transformationSourceCRS , }
		- SUCC   = { nameStr , transformationName , string , transformationSourceCRS , std , }

5283 :	"transformationSourceCRS"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5283 :	"GeographicCRS"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5283 :	"create"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5284 :	"util"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5284 :	"PropertyMap"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5284 :	"set"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5284 :	"common"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5284 :	"IdentifiedObject"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5284 :	"NAME_KEY"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5285 :	"sourceGeographicCRS"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5285 :	"nameStr"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5285 :	"+"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5287 :	"datum"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5287 :	"GeodeticReferenceFrame"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5287 :	"create"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5288 :	"util"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5288 :	"PropertyMap"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5288 :	"set"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5289 :	"common"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5289 :	"IdentifiedObject"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5289 :	"NAME_KEY"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5290 :	"sourceGeographicCRS"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5290 :	"datumNonNull"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5290 :	"nameStr"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5290 :	"+"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5292 :	"sourceGeographicCRS"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5292 :	"datumNonNull"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5292 :	"ellipsoid"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5293 :	"util"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5293 :	"optional"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5293 :	"<"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5293 :	"std"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5293 :	"string"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5293 :	">"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5293 :	"datum"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5293 :	"PrimeMeridian"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5293 :	"GREENWICH"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5294 :	"cs"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5294 :	"EllipsoidalCS"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5294 :	"createLatitudeLongitude"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"common"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"UnitOfMeasure"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5295 :	"DEGREE"
		- NEIGH  = { DEGREE , createLatitudeLongitude , cs , UnitOfMeasure , GREENWICH , PrimeMeridian , > , string , optional , create , ellipsoid , < , datum , std , GeodeticReferenceFrame , + , nameStr , EllipsoidalCS , common , sourceGeographicCRS , NAME_KEY , set , PropertyMap , IdentifiedObject , transformationSourceCRS , GeographicCRS , datumNonNull , util , }
		- PARENT = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5297 :	"std"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

5297 :	"string"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

5297 :	"transformationName"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

5297 :	"transformationSourceCRS"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

5297 :	"nameStr"
		- NEIGH  = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getSIValue , longitude , && , != , primeMeridian , sourceGeographicCRS , if , }
		- SUCC   = { += , transformationName , }

5298 :	"transformationName"
		- NEIGH  = { += , transformationName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- SUCC   = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }

5298 :	"+="
		- NEIGH  = { += , transformationName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , transformationName , string , transformationSourceCRS , std , }
		- SUCC   = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }

5300 :	"return"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5300 :	"create"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5301 :	"baseCRSIn"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5301 :	"GeographicCRS"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5301 :	"EPSG_4326"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5302 :	"operation"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5302 :	"Transformation"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5302 :	"createNTv2"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5303 :	"util"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5303 :	"PropertyMap"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5303 :	"set"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5303 :	"common"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5303 :	"IdentifiedObject"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5303 :	"NAME_KEY"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5304 :	"transformationName"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5305 :	"transformationSourceCRS"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5305 :	"GeographicCRS"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5305 :	"EPSG_4326"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5305 :	"filename"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5306 :	"std"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5306 :	"vector"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5306 :	"<"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5306 :	"metadata"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5306 :	"PositionalAccuracyNNPtr"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5306 :	">"
		- NEIGH  = { PositionalAccuracyNNPtr , metadata , > , vector , transformationSourceCRS , NAME_KEY , operation , set , IdentifiedObject , PropertyMap , < , transformationName , util , filename , common , Transformation , EPSG_4326 , create , GeographicCRS , baseCRSIn , std , createNTv2 , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { += , transformationName , }
		- SUCC   = { }

5311 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5311 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"return"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"dynamic_cast"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"<"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"GeodeticCRS"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"*"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	">"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"d"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"hubCRS"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"get"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"!="
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5312 :	"&&"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5313 :	"ci_equal"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5313 :	"d"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5313 :	"hubCRS"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5313 :	"nameStr"
		- NEIGH  = { nameStr , ci_equal , > , && , get , hubCRS , GeodeticCRS , d , != , < , dynamic_cast , * , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5318 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5318 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5318 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5318 :	"getHDatumPROJ4GRIDS"
		- NEIGH  = { getHDatumPROJ4GRIDS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5319 :	"if"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5319 :	"ci_equal"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5319 :	"d"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5319 :	"hubCRS"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5319 :	"nameStr"
		- NEIGH  = { nameStr , hubCRS , d , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { getNTv2Filename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5320 :	"return"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5320 :	"d"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5320 :	"transformation"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5320 :	"getNTv2Filename"
		- NEIGH  = { getNTv2Filename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , d , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5322 :	"return"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , d , ci_equal , if , }
		- SUCC   = { }

5322 :	"std"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , d , ci_equal , if , }
		- SUCC   = { }

5322 :	"string"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , d , ci_equal , if , }
		- SUCC   = { }

5327 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5327 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5327 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5327 :	"getVDatumPROJ4GRIDS"
		- NEIGH  = { getVDatumPROJ4GRIDS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5328 :	"if"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5328 :	"dynamic_cast"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5328 :	"<"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5328 :	"VerticalCRS"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5328 :	"*"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5328 :	">"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5328 :	"d"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5328 :	"baseCRS"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5328 :	"get"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5328 :	"&&"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5329 :	"ci_equal"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5329 :	"d"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5329 :	"hubCRS"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5329 :	"nameStr"
		- NEIGH  = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- PARENT = { }
		- CHILD  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PRED   = { }
		- SUCC   = { string , std , return , }

5330 :	"return"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5330 :	"d"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5330 :	"transformation"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5330 :	"getHeightToGeographic3DFilename"
		- NEIGH  = { getHeightToGeographic3DFilename , d , transformation , return , }
		- PARENT = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5332 :	"return"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- SUCC   = { }

5332 :	"std"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- SUCC   = { }

5332 :	"string"
		- NEIGH  = { string , std , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , hubCRS , > , && , if , ci_equal , get , baseCRS , < , dynamic_cast , * , VerticalCRS , d , }
		- SUCC   = { }

5338 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5338 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5338 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5338 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5338 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5338 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5339 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

5339 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

5339 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

5339 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

5339 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

5339 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

5339 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

5339 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , if , }

5340 :	"if"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , setTOWGS84Parameters , getTOWGS84Parameters , isTOWGS84Compatible , hdatumProj4GridName , if , getVDatumPROJ4GRIDS , empty , params , transformation , getHDatumPROJ4GRIDS , setAbridgedTransformation , vdatumProj4GridName , WKTConstants , hubCRS , TARGETCRS , endNode , _exportToWKT , SOURCECRS , ! , useESRIDialect , formatter , d , BOUNDCRS , baseCRS , vector , io , startNode , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5340 :	"isWKT2"
		- NEIGH  = { isWKT2 , if , }
		- PARENT = { }
		- CHILD  = { > , < , std , setTOWGS84Parameters , getTOWGS84Parameters , isTOWGS84Compatible , hdatumProj4GridName , if , getVDatumPROJ4GRIDS , empty , params , transformation , getHDatumPROJ4GRIDS , setAbridgedTransformation , vdatumProj4GridName , WKTConstants , hubCRS , TARGETCRS , endNode , _exportToWKT , SOURCECRS , ! , useESRIDialect , formatter , d , BOUNDCRS , baseCRS , vector , io , startNode , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

5341 :	"formatter"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

5341 :	"startNode"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

5341 :	"io"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

5341 :	"WKTConstants"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

5341 :	"BOUNDCRS"
		- NEIGH  = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SOURCECRS , WKTConstants , io , startNode , formatter , }

5342 :	"formatter"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5342 :	"startNode"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5342 :	"io"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5342 :	"WKTConstants"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5342 :	"SOURCECRS"
		- NEIGH  = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { BOUNDCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5343 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

5343 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

5343 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

5343 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { SOURCECRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

5344 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { TARGETCRS , WKTConstants , io , startNode , formatter , }

5344 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { TARGETCRS , WKTConstants , io , startNode , formatter , }

5345 :	"formatter"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

5345 :	"startNode"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

5345 :	"io"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

5345 :	"WKTConstants"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

5345 :	"TARGETCRS"
		- NEIGH  = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , hubCRS , d , }

5346 :	"d"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

5346 :	"hubCRS"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

5346 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

5346 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , hubCRS , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { TARGETCRS , WKTConstants , io , startNode , formatter , }
		- SUCC   = { endNode , formatter , }

5347 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , hubCRS , d , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5347 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , hubCRS , d , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5348 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , transformation , _exportToWKT , d , }

5348 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , transformation , _exportToWKT , d , }

5349 :	"d"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5349 :	"transformation"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5349 :	"_exportToWKT"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5349 :	"formatter"
		- NEIGH  = { formatter , transformation , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5350 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , transformation , _exportToWKT , d , }
		- SUCC   = { endNode , formatter , }

5350 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , transformation , _exportToWKT , d , }
		- SUCC   = { endNode , formatter , }

5351 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { }

5351 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { }

5354 :	"vdatumProj4GridName"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

5354 :	"getVDatumPROJ4GRIDS"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

5355 :	"if"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

5355 :	"!"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

5355 :	"vdatumProj4GridName"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

5355 :	"empty"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { return , std , _exportToWKT , d , baseCRS , vdatumProj4GridName , string , setVDatumExtension , formatter , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }

5356 :	"formatter"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5356 :	"setVDatumExtension"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5356 :	"vdatumProj4GridName"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5357 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

5357 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

5357 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

5357 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

5358 :	"formatter"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

5358 :	"setVDatumExtension"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

5358 :	"std"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

5358 :	"string"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

5359 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { string , setVDatumExtension , std , formatter , }
		- SUCC   = { }

5362 :	"hdatumProj4GridName"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , vdatumProj4GridName , ! , if , }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

5362 :	"getHDatumPROJ4GRIDS"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { empty , vdatumProj4GridName , ! , if , }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

5363 :	"if"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

5363 :	"!"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

5363 :	"hdatumProj4GridName"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

5363 :	"empty"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { string , return , std , _exportToWKT , d , baseCRS , hdatumProj4GridName , setHDatumExtension , formatter , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { isTOWGS84Compatible , ! , if , }

5364 :	"formatter"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5364 :	"setHDatumExtension"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5364 :	"hdatumProj4GridName"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5365 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

5365 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

5365 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

5365 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

5366 :	"formatter"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

5366 :	"setHDatumExtension"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

5366 :	"std"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

5366 :	"string"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { return , }

5367 :	"return"
		- NEIGH  = { return , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { string , setHDatumExtension , std , formatter , }
		- SUCC   = { }

5370 :	"if"
		- NEIGH  = { isTOWGS84Compatible , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , hdatumProj4GridName , ! , if , }
		- SUCC   = { transformation , getTOWGS84Parameters , d , params , }

5370 :	"!"
		- NEIGH  = { isTOWGS84Compatible , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , hdatumProj4GridName , ! , if , }
		- SUCC   = { transformation , getTOWGS84Parameters , d , params , }

5370 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , ! , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { empty , hdatumProj4GridName , ! , if , }
		- SUCC   = { transformation , getTOWGS84Parameters , d , params , }

5371 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isTOWGS84Compatible , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5371 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isTOWGS84Compatible , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5371 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isTOWGS84Compatible , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5374 :	"params"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

5374 :	"d"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

5374 :	"transformation"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

5374 :	"getTOWGS84Parameters"
		- NEIGH  = { transformation , getTOWGS84Parameters , d , params , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , ! , if , }
		- SUCC   = { useESRIDialect , ! , formatter , if , }

5375 :	"if"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5375 :	"!"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5375 :	"formatter"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5375 :	"useESRIDialect"
		- NEIGH  = { useESRIDialect , ! , formatter , if , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { params , setTOWGS84Parameters , formatter , }
		- PRED   = { transformation , getTOWGS84Parameters , d , params , }
		- SUCC   = { formatter , baseCRS , _exportToWKT , d , }

5376 :	"formatter"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { useESRIDialect , ! , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5376 :	"setTOWGS84Parameters"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { useESRIDialect , ! , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5376 :	"params"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { useESRIDialect , ! , formatter , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5378 :	"d"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

5378 :	"baseCRS"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

5378 :	"_exportToWKT"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

5378 :	"formatter"
		- NEIGH  = { formatter , baseCRS , _exportToWKT , d , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { useESRIDialect , ! , formatter , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

5379 :	"formatter"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

5379 :	"setTOWGS84Parameters"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

5379 :	"std"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

5379 :	"vector"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

5379 :	"<"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

5379 :	">"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { isWKT2 , if , }
		- CHILD  = { }
		- PRED   = { formatter , baseCRS , _exportToWKT , d , }
		- SUCC   = { }

5387 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5387 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5388 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5388 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5388 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5388 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5390 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5390 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5390 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

5391 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

5392 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

5392 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

5392 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

5392 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

5392 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

5394 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , d , }

5394 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { formatter , _exportToJSON , baseCRS , d , }

5395 :	"d"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

5395 :	"baseCRS"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

5395 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

5395 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , baseCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

5397 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , d , }
		- SUCC   = { formatter , _exportToJSON , hubCRS , d , }

5397 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , baseCRS , d , }
		- SUCC   = { formatter , _exportToJSON , hubCRS , d , }

5398 :	"d"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

5398 :	"hubCRS"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

5398 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

5398 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , hubCRS , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { AddObjKey , writer , }

5400 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , hubCRS , d , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5400 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , hubCRS , d , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

5401 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5401 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5402 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , transformation , d , }

5402 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , _exportToJSON , transformation , d , }

5403 :	"d"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5403 :	"transformation"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5403 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5403 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , transformation , d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setAbridgedTransformation , formatter , }
		- SUCC   = { setAbridgedTransformation , formatter , }

5404 :	"formatter"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , transformation , d , }
		- SUCC   = { }

5404 :	"setAbridgedTransformation"
		- NEIGH  = { setAbridgedTransformation , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , transformation , d , }
		- SUCC   = { }

5410 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5410 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5411 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5411 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5411 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5411 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5413 :	"crs_exportable"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5414 :	"dynamic_cast"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5414 :	"<"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5414 :	"io"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5414 :	"IPROJStringExportable"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5414 :	"*"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5414 :	">"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5414 :	"d"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5414 :	"baseCRS_"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5414 :	"get"
		- NEIGH  = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { crs_exportable , ! , if , }

5415 :	"if"
		- NEIGH  = { crs_exportable , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- SUCC   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }

5415 :	"!"
		- NEIGH  = { crs_exportable , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- SUCC   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }

5415 :	"crs_exportable"
		- NEIGH  = { crs_exportable , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { get , baseCRS_ , d , > , io , IPROJStringExportable , * , dynamic_cast , < , crs_exportable , }
		- SUCC   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }

5416 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { crs_exportable , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5416 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { crs_exportable , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5416 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { crs_exportable , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5420 :	"vdatumProj4GridName"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_exportable , ! , if , }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

5420 :	"getVDatumPROJ4GRIDS"
		- NEIGH  = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { crs_exportable , ! , if , }
		- SUCC   = { empty , vdatumProj4GridName , ! , if , }

5421 :	"if"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

5421 :	"!"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

5421 :	"vdatumProj4GridName"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

5421 :	"empty"
		- NEIGH  = { empty , vdatumProj4GridName , ! , if , }
		- PARENT = { }
		- CHILD  = { empty , formatter , string , ! , if , setVDatumExtension , getHDatumPROJ4GRIDS , std , hdatumProj4GridName , _exportToPROJString , crs_exportable , vdatumProj4GridName , }
		- PRED   = { getVDatumPROJ4GRIDS , vdatumProj4GridName , }
		- SUCC   = { }

5422 :	"formatter"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

5422 :	"setVDatumExtension"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

5422 :	"vdatumProj4GridName"
		- NEIGH  = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

5423 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

5423 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

5423 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { vdatumProj4GridName , setVDatumExtension , formatter , }
		- SUCC   = { string , setVDatumExtension , std , formatter , }

5424 :	"formatter"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5424 :	"setVDatumExtension"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5424 :	"std"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5424 :	"string"
		- NEIGH  = { string , setVDatumExtension , std , formatter , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5426 :	"hdatumProj4GridName"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

5426 :	"getHDatumPROJ4GRIDS"
		- NEIGH  = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , hdatumProj4GridName , ! , if , }

5427 :	"if"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

5427 :	"!"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

5427 :	"hdatumProj4GridName"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

5427 :	"empty"
		- NEIGH  = { empty , hdatumProj4GridName , ! , if , }
		- PARENT = { empty , vdatumProj4GridName , ! , if , }
		- CHILD  = { < , > , crs_exportable , vector , setTOWGS84Parameters , if , formatter , string , std , hdatumProj4GridName , _exportToPROJString , isTOWGS84Compatible , setHDatumExtension , }
		- PRED   = { getHDatumPROJ4GRIDS , hdatumProj4GridName , }
		- SUCC   = { }

5428 :	"formatter"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

5428 :	"setHDatumExtension"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

5428 :	"hdatumProj4GridName"
		- NEIGH  = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

5429 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

5429 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

5429 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { hdatumProj4GridName , setHDatumExtension , formatter , }
		- SUCC   = { string , setHDatumExtension , std , formatter , }

5430 :	"formatter"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5430 :	"setHDatumExtension"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5430 :	"std"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5430 :	"string"
		- NEIGH  = { string , setHDatumExtension , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5432 :	"if"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { formatter , getTOWGS84Parameters , setTOWGS84Parameters , transformation , params , }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

5432 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { formatter , getTOWGS84Parameters , setTOWGS84Parameters , transformation , params , }
		- PRED   = { }
		- SUCC   = { formatter , _exportToPROJString , crs_exportable , }

5433 :	"params"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , setTOWGS84Parameters , formatter , }

5433 :	"transformation"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , setTOWGS84Parameters , formatter , }

5433 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { params , setTOWGS84Parameters , formatter , }

5434 :	"formatter"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5434 :	"setTOWGS84Parameters"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5434 :	"params"
		- NEIGH  = { params , setTOWGS84Parameters , formatter , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5436 :	"crs_exportable"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

5436 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

5436 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , crs_exportable , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { > , < , vector , setTOWGS84Parameters , std , formatter , }

5437 :	"formatter"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5437 :	"setTOWGS84Parameters"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5437 :	"std"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5437 :	"vector"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5437 :	"<"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5437 :	">"
		- NEIGH  = { > , < , vector , setTOWGS84Parameters , std , formatter , }
		- PARENT = { empty , hdatumProj4GridName , ! , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , crs_exportable , }
		- SUCC   = { }

5444 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5444 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5444 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5444 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5444 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5444 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5445 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5445 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5445 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5445 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5446 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5447 :	"otherBoundCRS"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

5447 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

5447 :	"<"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

5447 :	"BoundCRS"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

5447 :	"*"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

5447 :	">"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

5447 :	"other"
		- NEIGH  = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }

5448 :	"if"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5448 :	"otherBoundCRS"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5448 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5448 :	"||"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5449 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5449 :	"=="
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5449 :	"util"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5449 :	"IComparable"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5449 :	"Criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5449 :	"STRICT"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5449 :	"&&"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5450 :	"!"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5450 :	"ObjectUsage"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5450 :	"_isEquivalentTo"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5450 :	"other"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5450 :	"criterion"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5450 :	"dbContext"
		- NEIGH  = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- PARENT = { }
		- CHILD  = { return , }
		- PRED   = { > , dynamic_cast , * , BoundCRS , < , other , otherBoundCRS , }
		- SUCC   = { getStandardCriterion , criterion , standardCriterion , }

5451 :	"return"
		- NEIGH  = { return , }
		- PARENT = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5453 :	"standardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }

5453 :	"getStandardCriterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }

5453 :	"criterion"
		- NEIGH  = { getStandardCriterion , criterion , standardCriterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , STRICT , IComparable , && , criterion , == , Criterion , util , || , otherBoundCRS , _isEquivalentTo , ! , dbContext , ObjectUsage , if , }
		- SUCC   = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }

5454 :	"return"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5454 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5454 :	"baseCRS_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5454 :	"_isEquivalentTo"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5454 :	"otherBoundCRS"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5454 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5454 :	"baseCRS_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5454 :	"get"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5455 :	"criterion"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5455 :	"dbContext"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5455 :	"&&"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5456 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5456 :	"hubCRS_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5456 :	"_isEquivalentTo"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5456 :	"otherBoundCRS"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5456 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5456 :	"hubCRS_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5456 :	"get"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5457 :	"criterion"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5457 :	"dbContext"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5457 :	"&&"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5458 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5458 :	"transformation_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5458 :	"_isEquivalentTo"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5459 :	"otherBoundCRS"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5459 :	"d"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5459 :	"transformation_"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5459 :	"get"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5459 :	"standardCriterion"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5460 :	"dbContext"
		- NEIGH  = { standardCriterion , return , transformation_ , get , hubCRS_ , dbContext , otherBoundCRS , criterion , && , d , _isEquivalentTo , baseCRS_ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getStandardCriterion , criterion , standardCriterion , }
		- SUCC   = { }

5467 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5467 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5467 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5467 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5467 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5467 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5467 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5467 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5468 :	"BoundCRS"
		- NEIGH  = { BoundCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5468 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5468 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5468 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5468 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5468 :	"authorityFactory"
		- NEIGH  = { authorityFactory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5469 :	"std"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5469 :	"pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5469 :	"<"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5469 :	"CRSNNPtr"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5469 :	">"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5469 :	"Pair"
		- NEIGH  = { > , CRSNNPtr , < , Pair , pair , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { res , > , Pair , < , list , std , }

5470 :	"std"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

5470 :	"list"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

5470 :	"<"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

5470 :	"Pair"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

5470 :	">"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

5470 :	"res"
		- NEIGH  = { res , > , Pair , < , list , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , CRSNNPtr , < , Pair , pair , std , }
		- SUCC   = { authorityFactory , ! , if , }

5471 :	"if"
		- NEIGH  = { authorityFactory , ! , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }

5471 :	"!"
		- NEIGH  = { authorityFactory , ! , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }

5471 :	"authorityFactory"
		- NEIGH  = { authorityFactory , ! , if , }
		- PARENT = { }
		- CHILD  = { res , return , }
		- PRED   = { res , > , Pair , < , list , std , }
		- SUCC   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }

5472 :	"return"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5472 :	"res"
		- NEIGH  = { res , return , }
		- PARENT = { authorityFactory , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5473 :	"std"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

5473 :	"list"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

5473 :	"<"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

5473 :	"Pair"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

5473 :	">"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

5473 :	"resMatchOfTransfToWGS84"
		- NEIGH  = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { authorityFactory , ! , if , }
		- SUCC   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }

5474 :	"io"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

5474 :	"DatabaseContextNNPtr"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

5474 :	"&"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

5474 :	"dbContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

5475 :	"authorityFactory"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

5475 :	"databaseContext"
		- NEIGH  = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , Pair , < , list , resMatchOfTransfToWGS84 , std , }
		- SUCC   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }

5476 :	"if"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5476 :	"d"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5476 :	"hubCRS_"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5476 :	"_isEquivalentTo"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5476 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5476 :	"EPSG_4326"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5476 :	"get"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5477 :	"util"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5477 :	"IComparable"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5477 :	"Criterion"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5477 :	"EQUIVALENT"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5478 :	"dbContext"
		- NEIGH  = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- PARENT = { }
		- CHILD  = { for , refIsNullTransform , & , create , replaceAll , PROJStringFormatter , isTOWGS84Compatible , exportToPROJString , transformation_ , exception , io , identify , catch , string , normalizeForVisualization , refTransf , get , refTransfPROJStringValid , refTransfPROJString , std , baseCRS_ , resTemp , d , pair , authorityFactory , if , }
		- PRED   = { databaseContext , dbContext , authorityFactory , & , DatabaseContextNNPtr , io , }
		- SUCC   = { res , empty , resMatchOfTransfToWGS84 , ! , return , }

5479 :	"resTemp"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

5479 :	"d"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

5479 :	"baseCRS_"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

5479 :	"identify"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

5479 :	"authorityFactory"
		- NEIGH  = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { refTransfPROJString , string , std , }

5481 :	"std"
		- NEIGH  = { refTransfPROJString , string , std , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { refTransfPROJStringValid , }

5481 :	"string"
		- NEIGH  = { refTransfPROJString , string , std , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { refTransfPROJStringValid , }

5481 :	"refTransfPROJString"
		- NEIGH  = { refTransfPROJString , string , std , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { identify , baseCRS_ , d , authorityFactory , resTemp , }
		- SUCC   = { refTransfPROJStringValid , }

5482 :	"refTransfPROJStringValid"
		- NEIGH  = { refTransfPROJStringValid , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJString , string , std , }
		- SUCC   = { transformation_ , normalizeForVisualization , d , refTransf , }

5483 :	"refTransf"
		- NEIGH  = { transformation_ , normalizeForVisualization , d , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }

5483 :	"d"
		- NEIGH  = { transformation_ , normalizeForVisualization , d , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }

5483 :	"transformation_"
		- NEIGH  = { transformation_ , normalizeForVisualization , d , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }

5483 :	"normalizeForVisualization"
		- NEIGH  = { transformation_ , normalizeForVisualization , d , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }

5485 :	"refTransfPROJString"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

5485 :	"refTransf"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

5485 :	"exportToPROJString"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

5486 :	"io"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

5486 :	"PROJStringFormatter"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

5486 :	"create"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

5486 :	"get"
		- NEIGH  = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { transformation_ , normalizeForVisualization , d , refTransf , }
		- SUCC   = { replaceAll , refTransfPROJString , }

5487 :	"refTransfPROJString"
		- NEIGH  = { replaceAll , refTransfPROJString , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- SUCC   = { refTransfPROJStringValid , }

5487 :	"replaceAll"
		- NEIGH  = { replaceAll , refTransfPROJString , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- SUCC   = { refTransfPROJStringValid , }

5488 :	"refTransfPROJString"
		- NEIGH  = { replaceAll , refTransfPROJString , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { get , refTransfPROJString , PROJStringFormatter , io , create , exportToPROJString , refTransf , }
		- SUCC   = { refTransfPROJStringValid , }

5490 :	"refTransfPROJStringValid"
		- NEIGH  = { refTransfPROJStringValid , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { replaceAll , refTransfPROJString , }
		- SUCC   = { & , exception , std , catch , }

5491 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refIsNullTransform , }

5491 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refIsNullTransform , }

5491 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refIsNullTransform , }

5491 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { refTransfPROJStringValid , }
		- SUCC   = { refIsNullTransform , }

5493 :	"refIsNullTransform"
		- NEIGH  = { refIsNullTransform , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { isTOWGS84Compatible , if , }

5494 :	"if"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { > , < , vector , if , getTOWGS84Parameters , transformation , == , std , params , }
		- PRED   = { refIsNullTransform , }
		- SUCC   = { pair , resTemp , & , for , }

5494 :	"isTOWGS84Compatible"
		- NEIGH  = { isTOWGS84Compatible , if , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { > , < , vector , if , getTOWGS84Parameters , transformation , == , std , params , }
		- PRED   = { refIsNullTransform , }
		- SUCC   = { pair , resTemp , & , for , }

5495 :	"params"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , vector , == , params , std , if , }

5495 :	"transformation"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , vector , == , params , std , if , }

5495 :	"getTOWGS84Parameters"
		- NEIGH  = { getTOWGS84Parameters , transformation , params , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , < , vector , == , params , std , if , }

5496 :	"if"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5496 :	"params"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5496 :	"=="
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5496 :	"std"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5496 :	"vector"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5496 :	"<"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5496 :	">"
		- NEIGH  = { > , < , vector , == , params , std , if , }
		- PARENT = { isTOWGS84Compatible , if , }
		- CHILD  = { refIsNullTransform , }
		- PRED   = { getTOWGS84Parameters , transformation , params , }
		- SUCC   = { }

5497 :	"refIsNullTransform"
		- NEIGH  = { refIsNullTransform , }
		- PARENT = { > , < , vector , == , params , std , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5501 :	"for"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { }

5501 :	"&"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { }

5501 :	"pair"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { }

5501 :	"resTemp"
		- NEIGH  = { pair , resTemp , & , for , }
		- PARENT = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- CHILD  = { nn_dynamic_pointer_cast , as_nullable , baseCRS , GeodeticCRS , geodCRS , get , > , ProjectedCRS , pair , * , util , projCRS , < , dynamic_cast , if , first , candidateBaseCRS , & , }
		- PRED   = { isTOWGS84Compatible , if , }
		- SUCC   = { }

5502 :	"&"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

5502 :	"candidateBaseCRS"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

5502 :	"pair"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

5502 :	"first"
		- NEIGH  = { pair , first , candidateBaseCRS , & , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }

5503 :	"projCRS"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

5504 :	"dynamic_cast"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

5504 :	"<"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

5504 :	"ProjectedCRS"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

5504 :	"*"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

5504 :	">"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

5504 :	"candidateBaseCRS"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

5504 :	"get"
		- NEIGH  = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { pair , first , candidateBaseCRS , & , }
		- SUCC   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }

5505 :	"geodCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5505 :	"projCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5505 :	"projCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5505 :	"baseCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5505 :	"as_nullable"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5506 :	"util"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5506 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5506 :	"<"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5506 :	"GeodeticCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5506 :	">"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5507 :	"candidateBaseCRS"
		- NEIGH  = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { }
		- PRED   = { get , candidateBaseCRS , > , dynamic_cast , * , ProjectedCRS , < , projCRS , }
		- SUCC   = { geodCRS , if , }

5508 :	"if"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { for , EPSG_4326 , ! , geodCRS , NN_NO_CHECK , op , & , CoordinateOperationFactory , createOperations , foundOp , authorityFactory , ops , SpatialCriterion , CoordinateOperationContext , GeographicCRS , create , setSpatialCriterion , if , operation , PARTIAL_INTERSECTION , context , }
		- PRED   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- SUCC   = { }

5508 :	"geodCRS"
		- NEIGH  = { geodCRS , if , }
		- PARENT = { pair , resTemp , & , for , }
		- CHILD  = { for , EPSG_4326 , ! , geodCRS , NN_NO_CHECK , op , & , CoordinateOperationFactory , createOperations , foundOp , authorityFactory , ops , SpatialCriterion , CoordinateOperationContext , GeographicCRS , create , setSpatialCriterion , if , operation , PARTIAL_INTERSECTION , context , }
		- PRED   = { candidateBaseCRS , GeodeticCRS , nn_dynamic_pointer_cast , util , as_nullable , > , baseCRS , < , projCRS , geodCRS , }
		- SUCC   = { }

5509 :	"context"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

5509 :	"operation"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

5509 :	"CoordinateOperationContext"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

5509 :	"create"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

5510 :	"authorityFactory"
		- NEIGH  = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }

5511 :	"context"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

5511 :	"setSpatialCriterion"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

5512 :	"operation"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

5512 :	"CoordinateOperationContext"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

5512 :	"SpatialCriterion"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

5513 :	"PARTIAL_INTERSECTION"
		- NEIGH  = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { authorityFactory , create , CoordinateOperationContext , operation , context , }
		- SUCC   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }

5514 :	"ops"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5515 :	"operation"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5515 :	"CoordinateOperationFactory"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5515 :	"create"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5516 :	"createOperations"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5516 :	"NN_NO_CHECK"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5516 :	"geodCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5517 :	"GeographicCRS"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5517 :	"EPSG_4326"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5517 :	"context"
		- NEIGH  = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { SpatialCriterion , CoordinateOperationContext , operation , setSpatialCriterion , PARTIAL_INTERSECTION , context , }
		- SUCC   = { foundOp , }

5519 :	"foundOp"
		- NEIGH  = { foundOp , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { }
		- PRED   = { EPSG_4326 , GeographicCRS , geodCRS , context , NN_NO_CHECK , ops , createOperations , create , CoordinateOperationFactory , operation , }
		- SUCC   = { op , ops , & , for , }

5520 :	"for"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , refTransf , _isEquivalentTo , == , EQUIVALENT , refTransfPROJString , IComparable , refTransfPROJStringValid , util , && , exception , get , create , dbContext , exportToPROJString , io , opNormalized , || , starts_with , opTransfPROJString , operation , NULL_GEOGRAPHIC_OFFSET , if , replaceAll , PROJStringFormatter , opTransfPROJStringValid , nameStr , & , op , normalizeForVisualization , string , BALLPARK_GEOCENTRIC_TRANSLATION , std , catch , opName , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

5520 :	"&"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , refTransf , _isEquivalentTo , == , EQUIVALENT , refTransfPROJString , IComparable , refTransfPROJStringValid , util , && , exception , get , create , dbContext , exportToPROJString , io , opNormalized , || , starts_with , opTransfPROJString , operation , NULL_GEOGRAPHIC_OFFSET , if , replaceAll , PROJStringFormatter , opTransfPROJStringValid , nameStr , & , op , normalizeForVisualization , string , BALLPARK_GEOCENTRIC_TRANSLATION , std , catch , opName , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

5520 :	"op"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , refTransf , _isEquivalentTo , == , EQUIVALENT , refTransfPROJString , IComparable , refTransfPROJStringValid , util , && , exception , get , create , dbContext , exportToPROJString , io , opNormalized , || , starts_with , opTransfPROJString , operation , NULL_GEOGRAPHIC_OFFSET , if , replaceAll , PROJStringFormatter , opTransfPROJStringValid , nameStr , & , op , normalizeForVisualization , string , BALLPARK_GEOCENTRIC_TRANSLATION , std , catch , opName , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

5520 :	"ops"
		- NEIGH  = { op , ops , & , for , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { Criterion , refTransf , _isEquivalentTo , == , EQUIVALENT , refTransfPROJString , IComparable , refTransfPROJStringValid , util , && , exception , get , create , dbContext , exportToPROJString , io , opNormalized , || , starts_with , opTransfPROJString , operation , NULL_GEOGRAPHIC_OFFSET , if , replaceAll , PROJStringFormatter , opTransfPROJStringValid , nameStr , & , op , normalizeForVisualization , string , BALLPARK_GEOCENTRIC_TRANSLATION , std , catch , opName , }
		- PRED   = { foundOp , }
		- SUCC   = { foundOp , ! , if , }

5521 :	"opNormalized"
		- NEIGH  = { normalizeForVisualization , op , opNormalized , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { opTransfPROJString , string , std , }

5521 :	"op"
		- NEIGH  = { normalizeForVisualization , op , opNormalized , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { opTransfPROJString , string , std , }

5521 :	"normalizeForVisualization"
		- NEIGH  = { normalizeForVisualization , op , opNormalized , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { opTransfPROJString , string , std , }

5522 :	"std"
		- NEIGH  = { opTransfPROJString , string , std , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , op , opNormalized , }
		- SUCC   = { opTransfPROJStringValid , }

5522 :	"string"
		- NEIGH  = { opTransfPROJString , string , std , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , op , opNormalized , }
		- SUCC   = { opTransfPROJStringValid , }

5522 :	"opTransfPROJString"
		- NEIGH  = { opTransfPROJString , string , std , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { normalizeForVisualization , op , opNormalized , }
		- SUCC   = { opTransfPROJStringValid , }

5523 :	"opTransfPROJStringValid"
		- NEIGH  = { opTransfPROJStringValid , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJString , string , std , }
		- SUCC   = { nameStr , op , opName , & , }

5524 :	"&"
		- NEIGH  = { nameStr , op , opName , & , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }

5524 :	"opName"
		- NEIGH  = { nameStr , op , opName , & , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }

5524 :	"op"
		- NEIGH  = { nameStr , op , opName , & , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }

5524 :	"nameStr"
		- NEIGH  = { nameStr , op , opName , & , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }

5525 :	"if"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5525 :	"starts_with"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5526 :	"opName"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5527 :	"operation"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5527 :	"BALLPARK_GEOCENTRIC_TRANSLATION"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5527 :	"||"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5528 :	"starts_with"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5528 :	"opName"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5529 :	"operation"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5529 :	"NULL_GEOGRAPHIC_OFFSET"
		- NEIGH  = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { continue , refIsNullTransform , if , }
		- PRED   = { nameStr , op , opName , & , }
		- SUCC   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }

5530 :	"if"
		- NEIGH  = { refIsNullTransform , if , }
		- PARENT = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { continue , }

5530 :	"refIsNullTransform"
		- NEIGH  = { refIsNullTransform , if , }
		- PARENT = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- CHILD  = { break , second , transformation , hubCRS_ , candidateBaseCRS , foundOp , d , create , pair , emplace_back , res , }
		- PRED   = { }
		- SUCC   = { continue , }

5531 :	"res"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5531 :	"emplace_back"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5531 :	"create"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5531 :	"candidateBaseCRS"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5532 :	"d"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5532 :	"hubCRS_"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5533 :	"transformation"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5534 :	"pair"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5534 :	"second"
		- NEIGH  = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5535 :	"foundOp"
		- NEIGH  = { foundOp , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { second , transformation , hubCRS_ , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- SUCC   = { break , }

5536 :	"break"
		- NEIGH  = { break , }
		- PARENT = { refIsNullTransform , if , }
		- CHILD  = { }
		- PRED   = { foundOp , }
		- SUCC   = { }

5538 :	"continue"
		- NEIGH  = { continue , }
		- PARENT = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- CHILD  = { }
		- PRED   = { refIsNullTransform , if , }
		- SUCC   = { }

5541 :	"opTransfPROJString"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- SUCC   = { opTransfPROJStringValid , }

5541 :	"opNormalized"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- SUCC   = { opTransfPROJStringValid , }

5541 :	"exportToPROJString"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- SUCC   = { opTransfPROJStringValid , }

5542 :	"io"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- SUCC   = { opTransfPROJStringValid , }

5542 :	"PROJStringFormatter"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- SUCC   = { opTransfPROJStringValid , }

5542 :	"create"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- SUCC   = { opTransfPROJStringValid , }

5542 :	"get"
		- NEIGH  = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { NULL_GEOGRAPHIC_OFFSET , || , BALLPARK_GEOCENTRIC_TRANSLATION , operation , starts_with , opName , if , }
		- SUCC   = { opTransfPROJStringValid , }

5543 :	"opTransfPROJStringValid"
		- NEIGH  = { opTransfPROJStringValid , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { get , PROJStringFormatter , io , create , exportToPROJString , opNormalized , opTransfPROJString , }
		- SUCC   = { replaceAll , opTransfPROJString , }

5544 :	"opTransfPROJString"
		- NEIGH  = { replaceAll , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { & , exception , std , catch , }

5545 :	"replaceAll"
		- NEIGH  = { replaceAll , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { & , exception , std , catch , }

5545 :	"opTransfPROJString"
		- NEIGH  = { replaceAll , opTransfPROJString , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { opTransfPROJStringValid , }
		- SUCC   = { & , exception , std , catch , }

5549 :	"catch"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { replaceAll , opTransfPROJString , }
		- SUCC   = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }

5549 :	"std"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { replaceAll , opTransfPROJString , }
		- SUCC   = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }

5549 :	"exception"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { replaceAll , opTransfPROJString , }
		- SUCC   = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }

5549 :	"&"
		- NEIGH  = { & , exception , std , catch , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { }
		- PRED   = { replaceAll , opTransfPROJString , }
		- SUCC   = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }

5551 :	"if"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5551 :	"refTransfPROJStringValid"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5551 :	"&&"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5551 :	"opTransfPROJStringValid"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5551 :	"&&"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5552 :	"refTransfPROJString"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5552 :	"=="
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5552 :	"opTransfPROJString"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5552 :	"||"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5553 :	"opNormalized"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5553 :	"_isEquivalentTo"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5554 :	"refTransf"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5554 :	"get"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5555 :	"util"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5555 :	"IComparable"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5555 :	"Criterion"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5555 :	"EQUIVALENT"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5556 :	"dbContext"
		- NEIGH  = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- PARENT = { op , ops , & , for , }
		- CHILD  = { foundOp , second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , break , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PRED   = { & , exception , std , catch , }
		- SUCC   = { }

5557 :	"resMatchOfTransfToWGS84"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5557 :	"emplace_back"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5558 :	"create"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5558 :	"candidateBaseCRS"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5558 :	"d"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5558 :	"hubCRS_"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5559 :	"NN_NO_CHECK"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5559 :	"util"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5559 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5559 :	"<"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5560 :	"operation"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5560 :	"Transformation"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5560 :	">"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5560 :	"op"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5561 :	"pair"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5561 :	"second"
		- NEIGH  = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { foundOp , }

5562 :	"foundOp"
		- NEIGH  = { foundOp , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { second , pair , operation , < , util , NN_NO_CHECK , hubCRS_ , candidateBaseCRS , d , create , Transformation , nn_dynamic_pointer_cast , > , emplace_back , op , resMatchOfTransfToWGS84 , }
		- SUCC   = { break , }

5563 :	"break"
		- NEIGH  = { break , }
		- PARENT = { EQUIVALENT , IComparable , util , || , opNormalized , refTransfPROJString , refTransf , opTransfPROJString , opTransfPROJStringValid , _isEquivalentTo , Criterion , == , && , get , refTransfPROJStringValid , dbContext , if , }
		- CHILD  = { }
		- PRED   = { foundOp , }
		- SUCC   = { }

5566 :	"if"
		- NEIGH  = { foundOp , ! , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PRED   = { op , ops , & , for , }
		- SUCC   = { }

5566 :	"!"
		- NEIGH  = { foundOp , ! , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PRED   = { op , ops , & , for , }
		- SUCC   = { }

5566 :	"foundOp"
		- NEIGH  = { foundOp , ! , if , }
		- PARENT = { geodCRS , if , }
		- CHILD  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PRED   = { op , ops , & , for , }
		- SUCC   = { }

5567 :	"res"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5567 :	"emplace_back"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5568 :	"create"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5568 :	"candidateBaseCRS"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5568 :	"d"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5568 :	"hubCRS_"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5568 :	"transformation"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5569 :	"std"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5569 :	"min"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5569 :	"pair"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5569 :	"second"
		- NEIGH  = { second , std , transformation , hubCRS_ , min , candidateBaseCRS , d , create , pair , emplace_back , res , }
		- PARENT = { foundOp , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5574 :	"return"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

5574 :	"!"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

5574 :	"resMatchOfTransfToWGS84"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

5574 :	"empty"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

5574 :	"resMatchOfTransfToWGS84"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

5574 :	"res"
		- NEIGH  = { res , empty , resMatchOfTransfToWGS84 , ! , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { GeographicCRS , EQUIVALENT , IComparable , Criterion , util , get , hubCRS_ , d , _isEquivalentTo , dbContext , if , EPSG_4326 , }
		- SUCC   = { }

5580 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5580 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5586 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5586 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5591 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5591 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5592 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5592 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5592 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5593 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5593 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5593 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5593 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5594 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5594 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5594 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5594 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5595 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5595 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5595 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5595 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5595 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5595 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5596 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5596 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5596 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5596 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5596 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5596 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5597 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5597 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5597 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5597 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5597 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5601 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5601 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5602 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5602 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5602 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5603 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5603 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5603 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5603 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5604 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5604 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5604 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5604 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5605 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5605 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5605 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5605 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5605 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5605 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5606 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5606 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5606 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5606 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5606 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5606 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5607 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5607 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5607 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5607 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5607 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5611 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"GeodeticCRS"
		- NEIGH  = { GeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5612 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5616 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5616 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5616 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5617 :	"crs"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5617 :	"DerivedGeodeticCRS"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5617 :	"nn_make_shared"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5617 :	"<"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5617 :	"DerivedGeodeticCRS"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5617 :	">"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5617 :	"*"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5617 :	"this"
		- NEIGH  = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5618 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5618 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5618 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , crs , DerivedGeodeticCRS , > , nn_make_shared , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5619 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5619 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5620 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5620 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5629 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5629 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5629 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5630 :	"return"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5630 :	"NN_NO_CHECK"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5630 :	"util"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5630 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5630 :	"<"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5630 :	"GeodeticCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5630 :	">"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5631 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5631 :	"getPrivate"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5631 :	"baseCRS_"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5647 :	"DerivedGeodeticCRSNNPtr"
		- NEIGH  = { DerivedGeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5647 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5647 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5648 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5648 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5648 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5648 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5648 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5648 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5648 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5649 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5649 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5649 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5649 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5650 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5650 :	"CartesianCSNNPtr"
		- NEIGH  = { CartesianCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5650 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5650 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5651 :	"crs"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5651 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5651 :	"nn_make_shared"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5651 :	"<"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5651 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5651 :	">"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5652 :	"baseCRSIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5652 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5652 :	"csIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5653 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

5653 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

5653 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

5654 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5654 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5654 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5655 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5655 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5656 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5656 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5672 :	"DerivedGeodeticCRSNNPtr"
		- NEIGH  = { DerivedGeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5672 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5672 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5673 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5673 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5673 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5673 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5673 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5673 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5673 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5674 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5674 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5674 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5674 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5675 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5675 :	"SphericalCSNNPtr"
		- NEIGH  = { SphericalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5675 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5675 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5676 :	"crs"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5676 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5676 :	"nn_make_shared"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5676 :	"<"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5676 :	"DerivedGeodeticCRS"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5676 :	">"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5677 :	"baseCRSIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5677 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5677 :	"csIn"
		- NEIGH  = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5678 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

5678 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

5678 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , crs , DerivedGeodeticCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , }
		- SUCC   = { properties , setProperties , crs , }

5679 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5679 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5679 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5680 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5680 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5681 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5681 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5687 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5687 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5688 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5688 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5688 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5688 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5688 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5688 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5688 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5688 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5689 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }

5689 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }

5689 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }

5690 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5690 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5690 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5693 :	"formatter"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5693 :	"startNode"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5693 :	"io"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5693 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5693 :	"GEODCRS"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5693 :	"!"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5693 :	"identifiers"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5693 :	"empty"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5694 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

5694 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

5694 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

5696 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

5696 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

5697 :	"formatter"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5697 :	"startNode"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5697 :	"formatter"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5697 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5697 :	"&&"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5698 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5698 :	"<"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5698 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5698 :	"*"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5698 :	">"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5698 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5698 :	"get"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5699 :	"io"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5699 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5699 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5700 :	"io"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5700 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5700 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5701 :	"!"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5701 :	"baseCRS"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5701 :	"identifiers"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5701 :	"empty"
		- NEIGH  = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5702 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

5702 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

5702 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

5702 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , baseCRS , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { datum , l_baseCRS , l_datum , }

5703 :	"l_datum"
		- NEIGH  = { datum , l_baseCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { l_datum , if , }

5703 :	"l_baseCRS"
		- NEIGH  = { datum , l_baseCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { l_datum , if , }

5703 :	"datum"
		- NEIGH  = { datum , l_baseCRS , l_datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { l_datum , if , }

5704 :	"if"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , formatter , l_datumEnsemble , l_datum , _exportToWKT , datumEnsemble , }
		- PRED   = { datum , l_baseCRS , l_datum , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

5704 :	"l_datum"
		- NEIGH  = { l_datum , if , }
		- PARENT = { }
		- CHILD  = { assert , formatter , l_datumEnsemble , l_datum , _exportToWKT , datumEnsemble , }
		- PRED   = { datum , l_baseCRS , l_datum , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

5705 :	"l_datum"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5705 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5705 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datum , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5707 :	"l_datumEnsemble"
		- NEIGH  = { datumEnsemble , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

5707 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { l_datumEnsemble , assert , }

5708 :	"assert"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , l_datumEnsemble , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

5708 :	"l_datumEnsemble"
		- NEIGH  = { l_datumEnsemble , assert , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { datumEnsemble , l_datumEnsemble , }
		- SUCC   = { formatter , _exportToWKT , l_datumEnsemble , }

5709 :	"l_datumEnsemble"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

5709 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

5709 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , l_datumEnsemble , }
		- PARENT = { l_datum , if , }
		- CHILD  = { }
		- PRED   = { l_datumEnsemble , assert , }
		- SUCC   = { }

5711 :	"l_baseCRS"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

5711 :	"primeMeridian"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

5711 :	"_exportToWKT"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

5711 :	"formatter"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { l_datum , if , }
		- SUCC   = { endNode , formatter , }

5712 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5712 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5714 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

5714 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

5715 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5715 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5715 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5716 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5716 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5718 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5718 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5718 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5719 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5719 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5719 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5720 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5720 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5726 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5726 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5727 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5727 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5727 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5729 :	"throw"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5729 :	"io"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5729 :	"FormattingException"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5735 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5735 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5736 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5737 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5738 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5738 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5738 :	"<"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5738 :	"DerivedGeodeticCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5738 :	"*"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5738 :	">"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5738 :	"other"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5739 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5739 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5739 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5739 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5740 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5740 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5740 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5740 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5740 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeodeticCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5747 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5747 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5747 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5747 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5747 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5747 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5747 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5747 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5748 :	"DerivedGeodeticCRS"
		- NEIGH  = { DerivedGeodeticCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5748 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5748 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5748 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5748 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5748 :	"factory"
		- NEIGH  = { factory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5749 :	"return"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5749 :	"CRS"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5749 :	"_identify"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5749 :	"factory"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5757 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5757 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5763 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5763 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5768 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5768 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5769 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5769 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5769 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5770 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5770 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5770 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5770 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5771 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5771 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5771 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5771 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5772 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5772 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5772 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5772 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5772 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5772 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5773 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5773 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5773 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5773 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5773 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5773 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5774 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5774 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5774 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5774 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5774 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5778 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5778 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5778 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5778 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5778 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5779 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5779 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5779 :	"GeographicCRS"
		- NEIGH  = { GeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5779 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5779 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5779 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5779 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5783 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5783 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5783 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5784 :	"crs"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5784 :	"DerivedGeographicCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5784 :	"nn_make_shared"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5784 :	"<"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5784 :	"DerivedGeographicCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5784 :	">"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5784 :	"*"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5784 :	"this"
		- NEIGH  = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5785 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5785 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5785 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5786 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5786 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5787 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5787 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5796 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5796 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5796 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5797 :	"return"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5797 :	"NN_NO_CHECK"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5797 :	"util"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5797 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5797 :	"<"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5797 :	"GeodeticCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5797 :	">"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5798 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5798 :	"getPrivate"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5798 :	"baseCRS_"
		- NEIGH  = { DerivedCRS , > , < , util , getPrivate , nn_dynamic_pointer_cast , GeodeticCRS , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5814 :	"DerivedGeographicCRSNNPtr"
		- NEIGH  = { DerivedGeographicCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5814 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5814 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5815 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5815 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5815 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5815 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5815 :	"GeodeticCRSNNPtr"
		- NEIGH  = { GeodeticCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5815 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5815 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5816 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5816 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5816 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5816 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5817 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5817 :	"EllipsoidalCSNNPtr"
		- NEIGH  = { EllipsoidalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5817 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5817 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5818 :	"crs"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5818 :	"DerivedGeographicCRS"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5818 :	"nn_make_shared"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5818 :	"<"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5818 :	"DerivedGeographicCRS"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5818 :	">"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5819 :	"baseCRSIn"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5819 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5819 :	"csIn"
		- NEIGH  = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5820 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5820 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5820 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , derivingConversionIn , baseCRSIn , > , nn_make_shared , DerivedGeographicCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

5821 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5821 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5821 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5822 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5822 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5823 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5823 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5829 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5829 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5830 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5830 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5830 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5830 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5830 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5830 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5830 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5830 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

5831 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }

5831 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }

5831 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }

5832 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5832 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5832 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5835 :	"formatter"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5835 :	"startNode"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5835 :	"formatter"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5835 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5836 :	"io"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5836 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5836 :	"GEOGCRS"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5837 :	"io"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5837 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5837 :	"GEODCRS"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5838 :	"!"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5838 :	"identifiers"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5838 :	"empty"
		- NEIGH  = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5839 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

5839 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

5839 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , GEODCRS , WKTConstants , io , ! , GEOGCRS , startNode , use2019Keywords , formatter , }
		- SUCC   = { baseCRS , l_baseCRS , }

5841 :	"l_baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

5841 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }

5842 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5842 :	"startNode"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5842 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5842 :	"use2019Keywords"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5842 :	"&&"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5843 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5843 :	"<"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5843 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5843 :	"*"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5843 :	">"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5843 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5843 :	"get"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5844 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5844 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5844 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5845 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5845 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5845 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5846 :	"!"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5846 :	"l_baseCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5846 :	"identifiers"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5846 :	"empty"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseCRS , }
		- SUCC   = { nameStr , l_baseCRS , addQuotedString , formatter , }

5847 :	"formatter"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

5847 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

5847 :	"l_baseCRS"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

5847 :	"nameStr"
		- NEIGH  = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , io , get , startNode , l_baseCRS , BASEGEOGCRS , && , > , GeographicCRS , dynamic_cast , use2019Keywords , < , ! , formatter , * , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }

5848 :	"l_baseCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

5848 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

5848 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseCRS , addQuotedString , formatter , }
		- SUCC   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }

5849 :	"l_baseCRS"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

5849 :	"primeMeridian"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

5849 :	"_exportToWKT"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

5849 :	"formatter"
		- NEIGH  = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseCRS , }
		- SUCC   = { endNode , formatter , }

5850 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5850 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , primeMeridian , _exportToWKT , l_baseCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5852 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

5852 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

5853 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5853 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5853 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

5854 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5854 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

5856 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5856 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5856 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

5857 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5857 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5857 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

5858 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5858 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

5864 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5864 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5865 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5865 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5865 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5865 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5867 :	"&"
		- NEIGH  = { derivingConversionRef , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , method , methodName , l_conv , & , }

5867 :	"l_conv"
		- NEIGH  = { derivingConversionRef , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , method , methodName , l_conv , & , }

5867 :	"derivingConversionRef"
		- NEIGH  = { derivingConversionRef , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { nameStr , method , methodName , l_conv , & , }

5868 :	"&"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { substr , * , for , }

5868 :	"methodName"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { substr , * , for , }

5868 :	"l_conv"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { substr , * , for , }

5868 :	"method"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { substr , * , for , }

5868 :	"nameStr"
		- NEIGH  = { nameStr , method , methodName , l_conv , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { derivingConversionRef , l_conv , & , }
		- SUCC   = { substr , * , for , }

5870 :	"for"
		- NEIGH  = { substr , * , for , }
		- PARENT = { }
		- CHILD  = { substr , methodName , starts_with , if , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }

5870 :	"*"
		- NEIGH  = { substr , * , for , }
		- PARENT = { }
		- CHILD  = { substr , methodName , starts_with , if , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }

5870 :	"substr"
		- NEIGH  = { substr , * , for , }
		- PARENT = { }
		- CHILD  = { substr , methodName , starts_with , if , }
		- PRED   = { nameStr , method , methodName , l_conv , & , }
		- SUCC   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }

5873 :	"if"
		- NEIGH  = { substr , methodName , starts_with , if , }
		- PARENT = { substr , * , for , }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { }
		- SUCC   = { }

5873 :	"starts_with"
		- NEIGH  = { substr , methodName , starts_with , if , }
		- PARENT = { substr , * , for , }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { }
		- SUCC   = { }

5873 :	"methodName"
		- NEIGH  = { substr , methodName , starts_with , if , }
		- PARENT = { substr , * , for , }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { }
		- SUCC   = { }

5873 :	"substr"
		- NEIGH  = { substr , methodName , starts_with , if , }
		- PARENT = { substr , * , for , }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { }
		- SUCC   = { }

5874 :	"l_conv"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { substr , methodName , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

5874 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { substr , methodName , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

5874 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { substr , methodName , starts_with , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

5875 :	"return"
		- NEIGH  = { return , }
		- PARENT = { substr , methodName , starts_with , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , l_conv , }
		- SUCC   = { }

5879 :	"if"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { substr , * , for , }
		- SUCC   = { FormattingException , io , throw , }

5879 :	"ci_equal"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { substr , * , for , }
		- SUCC   = { FormattingException , io , throw , }

5879 :	"methodName"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { substr , * , for , }
		- SUCC   = { FormattingException , io , throw , }

5880 :	"PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION"
		- NEIGH  = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- PARENT = { }
		- CHILD  = { return , formatter , _exportToPROJString , l_conv , }
		- PRED   = { substr , * , for , }
		- SUCC   = { FormattingException , io , throw , }

5881 :	"l_conv"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

5881 :	"_exportToPROJString"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

5881 :	"formatter"
		- NEIGH  = { formatter , _exportToPROJString , l_conv , }
		- PARENT = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

5882 :	"return"
		- NEIGH  = { return , }
		- PARENT = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToPROJString , l_conv , }
		- SUCC   = { }

5885 :	"throw"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- SUCC   = { }

5885 :	"io"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- SUCC   = { }

5885 :	"FormattingException"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { PROJ_WKT2_NAME_METHOD_POLE_ROTATION_GRIB_CONVENTION , methodName , ci_equal , if , }
		- SUCC   = { }

5891 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5891 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5892 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5893 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5893 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5893 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5893 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5894 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5894 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5894 :	"<"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5894 :	"DerivedGeographicCRS"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5894 :	"*"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5894 :	">"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5894 :	"other"
		- NEIGH  = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

5895 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5895 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5895 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5895 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5896 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5896 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5896 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5896 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5896 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , DerivedGeographicCRS , < , other , otherDerivedCRS , }
		- SUCC   = { }

5903 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5903 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5903 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5903 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5903 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5903 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5903 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5903 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5904 :	"DerivedGeographicCRS"
		- NEIGH  = { DerivedGeographicCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5904 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5904 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5904 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5904 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5904 :	"factory"
		- NEIGH  = { factory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5905 :	"return"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5905 :	"CRS"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5905 :	"_identify"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5905 :	"factory"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5913 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5919 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5919 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5924 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5924 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5925 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5925 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5925 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5926 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5926 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5926 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5926 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5927 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5927 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5927 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5927 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5928 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5928 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5928 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5928 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5928 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5928 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5929 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5933 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5933 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5933 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5933 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5933 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5934 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5934 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5934 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5934 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5934 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5938 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5938 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5938 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5939 :	"crs"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5939 :	"DerivedProjectedCRS"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5939 :	"nn_make_shared"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5939 :	"<"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5939 :	"DerivedProjectedCRS"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5939 :	">"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5939 :	"*"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5939 :	"this"
		- NEIGH  = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5940 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5940 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5940 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedProjectedCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5941 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5941 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

5942 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5942 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5951 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5951 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5951 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5952 :	"return"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5952 :	"NN_NO_CHECK"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5952 :	"util"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5952 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5952 :	"<"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5952 :	"ProjectedCRS"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5952 :	">"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5953 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5953 :	"getPrivate"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5953 :	"baseCRS_"
		- NEIGH  = { DerivedCRS , > , ProjectedCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5969 :	"DerivedProjectedCRSNNPtr"
		- NEIGH  = { DerivedProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5969 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5969 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"ProjectedCRSNNPtr"
		- NEIGH  = { ProjectedCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5970 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5971 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5971 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5971 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5971 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5972 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5972 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5972 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5972 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5973 :	"crs"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5973 :	"DerivedProjectedCRS"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5973 :	"nn_make_shared"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5973 :	"<"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5973 :	"DerivedProjectedCRS"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5973 :	">"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5974 :	"baseCRSIn"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5974 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5974 :	"csIn"
		- NEIGH  = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

5975 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5975 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5975 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedProjectedCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

5976 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5976 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5976 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

5977 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5977 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

5978 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5978 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

5984 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5984 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5984 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5984 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5984 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5984 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5985 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5985 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5985 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5985 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5985 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5985 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5985 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5985 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }

5986 :	"if"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5986 :	"!"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5986 :	"isWKT2"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5986 :	"||"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5986 :	"!"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5986 :	"formatter"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5986 :	"use2019Keywords"
		- NEIGH  = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }

5987 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5987 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5987 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

5990 :	"formatter"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5990 :	"startNode"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5990 :	"io"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5990 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5990 :	"DERIVEDPROJCRS"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5991 :	"!"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5991 :	"identifiers"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5991 :	"empty"
		- NEIGH  = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { use2019Keywords , formatter , isWKT2 , || , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

5992 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , }

5992 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , }

5992 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , io , DERIVEDPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , }

5995 :	"l_baseProjCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }

5995 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }

5996 :	"formatter"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5996 :	"startNode"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5996 :	"io"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5996 :	"WKTConstants"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5996 :	"BASEPROJCRS"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5997 :	"!"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5997 :	"l_baseProjCRS"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5997 :	"identifiers"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5997 :	"empty"
		- NEIGH  = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , }
		- SUCC   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }

5998 :	"formatter"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

5998 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

5998 :	"l_baseProjCRS"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

5998 :	"nameStr"
		- NEIGH  = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , empty , l_baseProjCRS , io , BASEPROJCRS , WKTConstants , ! , startNode , formatter , }
		- SUCC   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }

6000 :	"l_baseGeodCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }

6000 :	"l_baseProjCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }

6000 :	"baseCRS"
		- NEIGH  = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseProjCRS , addQuotedString , formatter , }
		- SUCC   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }

6001 :	"&"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

6001 :	"geodeticCRSAxisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

6002 :	"l_baseGeodCRS"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

6002 :	"coordinateSystem"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

6002 :	"axisList"
		- NEIGH  = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { baseCRS , l_baseProjCRS , l_baseGeodCRS , }
		- SUCC   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }

6004 :	"formatter"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6004 :	"startNode"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6005 :	"dynamic_cast"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6005 :	"<"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6005 :	"GeographicCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6005 :	"*"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6005 :	">"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6005 :	"l_baseGeodCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6005 :	"get"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6006 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6006 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6006 :	"BASEGEOGCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6007 :	"io"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6007 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6007 :	"BASEGEODCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6008 :	"!"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6008 :	"l_baseGeodCRS"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6008 :	"identifiers"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6008 :	"empty"
		- NEIGH  = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { axisList , coordinateSystem , l_baseGeodCRS , geodeticCRSAxisList , & , }
		- SUCC   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }

6009 :	"formatter"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

6009 :	"addQuotedString"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

6009 :	"l_baseGeodCRS"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

6009 :	"nameStr"
		- NEIGH  = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , BASEGEODCRS , WKTConstants , get , l_baseGeodCRS , io , BASEGEOGCRS , > , dynamic_cast , < , startNode , GeographicCRS , * , ! , formatter , }
		- SUCC   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }

6010 :	"l_baseGeodCRS"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- SUCC   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }

6010 :	"exportDatumOrDatumEnsembleToWkt"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- SUCC   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }

6010 :	"formatter"
		- NEIGH  = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , l_baseGeodCRS , addQuotedString , formatter , }
		- SUCC   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }

6015 :	"if"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

6015 :	"formatter"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

6015 :	"primeMeridianOrParameterUnitOmittedIfSameAsAxis"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

6015 :	"&&"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

6016 :	"!"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

6016 :	"geodeticCRSAxisList"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

6016 :	"empty"
		- NEIGH  = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PRED   = { formatter , exportDatumOrDatumEnsembleToWkt , l_baseGeodCRS , }
		- SUCC   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }

6017 :	"geodeticCRSAxisList"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6017 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6017 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6017 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , geodeticCRSAxisList , }
		- PARENT = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6019 :	"l_baseGeodCRS"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

6019 :	"primeMeridian"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

6019 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

6019 :	"formatter"
		- NEIGH  = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { geodeticCRSAxisList , if , ! , formatter , && , empty , primeMeridianOrParameterUnitOmittedIfSameAsAxis , }
		- SUCC   = { endNode , formatter , }

6020 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }

6020 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { _exportToWKT , formatter , primeMeridian , l_baseGeodCRS , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }

6022 :	"l_baseProjCRS"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

6022 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

6022 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

6022 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { endNode , formatter , }

6023 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

6023 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , l_baseProjCRS , }
		- SUCC   = { setUseDerivingConversion , formatter , }

6026 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

6026 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { endNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , derivingConversionRef , }

6027 :	"derivingConversionRef"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

6027 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

6027 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , derivingConversionRef , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { setUseDerivingConversion , formatter , }

6028 :	"formatter"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6028 :	"setUseDerivingConversion"
		- NEIGH  = { setUseDerivingConversion , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , derivingConversionRef , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6030 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6030 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6030 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setUseDerivingConversion , formatter , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6031 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

6031 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

6031 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

6032 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

6032 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

6038 :	"DerivedProjectedCRS"
		- NEIGH  = { DerivedProjectedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6038 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6039 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6039 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6039 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6039 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6039 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6039 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6039 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6039 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6040 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6040 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6040 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6040 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6041 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6041 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6041 :	"<"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6041 :	"DerivedProjectedCRS"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6041 :	"*"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6041 :	">"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6041 :	"other"
		- NEIGH  = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6042 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

6042 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

6042 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

6042 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

6043 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

6043 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

6043 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

6043 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

6043 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , other , otherDerivedCRS , DerivedProjectedCRS , < , }
		- SUCC   = { }

6049 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6049 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6055 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6055 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6060 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6060 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6060 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6060 :	"TemporalDatumNNPtr"
		- NEIGH  = { TemporalDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6060 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6060 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6061 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6061 :	"TemporalCSNNPtr"
		- NEIGH  = { TemporalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6061 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6061 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6062 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6062 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6062 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6062 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6062 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6066 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6066 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6066 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6066 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6066 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6067 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6067 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6067 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6071 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6071 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6071 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6072 :	"crs"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6072 :	"TemporalCRS"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6072 :	"nn_make_shared"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6072 :	"<"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6072 :	"TemporalCRS"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6072 :	">"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6072 :	"*"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6072 :	"this"
		- NEIGH  = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6073 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

6073 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

6073 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

6074 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

6074 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

6083 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6083 :	"TemporalDatumNNPtr"
		- NEIGH  = { TemporalDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6083 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6083 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6084 :	"return"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6084 :	"NN_NO_CHECK"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6084 :	"std"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6084 :	"static_pointer_cast"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6084 :	"<"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6084 :	"datum"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6084 :	"TemporalDatum"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6084 :	">"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6085 :	"SingleCRS"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6085 :	"getPrivate"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6085 :	"datum"
		- NEIGH  = { > , TemporalDatum , SingleCRS , datum , < , getPrivate , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6094 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6094 :	"TemporalCSNNPtr"
		- NEIGH  = { TemporalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6094 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6094 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6095 :	"return"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6095 :	"util"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6095 :	"nn_static_pointer_cast"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6095 :	"<"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6095 :	"cs"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6095 :	"TemporalCS"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6095 :	">"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6096 :	"SingleCRS"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6096 :	"getPrivate"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6096 :	"coordinateSystem"
		- NEIGH  = { getPrivate , cs , SingleCRS , TemporalCS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6109 :	"TemporalCRSNNPtr"
		- NEIGH  = { TemporalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6109 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6109 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6109 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6109 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6109 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6109 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6110 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6110 :	"TemporalDatumNNPtr"
		- NEIGH  = { TemporalDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6110 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6110 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6111 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6111 :	"TemporalCSNNPtr"
		- NEIGH  = { TemporalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6111 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6111 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6112 :	"crs"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6112 :	"TemporalCRS"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6112 :	"nn_make_shared"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6112 :	"<"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6112 :	"TemporalCRS"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6112 :	">"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6112 :	"datumIn"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6112 :	"csIn"
		- NEIGH  = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6113 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6113 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6113 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , TemporalCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6114 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6114 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6114 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6115 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

6115 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

6121 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6121 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6121 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6121 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6121 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6121 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6122 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6122 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6122 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6122 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6122 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6122 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6122 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6122 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6123 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }

6123 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }

6123 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }

6124 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6124 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6124 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6127 :	"formatter"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6127 :	"startNode"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6127 :	"io"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6127 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6127 :	"TIMECRS"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6127 :	"!"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6127 :	"identifiers"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6127 :	"empty"
		- NEIGH  = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6128 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

6128 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

6128 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , TIMECRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

6129 :	"datum"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6129 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6129 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6130 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6130 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6130 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6131 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

6131 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

6131 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

6132 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

6132 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

6139 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6139 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6140 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6140 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6140 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6140 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6142 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

6142 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

6142 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

6143 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6144 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6144 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6144 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6144 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6144 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6146 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

6146 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

6147 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

6147 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

6148 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

6148 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

6148 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

6149 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6149 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6151 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6151 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6151 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6154 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6154 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6155 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

6155 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

6156 :	"datum"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

6156 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

6156 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

6158 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6158 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6159 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

6159 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

6160 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

6160 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

6160 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

6162 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

6162 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

6162 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

6168 :	"TemporalCRS"
		- NEIGH  = { TemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6168 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6169 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6169 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6169 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6169 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6169 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6169 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6169 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6169 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6170 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6170 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6170 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6170 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6171 :	"otherTemporalCRS"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

6171 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

6171 :	"<"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

6171 :	"TemporalCRS"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

6171 :	"*"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

6171 :	">"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

6171 :	"other"
		- NEIGH  = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }

6172 :	"return"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

6172 :	"otherTemporalCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

6172 :	"!="
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

6172 :	"&&"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

6173 :	"SingleCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

6173 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

6173 :	"other"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

6173 :	"criterion"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

6173 :	"dbContext"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , SingleCRS , != , && , otherTemporalCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , > , TemporalCRS , otherTemporalCRS , }
		- SUCC   = { }

6179 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6179 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6185 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6185 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6190 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6190 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6190 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6190 :	"EngineeringDatumNNPtr"
		- NEIGH  = { EngineeringDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6190 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6190 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6191 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6191 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6191 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6191 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6192 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6192 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6192 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6192 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6193 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6193 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6193 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6193 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6193 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6193 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6197 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6197 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6197 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6197 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6197 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"internal"
		- NEIGH  = { internal , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"make_unique"
		- NEIGH  = { make_unique , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6198 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6202 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6202 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6202 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6203 :	"crs"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6203 :	"EngineeringCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6203 :	"nn_make_shared"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6203 :	"<"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6203 :	"EngineeringCRS"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6203 :	">"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6203 :	"*"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6203 :	"this"
		- NEIGH  = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6204 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { crs , return , }

6204 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { crs , return , }

6204 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { crs , return , }

6205 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

6205 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

6214 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6214 :	"EngineeringDatumNNPtr"
		- NEIGH  = { EngineeringDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6214 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6214 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6215 :	"return"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6215 :	"NN_NO_CHECK"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6215 :	"std"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6215 :	"static_pointer_cast"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6215 :	"<"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6215 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6215 :	"EngineeringDatum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6215 :	">"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6216 :	"SingleCRS"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6216 :	"getPrivate"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6216 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , EngineeringDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6229 :	"EngineeringCRSNNPtr"
		- NEIGH  = { EngineeringCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6230 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6230 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6230 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6230 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6230 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6230 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6231 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6231 :	"EngineeringDatumNNPtr"
		- NEIGH  = { EngineeringDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6231 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6231 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6232 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6232 :	"CoordinateSystemNNPtr"
		- NEIGH  = { CoordinateSystemNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6232 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6232 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6233 :	"crs"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6233 :	"EngineeringCRS"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6233 :	"nn_make_shared"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6233 :	"<"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6233 :	"EngineeringCRS"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6233 :	">"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6233 :	"datumIn"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6233 :	"csIn"
		- NEIGH  = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6234 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

6234 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

6234 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , datumIn , < , > , nn_make_shared , EngineeringCRS , crs , }
		- SUCC   = { properties , setProperties , crs , }

6235 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6235 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6235 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6237 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

6237 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

6243 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6243 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6243 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6243 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6243 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6243 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6244 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

6244 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

6244 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

6244 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

6244 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

6244 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

6244 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

6244 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }

6245 :	"formatter"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6245 :	"startNode"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6245 :	"isWKT2"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6245 :	"io"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6245 :	"WKTConstants"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6245 :	"ENGCRS"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6246 :	"io"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6246 :	"WKTConstants"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6246 :	"LOCAL_CS"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6247 :	"!"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6247 :	"identifiers"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6247 :	"empty"
		- NEIGH  = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6248 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { empty , datum , if , ! , || , nameStr , isWKT2 , }

6248 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { empty , datum , if , ! , || , nameStr , isWKT2 , }

6248 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { identifiers , LOCAL_CS , empty , ENGCRS , WKTConstants , io , formatter , isWKT2 , ! , startNode , }
		- SUCC   = { empty , datum , if , ! , || , nameStr , isWKT2 , }

6249 :	"if"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

6249 :	"isWKT2"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

6249 :	"||"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

6249 :	"!"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

6249 :	"datum"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

6249 :	"nameStr"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

6249 :	"empty"
		- NEIGH  = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , datum , }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { isWKT2 , ! , if , }

6250 :	"datum"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6250 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6250 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6252 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

6252 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

6252 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PRED   = { empty , datum , if , ! , || , nameStr , isWKT2 , }
		- SUCC   = { outputAxis , formatter , oldAxisOutputRule , }

6253 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6253 :	"axisList"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6253 :	"unit"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6253 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6253 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , unit , axisList , coordinateSystem , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6256 :	"oldAxisOutputRule"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

6256 :	"formatter"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

6256 :	"outputAxis"
		- NEIGH  = { outputAxis , formatter , oldAxisOutputRule , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }

6257 :	"formatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6257 :	"setOutputAxis"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6257 :	"io"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6257 :	"WKTFormatter"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6257 :	"OutputAxisRule"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6257 :	"YES"
		- NEIGH  = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { outputAxis , formatter , oldAxisOutputRule , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6258 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

6258 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

6258 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { YES , OutputAxisRule , WKTFormatter , io , setOutputAxis , formatter , }
		- SUCC   = { oldAxisOutputRule , setOutputAxis , formatter , }

6259 :	"formatter"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6259 :	"setOutputAxis"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6259 :	"oldAxisOutputRule"
		- NEIGH  = { oldAxisOutputRule , setOutputAxis , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6261 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { endNode , formatter , }

6261 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { endNode , formatter , }

6261 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { oldAxisOutputRule , setOutputAxis , formatter , }
		- SUCC   = { endNode , formatter , }

6262 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

6262 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

6269 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6269 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6270 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6270 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6270 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6270 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6272 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

6272 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

6272 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

6273 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6274 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6274 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6274 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6274 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6274 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6276 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

6276 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

6277 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

6277 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

6278 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

6278 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

6278 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

6279 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6279 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6281 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6281 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6281 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6284 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6284 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6285 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

6285 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

6286 :	"datum"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

6286 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

6286 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

6288 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6288 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6289 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

6289 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

6290 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

6290 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

6290 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

6292 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

6292 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

6292 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

6298 :	"EngineeringCRS"
		- NEIGH  = { EngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6298 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6299 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6299 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6299 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6299 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6299 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6299 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6299 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6299 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6300 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6300 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6300 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6300 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6301 :	"otherEngineeringCRS"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

6301 :	"dynamic_cast"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

6301 :	"<"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

6301 :	"EngineeringCRS"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

6301 :	"*"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

6301 :	">"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

6301 :	"other"
		- NEIGH  = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }

6302 :	"return"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

6302 :	"otherEngineeringCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

6302 :	"!="
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

6302 :	"&&"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

6303 :	"SingleCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

6303 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

6303 :	"other"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

6303 :	"criterion"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

6303 :	"dbContext"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , && , SingleCRS , != , otherEngineeringCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , dynamic_cast , * , < , EngineeringCRS , > , otherEngineeringCRS , }
		- SUCC   = { }

6309 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6309 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6315 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6315 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6320 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6320 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6320 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6320 :	"ParametricDatumNNPtr"
		- NEIGH  = { ParametricDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6320 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6320 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6321 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6321 :	"ParametricCSNNPtr"
		- NEIGH  = { ParametricCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6321 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6321 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6322 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6322 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6322 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6322 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6322 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6326 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6326 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6326 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6326 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6326 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6327 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6327 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6327 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6331 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6331 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6331 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6332 :	"crs"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6332 :	"ParametricCRS"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6332 :	"nn_make_shared"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6332 :	"<"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6332 :	"ParametricCRS"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6332 :	">"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6332 :	"*"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6332 :	"this"
		- NEIGH  = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6333 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

6333 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

6333 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { crs , return , }

6334 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

6334 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { }

6343 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6343 :	"ParametricDatumNNPtr"
		- NEIGH  = { ParametricDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6343 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6343 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6344 :	"return"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6344 :	"NN_NO_CHECK"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6344 :	"std"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6344 :	"static_pointer_cast"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6344 :	"<"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6344 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6344 :	"ParametricDatum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6344 :	">"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6345 :	"SingleCRS"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6345 :	"getPrivate"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6345 :	"datum"
		- NEIGH  = { > , SingleCRS , datum , < , getPrivate , ParametricDatum , static_pointer_cast , return , std , NN_NO_CHECK , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6354 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6354 :	"ParametricCSNNPtr"
		- NEIGH  = { ParametricCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6354 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6354 :	"coordinateSystem"
		- NEIGH  = { coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6355 :	"return"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6355 :	"util"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6355 :	"nn_static_pointer_cast"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6355 :	"<"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6355 :	"cs"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6355 :	"ParametricCS"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6355 :	">"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6356 :	"SingleCRS"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6356 :	"getPrivate"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6356 :	"coordinateSystem"
		- NEIGH  = { getPrivate , ParametricCS , cs , SingleCRS , < , > , nn_static_pointer_cast , util , coordinateSystem , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6369 :	"ParametricCRSNNPtr"
		- NEIGH  = { ParametricCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6370 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6370 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6370 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6370 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6370 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6370 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6371 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6371 :	"ParametricDatumNNPtr"
		- NEIGH  = { ParametricDatumNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6371 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6371 :	"datumIn"
		- NEIGH  = { datumIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6372 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6372 :	"ParametricCSNNPtr"
		- NEIGH  = { ParametricCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6372 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6372 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6373 :	"crs"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6373 :	"ParametricCRS"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6373 :	"nn_make_shared"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6373 :	"<"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6373 :	"ParametricCRS"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6373 :	">"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6373 :	"datumIn"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6373 :	"csIn"
		- NEIGH  = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6374 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6374 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6374 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , datumIn , ParametricCRS , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6375 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6375 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6375 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6376 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

6376 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { }

6382 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6382 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6382 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6382 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6382 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6382 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6383 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6383 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6383 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6383 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6383 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6383 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6383 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6383 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6384 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }

6384 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }

6384 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { Throw , FormattingException , io , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }

6385 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6385 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6385 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6388 :	"formatter"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6388 :	"startNode"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6388 :	"io"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6388 :	"WKTConstants"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6388 :	"PARAMETRICCRS"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6389 :	"!"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6389 :	"identifiers"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6389 :	"empty"
		- NEIGH  = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { nameStr , addQuotedString , formatter , }

6390 :	"formatter"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

6390 :	"addQuotedString"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

6390 :	"nameStr"
		- NEIGH  = { nameStr , addQuotedString , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , identifiers , PARAMETRICCRS , WKTConstants , io , ! , startNode , formatter , }
		- SUCC   = { formatter , _exportToWKT , datum , }

6391 :	"datum"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6391 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6391 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { nameStr , addQuotedString , formatter , }
		- SUCC   = { formatter , _exportToWKT , coordinateSystem , }

6392 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6392 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6392 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , datum , }
		- SUCC   = { formatter , baseExportToWKT , ObjectUsage , }

6393 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

6393 :	"baseExportToWKT"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

6393 :	"formatter"
		- NEIGH  = { formatter , baseExportToWKT , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , coordinateSystem , }
		- SUCC   = { endNode , formatter , }

6394 :	"formatter"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

6394 :	"endNode"
		- NEIGH  = { endNode , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , baseExportToWKT , ObjectUsage , }
		- SUCC   = { }

6401 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6401 :	"_exportToJSON"
		- NEIGH  = { _exportToJSON , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6402 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6402 :	"JSONFormatter"
		- NEIGH  = { JSONFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6402 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6402 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6404 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

6404 :	"formatter"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

6404 :	"writer"
		- NEIGH  = { formatter , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }

6405 :	"objectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6406 :	"formatter"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6406 :	"MakeObjectContext"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6406 :	"!"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6406 :	"identifiers"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6406 :	"empty"
		- NEIGH  = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , writer , }
		- SUCC   = { AddObjKey , writer , }

6408 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

6408 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , ! , identifiers , MakeObjectContext , formatter , objectContext , }
		- SUCC   = { nameStr , l_name , }

6409 :	"l_name"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

6409 :	"nameStr"
		- NEIGH  = { nameStr , l_name , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { empty , l_name , if , }

6410 :	"if"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

6410 :	"l_name"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

6410 :	"empty"
		- NEIGH  = { empty , l_name , if , }
		- PARENT = { }
		- CHILD  = { l_name , Add , writer , }
		- PRED   = { nameStr , l_name , }
		- SUCC   = { AddObjKey , writer , }

6411 :	"writer"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6411 :	"Add"
		- NEIGH  = { Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6413 :	"writer"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6413 :	"Add"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6413 :	"l_name"
		- NEIGH  = { l_name , Add , writer , }
		- PARENT = { empty , l_name , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6416 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6416 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { empty , l_name , if , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6417 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

6417 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , datum , }

6418 :	"datum"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

6418 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

6418 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { AddObjKey , writer , }

6420 :	"writer"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6420 :	"AddObjKey"
		- NEIGH  = { AddObjKey , writer , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , datum , }
		- SUCC   = { setOmitTypeInImmediateChild , formatter , }

6421 :	"formatter"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

6421 :	"setOmitTypeInImmediateChild"
		- NEIGH  = { setOmitTypeInImmediateChild , formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { AddObjKey , writer , }
		- SUCC   = { formatter , _exportToJSON , coordinateSystem , }

6422 :	"coordinateSystem"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

6422 :	"_exportToJSON"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

6422 :	"formatter"
		- NEIGH  = { formatter , _exportToJSON , coordinateSystem , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setOmitTypeInImmediateChild , formatter , }
		- SUCC   = { formatter , baseExportToJSON , ObjectUsage , }

6424 :	"ObjectUsage"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

6424 :	"baseExportToJSON"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

6424 :	"formatter"
		- NEIGH  = { formatter , baseExportToJSON , ObjectUsage , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { formatter , _exportToJSON , coordinateSystem , }
		- SUCC   = { }

6430 :	"ParametricCRS"
		- NEIGH  = { ParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6430 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6431 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6431 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6431 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6431 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6431 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6431 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6431 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6431 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6432 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6432 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6432 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6432 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6433 :	"otherParametricCRS"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

6433 :	"dynamic_cast"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

6433 :	"<"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

6433 :	"ParametricCRS"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

6433 :	"*"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

6433 :	">"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

6433 :	"other"
		- NEIGH  = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }

6434 :	"return"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

6434 :	"otherParametricCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

6434 :	"!="
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

6434 :	"&&"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

6435 :	"SingleCRS"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

6435 :	"baseIsEquivalentTo"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

6435 :	"other"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

6435 :	"criterion"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

6435 :	"dbContext"
		- NEIGH  = { dbContext , other , baseIsEquivalentTo , otherParametricCRS , SingleCRS , != , && , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { other , > , dynamic_cast , * , ParametricCRS , < , otherParametricCRS , }
		- SUCC   = { }

6441 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6441 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6447 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6447 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6452 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6452 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6453 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6453 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6453 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6454 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6454 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6454 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6454 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6455 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6455 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6455 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6455 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6456 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6456 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6456 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6456 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6456 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6456 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6457 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6457 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6457 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6457 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6457 :	"datumEnsemble"
		- NEIGH  = { datumEnsemble , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6457 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6458 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6458 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6458 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6458 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6458 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6462 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6462 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6462 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6462 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6462 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6463 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6463 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6463 :	"VerticalCRS"
		- NEIGH  = { VerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6463 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6463 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6463 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6463 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6467 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6467 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6467 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6468 :	"crs"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6468 :	"DerivedVerticalCRS"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6468 :	"nn_make_shared"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6468 :	"<"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6468 :	"DerivedVerticalCRS"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6468 :	">"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6468 :	"*"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6468 :	"this"
		- NEIGH  = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6469 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6469 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6469 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { this , * , < , DerivedVerticalCRS , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6470 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6470 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6471 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

6471 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

6480 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6480 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6480 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6481 :	"return"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6481 :	"NN_NO_CHECK"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6481 :	"util"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6481 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6481 :	"<"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6481 :	"VerticalCRS"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6481 :	">"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6482 :	"DerivedCRS"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6482 :	"getPrivate"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6482 :	"baseCRS_"
		- NEIGH  = { > , DerivedCRS , VerticalCRS , < , util , getPrivate , nn_dynamic_pointer_cast , NN_NO_CHECK , baseCRS_ , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6498 :	"DerivedVerticalCRSNNPtr"
		- NEIGH  = { DerivedVerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6498 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6498 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6499 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6499 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6499 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6499 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6499 :	"VerticalCRSNNPtr"
		- NEIGH  = { VerticalCRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6499 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6499 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6500 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6500 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6500 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6500 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6501 :	"cs"
		- NEIGH  = { cs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6501 :	"VerticalCSNNPtr"
		- NEIGH  = { VerticalCSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6501 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6501 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6502 :	"crs"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6502 :	"DerivedVerticalCRS"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6502 :	"nn_make_shared"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6502 :	"<"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6502 :	"DerivedVerticalCRS"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6502 :	">"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6503 :	"baseCRSIn"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6503 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6503 :	"csIn"
		- NEIGH  = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6504 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6504 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6504 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedVerticalCRS , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6505 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6505 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6505 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6506 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

6506 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

6507 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

6507 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

6513 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6513 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6513 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6513 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6513 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6513 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6514 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6514 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6514 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6514 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6514 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6514 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6514 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6514 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { isWKT2 , ! , if , }

6515 :	"if"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { io , if , Throw , while , dvcrs , this , * , DerivedVerticalCRS , FormattingException , useBaseMethod , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }

6515 :	"!"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { io , if , Throw , while , dvcrs , this , * , DerivedVerticalCRS , FormattingException , useBaseMethod , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }

6515 :	"isWKT2"
		- NEIGH  = { isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { io , if , Throw , while , dvcrs , this , * , DerivedVerticalCRS , FormattingException , useBaseMethod , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }

6517 :	"useBaseMethod"
		- NEIGH  = { useBaseMethod , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dvcrs , this , * , DerivedVerticalCRS , }

6518 :	"DerivedVerticalCRS"
		- NEIGH  = { dvcrs , this , * , DerivedVerticalCRS , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { useBaseMethod , }
		- SUCC   = { while , }

6518 :	"*"
		- NEIGH  = { dvcrs , this , * , DerivedVerticalCRS , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { useBaseMethod , }
		- SUCC   = { while , }

6518 :	"dvcrs"
		- NEIGH  = { dvcrs , this , * , DerivedVerticalCRS , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { useBaseMethod , }
		- SUCC   = { while , }

6518 :	"this"
		- NEIGH  = { dvcrs , this , * , DerivedVerticalCRS , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { useBaseMethod , }
		- SUCC   = { while , }

6519 :	"while"
		- NEIGH  = { while , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , getEPSGCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , derivingConversionRef , method , dvcrs , if , methodCode , }
		- PRED   = { dvcrs , this , * , DerivedVerticalCRS , }
		- SUCC   = { useBaseMethod , if , }

6523 :	"methodCode"
		- NEIGH  = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- PARENT = { while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }

6524 :	"dvcrs"
		- NEIGH  = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- PARENT = { while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }

6524 :	"derivingConversionRef"
		- NEIGH  = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- PARENT = { while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }

6524 :	"method"
		- NEIGH  = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- PARENT = { while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }

6524 :	"getEPSGCode"
		- NEIGH  = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- PARENT = { while , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }

6525 :	"if"
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6525 :	"methodCode"
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6525 :	"=="
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6525 :	"EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT"
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6525 :	"||"
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6526 :	"methodCode"
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6526 :	"=="
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6527 :	"EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR"
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6527 :	"||"
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6528 :	"methodCode"
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6528 :	"=="
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6528 :	"EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL"
		- NEIGH  = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- PARENT = { while , }
		- CHILD  = { break , useBaseMethod , == , if , get , baseCRS , > , < , dynamic_cast , * , DerivedVerticalCRS , dvcrs , }
		- PRED   = { getEPSGCode , derivingConversionRef , method , dvcrs , methodCode , }
		- SUCC   = { }

6529 :	"dvcrs"
		- NEIGH  = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , dvcrs , if , }

6529 :	"dynamic_cast"
		- NEIGH  = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , dvcrs , if , }

6529 :	"<"
		- NEIGH  = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , dvcrs , if , }

6529 :	"DerivedVerticalCRS"
		- NEIGH  = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , dvcrs , if , }

6529 :	"*"
		- NEIGH  = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , dvcrs , if , }

6529 :	">"
		- NEIGH  = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , dvcrs , if , }

6529 :	"baseCRS"
		- NEIGH  = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , dvcrs , if , }

6529 :	"get"
		- NEIGH  = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { == , dvcrs , if , }

6530 :	"if"
		- NEIGH  = { == , dvcrs , if , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { break , }
		- PRED   = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- SUCC   = { }

6530 :	"dvcrs"
		- NEIGH  = { == , dvcrs , if , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { break , }
		- PRED   = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- SUCC   = { }

6530 :	"=="
		- NEIGH  = { == , dvcrs , if , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { break , }
		- PRED   = { get , baseCRS , > , dynamic_cast , * , DerivedVerticalCRS , < , dvcrs , }
		- SUCC   = { }

6531 :	"break"
		- NEIGH  = { break , }
		- PARENT = { == , dvcrs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6534 :	"useBaseMethod"
		- NEIGH  = { useBaseMethod , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { break , }

6535 :	"break"
		- NEIGH  = { break , }
		- PARENT = { || , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT_NO_CONV_FACTOR , == , if , methodCode , EPSG_CODE_METHOD_HEIGHT_DEPTH_REVERSAL , EPSG_CODE_METHOD_CHANGE_VERTICAL_UNIT , }
		- CHILD  = { }
		- PRED   = { useBaseMethod , }
		- SUCC   = { }

6538 :	"if"
		- NEIGH  = { useBaseMethod , if , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { return , formatter , _exportToWKT , VerticalCRS , }
		- PRED   = { while , }
		- SUCC   = { Throw , FormattingException , io , }

6538 :	"useBaseMethod"
		- NEIGH  = { useBaseMethod , if , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { return , formatter , _exportToWKT , VerticalCRS , }
		- PRED   = { while , }
		- SUCC   = { Throw , FormattingException , io , }

6539 :	"VerticalCRS"
		- NEIGH  = { formatter , _exportToWKT , VerticalCRS , }
		- PARENT = { useBaseMethod , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

6539 :	"_exportToWKT"
		- NEIGH  = { formatter , _exportToWKT , VerticalCRS , }
		- PARENT = { useBaseMethod , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

6539 :	"formatter"
		- NEIGH  = { formatter , _exportToWKT , VerticalCRS , }
		- PARENT = { useBaseMethod , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { return , }

6540 :	"return"
		- NEIGH  = { return , }
		- PARENT = { useBaseMethod , if , }
		- CHILD  = { }
		- PRED   = { formatter , _exportToWKT , VerticalCRS , }
		- SUCC   = { }

6543 :	"io"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { useBaseMethod , if , }
		- SUCC   = { }

6543 :	"FormattingException"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { useBaseMethod , if , }
		- SUCC   = { }

6543 :	"Throw"
		- NEIGH  = { Throw , FormattingException , io , }
		- PARENT = { isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { useBaseMethod , if , }
		- SUCC   = { }

6546 :	"baseExportToWKT"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

6546 :	"formatter"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

6546 :	"io"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

6546 :	"WKTConstants"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

6546 :	"VERTCRS"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

6547 :	"io"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

6547 :	"WKTConstants"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

6547 :	"BASEVERTCRS"
		- NEIGH  = { BASEVERTCRS , VERTCRS , WKTConstants , io , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { isWKT2 , ! , if , }
		- SUCC   = { }

6553 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6553 :	"_exportToPROJString"
		- NEIGH  = { _exportToPROJString , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6554 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6554 :	"PROJStringFormatter"
		- NEIGH  = { PROJStringFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6554 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6556 :	"throw"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6556 :	"io"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6556 :	"FormattingException"
		- NEIGH  = { FormattingException , io , throw , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6562 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6562 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6563 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6563 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6563 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6563 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6563 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6563 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6563 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6563 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6564 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6564 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6564 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6564 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6565 :	"otherDerivedCRS"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6565 :	"dynamic_cast"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6565 :	"<"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6565 :	"DerivedVerticalCRS"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6565 :	"*"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6565 :	">"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6565 :	"other"
		- NEIGH  = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6566 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

6566 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

6566 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

6566 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

6567 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

6567 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

6567 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

6567 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

6567 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , dynamic_cast , * , < , DerivedVerticalCRS , other , otherDerivedCRS , }
		- SUCC   = { }

6574 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6574 :	"list"
		- NEIGH  = { list , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6574 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6574 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6574 :	"pair"
		- NEIGH  = { pair , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6574 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6574 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6574 :	">>"
		- NEIGH  = { >> , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6575 :	"DerivedVerticalCRS"
		- NEIGH  = { DerivedVerticalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6575 :	"_identify"
		- NEIGH  = { _identify , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6575 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6575 :	"AuthorityFactoryPtr"
		- NEIGH  = { AuthorityFactoryPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6575 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6575 :	"factory"
		- NEIGH  = { factory , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6576 :	"return"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6576 :	"CRS"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6576 :	"_identify"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6576 :	"factory"
		- NEIGH  = { factory , _identify , CRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6584 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6584 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6584 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6585 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6585 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6585 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6585 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6585 :	"Private"
		- NEIGH  = { Private , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6591 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6591 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6591 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6592 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6592 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6592 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6592 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6592 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6597 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6597 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6597 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6598 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6598 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6598 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6598 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6598 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6599 :	"BaseNNPtr"
		- NEIGH  = { BaseNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6599 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6599 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6600 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6600 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6600 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6600 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6600 :	"CSNNPtr"
		- NEIGH  = { CSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6600 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6600 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6601 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6601 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6601 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6601 :	"as_nullable"
		- NEIGH  = { as_nullable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6601 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6602 :	"BaseType"
		- NEIGH  = { BaseType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6602 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6602 :	"datum"
		- NEIGH  = { datum , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6602 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6603 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6603 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6603 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6603 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6603 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6607 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6607 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6607 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6608 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6608 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6608 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6608 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6608 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6609 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6609 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6609 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6610 :	"SingleCRS"
		- NEIGH  = { SingleCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6610 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6610 :	"BaseType"
		- NEIGH  = { BaseType , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6610 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6610 :	"DerivedCRS"
		- NEIGH  = { DerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6610 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6610 :	"d"
		- NEIGH  = { d , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6614 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6614 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6614 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6615 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6615 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6615 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6615 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6615 :	"BaseNNPtr"
		- NEIGH  = { BaseNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6616 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6616 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6616 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6616 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6616 :	"baseCRS"
		- NEIGH  = { baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6617 :	"l_baseCRS"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

6617 :	"DerivedCRS"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

6617 :	"getPrivate"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

6617 :	"baseCRS_"
		- NEIGH  = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }

6618 :	"return"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

6618 :	"NN_NO_CHECK"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

6618 :	"util"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

6618 :	"nn_dynamic_pointer_cast"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

6618 :	"<"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

6618 :	"BaseType"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

6618 :	">"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

6618 :	"l_baseCRS"
		- NEIGH  = { > , BaseType , < , util , nn_dynamic_pointer_cast , NN_NO_CHECK , l_baseCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { getPrivate , DerivedCRS , baseCRS_ , l_baseCRS , }
		- SUCC   = { }

6625 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6625 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6625 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6626 :	"CRSNNPtr"
		- NEIGH  = { CRSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6626 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6626 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6626 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6626 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6626 :	"_shallowClone"
		- NEIGH  = { _shallowClone , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6627 :	"crs"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6627 :	"DerivedCRSTemplate"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6627 :	"nn_make_shared"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6627 :	"<"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6627 :	"DerivedCRSTemplate"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6627 :	">"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6627 :	"*"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6627 :	"this"
		- NEIGH  = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6628 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6628 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6628 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , this , * , DerivedCRSTemplate , > , nn_make_shared , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6629 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6629 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { crs , return , }

6630 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

6630 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

6635 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6635 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6635 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6636 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6636 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6636 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6636 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6636 :	"NNPtr"
		- NEIGH  = { NNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6637 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6637 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6637 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6637 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6637 :	"create"
		- NEIGH  = { create , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6638 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6638 :	"PropertyMap"
		- NEIGH  = { PropertyMap , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6638 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6638 :	"properties"
		- NEIGH  = { properties , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6638 :	"BaseNNPtr"
		- NEIGH  = { BaseNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6638 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6638 :	"baseCRSIn"
		- NEIGH  = { baseCRSIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6639 :	"operation"
		- NEIGH  = { operation , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6639 :	"ConversionNNPtr"
		- NEIGH  = { ConversionNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6639 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6639 :	"derivingConversionIn"
		- NEIGH  = { derivingConversionIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6640 :	"CSNNPtr"
		- NEIGH  = { CSNNPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6640 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6640 :	"csIn"
		- NEIGH  = { csIn , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6641 :	"crs"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6641 :	"DerivedCRSTemplate"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6641 :	"nn_make_shared"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6641 :	"<"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6641 :	"DerivedCRSTemplate"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6641 :	">"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6642 :	"baseCRSIn"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6642 :	"derivingConversionIn"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6642 :	"csIn"
		- NEIGH  = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { assignSelf , crs , }

6643 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6643 :	"assignSelf"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6643 :	"crs"
		- NEIGH  = { assignSelf , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { csIn , < , DerivedCRSTemplate , derivingConversionIn , baseCRSIn , > , nn_make_shared , crs , }
		- SUCC   = { properties , setProperties , crs , }

6644 :	"crs"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6644 :	"setProperties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6644 :	"properties"
		- NEIGH  = { properties , setProperties , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { assignSelf , crs , }
		- SUCC   = { setDerivingConversionCRS , crs , }

6645 :	"crs"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

6645 :	"setDerivingConversionCRS"
		- NEIGH  = { setDerivingConversionCRS , crs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { properties , setProperties , crs , }
		- SUCC   = { crs , return , }

6646 :	"return"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

6646 :	"crs"
		- NEIGH  = { crs , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { setDerivingConversionCRS , crs , }
		- SUCC   = { }

6651 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6651 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6651 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6652 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6652 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6652 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6652 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6652 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6652 :	"className"
		- NEIGH  = { className , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6653 :	"return"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6653 :	"DerivedCRSTraits"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6653 :	"CRSName"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6653 :	"c_str"
		- NEIGH  = { c_str , CRSName , DerivedCRSTraits , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6658 :	"DerivedCRSTemplateCheckExportToWKT"
		- NEIGH  = { DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6658 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6658 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6658 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6658 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6659 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6659 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6659 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6659 :	"crsName"
		- NEIGH  = { crsName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6660 :	"wkt2_2019_only"
		- NEIGH  = { wkt2_2019_only , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6661 :	"isWKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

6661 :	"formatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

6661 :	"version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

6661 :	"=="
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

6661 :	"io"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

6661 :	"WKTFormatter"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

6661 :	"Version"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

6661 :	"WKT2"
		- NEIGH  = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }

6662 :	"if"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

6662 :	"!"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

6662 :	"isWKT2"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

6662 :	"||"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

6662 :	"wkt2_2019_only"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

6662 :	"&&"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

6662 :	"!"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

6662 :	"formatter"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

6662 :	"use2019Keywords"
		- NEIGH  = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- PARENT = { }
		- CHILD  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PRED   = { WKT2 , Version , WKTFormatter , io , version , formatter , == , isWKT2 , }
		- SUCC   = { }

6663 :	"io"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6663 :	"FormattingException"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6663 :	"Throw"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6663 :	"crsName"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6663 :	"+"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6664 :	"+"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6665 :	"wkt2_2019_only"
		- NEIGH  = { wkt2_2019_only , + , io , crsName , Throw , FormattingException , }
		- PARENT = { || , wkt2_2019_only , use2019Keywords , formatter , && , isWKT2 , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6671 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6671 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6671 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6672 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6672 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6672 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6672 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6672 :	"_exportToWKT"
		- NEIGH  = { _exportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6673 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6673 :	"WKTFormatter"
		- NEIGH  = { WKTFormatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6673 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6673 :	"formatter"
		- NEIGH  = { formatter , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6674 :	"DerivedCRSTemplateCheckExportToWKT"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

6674 :	"formatter"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

6674 :	"DerivedCRSTraits"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

6674 :	"CRSName"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

6675 :	"DerivedCRSTraits"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

6675 :	"wkt2_2019_only"
		- NEIGH  = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }

6676 :	"baseExportToWKT"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

6676 :	"formatter"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

6676 :	"DerivedCRSTraits"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

6676 :	"WKTKeyword"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

6677 :	"DerivedCRSTraits"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

6677 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , WKTKeyword , DerivedCRSTraits , formatter , baseExportToWKT , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { wkt2_2019_only , CRSName , DerivedCRSTraits , formatter , DerivedCRSTemplateCheckExportToWKT , }
		- SUCC   = { }

6682 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6682 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6682 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6683 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6683 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6683 :	"DerivedCRSTraits"
		- NEIGH  = { DerivedCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6683 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6683 :	"_isEquivalentTo"
		- NEIGH  = { _isEquivalentTo , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6684 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6684 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6684 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6684 :	"other"
		- NEIGH  = { other , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6684 :	"util"
		- NEIGH  = { util , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6684 :	"IComparable"
		- NEIGH  = { IComparable , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6684 :	"Criterion"
		- NEIGH  = { Criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6684 :	"criterion"
		- NEIGH  = { criterion , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6685 :	"io"
		- NEIGH  = { io , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6685 :	"DatabaseContextPtr"
		- NEIGH  = { DatabaseContextPtr , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6685 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6685 :	"dbContext"
		- NEIGH  = { dbContext , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6686 :	"otherDerivedCRS"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6686 :	"dynamic_cast"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6686 :	"<"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6686 :	"DerivedCRSTemplate"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6686 :	"*"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6686 :	">"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6686 :	"other"
		- NEIGH  = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }

6687 :	"return"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

6687 :	"otherDerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

6687 :	"!="
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

6687 :	"&&"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

6688 :	"DerivedCRS"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

6688 :	"_isEquivalentTo"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

6688 :	"other"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

6688 :	"criterion"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

6688 :	"dbContext"
		- NEIGH  = { dbContext , DerivedCRS , != , _isEquivalentTo , && , other , otherDerivedCRS , criterion , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { > , DerivedCRSTemplate , dynamic_cast , * , < , other , otherDerivedCRS , }
		- SUCC   = { }

6696 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6696 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6696 :	"STRING_DerivedEngineeringCRS"
		- NEIGH  = { STRING_DerivedEngineeringCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6697 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6697 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6697 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6697 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6697 :	"CRSName"
		- NEIGH  = { CRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6698 :	"return"
		- NEIGH  = { STRING_DerivedEngineeringCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6698 :	"STRING_DerivedEngineeringCRS"
		- NEIGH  = { STRING_DerivedEngineeringCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6700 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6700 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6700 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6700 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6700 :	"WKTKeyword"
		- NEIGH  = { WKTKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6701 :	"return"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6701 :	"io"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6701 :	"WKTConstants"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6701 :	"ENGCRS"
		- NEIGH  = { ENGCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6703 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6703 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6703 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6703 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6703 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6704 :	"return"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6704 :	"io"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6704 :	"WKTConstants"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6704 :	"BASEENGCRS"
		- NEIGH  = { WKTConstants , io , BASEENGCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6707 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6707 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6707 :	"DerivedEngineeringCRSTraits"
		- NEIGH  = { DerivedEngineeringCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6707 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6713 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6713 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6713 :	"STRING_DerivedParametricCRS"
		- NEIGH  = { STRING_DerivedParametricCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6714 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6714 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6714 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6714 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6714 :	"CRSName"
		- NEIGH  = { CRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6715 :	"return"
		- NEIGH  = { STRING_DerivedParametricCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6715 :	"STRING_DerivedParametricCRS"
		- NEIGH  = { STRING_DerivedParametricCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6717 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6717 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6717 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6717 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6717 :	"WKTKeyword"
		- NEIGH  = { WKTKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6718 :	"return"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6718 :	"io"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6718 :	"WKTConstants"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6718 :	"PARAMETRICCRS"
		- NEIGH  = { PARAMETRICCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6720 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6720 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6720 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6720 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6720 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6721 :	"return"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6721 :	"io"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6721 :	"WKTConstants"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6721 :	"BASEPARAMCRS"
		- NEIGH  = { BASEPARAMCRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6724 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6724 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6724 :	"DerivedParametricCRSTraits"
		- NEIGH  = { DerivedParametricCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6724 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6730 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6730 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6730 :	"STRING_DerivedTemporalCRS"
		- NEIGH  = { STRING_DerivedTemporalCRS , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6731 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6731 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6731 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6731 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6731 :	"CRSName"
		- NEIGH  = { CRSName , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6732 :	"return"
		- NEIGH  = { STRING_DerivedTemporalCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6732 :	"STRING_DerivedTemporalCRS"
		- NEIGH  = { STRING_DerivedTemporalCRS , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6734 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6734 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6734 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6734 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6734 :	"WKTKeyword"
		- NEIGH  = { WKTKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6735 :	"return"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6735 :	"io"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6735 :	"WKTConstants"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6735 :	"TIMECRS"
		- NEIGH  = { TIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6737 :	"std"
		- NEIGH  = { std , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6737 :	"string"
		- NEIGH  = { string , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6737 :	"&"
		- NEIGH  = { & , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6737 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6737 :	"WKTBaseKeyword"
		- NEIGH  = { WKTBaseKeyword , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6738 :	"return"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6738 :	"io"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6738 :	"WKTConstants"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6738 :	"BASETIMECRS"
		- NEIGH  = { BASETIMECRS , WKTConstants , io , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6741 :	"DerivedCRSTemplate"
		- NEIGH  = { DerivedCRSTemplate , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6741 :	"<"
		- NEIGH  = { < , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6741 :	"DerivedTemporalCRSTraits"
		- NEIGH  = { DerivedTemporalCRSTraits , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6741 :	">"
		- NEIGH  = { > , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

6747 :	"NS_PROJ_END"
		- NEIGH  = { NS_PROJ_END , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

