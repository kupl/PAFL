7 :	"PROJ_HEAD"
		- NEIGH  = { PROJ_HEAD , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

7 :	"lcc"
		- NEIGH  = { lcc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

13 :	"pj_opaque"
		- NEIGH  = { pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

14 :	"phi1"
		- NEIGH  = { phi1 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

15 :	"phi2"
		- NEIGH  = { phi2 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

16 :	"n"
		- NEIGH  = { n , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

17 :	"rho0"
		- NEIGH  = { rho0 , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

18 :	"c"
		- NEIGH  = { c , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"e_forward"
		- NEIGH  = { e_forward , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"lp"
		- NEIGH  = { lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

23 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

24 :	"PJ_XY"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

24 :	"xy"
		- NEIGH  = { xy , PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

25 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

25 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

25 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

25 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

25 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

25 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

25 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

25 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

25 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

25 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { xy , PJ_XY , }
		- SUCC   = { rho , }

26 :	"rho"
		- NEIGH  = { rho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { < , M_HALFPI , - , phi , lp , fabs , if , }

28 :	"if"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , pj_tsfn , M_FORTPI , != , * , es , c , tan , e , P , rho , pow , Q , + , <= , phi , n , lp , sin , if , }
		- PRED   = { rho , }
		- SUCC   = { n , Q , *= , lam , lp , }

28 :	"fabs"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , pj_tsfn , M_FORTPI , != , * , es , c , tan , e , P , rho , pow , Q , + , <= , phi , n , lp , sin , if , }
		- PRED   = { rho , }
		- SUCC   = { n , Q , *= , lam , lp , }

28 :	"fabs"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , pj_tsfn , M_FORTPI , != , * , es , c , tan , e , P , rho , pow , Q , + , <= , phi , n , lp , sin , if , }
		- PRED   = { rho , }
		- SUCC   = { n , Q , *= , lam , lp , }

28 :	"lp"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , pj_tsfn , M_FORTPI , != , * , es , c , tan , e , P , rho , pow , Q , + , <= , phi , n , lp , sin , if , }
		- PRED   = { rho , }
		- SUCC   = { n , Q , *= , lam , lp , }

28 :	"phi"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , pj_tsfn , M_FORTPI , != , * , es , c , tan , e , P , rho , pow , Q , + , <= , phi , n , lp , sin , if , }
		- PRED   = { rho , }
		- SUCC   = { n , Q , *= , lam , lp , }

28 :	"-"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , pj_tsfn , M_FORTPI , != , * , es , c , tan , e , P , rho , pow , Q , + , <= , phi , n , lp , sin , if , }
		- PRED   = { rho , }
		- SUCC   = { n , Q , *= , lam , lp , }

28 :	"M_HALFPI"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , pj_tsfn , M_FORTPI , != , * , es , c , tan , e , P , rho , pow , Q , + , <= , phi , n , lp , sin , if , }
		- PRED   = { rho , }
		- SUCC   = { n , Q , *= , lam , lp , }

28 :	"<"
		- NEIGH  = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- PARENT = { }
		- CHILD  = { - , pj_tsfn , M_FORTPI , != , * , es , c , tan , e , P , rho , pow , Q , + , <= , phi , n , lp , sin , if , }
		- PRED   = { rho , }
		- SUCC   = { n , Q , *= , lam , lp , }

29 :	"if"
		- NEIGH  = { Q , * , <= , phi , n , lp , if , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { rho , }

29 :	"lp"
		- NEIGH  = { Q , * , <= , phi , n , lp , if , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { rho , }

29 :	"phi"
		- NEIGH  = { Q , * , <= , phi , n , lp , if , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { rho , }

29 :	"*"
		- NEIGH  = { Q , * , <= , phi , n , lp , if , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { rho , }

29 :	"Q"
		- NEIGH  = { Q , * , <= , phi , n , lp , if , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { rho , }

29 :	"n"
		- NEIGH  = { Q , * , <= , phi , n , lp , if , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { rho , }

29 :	"<="
		- NEIGH  = { Q , * , <= , phi , n , lp , if , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { xy , return , PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PRED   = { }
		- SUCC   = { rho , }

30 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { Q , * , <= , phi , n , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

30 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { Q , * , <= , phi , n , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

30 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { Q , * , <= , phi , n , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { xy , return , }

31 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { Q , * , <= , phi , n , lp , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

31 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { Q , * , <= , phi , n , lp , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

33 :	"rho"
		- NEIGH  = { rho , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { Q , * , <= , phi , n , lp , if , }
		- SUCC   = { }

35 :	"rho"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"Q"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"c"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"*"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"P"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"es"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

35 :	"!="
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"pow"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"pj_tsfn"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"lp"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"phi"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"sin"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"lp"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"phi"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"P"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"e"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"Q"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

36 :	"n"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"pow"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"tan"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"M_FORTPI"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"+"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"*"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"lp"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"phi"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"-"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"Q"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

37 :	"n"
		- NEIGH  = { - , + , n , sin , lp , Q , pow , phi , M_FORTPI , != , * , es , pj_tsfn , rho , tan , e , P , c , }
		- PARENT = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

39 :	"lp"
		- NEIGH  = { n , Q , *= , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lp , sin , k0 , lam , rho , P , * , x , xy , }

39 :	"lam"
		- NEIGH  = { n , Q , *= , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lp , sin , k0 , lam , rho , P , * , x , xy , }

39 :	"*="
		- NEIGH  = { n , Q , *= , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lp , sin , k0 , lam , rho , P , * , x , xy , }

39 :	"Q"
		- NEIGH  = { n , Q , *= , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lp , sin , k0 , lam , rho , P , * , x , xy , }

39 :	"n"
		- NEIGH  = { n , Q , *= , lam , lp , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , M_HALFPI , - , phi , lp , fabs , if , }
		- SUCC   = { lp , sin , k0 , lam , rho , P , * , x , xy , }

40 :	"xy"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

40 :	"x"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

40 :	"P"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

40 :	"k0"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

40 :	"*"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

40 :	"rho"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

40 :	"*"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

40 :	"sin"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

40 :	"lp"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

40 :	"lam"
		- NEIGH  = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { n , Q , *= , lam , lp , }
		- SUCC   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }

41 :	"xy"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"y"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"P"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"k0"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"*"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"Q"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"rho0"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"-"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"rho"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"*"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"cos"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"lp"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

41 :	"lam"
		- NEIGH  = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , sin , k0 , lam , rho , P , * , x , xy , }
		- SUCC   = { xy , return , }

42 :	"return"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- SUCC   = { }

42 :	"xy"
		- NEIGH  = { xy , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lam , lp , y , - , cos , rho0 , Q , xy , k0 , rho , P , * , }
		- SUCC   = { }

46 :	"PJ_LP"
		- NEIGH  = { PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"e_inverse"
		- NEIGH  = { e_inverse , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"PJ_XY"
		- NEIGH  = { PJ_XY , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"xy"
		- NEIGH  = { xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

46 :	"P"
		- NEIGH  = { P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

47 :	"PJ_LP"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

47 :	"lp"
		- NEIGH  = { lp , PJ_LP , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }

48 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

48 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

48 :	"Q"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

48 :	"static_cast"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

48 :	"<"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

48 :	"pj_opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

48 :	"*"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

48 :	">"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

48 :	"P"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

48 :	"opaque"
		- NEIGH  = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { lp , PJ_LP , }
		- SUCC   = { rho , }

49 :	"rho"
		- NEIGH  = { rho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { P , > , < , opaque , Q , static_cast , * , pj_opaque , }
		- SUCC   = { k0 , P , /= , x , xy , }

51 :	"xy"
		- NEIGH  = { k0 , P , /= , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rho , }
		- SUCC   = { k0 , P , /= , y , xy , }

51 :	"x"
		- NEIGH  = { k0 , P , /= , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rho , }
		- SUCC   = { k0 , P , /= , y , xy , }

51 :	"/="
		- NEIGH  = { k0 , P , /= , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rho , }
		- SUCC   = { k0 , P , /= , y , xy , }

51 :	"P"
		- NEIGH  = { k0 , P , /= , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rho , }
		- SUCC   = { k0 , P , /= , y , xy , }

51 :	"k0"
		- NEIGH  = { k0 , P , /= , x , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { rho , }
		- SUCC   = { k0 , P , /= , y , xy , }

52 :	"xy"
		- NEIGH  = { k0 , P , /= , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , x , xy , }
		- SUCC   = { - , rho0 , Q , y , xy , }

52 :	"y"
		- NEIGH  = { k0 , P , /= , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , x , xy , }
		- SUCC   = { - , rho0 , Q , y , xy , }

52 :	"/="
		- NEIGH  = { k0 , P , /= , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , x , xy , }
		- SUCC   = { - , rho0 , Q , y , xy , }

52 :	"P"
		- NEIGH  = { k0 , P , /= , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , x , xy , }
		- SUCC   = { - , rho0 , Q , y , xy , }

52 :	"k0"
		- NEIGH  = { k0 , P , /= , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , x , xy , }
		- SUCC   = { - , rho0 , Q , y , xy , }

54 :	"xy"
		- NEIGH  = { - , rho0 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , y , xy , }
		- SUCC   = { y , x , xy , hypot , rho , }

54 :	"y"
		- NEIGH  = { - , rho0 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , y , xy , }
		- SUCC   = { y , x , xy , hypot , rho , }

54 :	"Q"
		- NEIGH  = { - , rho0 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , y , xy , }
		- SUCC   = { y , x , xy , hypot , rho , }

54 :	"rho0"
		- NEIGH  = { - , rho0 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , y , xy , }
		- SUCC   = { y , x , xy , hypot , rho , }

54 :	"-"
		- NEIGH  = { - , rho0 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , y , xy , }
		- SUCC   = { y , x , xy , hypot , rho , }

54 :	"xy"
		- NEIGH  = { - , rho0 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , y , xy , }
		- SUCC   = { y , x , xy , hypot , rho , }

54 :	"y"
		- NEIGH  = { - , rho0 , Q , y , xy , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { k0 , P , /= , y , xy , }
		- SUCC   = { y , x , xy , hypot , rho , }

55 :	"rho"
		- NEIGH  = { y , x , xy , hypot , rho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , rho0 , Q , y , xy , }
		- SUCC   = { != , rho , if , }

55 :	"hypot"
		- NEIGH  = { y , x , xy , hypot , rho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , rho0 , Q , y , xy , }
		- SUCC   = { != , rho , if , }

55 :	"xy"
		- NEIGH  = { y , x , xy , hypot , rho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , rho0 , Q , y , xy , }
		- SUCC   = { != , rho , if , }

55 :	"x"
		- NEIGH  = { y , x , xy , hypot , rho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , rho0 , Q , y , xy , }
		- SUCC   = { != , rho , if , }

55 :	"xy"
		- NEIGH  = { y , x , xy , hypot , rho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , rho0 , Q , y , xy , }
		- SUCC   = { != , rho , if , }

55 :	"y"
		- NEIGH  = { y , x , xy , hypot , rho , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { - , rho0 , Q , y , xy , }
		- SUCC   = { != , rho , if , }

56 :	"if"
		- NEIGH  = { != , rho , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , > , phi , / , - , y , x , < , xy , atan2 , != , es , lam , lp , n , P , Q , if , }
		- PRED   = { y , x , xy , hypot , rho , }
		- SUCC   = { lp , return , }

56 :	"rho"
		- NEIGH  = { != , rho , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , > , phi , / , - , y , x , < , xy , atan2 , != , es , lam , lp , n , P , Q , if , }
		- PRED   = { y , x , xy , hypot , rho , }
		- SUCC   = { lp , return , }

56 :	"!="
		- NEIGH  = { != , rho , if , }
		- PARENT = { }
		- CHILD  = { M_HALFPI , > , phi , / , - , y , x , < , xy , atan2 , != , es , lam , lp , n , P , Q , if , }
		- PRED   = { y , x , xy , hypot , rho , }
		- SUCC   = { lp , return , }

57 :	"if"
		- NEIGH  = { < , n , Q , if , }
		- PARENT = { != , rho , if , }
		- CHILD  = { y , x , xy , - , rho , }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

57 :	"Q"
		- NEIGH  = { < , n , Q , if , }
		- PARENT = { != , rho , if , }
		- CHILD  = { y , x , xy , - , rho , }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

57 :	"n"
		- NEIGH  = { < , n , Q , if , }
		- PARENT = { != , rho , if , }
		- CHILD  = { y , x , xy , - , rho , }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

57 :	"<"
		- NEIGH  = { < , n , Q , if , }
		- PARENT = { != , rho , if , }
		- CHILD  = { y , x , xy , - , rho , }
		- PRED   = { }
		- SUCC   = { != , es , P , if , }

58 :	"rho"
		- NEIGH  = { - , rho , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , x , xy , }

58 :	"-"
		- NEIGH  = { - , rho , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , x , xy , }

58 :	"rho"
		- NEIGH  = { - , rho , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , x , xy , }

59 :	"xy"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , rho , }
		- SUCC   = { - , y , xy , }

59 :	"x"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , rho , }
		- SUCC   = { - , y , xy , }

59 :	"-"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , rho , }
		- SUCC   = { - , y , xy , }

59 :	"xy"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , rho , }
		- SUCC   = { - , y , xy , }

59 :	"x"
		- NEIGH  = { - , x , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , rho , }
		- SUCC   = { - , y , xy , }

60 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , x , xy , }
		- SUCC   = { }

60 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , x , xy , }
		- SUCC   = { }

60 :	"-"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , x , xy , }
		- SUCC   = { }

60 :	"xy"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , x , xy , }
		- SUCC   = { }

60 :	"y"
		- NEIGH  = { - , y , xy , }
		- PARENT = { < , n , Q , if , }
		- CHILD  = { }
		- PRED   = { - , x , xy , }
		- SUCC   = { }

62 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { != , rho , if , }
		- CHILD  = { - , atan , HUGE_VAL , if , c , Q , pj_phi2 , pow , M_HALFPI , rho , e , P , * , ctx , / , == , phi , n , lp , }
		- PRED   = { < , n , Q , if , }
		- SUCC   = { Q , / , y , x , xy , lam , atan2 , n , lp , }

62 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { != , rho , if , }
		- CHILD  = { - , atan , HUGE_VAL , if , c , Q , pj_phi2 , pow , M_HALFPI , rho , e , P , * , ctx , / , == , phi , n , lp , }
		- PRED   = { < , n , Q , if , }
		- SUCC   = { Q , / , y , x , xy , lam , atan2 , n , lp , }

62 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { != , rho , if , }
		- CHILD  = { - , atan , HUGE_VAL , if , c , Q , pj_phi2 , pow , M_HALFPI , rho , e , P , * , ctx , / , == , phi , n , lp , }
		- PRED   = { < , n , Q , if , }
		- SUCC   = { Q , / , y , x , xy , lam , atan2 , n , lp , }

62 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { != , rho , if , }
		- CHILD  = { - , atan , HUGE_VAL , if , c , Q , pj_phi2 , pow , M_HALFPI , rho , e , P , * , ctx , / , == , phi , n , lp , }
		- PRED   = { < , n , Q , if , }
		- SUCC   = { Q , / , y , x , xy , lam , atan2 , n , lp , }

63 :	"lp"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"phi"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"pj_phi2"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"P"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"ctx"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"pow"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"rho"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"/"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"Q"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"c"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"/"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"Q"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"n"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"P"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

63 :	"e"
		- NEIGH  = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { HUGE_VAL , == , phi , lp , if , }

64 :	"if"
		- NEIGH  = { HUGE_VAL , == , phi , lp , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- SUCC   = { }

64 :	"lp"
		- NEIGH  = { HUGE_VAL , == , phi , lp , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- SUCC   = { }

64 :	"phi"
		- NEIGH  = { HUGE_VAL , == , phi , lp , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- SUCC   = { }

64 :	"=="
		- NEIGH  = { HUGE_VAL , == , phi , lp , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- SUCC   = { }

64 :	"HUGE_VAL"
		- NEIGH  = { HUGE_VAL , == , phi , lp , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { return , PJD_ERR_TOLERANCE_CONDITION , P , lp , proj_errno_set , }
		- PRED   = { c , Q , pj_phi2 , pow , rho , e , P , ctx , / , phi , n , lp , }
		- SUCC   = { }

65 :	"proj_errno_set"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { HUGE_VAL , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

65 :	"P"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { HUGE_VAL , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

65 :	"PJD_ERR_TOLERANCE_CONDITION"
		- NEIGH  = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- PARENT = { HUGE_VAL , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { lp , return , }

66 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { HUGE_VAL , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

66 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { HUGE_VAL , == , phi , lp , if , }
		- CHILD  = { }
		- PRED   = { PJD_ERR_TOLERANCE_CONDITION , P , proj_errno_set , }
		- SUCC   = { }

70 :	"lp"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"phi"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"*"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"atan"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"pow"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"Q"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"c"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"/"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"rho"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"/"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"Q"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"n"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"-"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

70 :	"M_HALFPI"
		- NEIGH  = { M_HALFPI , rho , c , pow , Q , - , n , lp , atan , * , / , phi , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

71 :	"lp"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

71 :	"lam"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

71 :	"atan2"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

71 :	"xy"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

71 :	"x"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

71 :	"xy"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

71 :	"y"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

71 :	"/"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

71 :	"Q"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

71 :	"n"
		- NEIGH  = { Q , / , y , x , xy , lam , atan2 , n , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { }

73 :	"lp"
		- NEIGH  = { lam , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , lp , n , phi , > , Q , }

73 :	"lam"
		- NEIGH  = { lam , lp , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { - , M_HALFPI , lp , n , phi , > , Q , }

74 :	"lp"
		- NEIGH  = { - , M_HALFPI , lp , n , phi , > , Q , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

74 :	"phi"
		- NEIGH  = { - , M_HALFPI , lp , n , phi , > , Q , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

74 :	"Q"
		- NEIGH  = { - , M_HALFPI , lp , n , phi , > , Q , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

74 :	"n"
		- NEIGH  = { - , M_HALFPI , lp , n , phi , > , Q , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

74 :	">"
		- NEIGH  = { - , M_HALFPI , lp , n , phi , > , Q , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

74 :	"M_HALFPI"
		- NEIGH  = { - , M_HALFPI , lp , n , phi , > , Q , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

74 :	"-"
		- NEIGH  = { - , M_HALFPI , lp , n , phi , > , Q , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

74 :	"M_HALFPI"
		- NEIGH  = { - , M_HALFPI , lp , n , phi , > , Q , }
		- PARENT = { != , rho , if , }
		- CHILD  = { }
		- PRED   = { lam , lp , }
		- SUCC   = { }

76 :	"return"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , rho , if , }
		- SUCC   = { }

76 :	"lp"
		- NEIGH  = { lp , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , rho , if , }
		- SUCC   = { }

80 :	"PJ"
		- NEIGH  = { PJ , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"*"
		- NEIGH  = { * , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"PROJECTION"
		- NEIGH  = { PROJECTION , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

80 :	"lcc"
		- NEIGH  = { lcc , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

81 :	"cosphi"
		- NEIGH  = { sinphi , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { secant , }

81 :	"sinphi"
		- NEIGH  = { sinphi , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { secant , }

82 :	"secant"
		- NEIGH  = { secant , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { sinphi , cosphi , }
		- SUCC   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }

83 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

83 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

83 :	"Q"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

83 :	"static_cast"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

83 :	"<"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

83 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

83 :	"*"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

83 :	">"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

83 :	"pj_calloc"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

83 :	"pj_opaque"
		- NEIGH  = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { secant , }
		- SUCC   = { Q , == , if , }

85 :	"if"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

85 :	"=="
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

85 :	"Q"
		- NEIGH  = { Q , == , if , }
		- PARENT = { }
		- CHILD  = { ENOMEM , P , pj_default_destructor , return , }
		- PRED   = { pj_calloc , > , < , Q , static_cast , * , pj_opaque , }
		- SUCC   = { opaque , Q , P , }

86 :	"return"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"pj_default_destructor"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"P"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

86 :	"ENOMEM"
		- NEIGH  = { ENOMEM , P , pj_default_destructor , return , }
		- PARENT = { Q , == , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

87 :	"P"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , Q , ctx , pj_param , f , phi1 , P , }

87 :	"opaque"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , Q , ctx , pj_param , f , phi1 , P , }

87 :	"Q"
		- NEIGH  = { opaque , Q , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , == , if , }
		- SUCC   = { params , Q , ctx , pj_param , f , phi1 , P , }

89 :	"Q"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

89 :	"phi1"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

89 :	"pj_param"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

89 :	"P"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

89 :	"ctx"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

89 :	"P"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

89 :	"params"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

89 :	"f"
		- NEIGH  = { params , Q , ctx , pj_param , f , phi1 , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { opaque , Q , P , }
		- SUCC   = { i , params , ctx , P , pj_param , if , }

90 :	"if"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { ! , if , phi1 , f , i , params , Q , phi2 , ctx , pj_param , P , }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }

90 :	"pj_param"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { ! , if , phi1 , f , i , params , Q , phi2 , ctx , pj_param , P , }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }

90 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { ! , if , phi1 , f , i , params , Q , phi2 , ctx , pj_param , P , }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }

90 :	"ctx"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { ! , if , phi1 , f , i , params , Q , phi2 , ctx , pj_param , P , }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }

90 :	"P"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { ! , if , phi1 , f , i , params , Q , phi2 , ctx , pj_param , P , }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }

90 :	"params"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { ! , if , phi1 , f , i , params , Q , phi2 , ctx , pj_param , P , }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }

90 :	"i"
		- NEIGH  = { i , params , ctx , P , pj_param , if , }
		- PARENT = { }
		- CHILD  = { ! , if , phi1 , f , i , params , Q , phi2 , ctx , pj_param , P , }
		- PRED   = { params , Q , ctx , pj_param , f , phi1 , P , }
		- SUCC   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }

91 :	"Q"
		- NEIGH  = { f , params , Q , phi2 , ctx , pj_param , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

91 :	"phi2"
		- NEIGH  = { f , params , Q , phi2 , ctx , pj_param , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

91 :	"pj_param"
		- NEIGH  = { f , params , Q , phi2 , ctx , pj_param , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

91 :	"P"
		- NEIGH  = { f , params , Q , phi2 , ctx , pj_param , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

91 :	"ctx"
		- NEIGH  = { f , params , Q , phi2 , ctx , pj_param , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

91 :	"P"
		- NEIGH  = { f , params , Q , phi2 , ctx , pj_param , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

91 :	"params"
		- NEIGH  = { f , params , Q , phi2 , ctx , pj_param , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

91 :	"f"
		- NEIGH  = { f , params , Q , phi2 , ctx , pj_param , P , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

93 :	"Q"
		- NEIGH  = { phi1 , phi2 , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , params , ctx , pj_param , P , ! , if , }

93 :	"phi2"
		- NEIGH  = { phi1 , phi2 , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , params , ctx , pj_param , P , ! , if , }

93 :	"Q"
		- NEIGH  = { phi1 , phi2 , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , params , ctx , pj_param , P , ! , if , }

93 :	"phi1"
		- NEIGH  = { phi1 , phi2 , Q , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { i , params , ctx , pj_param , P , ! , if , }

94 :	"if"
		- NEIGH  = { i , params , ctx , pj_param , P , ! , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { phi1 , phi0 , Q , P , }
		- PRED   = { phi1 , phi2 , Q , }
		- SUCC   = { }

94 :	"!"
		- NEIGH  = { i , params , ctx , pj_param , P , ! , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { phi1 , phi0 , Q , P , }
		- PRED   = { phi1 , phi2 , Q , }
		- SUCC   = { }

94 :	"pj_param"
		- NEIGH  = { i , params , ctx , pj_param , P , ! , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { phi1 , phi0 , Q , P , }
		- PRED   = { phi1 , phi2 , Q , }
		- SUCC   = { }

94 :	"P"
		- NEIGH  = { i , params , ctx , pj_param , P , ! , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { phi1 , phi0 , Q , P , }
		- PRED   = { phi1 , phi2 , Q , }
		- SUCC   = { }

94 :	"ctx"
		- NEIGH  = { i , params , ctx , pj_param , P , ! , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { phi1 , phi0 , Q , P , }
		- PRED   = { phi1 , phi2 , Q , }
		- SUCC   = { }

94 :	"P"
		- NEIGH  = { i , params , ctx , pj_param , P , ! , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { phi1 , phi0 , Q , P , }
		- PRED   = { phi1 , phi2 , Q , }
		- SUCC   = { }

94 :	"params"
		- NEIGH  = { i , params , ctx , pj_param , P , ! , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { phi1 , phi0 , Q , P , }
		- PRED   = { phi1 , phi2 , Q , }
		- SUCC   = { }

94 :	"i"
		- NEIGH  = { i , params , ctx , pj_param , P , ! , if , }
		- PARENT = { i , params , ctx , P , pj_param , if , }
		- CHILD  = { phi1 , phi0 , Q , P , }
		- PRED   = { phi1 , phi2 , Q , }
		- SUCC   = { }

95 :	"P"
		- NEIGH  = { phi1 , phi0 , Q , P , }
		- PARENT = { i , params , ctx , pj_param , P , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

95 :	"phi0"
		- NEIGH  = { phi1 , phi0 , Q , P , }
		- PARENT = { i , params , ctx , pj_param , P , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

95 :	"Q"
		- NEIGH  = { phi1 , phi0 , Q , P , }
		- PARENT = { i , params , ctx , pj_param , P , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

95 :	"phi1"
		- NEIGH  = { phi1 , phi0 , Q , P , }
		- PARENT = { i , params , ctx , pj_param , P , ! , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

97 :	"if"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	"fabs"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	"Q"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	"phi1"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	">"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	"M_HALFPI"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	"||"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	"fabs"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	"Q"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	"phi2"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	">"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

97 :	"M_HALFPI"
		- NEIGH  = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PRED   = { i , params , ctx , P , pj_param , if , }
		- SUCC   = { < , if , + , phi2 , Q , fabs , phi1 , }

98 :	"return"
		- NEIGH  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"P"
		- NEIGH  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

98 :	"PJD_ERR_LAT_LARGER_THAN_90"
		- NEIGH  = { PJD_ERR_LAT_LARGER_THAN_90 , P , pj_default_destructor , return , }
		- PARENT = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

99 :	"if"
		- NEIGH  = { < , if , + , phi2 , Q , fabs , phi1 , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PRED   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- SUCC   = { phi1 , sin , sinphi , n , Q , }

99 :	"fabs"
		- NEIGH  = { < , if , + , phi2 , Q , fabs , phi1 , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PRED   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- SUCC   = { phi1 , sin , sinphi , n , Q , }

99 :	"Q"
		- NEIGH  = { < , if , + , phi2 , Q , fabs , phi1 , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PRED   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- SUCC   = { phi1 , sin , sinphi , n , Q , }

99 :	"phi1"
		- NEIGH  = { < , if , + , phi2 , Q , fabs , phi1 , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PRED   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- SUCC   = { phi1 , sin , sinphi , n , Q , }

99 :	"+"
		- NEIGH  = { < , if , + , phi2 , Q , fabs , phi1 , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PRED   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- SUCC   = { phi1 , sin , sinphi , n , Q , }

99 :	"Q"
		- NEIGH  = { < , if , + , phi2 , Q , fabs , phi1 , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PRED   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- SUCC   = { phi1 , sin , sinphi , n , Q , }

99 :	"phi2"
		- NEIGH  = { < , if , + , phi2 , Q , fabs , phi1 , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PRED   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- SUCC   = { phi1 , sin , sinphi , n , Q , }

99 :	"<"
		- NEIGH  = { < , if , + , phi2 , Q , fabs , phi1 , }
		- PARENT = { }
		- CHILD  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PRED   = { || , M_HALFPI , > , phi2 , Q , fabs , phi1 , if , }
		- SUCC   = { phi1 , sin , sinphi , n , Q , }

100 :	"return"
		- NEIGH  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PARENT = { < , if , + , phi2 , Q , fabs , phi1 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

100 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PARENT = { < , if , + , phi2 , Q , fabs , phi1 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

100 :	"P"
		- NEIGH  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PARENT = { < , if , + , phi2 , Q , fabs , phi1 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

100 :	"PJD_ERR_CONIC_LAT_EQUAL"
		- NEIGH  = { PJD_ERR_CONIC_LAT_EQUAL , P , pj_default_destructor , return , }
		- PARENT = { < , if , + , phi2 , Q , fabs , phi1 , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

102 :	"Q"
		- NEIGH  = { phi1 , sin , sinphi , n , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , if , + , phi2 , Q , fabs , phi1 , }
		- SUCC   = { Q , phi1 , cos , cosphi , }

102 :	"n"
		- NEIGH  = { phi1 , sin , sinphi , n , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , if , + , phi2 , Q , fabs , phi1 , }
		- SUCC   = { Q , phi1 , cos , cosphi , }

102 :	"sinphi"
		- NEIGH  = { phi1 , sin , sinphi , n , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , if , + , phi2 , Q , fabs , phi1 , }
		- SUCC   = { Q , phi1 , cos , cosphi , }

102 :	"sin"
		- NEIGH  = { phi1 , sin , sinphi , n , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , if , + , phi2 , Q , fabs , phi1 , }
		- SUCC   = { Q , phi1 , cos , cosphi , }

102 :	"Q"
		- NEIGH  = { phi1 , sin , sinphi , n , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , if , + , phi2 , Q , fabs , phi1 , }
		- SUCC   = { Q , phi1 , cos , cosphi , }

102 :	"phi1"
		- NEIGH  = { phi1 , sin , sinphi , n , Q , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { < , if , + , phi2 , Q , fabs , phi1 , }
		- SUCC   = { Q , phi1 , cos , cosphi , }

103 :	"cosphi"
		- NEIGH  = { Q , phi1 , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi1 , sin , sinphi , n , Q , }
		- SUCC   = { >= , - , phi1 , phi2 , secant , Q , fabs , }

103 :	"cos"
		- NEIGH  = { Q , phi1 , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi1 , sin , sinphi , n , Q , }
		- SUCC   = { >= , - , phi1 , phi2 , secant , Q , fabs , }

103 :	"Q"
		- NEIGH  = { Q , phi1 , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi1 , sin , sinphi , n , Q , }
		- SUCC   = { >= , - , phi1 , phi2 , secant , Q , fabs , }

103 :	"phi1"
		- NEIGH  = { Q , phi1 , cos , cosphi , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { phi1 , sin , sinphi , n , Q , }
		- SUCC   = { >= , - , phi1 , phi2 , secant , Q , fabs , }

104 :	"secant"
		- NEIGH  = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , phi1 , cos , cosphi , }
		- SUCC   = { != , es , P , if , }

104 :	"fabs"
		- NEIGH  = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , phi1 , cos , cosphi , }
		- SUCC   = { != , es , P , if , }

104 :	"Q"
		- NEIGH  = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , phi1 , cos , cosphi , }
		- SUCC   = { != , es , P , if , }

104 :	"phi1"
		- NEIGH  = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , phi1 , cos , cosphi , }
		- SUCC   = { != , es , P , if , }

104 :	"-"
		- NEIGH  = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , phi1 , cos , cosphi , }
		- SUCC   = { != , es , P , if , }

104 :	"Q"
		- NEIGH  = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , phi1 , cos , cosphi , }
		- SUCC   = { != , es , P , if , }

104 :	"phi2"
		- NEIGH  = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , phi1 , cos , cosphi , }
		- SUCC   = { != , es , P , if , }

104 :	">="
		- NEIGH  = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { Q , phi1 , cos , cosphi , }
		- SUCC   = { != , es , P , if , }

105 :	"if"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { M_FORTPI , tan , || , < , M_HALFPI , phi0 , fabs , * , phi1 , *= , / , sin , n , Q , - , pj_tsfn , secant , == , if , pow , P , e , cos , pj_msfn , phi2 , rho0 , es , m1 , cosphi , c , sinphi , + , ml1 , }
		- PRED   = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- SUCC   = { e_inverse , inv , P , }

105 :	"P"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { M_FORTPI , tan , || , < , M_HALFPI , phi0 , fabs , * , phi1 , *= , / , sin , n , Q , - , pj_tsfn , secant , == , if , pow , P , e , cos , pj_msfn , phi2 , rho0 , es , m1 , cosphi , c , sinphi , + , ml1 , }
		- PRED   = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- SUCC   = { e_inverse , inv , P , }

105 :	"es"
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { M_FORTPI , tan , || , < , M_HALFPI , phi0 , fabs , * , phi1 , *= , / , sin , n , Q , - , pj_tsfn , secant , == , if , pow , P , e , cos , pj_msfn , phi2 , rho0 , es , m1 , cosphi , c , sinphi , + , ml1 , }
		- PRED   = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- SUCC   = { e_inverse , inv , P , }

105 :	"!="
		- NEIGH  = { != , es , P , if , }
		- PARENT = { }
		- CHILD  = { M_FORTPI , tan , || , < , M_HALFPI , phi0 , fabs , * , phi1 , *= , / , sin , n , Q , - , pj_tsfn , secant , == , if , pow , P , e , cos , pj_msfn , phi2 , rho0 , es , m1 , cosphi , c , sinphi , + , ml1 , }
		- PRED   = { >= , - , phi1 , phi2 , secant , Q , fabs , }
		- SUCC   = { e_inverse , inv , P , }

106 :	"ml1"
		- NEIGH  = { m1 , ml1 , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { es , P , cosphi , m1 , sinphi , pj_msfn , }

106 :	"m1"
		- NEIGH  = { m1 , ml1 , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { es , P , cosphi , m1 , sinphi , pj_msfn , }

108 :	"m1"
		- NEIGH  = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { m1 , ml1 , }
		- SUCC   = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }

108 :	"pj_msfn"
		- NEIGH  = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { m1 , ml1 , }
		- SUCC   = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }

108 :	"sinphi"
		- NEIGH  = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { m1 , ml1 , }
		- SUCC   = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }

108 :	"cosphi"
		- NEIGH  = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { m1 , ml1 , }
		- SUCC   = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }

108 :	"P"
		- NEIGH  = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { m1 , ml1 , }
		- SUCC   = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }

108 :	"es"
		- NEIGH  = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { m1 , ml1 , }
		- SUCC   = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }

109 :	"ml1"
		- NEIGH  = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- SUCC   = { == , ml1 , if , }

109 :	"pj_tsfn"
		- NEIGH  = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- SUCC   = { == , ml1 , if , }

109 :	"Q"
		- NEIGH  = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- SUCC   = { == , ml1 , if , }

109 :	"phi1"
		- NEIGH  = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- SUCC   = { == , ml1 , if , }

109 :	"sinphi"
		- NEIGH  = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- SUCC   = { == , ml1 , if , }

109 :	"P"
		- NEIGH  = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- SUCC   = { == , ml1 , if , }

109 :	"e"
		- NEIGH  = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { es , P , cosphi , m1 , sinphi , pj_msfn , }
		- SUCC   = { == , ml1 , if , }

110 :	"if"
		- NEIGH  = { == , ml1 , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- SUCC   = { secant , if , }

110 :	"ml1"
		- NEIGH  = { == , ml1 , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- SUCC   = { secant , if , }

110 :	"=="
		- NEIGH  = { == , ml1 , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { P , e , phi1 , Q , sinphi , pj_tsfn , ml1 , }
		- SUCC   = { secant , if , }

111 :	"return"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { == , ml1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { == , ml1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"P"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { == , ml1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

111 :	"PJD_ERR_LAT_1_OR_2_ZERO_OR_90"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { == , ml1 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

113 :	"if"
		- NEIGH  = { secant , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { /= , ml1 , denom , pj_tsfn , == , es , e , P , pj_msfn , cos , ml2 , / , if , sin , log , phi2 , Q , m1 , n , sinphi , }
		- PRED   = { == , ml1 , if , }
		- SUCC   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }

113 :	"secant"
		- NEIGH  = { secant , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { /= , ml1 , denom , pj_tsfn , == , es , e , P , pj_msfn , cos , ml2 , / , if , sin , log , phi2 , Q , m1 , n , sinphi , }
		- PRED   = { == , ml1 , if , }
		- SUCC   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }

114 :	"sinphi"
		- NEIGH  = { phi2 , Q , sin , sinphi , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }

114 :	"sin"
		- NEIGH  = { phi2 , Q , sin , sinphi , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }

114 :	"Q"
		- NEIGH  = { phi2 , Q , sin , sinphi , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }

114 :	"phi2"
		- NEIGH  = { phi2 , Q , sin , sinphi , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }

115 :	"Q"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"n"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"log"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"m1"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"/"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"pj_msfn"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"sinphi"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"cos"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"Q"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"phi2"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"P"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

115 :	"es"
		- NEIGH  = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { phi2 , Q , sin , sinphi , }
		- SUCC   = { == , n , Q , if , }

116 :	"if"
		- NEIGH  = { == , n , Q , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PRED   = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- SUCC   = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }

116 :	"Q"
		- NEIGH  = { == , n , Q , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PRED   = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- SUCC   = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }

116 :	"n"
		- NEIGH  = { == , n , Q , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PRED   = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- SUCC   = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }

116 :	"=="
		- NEIGH  = { == , n , Q , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PRED   = { es , P , pj_msfn , sinphi , m1 , n , cos , / , log , phi2 , Q , }
		- SUCC   = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }

118 :	"return"
		- NEIGH  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PARENT = { == , n , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PARENT = { == , n , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PARENT = { == , n , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

118 :	"PJD_ERR_INVALID_ECCENTRICITY"
		- NEIGH  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PARENT = { == , n , Q , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

120 :	"ml2"
		- NEIGH  = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , n , Q , if , }
		- SUCC   = { == , ml2 , if , }

120 :	"pj_tsfn"
		- NEIGH  = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , n , Q , if , }
		- SUCC   = { == , ml2 , if , }

120 :	"Q"
		- NEIGH  = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , n , Q , if , }
		- SUCC   = { == , ml2 , if , }

120 :	"phi2"
		- NEIGH  = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , n , Q , if , }
		- SUCC   = { == , ml2 , if , }

120 :	"sinphi"
		- NEIGH  = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , n , Q , if , }
		- SUCC   = { == , ml2 , if , }

120 :	"P"
		- NEIGH  = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , n , Q , if , }
		- SUCC   = { == , ml2 , if , }

120 :	"e"
		- NEIGH  = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , n , Q , if , }
		- SUCC   = { == , ml2 , if , }

121 :	"if"
		- NEIGH  = { == , ml2 , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- SUCC   = { ml2 , / , log , ml1 , denom , }

121 :	"ml2"
		- NEIGH  = { == , ml2 , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- SUCC   = { ml2 , / , log , ml1 , denom , }

121 :	"=="
		- NEIGH  = { == , ml2 , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { e , P , sinphi , pj_tsfn , phi2 , Q , ml2 , }
		- SUCC   = { ml2 , / , log , ml1 , denom , }

122 :	"return"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { == , ml2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

122 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { == , ml2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

122 :	"P"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { == , ml2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

122 :	"PJD_ERR_LAT_1_OR_2_ZERO_OR_90"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { == , ml2 , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

124 :	"denom"
		- NEIGH  = { ml2 , / , log , ml1 , denom , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , ml2 , if , }
		- SUCC   = { == , denom , if , }

124 :	"log"
		- NEIGH  = { ml2 , / , log , ml1 , denom , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , ml2 , if , }
		- SUCC   = { == , denom , if , }

124 :	"ml1"
		- NEIGH  = { ml2 , / , log , ml1 , denom , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , ml2 , if , }
		- SUCC   = { == , denom , if , }

124 :	"/"
		- NEIGH  = { ml2 , / , log , ml1 , denom , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , ml2 , if , }
		- SUCC   = { == , denom , if , }

124 :	"ml2"
		- NEIGH  = { ml2 , / , log , ml1 , denom , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , ml2 , if , }
		- SUCC   = { == , denom , if , }

125 :	"if"
		- NEIGH  = { == , denom , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PRED   = { ml2 , / , log , ml1 , denom , }
		- SUCC   = { denom , /= , n , Q , }

125 :	"denom"
		- NEIGH  = { == , denom , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PRED   = { ml2 , / , log , ml1 , denom , }
		- SUCC   = { denom , /= , n , Q , }

125 :	"=="
		- NEIGH  = { == , denom , if , }
		- PARENT = { secant , if , }
		- CHILD  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PRED   = { ml2 , / , log , ml1 , denom , }
		- SUCC   = { denom , /= , n , Q , }

127 :	"return"
		- NEIGH  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"P"
		- NEIGH  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

127 :	"PJD_ERR_INVALID_ECCENTRICITY"
		- NEIGH  = { PJD_ERR_INVALID_ECCENTRICITY , P , pj_default_destructor , return , }
		- PARENT = { == , denom , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

129 :	"Q"
		- NEIGH  = { denom , /= , n , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { }

129 :	"n"
		- NEIGH  = { denom , /= , n , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { }

129 :	"/="
		- NEIGH  = { denom , /= , n , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { }

129 :	"denom"
		- NEIGH  = { denom , /= , n , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { == , denom , if , }
		- SUCC   = { }

131 :	"Q"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"c"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"Q"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"rho0"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"m1"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"*"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"pow"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"ml1"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"-"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"Q"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"n"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"/"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"Q"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

131 :	"n"
		- NEIGH  = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }

132 :	"Q"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

132 :	"rho0"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

132 :	"*="
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

132 :	"fabs"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

132 :	"fabs"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

132 :	"P"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

132 :	"phi0"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

132 :	"-"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

132 :	"M_HALFPI"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

132 :	"<"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"pow"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"pj_tsfn"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"P"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"phi0"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"sin"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"P"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"phi0"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"P"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"e"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"Q"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

133 :	"n"
		- NEIGH  = { n , sin , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , e , P , pj_tsfn , *= , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { - , ml1 , pow , * , n , m1 , / , rho0 , c , Q , }
		- SUCC   = { }

135 :	"if"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

135 :	"fabs"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

135 :	"cosphi"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

135 :	"<"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

135 :	"||"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

135 :	"fabs"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

135 :	"cos"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

135 :	"Q"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

135 :	"phi2"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

135 :	"<"
		- NEIGH  = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PRED   = { }
		- SUCC   = { secant , if , }

136 :	"return"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"pj_default_destructor"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"P"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

136 :	"PJD_ERR_LAT_1_OR_2_ZERO_OR_90"
		- NEIGH  = { PJD_ERR_LAT_1_OR_2_ZERO_OR_90 , P , pj_default_destructor , return , }
		- PARENT = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

138 :	"if"
		- NEIGH  = { secant , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PRED   = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- SUCC   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }

138 :	"secant"
		- NEIGH  = { secant , if , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PRED   = { phi2 , Q , cos , || , < , cosphi , fabs , if , }
		- SUCC   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }

139 :	"Q"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"n"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"log"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"cosphi"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"/"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"cos"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"Q"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"phi2"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

139 :	"/"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"log"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"tan"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"M_FORTPI"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"+"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"*"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"Q"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"phi2"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

140 :	"/"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"tan"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"M_FORTPI"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"+"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"*"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"Q"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

141 :	"phi1"
		- NEIGH  = { phi1 , * , + , M_FORTPI , tan , cosphi , n , cos , / , log , phi2 , Q , }
		- PARENT = { secant , if , }
		- CHILD  = { }
		- PRED   = { }
		- SUCC   = { }

142 :	"Q"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"c"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"cosphi"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"*"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"pow"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"tan"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"M_FORTPI"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"+"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"*"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"Q"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"phi1"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"Q"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"n"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"/"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"Q"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

142 :	"n"
		- NEIGH  = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { secant , if , }
		- SUCC   = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }

143 :	"Q"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

143 :	"rho0"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

143 :	"fabs"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

143 :	"fabs"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

143 :	"P"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

143 :	"phi0"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

143 :	"-"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

143 :	"M_HALFPI"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

143 :	"<"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"Q"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"c"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"*"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"pow"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"tan"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"M_FORTPI"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"+"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"*"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"P"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"phi0"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"-"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"Q"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

144 :	"n"
		- NEIGH  = { n , + , M_FORTPI , * , c , < , fabs , M_HALFPI , Q , rho0 , pow , - , phi0 , tan , P , }
		- PARENT = { != , es , P , if , }
		- CHILD  = { }
		- PRED   = { / , n , + , M_FORTPI , * , tan , pow , cosphi , phi1 , c , Q , }
		- SUCC   = { }

147 :	"P"
		- NEIGH  = { e_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { e_forward , fwd , P , }

147 :	"inv"
		- NEIGH  = { e_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { e_forward , fwd , P , }

147 :	"e_inverse"
		- NEIGH  = { e_inverse , inv , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { != , es , P , if , }
		- SUCC   = { e_forward , fwd , P , }

148 :	"P"
		- NEIGH  = { e_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e_inverse , inv , P , }
		- SUCC   = { P , return , }

148 :	"fwd"
		- NEIGH  = { e_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e_inverse , inv , P , }
		- SUCC   = { P , return , }

148 :	"e_forward"
		- NEIGH  = { e_forward , fwd , P , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e_inverse , inv , P , }
		- SUCC   = { P , return , }

150 :	"return"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e_forward , fwd , P , }
		- SUCC   = { }

150 :	"P"
		- NEIGH  = { P , return , }
		- PARENT = { }
		- CHILD  = { }
		- PRED   = { e_forward , fwd , P , }
		- SUCC   = { }

